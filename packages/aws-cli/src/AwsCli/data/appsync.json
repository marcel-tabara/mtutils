{
  "service_name": "appsync",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/index.html",
  "service_commands": [
    {
      "command_name": "create-api-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-api-cache.html",
      "command_description": "Description\n\nCreates a cache for the GraphQL API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-api-cache\n--api-id <value>\n--ttl <value>\n[--transit-encryption-enabled | --no-transit-encryption-enabled]\n[--at-rest-encryption-enabled | --no-at-rest-encryption-enabled]\n--api-caching-behavior <value>\n--type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--ttl <value>",
        "[--transit-encryption-enabled | --no-transit-encryption-enabled]",
        "[--at-rest-encryption-enabled | --no-at-rest-encryption-enabled]",
        "--api-caching-behavior <value>",
        "--type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API Id.\n\n--ttl (long)\n\nTTL in seconds for cache entries.\n\nValid values are between 1 and 3600 seconds.\n\n--transit-encryption-enabled | --no-transit-encryption-enabled (boolean)\n\nTransit encryption flag when connecting to cache. This setting cannot be updated after creation.\n\n--at-rest-encryption-enabled | --no-at-rest-encryption-enabled (boolean)\n\nAt rest encryption flag for cache. This setting cannot be updated after creation.\n\n--api-caching-behavior (string)\n\nCaching behavior.\n\nFULL_REQUEST_CACHING : All requests are fully cached.\n\nPER_RESOLVER_CACHING : Individual resolvers that you specify are cached.\n\nPossible values:\n\nFULL_REQUEST_CACHING\n\nPER_RESOLVER_CACHING\n\n--type (string)\n\nThe cache instance type. Valid values are\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X (not available in all regions)\n\nLARGE_12X\n\nHistorically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.\n\nThe following legacy instance types are available, but their use is discouraged:\n\nT2_SMALL : A t2.small instance type.\n\nT2_MEDIUM : A t2.medium instance type.\n\nR4_LARGE : A r4.large instance type.\n\nR4_XLARGE : A r4.xlarge instance type.\n\nR4_2XLARGE : A r4.2xlarge instance type.\n\nR4_4XLARGE : A r4.4xlarge instance type.\n\nR4_8XLARGE : A r4.8xlarge instance type.\n\nPossible values:\n\nT2_SMALL\n\nT2_MEDIUM\n\nR4_LARGE\n\nR4_XLARGE\n\nR4_2XLARGE\n\nR4_4XLARGE\n\nR4_8XLARGE\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X\n\nLARGE_12X\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiCache -> (structure)\n\nThe ApiCache object.\n\nttl -> (long)\n\nTTL in seconds for cache entries.\n\nValid values are between 1 and 3600 seconds.\n\napiCachingBehavior -> (string)\n\nCaching behavior.\n\nFULL_REQUEST_CACHING : All requests are fully cached.\n\nPER_RESOLVER_CACHING : Individual resolvers that you specify are cached.\n\ntransitEncryptionEnabled -> (boolean)\n\nTransit encryption flag when connecting to cache. This setting cannot be updated after creation.\n\natRestEncryptionEnabled -> (boolean)\n\nAt rest encryption flag for cache. This setting cannot be updated after creation.\n\ntype -> (string)\n\nThe cache instance type. Valid values are\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X (not available in all regions)\n\nLARGE_12X\n\nHistorically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.\n\nThe following legacy instance types are available, but their use is discouraged:\n\nT2_SMALL : A t2.small instance type.\n\nT2_MEDIUM : A t2.medium instance type.\n\nR4_LARGE : A r4.large instance type.\n\nR4_XLARGE : A r4.xlarge instance type.\n\nR4_2XLARGE : A r4.2xlarge instance type.\n\nR4_4XLARGE : A r4.4xlarge instance type.\n\nR4_8XLARGE : A r4.8xlarge instance type.\n\nstatus -> (string)\n\nThe cache instance status.\n\nAVAILABLE : The instance is available for use.\n\nCREATING : The instance is currently creating.\n\nDELETING : The instance is currently deleting.\n\nMODIFYING : The instance is currently modifying.\n\nFAILED : The instance has failed creation."
    },
    {
      "command_name": "create-api-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-api-key.html",
      "command_description": "Description\n\nCreates a unique key that you can distribute to clients who are executing your API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-api-key\n--api-id <value>\n[--description <value>]\n[--expires <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--description <value>]",
        "[--expires <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe ID for your GraphQL API.\n\n--description (string)\n\nA description of the purpose of the API key.\n\n--expires (long)\n\nThe time from creation time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour. The default value for this parameter is 7 days from creation time. For more information, see .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiKey -> (structure)\n\nThe API key.\n\nid -> (string)\n\nThe API key ID.\n\ndescription -> (string)\n\nA description of the purpose of the API key.\n\nexpires -> (long)\n\nThe time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour.\n\ndeletes -> (long)\n\nThe time after which the API key is deleted. The date is represented as seconds since the epoch, rounded down to the nearest hour."
    },
    {
      "command_name": "create-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-data-source.html",
      "command_description": "Description\n\nCreates a DataSource object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-data-source\n--api-id <value>\n--name <value>\n[--description <value>]\n--type <value>\n[--service-role-arn <value>]\n[--dynamodb-config <value>]\n[--lambda-config <value>]\n[--elasticsearch-config <value>]\n[--open-search-service-config <value>]\n[--http-config <value>]\n[--relational-database-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--description <value>]",
        "--type <value>",
        "[--service-role-arn <value>]",
        "[--dynamodb-config <value>]",
        "[--lambda-config <value>]",
        "[--elasticsearch-config <value>]",
        "[--open-search-service-config <value>]",
        "[--http-config <value>]",
        "[--relational-database-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID for the GraphQL API for the DataSource .\n\n--name (string)\n\nA user-supplied name for the DataSource .\n\n--description (string)\n\nA description of the DataSource .\n\n--type (string)\n\nThe type of the DataSource .\n\nPossible values:\n\nAWS_LAMBDA\n\nAMAZON_DYNAMODB\n\nAMAZON_ELASTICSEARCH\n\nNONE\n\nHTTP\n\nRELATIONAL_DATABASE\n\nAMAZON_OPENSEARCH_SERVICE\n\n--service-role-arn (string)\n\nThe Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.\n\n--dynamodb-config (structure)\n\nAmazon DynamoDB settings.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nShorthand Syntax:\n\ntableName=string,awsRegion=string,useCallerCredentials=boolean,deltaSyncConfig={baseTableTTL=long,deltaSyncTableName=string,deltaSyncTableTTL=long},versioned=boolean\n\n\nJSON Syntax:\n\n{\n  \"tableName\": \"string\",\n  \"awsRegion\": \"string\",\n  \"useCallerCredentials\": true|false,\n  \"deltaSyncConfig\": {\n    \"baseTableTTL\": long,\n    \"deltaSyncTableName\": \"string\",\n    \"deltaSyncTableTTL\": long\n  },\n  \"versioned\": true|false\n}\n\n\n--lambda-config (structure)\n\nAmazon Web Services Lambda settings.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nShorthand Syntax:\n\nlambdaFunctionArn=string\n\n\nJSON Syntax:\n\n{\n  \"lambdaFunctionArn\": \"string\"\n}\n\n\n--elasticsearch-config (structure)\n\nAmazon OpenSearch Service settings.\n\nAs of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. For new data sources, use CreateDataSourceRequest$openSearchServiceConfig to create an OpenSearch data source.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nShorthand Syntax:\n\nendpoint=string,awsRegion=string\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"awsRegion\": \"string\"\n}\n\n\n--open-search-service-config (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nShorthand Syntax:\n\nendpoint=string,awsRegion=string\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"awsRegion\": \"string\"\n}\n\n\n--http-config (structure)\n\nHTTP endpoint settings.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nShorthand Syntax:\n\nendpoint=string,authorizationConfig={authorizationType=string,awsIamConfig={signingRegion=string,signingServiceName=string}}\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"authorizationConfig\": {\n    \"authorizationType\": \"AWS_IAM\",\n    \"awsIamConfig\": {\n      \"signingRegion\": \"string\",\n      \"signingServiceName\": \"string\"\n    }\n  }\n}\n\n\n--relational-database-config (structure)\n\nRelational database settings.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials.\n\nShorthand Syntax:\n\nrelationalDatabaseSourceType=string,rdsHttpEndpointConfig={awsRegion=string,dbClusterIdentifier=string,databaseName=string,schema=string,awsSecretStoreArn=string}\n\n\nJSON Syntax:\n\n{\n  \"relationalDatabaseSourceType\": \"RDS_HTTP_ENDPOINT\",\n  \"rdsHttpEndpointConfig\": {\n    \"awsRegion\": \"string\",\n    \"dbClusterIdentifier\": \"string\",\n    \"databaseName\": \"string\",\n    \"schema\": \"string\",\n    \"awsSecretStoreArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataSource -> (structure)\n\nThe DataSource object.\n\ndataSourceArn -> (string)\n\nThe data source ARN.\n\nname -> (string)\n\nThe name of the data source.\n\ndescription -> (string)\n\nThe description of the data source.\n\ntype -> (string)\n\nThe type of the data source.\n\nAWS_LAMBDA : The data source is an Amazon Web Services Lambda function.\n\nAMAZON_DYNAMODB : The data source is an Amazon DynamoDB table.\n\nAMAZON_ELASTICSEARCH : The data source is an Amazon OpenSearch Service domain.\n\nAMAZON_OPENSEARCH_SERVICE : The data source is an Amazon OpenSearch Service domain.\n\nNONE : There is no data source. This type is used when you wish to invoke a GraphQL operation without connecting to a data source, such as performing data transformation with resolvers or triggering a subscription to be invoked from a mutation.\n\nHTTP : The data source is an HTTP endpoint.\n\nRELATIONAL_DATABASE : The data source is a relational database.\n\nserviceRoleArn -> (string)\n\nThe Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.\n\ndynamodbConfig -> (structure)\n\nAmazon DynamoDB settings.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nlambdaConfig -> (structure)\n\nAmazon Web Services Lambda settings.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nelasticsearchConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nopenSearchServiceConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nhttpConfig -> (structure)\n\nHTTP endpoint settings.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nrelationalDatabaseConfig -> (structure)\n\nRelational database settings.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials."
    },
    {
      "command_name": "create-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-function.html",
      "command_description": "Description\n\nCreates a Function object.\n\nA function is a reusable entity. Multiple functions can be used to compose the resolver logic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-function\n--api-id <value>\n--name <value>\n[--description <value>]\n--data-source-name <value>\n[--request-mapping-template <value>]\n[--response-mapping-template <value>]\n--function-version <value>\n[--sync-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--description <value>]",
        "--data-source-name <value>",
        "[--request-mapping-template <value>]",
        "[--response-mapping-template <value>]",
        "--function-version <value>",
        "[--sync-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API ID.\n\n--name (string)\n\nThe Function name. The function name does not have to be unique.\n\n--description (string)\n\nThe Function description.\n\n--data-source-name (string)\n\nThe Function DataSource name.\n\n--request-mapping-template (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\n--response-mapping-template (string)\n\nThe Function response mapping template.\n\n--function-version (string)\n\nThe version of the request mapping template. Currently the supported value is 2018-05-29.\n\n--sync-config (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\nShorthand Syntax:\n\nconflictHandler=string,conflictDetection=string,lambdaConflictHandlerConfig={lambdaConflictHandlerArn=string}\n\n\nJSON Syntax:\n\n{\n  \"conflictHandler\": \"OPTIMISTIC_CONCURRENCY\"|\"LAMBDA\"|\"AUTOMERGE\"|\"NONE\",\n  \"conflictDetection\": \"VERSION\"|\"NONE\",\n  \"lambdaConflictHandlerConfig\": {\n    \"lambdaConflictHandlerArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfunctionConfiguration -> (structure)\n\nThe Function object.\n\nfunctionId -> (string)\n\nA unique ID representing the Function object.\n\nfunctionArn -> (string)\n\nThe ARN of the Function object.\n\nname -> (string)\n\nThe name of the Function object.\n\ndescription -> (string)\n\nThe Function description.\n\ndataSourceName -> (string)\n\nThe name of the DataSource .\n\nrequestMappingTemplate -> (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe Function response mapping template.\n\nfunctionVersion -> (string)\n\nThe version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.\n\nsyncConfig -> (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler."
    },
    {
      "command_name": "create-graphql-api",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-graphql-api.html",
      "command_description": "Description\n\nCreates a GraphqlApi object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-graphql-api\n--name <value>\n[--log-config <value>]\n--authentication-type <value>\n[--user-pool-config <value>]\n[--open-id-connect-config <value>]\n[--tags <value>]\n[--additional-authentication-providers <value>]\n[--xray-enabled | --no-xray-enabled]\n[--lambda-authorizer-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--log-config <value>]",
        "--authentication-type <value>",
        "[--user-pool-config <value>]",
        "[--open-id-connect-config <value>]",
        "[--tags <value>]",
        "[--additional-authentication-providers <value>]",
        "[--xray-enabled | --no-xray-enabled]",
        "[--lambda-authorizer-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nA user-supplied name for the GraphqlApi .\n\n--log-config (structure)\n\nThe Amazon CloudWatch Logs configuration.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nShorthand Syntax:\n\nfieldLogLevel=string,cloudWatchLogsRoleArn=string,excludeVerboseContent=boolean\n\n\nJSON Syntax:\n\n{\n  \"fieldLogLevel\": \"NONE\"|\"ERROR\"|\"ALL\",\n  \"cloudWatchLogsRoleArn\": \"string\",\n  \"excludeVerboseContent\": true|false\n}\n\n\n--authentication-type (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nPossible values:\n\nAPI_KEY\n\nAWS_IAM\n\nAMAZON_COGNITO_USER_POOLS\n\nOPENID_CONNECT\n\nAWS_LAMBDA\n\n--user-pool-config (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nShorthand Syntax:\n\nuserPoolId=string,awsRegion=string,defaultAction=string,appIdClientRegex=string\n\n\nJSON Syntax:\n\n{\n  \"userPoolId\": \"string\",\n  \"awsRegion\": \"string\",\n  \"defaultAction\": \"ALLOW\"|\"DENY\",\n  \"appIdClientRegex\": \"string\"\n}\n\n\n--open-id-connect-config (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nShorthand Syntax:\n\nissuer=string,clientId=string,iatTTL=long,authTTL=long\n\n\nJSON Syntax:\n\n{\n  \"issuer\": \"string\",\n  \"clientId\": \"string\",\n  \"iatTTL\": long,\n  \"authTTL\": long\n}\n\n\n--tags (map)\n\nA TagMap object.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--additional-authentication-providers (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nShorthand Syntax:\n\nauthenticationType=string,openIDConnectConfig={issuer=string,clientId=string,iatTTL=long,authTTL=long},userPoolConfig={userPoolId=string,awsRegion=string,appIdClientRegex=string},lambdaAuthorizerConfig={authorizerResultTtlInSeconds=integer,authorizerUri=string,identityValidationExpression=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"authenticationType\": \"API_KEY\"|\"AWS_IAM\"|\"AMAZON_COGNITO_USER_POOLS\"|\"OPENID_CONNECT\"|\"AWS_LAMBDA\",\n    \"openIDConnectConfig\": {\n      \"issuer\": \"string\",\n      \"clientId\": \"string\",\n      \"iatTTL\": long,\n      \"authTTL\": long\n    },\n    \"userPoolConfig\": {\n      \"userPoolId\": \"string\",\n      \"awsRegion\": \"string\",\n      \"appIdClientRegex\": \"string\"\n    },\n    \"lambdaAuthorizerConfig\": {\n      \"authorizerResultTtlInSeconds\": integer,\n      \"authorizerUri\": \"string\",\n      \"identityValidationExpression\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--xray-enabled | --no-xray-enabled (boolean)\n\nA flag indicating whether to enable X-Ray tracing for the GraphqlApi .\n\n--lambda-authorizer-config (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nShorthand Syntax:\n\nauthorizerResultTtlInSeconds=integer,authorizerUri=string,identityValidationExpression=string\n\n\nJSON Syntax:\n\n{\n  \"authorizerResultTtlInSeconds\": integer,\n  \"authorizerUri\": \"string\",\n  \"identityValidationExpression\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngraphqlApi -> (structure)\n\nThe GraphqlApi .\n\nname -> (string)\n\nThe API name.\n\napiId -> (string)\n\nThe API ID.\n\nauthenticationType -> (string)\n\nThe authentication type.\n\nlogConfig -> (structure)\n\nThe Amazon CloudWatch Logs configuration.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\narn -> (string)\n\nThe ARN.\n\nuris -> (map)\n\nThe URIs.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nadditionalAuthenticationProviders -> (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nxrayEnabled -> (boolean)\n\nA flag representing whether X-Ray tracing is enabled for this GraphqlApi .\n\nwafWebAclArn -> (string)\n\nThe ARN of the WAF ACL associated with this GraphqlApi , if one exists.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called."
    },
    {
      "command_name": "create-resolver",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-resolver.html",
      "command_description": "Description\n\nCreates a Resolver object.\n\nA resolver converts incoming requests into a format that a data source can understand and converts the data source’s responses into GraphQL.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resolver\n--api-id <value>\n--type-name <value>\n--field-name <value>\n[--data-source-name <value>]\n[--request-mapping-template <value>]\n[--response-mapping-template <value>]\n[--kind <value>]\n[--pipeline-config <value>]\n[--sync-config <value>]\n[--caching-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "--field-name <value>",
        "[--data-source-name <value>]",
        "[--request-mapping-template <value>]",
        "[--response-mapping-template <value>]",
        "[--kind <value>]",
        "[--pipeline-config <value>]",
        "[--sync-config <value>]",
        "[--caching-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe ID for the GraphQL API for which the resolver is being created.\n\n--type-name (string)\n\nThe name of the Type .\n\n--field-name (string)\n\nThe name of the field to attach the resolver to.\n\n--data-source-name (string)\n\nThe name of the data source for which the resolver is being created.\n\n--request-mapping-template (string)\n\nThe mapping template to be used for requests.\n\nA resolver uses a request mapping template to convert a GraphQL expression into a format that a data source can understand. Mapping templates are written in Apache Velocity Template Language (VTL).\n\nVTL request mapping templates are optional when using a Lambda data source. For all other data sources, VTL request and response mapping templates are required.\n\n--response-mapping-template (string)\n\nThe mapping template to be used for responses from the data source.\n\n--kind (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\nPossible values:\n\nUNIT\n\nPIPELINE\n\n--pipeline-config (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nShorthand Syntax:\n\nfunctions=string,string\n\n\nJSON Syntax:\n\n{\n  \"functions\": [\"string\", ...]\n}\n\n\n--sync-config (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\nShorthand Syntax:\n\nconflictHandler=string,conflictDetection=string,lambdaConflictHandlerConfig={lambdaConflictHandlerArn=string}\n\n\nJSON Syntax:\n\n{\n  \"conflictHandler\": \"OPTIMISTIC_CONCURRENCY\"|\"LAMBDA\"|\"AUTOMERGE\"|\"NONE\",\n  \"conflictDetection\": \"VERSION\"|\"NONE\",\n  \"lambdaConflictHandlerConfig\": {\n    \"lambdaConflictHandlerArn\": \"string\"\n  }\n}\n\n\n--caching-config (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)\n\nShorthand Syntax:\n\nttl=long,cachingKeys=string,string\n\n\nJSON Syntax:\n\n{\n  \"ttl\": long,\n  \"cachingKeys\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresolver -> (structure)\n\nThe Resolver object.\n\ntypeName -> (string)\n\nThe resolver type name.\n\nfieldName -> (string)\n\nThe resolver field name.\n\ndataSourceName -> (string)\n\nThe resolver data source name.\n\nresolverArn -> (string)\n\nThe resolver ARN.\n\nrequestMappingTemplate -> (string)\n\nThe request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe response mapping template.\n\nkind -> (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\npipelineConfig -> (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nsyncConfig -> (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\ncachingConfig -> (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)"
    },
    {
      "command_name": "create-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/create-type.html",
      "command_description": "Description\n\nCreates a Type object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-type\n--api-id <value>\n--definition <value>\n--format <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--definition <value>",
        "--format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--definition (string)\n\nThe type definition, in GraphQL Schema Definition Language (SDL) format.\n\nFor more information, see the GraphQL SDL documentation .\n\n--format (string)\n\nThe type format: SDL or JSON.\n\nPossible values:\n\nSDL\n\nJSON\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntype -> (structure)\n\nThe Type object.\n\nname -> (string)\n\nThe type name.\n\ndescription -> (string)\n\nThe type description.\n\narn -> (string)\n\nThe type ARN.\n\ndefinition -> (string)\n\nThe type definition.\n\nformat -> (string)\n\nThe type format: SDL or JSON."
    },
    {
      "command_name": "delete-api-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-api-cache.html",
      "command_description": "Description\n\nDeletes an ApiCache object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-api-cache\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-api-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-api-key.html",
      "command_description": "Description\n\nDeletes an API key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-api-key\n--api-id <value>\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--id (string)\n\nThe ID for the API key.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-data-source.html",
      "command_description": "Description\n\nDeletes a DataSource object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-data-source\n--api-id <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--name (string)\n\nThe name of the data source.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-function.html",
      "command_description": "Description\n\nDeletes a Function .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function\n--api-id <value>\n--function-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--function-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API ID.\n\n--function-id (string)\n\nThe Function ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-graphql-api",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-graphql-api.html",
      "command_description": "Description\n\nDeletes a GraphqlApi object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-graphql-api\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-resolver",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-resolver.html",
      "command_description": "Description\n\nDeletes a Resolver object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resolver\n--api-id <value>\n--type-name <value>\n--field-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "--field-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe name of the resolver type.\n\n--field-name (string)\n\nThe resolver field name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/delete-type.html",
      "command_description": "Description\n\nDeletes a Type object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-type\n--api-id <value>\n--type-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe type name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "flush-api-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/flush-api-cache.html",
      "command_description": "Description\n\nFlushes an ApiCache object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  flush-api-cache\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-api-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-api-cache.html",
      "command_description": "Description\n\nRetrieves an ApiCache object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-api-cache\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiCache -> (structure)\n\nThe ApiCache object.\n\nttl -> (long)\n\nTTL in seconds for cache entries.\n\nValid values are between 1 and 3600 seconds.\n\napiCachingBehavior -> (string)\n\nCaching behavior.\n\nFULL_REQUEST_CACHING : All requests are fully cached.\n\nPER_RESOLVER_CACHING : Individual resolvers that you specify are cached.\n\ntransitEncryptionEnabled -> (boolean)\n\nTransit encryption flag when connecting to cache. This setting cannot be updated after creation.\n\natRestEncryptionEnabled -> (boolean)\n\nAt rest encryption flag for cache. This setting cannot be updated after creation.\n\ntype -> (string)\n\nThe cache instance type. Valid values are\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X (not available in all regions)\n\nLARGE_12X\n\nHistorically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.\n\nThe following legacy instance types are available, but their use is discouraged:\n\nT2_SMALL : A t2.small instance type.\n\nT2_MEDIUM : A t2.medium instance type.\n\nR4_LARGE : A r4.large instance type.\n\nR4_XLARGE : A r4.xlarge instance type.\n\nR4_2XLARGE : A r4.2xlarge instance type.\n\nR4_4XLARGE : A r4.4xlarge instance type.\n\nR4_8XLARGE : A r4.8xlarge instance type.\n\nstatus -> (string)\n\nThe cache instance status.\n\nAVAILABLE : The instance is available for use.\n\nCREATING : The instance is currently creating.\n\nDELETING : The instance is currently deleting.\n\nMODIFYING : The instance is currently modifying.\n\nFAILED : The instance has failed creation."
    },
    {
      "command_name": "get-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-data-source.html",
      "command_description": "Description\n\nRetrieves a DataSource object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-data-source\n--api-id <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--name (string)\n\nThe name of the data source.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataSource -> (structure)\n\nThe DataSource object.\n\ndataSourceArn -> (string)\n\nThe data source ARN.\n\nname -> (string)\n\nThe name of the data source.\n\ndescription -> (string)\n\nThe description of the data source.\n\ntype -> (string)\n\nThe type of the data source.\n\nAWS_LAMBDA : The data source is an Amazon Web Services Lambda function.\n\nAMAZON_DYNAMODB : The data source is an Amazon DynamoDB table.\n\nAMAZON_ELASTICSEARCH : The data source is an Amazon OpenSearch Service domain.\n\nAMAZON_OPENSEARCH_SERVICE : The data source is an Amazon OpenSearch Service domain.\n\nNONE : There is no data source. This type is used when you wish to invoke a GraphQL operation without connecting to a data source, such as performing data transformation with resolvers or triggering a subscription to be invoked from a mutation.\n\nHTTP : The data source is an HTTP endpoint.\n\nRELATIONAL_DATABASE : The data source is a relational database.\n\nserviceRoleArn -> (string)\n\nThe Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.\n\ndynamodbConfig -> (structure)\n\nAmazon DynamoDB settings.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nlambdaConfig -> (structure)\n\nAmazon Web Services Lambda settings.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nelasticsearchConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nopenSearchServiceConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nhttpConfig -> (structure)\n\nHTTP endpoint settings.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nrelationalDatabaseConfig -> (structure)\n\nRelational database settings.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials."
    },
    {
      "command_name": "get-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-function.html",
      "command_description": "Description\n\nGet a Function .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function\n--api-id <value>\n--function-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--function-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API ID.\n\n--function-id (string)\n\nThe Function ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfunctionConfiguration -> (structure)\n\nThe Function object.\n\nfunctionId -> (string)\n\nA unique ID representing the Function object.\n\nfunctionArn -> (string)\n\nThe ARN of the Function object.\n\nname -> (string)\n\nThe name of the Function object.\n\ndescription -> (string)\n\nThe Function description.\n\ndataSourceName -> (string)\n\nThe name of the DataSource .\n\nrequestMappingTemplate -> (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe Function response mapping template.\n\nfunctionVersion -> (string)\n\nThe version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.\n\nsyncConfig -> (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler."
    },
    {
      "command_name": "get-graphql-api",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-graphql-api.html",
      "command_description": "Description\n\nRetrieves a GraphqlApi object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-graphql-api\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID for the GraphQL API.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngraphqlApi -> (structure)\n\nThe GraphqlApi object.\n\nname -> (string)\n\nThe API name.\n\napiId -> (string)\n\nThe API ID.\n\nauthenticationType -> (string)\n\nThe authentication type.\n\nlogConfig -> (structure)\n\nThe Amazon CloudWatch Logs configuration.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\narn -> (string)\n\nThe ARN.\n\nuris -> (map)\n\nThe URIs.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nadditionalAuthenticationProviders -> (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nxrayEnabled -> (boolean)\n\nA flag representing whether X-Ray tracing is enabled for this GraphqlApi .\n\nwafWebAclArn -> (string)\n\nThe ARN of the WAF ACL associated with this GraphqlApi , if one exists.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called."
    },
    {
      "command_name": "get-introspection-schema",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-introspection-schema.html",
      "command_description": "Description\n\nRetrieves the introspection schema for a GraphQL API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-introspection-schema\n--api-id <value>\n--format <value>\n[--include-directives | --no-include-directives]\n<outfile>\n",
      "command_options": [
        "--api-id <value>",
        "--format <value>",
        "[--include-directives | --no-include-directives]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--format (string)\n\nThe schema format: SDL or JSON.\n\nPossible values:\n\nSDL\n\nJSON\n\n--include-directives | --no-include-directives (boolean)\n\nA flag that specifies whether the schema introspection should contain directives.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nschema -> (blob)\n\nThe schema, in GraphQL Schema Definition Language (SDL) format.\n\nFor more information, see the GraphQL SDL documentation ."
    },
    {
      "command_name": "get-resolver",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-resolver.html",
      "command_description": "Description\n\nRetrieves a Resolver object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resolver\n--api-id <value>\n--type-name <value>\n--field-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "--field-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe resolver type name.\n\n--field-name (string)\n\nThe resolver field name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresolver -> (structure)\n\nThe Resolver object.\n\ntypeName -> (string)\n\nThe resolver type name.\n\nfieldName -> (string)\n\nThe resolver field name.\n\ndataSourceName -> (string)\n\nThe resolver data source name.\n\nresolverArn -> (string)\n\nThe resolver ARN.\n\nrequestMappingTemplate -> (string)\n\nThe request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe response mapping template.\n\nkind -> (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\npipelineConfig -> (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nsyncConfig -> (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\ncachingConfig -> (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)"
    },
    {
      "command_name": "get-schema-creation-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-schema-creation-status.html",
      "command_description": "Description\n\nRetrieves the current status of a schema creation operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-schema-creation-status\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe current state of the schema (PROCESSING, FAILED, SUCCESS, or NOT_APPLICABLE). When the schema is in the ACTIVE state, you can add data.\n\ndetails -> (string)\n\nDetailed information about the status of the schema creation operation."
    },
    {
      "command_name": "get-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/get-type.html",
      "command_description": "Description\n\nRetrieves a Type object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-type\n--api-id <value>\n--type-name <value>\n--format <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "--format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe type name.\n\n--format (string)\n\nThe type format: SDL or JSON.\n\nPossible values:\n\nSDL\n\nJSON\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntype -> (structure)\n\nThe Type object.\n\nname -> (string)\n\nThe type name.\n\ndescription -> (string)\n\nThe type description.\n\narn -> (string)\n\nThe type ARN.\n\ndefinition -> (string)\n\nThe type definition.\n\nformat -> (string)\n\nThe type format: SDL or JSON."
    },
    {
      "command_name": "list-api-keys",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-api-keys.html",
      "command_description": "Description\n\nLists the API keys for a given API.\n\nNote\n\nAPI keys are deleted automatically 60 days after they expire. However, they may still be included in the response until they have actually been deleted. You can safely call DeleteApiKey to manually delete a key before it’s automatically deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-api-keys is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: apiKeys",
      "command_synopsis": "Synopsis\n  list-api-keys\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiKeys -> (list)\n\nThe ApiKey objects.\n\n(structure)\n\nDescribes an API key.\n\nCustomers invoke AppSync GraphQL API operations with API keys as an identity mechanism. There are two key versions:\n\nda1 : This version was introduced at launch in November 2017. These keys always expire after 7 days. Key expiration is managed by Amazon DynamoDB TTL. The keys ceased to be valid after February 21, 2018 and should not be used after that date.\n\nListApiKeys returns the expiration time in milliseconds.\n\nCreateApiKey returns the expiration time in milliseconds.\n\nUpdateApiKey is not available for this key version.\n\nDeleteApiKey deletes the item from the table.\n\nExpiration is stored in Amazon DynamoDB as milliseconds. This results in a bug where keys are not automatically deleted because DynamoDB expects the TTL to be stored in seconds. As a one-time action, we will delete these keys from the table after February 21, 2018.\n\nda2 : This version was introduced in February 2018 when AppSync added support to extend key expiration.\n\nListApiKeys returns the expiration time and deletion time in seconds.\n\nCreateApiKey returns the expiration time and deletion time in seconds and accepts a user-provided expiration time in seconds.\n\nUpdateApiKey returns the expiration time and and deletion time in seconds and accepts a user-provided expiration time in seconds. Expired API keys are kept for 60 days after the expiration time. Key expiration time can be updated while the key is not deleted.\n\nDeleteApiKey deletes the item from the table.\n\nExpiration is stored in Amazon DynamoDB as seconds. After the expiration time, using the key to authenticate will fail. But the key can be reinstated before deletion.\n\nDeletion is stored in Amazon DynamoDB as seconds. The key will be deleted after deletion time.\n\nid -> (string)\n\nThe API key ID.\n\ndescription -> (string)\n\nA description of the purpose of the API key.\n\nexpires -> (long)\n\nThe time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour.\n\ndeletes -> (long)\n\nThe time after which the API key is deleted. The date is represented as seconds since the epoch, rounded down to the nearest hour.\n\nnextToken -> (string)\n\nAn identifier to be passed in the next request to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-data-sources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-data-sources.html",
      "command_description": "Description\n\nLists the data sources for a given API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-data-sources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: dataSources",
      "command_synopsis": "Synopsis\n  list-data-sources\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataSources -> (list)\n\nThe DataSource objects.\n\n(structure)\n\nDescribes a data source.\n\ndataSourceArn -> (string)\n\nThe data source ARN.\n\nname -> (string)\n\nThe name of the data source.\n\ndescription -> (string)\n\nThe description of the data source.\n\ntype -> (string)\n\nThe type of the data source.\n\nAWS_LAMBDA : The data source is an Amazon Web Services Lambda function.\n\nAMAZON_DYNAMODB : The data source is an Amazon DynamoDB table.\n\nAMAZON_ELASTICSEARCH : The data source is an Amazon OpenSearch Service domain.\n\nAMAZON_OPENSEARCH_SERVICE : The data source is an Amazon OpenSearch Service domain.\n\nNONE : There is no data source. This type is used when you wish to invoke a GraphQL operation without connecting to a data source, such as performing data transformation with resolvers or triggering a subscription to be invoked from a mutation.\n\nHTTP : The data source is an HTTP endpoint.\n\nRELATIONAL_DATABASE : The data source is a relational database.\n\nserviceRoleArn -> (string)\n\nThe Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.\n\ndynamodbConfig -> (structure)\n\nAmazon DynamoDB settings.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nlambdaConfig -> (structure)\n\nAmazon Web Services Lambda settings.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nelasticsearchConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nopenSearchServiceConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nhttpConfig -> (structure)\n\nHTTP endpoint settings.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nrelationalDatabaseConfig -> (structure)\n\nRelational database settings.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials.\n\nnextToken -> (string)\n\nAn identifier to be passed in the next request to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-functions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-functions.html",
      "command_description": "Description\n\nList multiple functions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-functions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: functions",
      "command_synopsis": "Synopsis\n  list-functions\n--api-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(structure)\n\nA function is a reusable entity. Multiple functions can be used to compose the resolver logic.\n\nfunctionId -> (string)\n\nA unique ID representing the Function object.\n\nfunctionArn -> (string)\n\nThe ARN of the Function object.\n\nname -> (string)\n\nThe name of the Function object.\n\ndescription -> (string)\n\nThe Function description.\n\ndataSourceName -> (string)\n\nThe name of the DataSource .\n\nrequestMappingTemplate -> (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe Function response mapping template.\n\nfunctionVersion -> (string)\n\nThe version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.\n\nsyncConfig -> (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\nnextToken -> (string)\n\nAn identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-graphql-apis",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-graphql-apis.html",
      "command_description": "Description\n\nLists your GraphQL APIs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-graphql-apis is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: graphqlApis",
      "command_synopsis": "Synopsis\n  list-graphql-apis\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngraphqlApis -> (list)\n\nThe GraphqlApi objects.\n\n(structure)\n\nDescribes a GraphQL API.\n\nname -> (string)\n\nThe API name.\n\napiId -> (string)\n\nThe API ID.\n\nauthenticationType -> (string)\n\nThe authentication type.\n\nlogConfig -> (structure)\n\nThe Amazon CloudWatch Logs configuration.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\narn -> (string)\n\nThe ARN.\n\nuris -> (map)\n\nThe URIs.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nadditionalAuthenticationProviders -> (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nxrayEnabled -> (boolean)\n\nA flag representing whether X-Ray tracing is enabled for this GraphqlApi .\n\nwafWebAclArn -> (string)\n\nThe ARN of the WAF ACL associated with this GraphqlApi , if one exists.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nnextToken -> (string)\n\nAn identifier to be passed in the next request to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-resolvers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-resolvers.html",
      "command_description": "Description\n\nLists the resolvers for a given API and type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolvers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: resolvers",
      "command_synopsis": "Synopsis\n  list-resolvers\n--api-id <value>\n--type-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe type name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresolvers -> (list)\n\nThe Resolver objects.\n\n(structure)\n\nDescribes a resolver.\n\ntypeName -> (string)\n\nThe resolver type name.\n\nfieldName -> (string)\n\nThe resolver field name.\n\ndataSourceName -> (string)\n\nThe resolver data source name.\n\nresolverArn -> (string)\n\nThe resolver ARN.\n\nrequestMappingTemplate -> (string)\n\nThe request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe response mapping template.\n\nkind -> (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\npipelineConfig -> (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nsyncConfig -> (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\ncachingConfig -> (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)\n\nnextToken -> (string)\n\nAn identifier to be passed in the next request to this operation to return the next set of items in the list."
    },
    {
      "command_name": "list-resolvers-by-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-resolvers-by-function.html",
      "command_description": "Description\n\nList the resolvers that are associated with a specific function.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resolvers-by-function is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: resolvers",
      "command_synopsis": "Synopsis\n  list-resolvers-by-function\n--api-id <value>\n--function-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--function-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--function-id (string)\n\nThe Function ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresolvers -> (list)\n\nThe list of resolvers.\n\n(structure)\n\nDescribes a resolver.\n\ntypeName -> (string)\n\nThe resolver type name.\n\nfieldName -> (string)\n\nThe resolver field name.\n\ndataSourceName -> (string)\n\nThe resolver data source name.\n\nresolverArn -> (string)\n\nThe resolver ARN.\n\nrequestMappingTemplate -> (string)\n\nThe request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe response mapping template.\n\nkind -> (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\npipelineConfig -> (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nsyncConfig -> (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\ncachingConfig -> (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)\n\nnextToken -> (string)\n\nAn identifier that can be used to return the next set of items in the list."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags for a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe GraphqlApi ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nA TagMap object.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag."
    },
    {
      "command_name": "list-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/list-types.html",
      "command_description": "Description\n\nLists the types for a given API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-types is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: types",
      "command_synopsis": "Synopsis\n  list-types\n--api-id <value>\n--format <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--format (string)\n\nThe type format: SDL or JSON.\n\nPossible values:\n\nSDL\n\nJSON\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntypes -> (list)\n\nThe Type objects.\n\n(structure)\n\nDescribes a type.\n\nname -> (string)\n\nThe type name.\n\ndescription -> (string)\n\nThe type description.\n\narn -> (string)\n\nThe type ARN.\n\ndefinition -> (string)\n\nThe type definition.\n\nformat -> (string)\n\nThe type format: SDL or JSON.\n\nnextToken -> (string)\n\nAn identifier to be passed in the next request to this operation to return the next set of items in the list."
    },
    {
      "command_name": "start-schema-creation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/start-schema-creation.html",
      "command_description": "Description\n\nAdds a new schema to your GraphQL API.\n\nThis operation is asynchronous. Use to determine when it has completed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-schema-creation\n--api-id <value>\n--definition <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--definition <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--definition (blob)\n\nThe schema definition, in GraphQL schema language format.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe current state of the schema (PROCESSING, FAILED, SUCCESS, or NOT_APPLICABLE). When the schema is in the ACTIVE state, you can add data."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/tag-resource.html",
      "command_description": "Description\n\nTags a resource with user-supplied tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe GraphqlApi ARN.\n\n--tags (map)\n\nA TagMap object.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/untag-resource.html",
      "command_description": "Description\n\nUntags a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe GraphqlApi ARN.\n\n--tag-keys (list)\n\nA list of TagKey objects.\n\n(string)\n\nThe key for the tag.\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-api-cache",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-api-cache.html",
      "command_description": "Description\n\nUpdates the cache for the GraphQL API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-api-cache\n--api-id <value>\n--ttl <value>\n--api-caching-behavior <value>\n--type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--ttl <value>",
        "--api-caching-behavior <value>",
        "--type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API Id.\n\n--ttl (long)\n\nTTL in seconds for cache entries.\n\nValid values are between 1 and 3600 seconds.\n\n--api-caching-behavior (string)\n\nCaching behavior.\n\nFULL_REQUEST_CACHING : All requests are fully cached.\n\nPER_RESOLVER_CACHING : Individual resolvers that you specify are cached.\n\nPossible values:\n\nFULL_REQUEST_CACHING\n\nPER_RESOLVER_CACHING\n\n--type (string)\n\nThe cache instance type. Valid values are\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X (not available in all regions)\n\nLARGE_12X\n\nHistorically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.\n\nThe following legacy instance types are available, but their use is discouraged:\n\nT2_SMALL : A t2.small instance type.\n\nT2_MEDIUM : A t2.medium instance type.\n\nR4_LARGE : A r4.large instance type.\n\nR4_XLARGE : A r4.xlarge instance type.\n\nR4_2XLARGE : A r4.2xlarge instance type.\n\nR4_4XLARGE : A r4.4xlarge instance type.\n\nR4_8XLARGE : A r4.8xlarge instance type.\n\nPossible values:\n\nT2_SMALL\n\nT2_MEDIUM\n\nR4_LARGE\n\nR4_XLARGE\n\nR4_2XLARGE\n\nR4_4XLARGE\n\nR4_8XLARGE\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X\n\nLARGE_12X\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiCache -> (structure)\n\nThe ApiCache object.\n\nttl -> (long)\n\nTTL in seconds for cache entries.\n\nValid values are between 1 and 3600 seconds.\n\napiCachingBehavior -> (string)\n\nCaching behavior.\n\nFULL_REQUEST_CACHING : All requests are fully cached.\n\nPER_RESOLVER_CACHING : Individual resolvers that you specify are cached.\n\ntransitEncryptionEnabled -> (boolean)\n\nTransit encryption flag when connecting to cache. This setting cannot be updated after creation.\n\natRestEncryptionEnabled -> (boolean)\n\nAt rest encryption flag for cache. This setting cannot be updated after creation.\n\ntype -> (string)\n\nThe cache instance type. Valid values are\n\nSMALL\n\nMEDIUM\n\nLARGE\n\nXLARGE\n\nLARGE_2X\n\nLARGE_4X\n\nLARGE_8X (not available in all regions)\n\nLARGE_12X\n\nHistorically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.\n\nThe following legacy instance types are available, but their use is discouraged:\n\nT2_SMALL : A t2.small instance type.\n\nT2_MEDIUM : A t2.medium instance type.\n\nR4_LARGE : A r4.large instance type.\n\nR4_XLARGE : A r4.xlarge instance type.\n\nR4_2XLARGE : A r4.2xlarge instance type.\n\nR4_4XLARGE : A r4.4xlarge instance type.\n\nR4_8XLARGE : A r4.8xlarge instance type.\n\nstatus -> (string)\n\nThe cache instance status.\n\nAVAILABLE : The instance is available for use.\n\nCREATING : The instance is currently creating.\n\nDELETING : The instance is currently deleting.\n\nMODIFYING : The instance is currently modifying.\n\nFAILED : The instance has failed creation."
    },
    {
      "command_name": "update-api-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-api-key.html",
      "command_description": "Description\n\nUpdates an API key. The key can be updated while it is not deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-api-key\n--api-id <value>\n--id <value>\n[--description <value>]\n[--expires <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--id <value>",
        "[--description <value>]",
        "[--expires <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe ID for the GraphQL API.\n\n--id (string)\n\nThe API key ID.\n\n--description (string)\n\nA description of the purpose of the API key.\n\n--expires (long)\n\nThe time from update time after which the API key expires. The date is represented as seconds since the epoch. For more information, see .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napiKey -> (structure)\n\nThe API key.\n\nid -> (string)\n\nThe API key ID.\n\ndescription -> (string)\n\nA description of the purpose of the API key.\n\nexpires -> (long)\n\nThe time after which the API key expires. The date is represented as seconds since the epoch, rounded down to the nearest hour.\n\ndeletes -> (long)\n\nThe time after which the API key is deleted. The date is represented as seconds since the epoch, rounded down to the nearest hour."
    },
    {
      "command_name": "update-data-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-data-source.html",
      "command_description": "Description\n\nUpdates a DataSource object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-data-source\n--api-id <value>\n--name <value>\n[--description <value>]\n--type <value>\n[--service-role-arn <value>]\n[--dynamodb-config <value>]\n[--lambda-config <value>]\n[--elasticsearch-config <value>]\n[--open-search-service-config <value>]\n[--http-config <value>]\n[--relational-database-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--description <value>]",
        "--type <value>",
        "[--service-role-arn <value>]",
        "[--dynamodb-config <value>]",
        "[--lambda-config <value>]",
        "[--elasticsearch-config <value>]",
        "[--open-search-service-config <value>]",
        "[--http-config <value>]",
        "[--relational-database-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--name (string)\n\nThe new name for the data source.\n\n--description (string)\n\nThe new description for the data source.\n\n--type (string)\n\nThe new data source type.\n\nPossible values:\n\nAWS_LAMBDA\n\nAMAZON_DYNAMODB\n\nAMAZON_ELASTICSEARCH\n\nNONE\n\nHTTP\n\nRELATIONAL_DATABASE\n\nAMAZON_OPENSEARCH_SERVICE\n\n--service-role-arn (string)\n\nThe new service role ARN for the data source.\n\n--dynamodb-config (structure)\n\nThe new Amazon DynamoDB configuration.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nShorthand Syntax:\n\ntableName=string,awsRegion=string,useCallerCredentials=boolean,deltaSyncConfig={baseTableTTL=long,deltaSyncTableName=string,deltaSyncTableTTL=long},versioned=boolean\n\n\nJSON Syntax:\n\n{\n  \"tableName\": \"string\",\n  \"awsRegion\": \"string\",\n  \"useCallerCredentials\": true|false,\n  \"deltaSyncConfig\": {\n    \"baseTableTTL\": long,\n    \"deltaSyncTableName\": \"string\",\n    \"deltaSyncTableTTL\": long\n  },\n  \"versioned\": true|false\n}\n\n\n--lambda-config (structure)\n\nThe new Amazon Web Services Lambda configuration.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nShorthand Syntax:\n\nlambdaFunctionArn=string\n\n\nJSON Syntax:\n\n{\n  \"lambdaFunctionArn\": \"string\"\n}\n\n\n--elasticsearch-config (structure)\n\nThe new OpenSearch configuration.\n\nAs of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. Instead, use UpdateDataSourceRequest$openSearchServiceConfig to update an OpenSearch data source.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nShorthand Syntax:\n\nendpoint=string,awsRegion=string\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"awsRegion\": \"string\"\n}\n\n\n--open-search-service-config (structure)\n\nThe new OpenSearch configuration.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nShorthand Syntax:\n\nendpoint=string,awsRegion=string\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"awsRegion\": \"string\"\n}\n\n\n--http-config (structure)\n\nThe new HTTP endpoint configuration.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nShorthand Syntax:\n\nendpoint=string,authorizationConfig={authorizationType=string,awsIamConfig={signingRegion=string,signingServiceName=string}}\n\n\nJSON Syntax:\n\n{\n  \"endpoint\": \"string\",\n  \"authorizationConfig\": {\n    \"authorizationType\": \"AWS_IAM\",\n    \"awsIamConfig\": {\n      \"signingRegion\": \"string\",\n      \"signingServiceName\": \"string\"\n    }\n  }\n}\n\n\n--relational-database-config (structure)\n\nThe new relational database configuration.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials.\n\nShorthand Syntax:\n\nrelationalDatabaseSourceType=string,rdsHttpEndpointConfig={awsRegion=string,dbClusterIdentifier=string,databaseName=string,schema=string,awsSecretStoreArn=string}\n\n\nJSON Syntax:\n\n{\n  \"relationalDatabaseSourceType\": \"RDS_HTTP_ENDPOINT\",\n  \"rdsHttpEndpointConfig\": {\n    \"awsRegion\": \"string\",\n    \"dbClusterIdentifier\": \"string\",\n    \"databaseName\": \"string\",\n    \"schema\": \"string\",\n    \"awsSecretStoreArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndataSource -> (structure)\n\nThe updated DataSource object.\n\ndataSourceArn -> (string)\n\nThe data source ARN.\n\nname -> (string)\n\nThe name of the data source.\n\ndescription -> (string)\n\nThe description of the data source.\n\ntype -> (string)\n\nThe type of the data source.\n\nAWS_LAMBDA : The data source is an Amazon Web Services Lambda function.\n\nAMAZON_DYNAMODB : The data source is an Amazon DynamoDB table.\n\nAMAZON_ELASTICSEARCH : The data source is an Amazon OpenSearch Service domain.\n\nAMAZON_OPENSEARCH_SERVICE : The data source is an Amazon OpenSearch Service domain.\n\nNONE : There is no data source. This type is used when you wish to invoke a GraphQL operation without connecting to a data source, such as performing data transformation with resolvers or triggering a subscription to be invoked from a mutation.\n\nHTTP : The data source is an HTTP endpoint.\n\nRELATIONAL_DATABASE : The data source is a relational database.\n\nserviceRoleArn -> (string)\n\nThe Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.\n\ndynamodbConfig -> (structure)\n\nAmazon DynamoDB settings.\n\ntableName -> (string)\n\nThe table name.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nuseCallerCredentials -> (boolean)\n\nSet to TRUE to use Amazon Cognito credentials with this data source.\n\ndeltaSyncConfig -> (structure)\n\nThe DeltaSyncConfig for a versioned datasource.\n\nbaseTableTTL -> (long)\n\nThe number of minutes an Item is stored in the datasource.\n\ndeltaSyncTableName -> (string)\n\nThe Delta Sync table name.\n\ndeltaSyncTableTTL -> (long)\n\nThe number of minutes a Delta Sync log entry is stored in the Delta Sync table.\n\nversioned -> (boolean)\n\nSet to TRUE to use Conflict Detection and Resolution with this data source.\n\nlambdaConfig -> (structure)\n\nAmazon Web Services Lambda settings.\n\nlambdaFunctionArn -> (string)\n\nThe ARN for the Lambda function.\n\nelasticsearchConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nopenSearchServiceConfig -> (structure)\n\nAmazon OpenSearch Service settings.\n\nendpoint -> (string)\n\nThe endpoint.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region.\n\nhttpConfig -> (structure)\n\nHTTP endpoint settings.\n\nendpoint -> (string)\n\nThe HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.\n\nauthorizationConfig -> (structure)\n\nThe authorization config in case the HTTP endpoint requires authorization.\n\nauthorizationType -> (string)\n\nThe authorization type required by the HTTP endpoint.\n\nAWS_IAM : The authorization type is Sigv4.\n\nawsIamConfig -> (structure)\n\nThe Identity and Access Management settings.\n\nsigningRegion -> (string)\n\nThe signing region for Identity and Access Management authorization.\n\nsigningServiceName -> (string)\n\nThe signing service name for Identity and Access Management authorization.\n\nrelationalDatabaseConfig -> (structure)\n\nRelational database settings.\n\nrelationalDatabaseSourceType -> (string)\n\nSource type for the relational database.\n\nRDS_HTTP_ENDPOINT : The relational database source type is an Amazon RDS HTTP endpoint.\n\nrdsHttpEndpointConfig -> (structure)\n\nAmazon RDS HTTP endpoint settings.\n\nawsRegion -> (string)\n\nAmazon Web Services Region for RDS HTTP endpoint.\n\ndbClusterIdentifier -> (string)\n\nAmazon RDS cluster ARN.\n\ndatabaseName -> (string)\n\nLogical database name.\n\nschema -> (string)\n\nLogical schema name.\n\nawsSecretStoreArn -> (string)\n\nAmazon Web Services secret store ARN for database credentials."
    },
    {
      "command_name": "update-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-function.html",
      "command_description": "Description\n\nUpdates a Function object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function\n--api-id <value>\n--name <value>\n[--description <value>]\n--function-id <value>\n--data-source-name <value>\n[--request-mapping-template <value>]\n[--response-mapping-template <value>]\n--function-version <value>\n[--sync-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--description <value>]",
        "--function-id <value>",
        "--data-source-name <value>",
        "[--request-mapping-template <value>]",
        "[--response-mapping-template <value>]",
        "--function-version <value>",
        "[--sync-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe GraphQL API ID.\n\n--name (string)\n\nThe Function name.\n\n--description (string)\n\nThe Function description.\n\n--function-id (string)\n\nThe function ID.\n\n--data-source-name (string)\n\nThe Function DataSource name.\n\n--request-mapping-template (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\n--response-mapping-template (string)\n\nThe Function request mapping template.\n\n--function-version (string)\n\nThe version of the request mapping template. Currently the supported value is 2018-05-29.\n\n--sync-config (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\nShorthand Syntax:\n\nconflictHandler=string,conflictDetection=string,lambdaConflictHandlerConfig={lambdaConflictHandlerArn=string}\n\n\nJSON Syntax:\n\n{\n  \"conflictHandler\": \"OPTIMISTIC_CONCURRENCY\"|\"LAMBDA\"|\"AUTOMERGE\"|\"NONE\",\n  \"conflictDetection\": \"VERSION\"|\"NONE\",\n  \"lambdaConflictHandlerConfig\": {\n    \"lambdaConflictHandlerArn\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfunctionConfiguration -> (structure)\n\nThe Function object.\n\nfunctionId -> (string)\n\nA unique ID representing the Function object.\n\nfunctionArn -> (string)\n\nThe ARN of the Function object.\n\nname -> (string)\n\nThe name of the Function object.\n\ndescription -> (string)\n\nThe Function description.\n\ndataSourceName -> (string)\n\nThe name of the DataSource .\n\nrequestMappingTemplate -> (string)\n\nThe Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe Function response mapping template.\n\nfunctionVersion -> (string)\n\nThe version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.\n\nsyncConfig -> (structure)\n\nDescribes a Sync configuration for a resolver.\n\nContains information on which Conflict Detection as well as Resolution strategy should be performed when the resolver is invoked.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler."
    },
    {
      "command_name": "update-graphql-api",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-graphql-api.html",
      "command_description": "Description\n\nUpdates a GraphqlApi object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-graphql-api\n--api-id <value>\n--name <value>\n[--log-config <value>]\n[--authentication-type <value>]\n[--user-pool-config <value>]\n[--open-id-connect-config <value>]\n[--additional-authentication-providers <value>]\n[--xray-enabled | --no-xray-enabled]\n[--lambda-authorizer-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--name <value>",
        "[--log-config <value>]",
        "[--authentication-type <value>]",
        "[--user-pool-config <value>]",
        "[--open-id-connect-config <value>]",
        "[--additional-authentication-providers <value>]",
        "[--xray-enabled | --no-xray-enabled]",
        "[--lambda-authorizer-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--name (string)\n\nThe new name for the GraphqlApi object.\n\n--log-config (structure)\n\nThe Amazon CloudWatch Logs configuration for the GraphqlApi object.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nShorthand Syntax:\n\nfieldLogLevel=string,cloudWatchLogsRoleArn=string,excludeVerboseContent=boolean\n\n\nJSON Syntax:\n\n{\n  \"fieldLogLevel\": \"NONE\"|\"ERROR\"|\"ALL\",\n  \"cloudWatchLogsRoleArn\": \"string\",\n  \"excludeVerboseContent\": true|false\n}\n\n\n--authentication-type (string)\n\nThe new authentication type for the GraphqlApi object.\n\nPossible values:\n\nAPI_KEY\n\nAWS_IAM\n\nAMAZON_COGNITO_USER_POOLS\n\nOPENID_CONNECT\n\nAWS_LAMBDA\n\n--user-pool-config (structure)\n\nThe new Amazon Cognito user pool configuration for the GraphqlApi object.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nShorthand Syntax:\n\nuserPoolId=string,awsRegion=string,defaultAction=string,appIdClientRegex=string\n\n\nJSON Syntax:\n\n{\n  \"userPoolId\": \"string\",\n  \"awsRegion\": \"string\",\n  \"defaultAction\": \"ALLOW\"|\"DENY\",\n  \"appIdClientRegex\": \"string\"\n}\n\n\n--open-id-connect-config (structure)\n\nThe OpenID Connect configuration for the GraphqlApi object.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nShorthand Syntax:\n\nissuer=string,clientId=string,iatTTL=long,authTTL=long\n\n\nJSON Syntax:\n\n{\n  \"issuer\": \"string\",\n  \"clientId\": \"string\",\n  \"iatTTL\": long,\n  \"authTTL\": long\n}\n\n\n--additional-authentication-providers (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nShorthand Syntax:\n\nauthenticationType=string,openIDConnectConfig={issuer=string,clientId=string,iatTTL=long,authTTL=long},userPoolConfig={userPoolId=string,awsRegion=string,appIdClientRegex=string},lambdaAuthorizerConfig={authorizerResultTtlInSeconds=integer,authorizerUri=string,identityValidationExpression=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"authenticationType\": \"API_KEY\"|\"AWS_IAM\"|\"AMAZON_COGNITO_USER_POOLS\"|\"OPENID_CONNECT\"|\"AWS_LAMBDA\",\n    \"openIDConnectConfig\": {\n      \"issuer\": \"string\",\n      \"clientId\": \"string\",\n      \"iatTTL\": long,\n      \"authTTL\": long\n    },\n    \"userPoolConfig\": {\n      \"userPoolId\": \"string\",\n      \"awsRegion\": \"string\",\n      \"appIdClientRegex\": \"string\"\n    },\n    \"lambdaAuthorizerConfig\": {\n      \"authorizerResultTtlInSeconds\": integer,\n      \"authorizerUri\": \"string\",\n      \"identityValidationExpression\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--xray-enabled | --no-xray-enabled (boolean)\n\nA flag indicating whether to enable X-Ray tracing for the GraphqlApi .\n\n--lambda-authorizer-config (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nShorthand Syntax:\n\nauthorizerResultTtlInSeconds=integer,authorizerUri=string,identityValidationExpression=string\n\n\nJSON Syntax:\n\n{\n  \"authorizerResultTtlInSeconds\": integer,\n  \"authorizerUri\": \"string\",\n  \"identityValidationExpression\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ngraphqlApi -> (structure)\n\nThe updated GraphqlApi object.\n\nname -> (string)\n\nThe API name.\n\napiId -> (string)\n\nThe API ID.\n\nauthenticationType -> (string)\n\nThe authentication type.\n\nlogConfig -> (structure)\n\nThe Amazon CloudWatch Logs configuration.\n\nfieldLogLevel -> (string)\n\nThe field logging level. Values can be NONE, ERROR, or ALL.\n\nNONE : No field-level logs are captured.\n\nERROR : Logs the following information only for the fields that are in error:\n\nThe error section in the server response.\n\nField-level errors.\n\nThe generated request/response functions that got resolved for error fields.\n\nALL : The following information is logged for all fields in the query:\n\nField-level tracing information.\n\nThe generated request/response functions that got resolved for each field.\n\ncloudWatchLogsRoleArn -> (string)\n\nThe service role that AppSync will assume to publish to Amazon CloudWatch logs in your account.\n\nexcludeVerboseContent -> (boolean)\n\nSet to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\ndefaultAction -> (string)\n\nThe action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn’t match the Amazon Cognito user pool configuration.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\narn -> (string)\n\nThe ARN.\n\nuris -> (map)\n\nThe URIs.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags.\n\nkey -> (string)\n\nThe key for the tag.\n\nvalue -> (string)\n\nThe value for the tag.\n\nadditionalAuthenticationProviders -> (list)\n\nA list of additional authentication providers for the GraphqlApi API.\n\n(structure)\n\nDescribes an additional authentication provider.\n\nauthenticationType -> (string)\n\nThe authentication type: API key, Identity and Access Management, OIDC, Amazon Cognito user pools, or Amazon Web Services Lambda.\n\nopenIDConnectConfig -> (structure)\n\nThe OpenID Connect configuration.\n\nissuer -> (string)\n\nThe issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of iss in the ID token.\n\nclientId -> (string)\n\nThe client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AppSync can validate against multiple client identifiers at a time.\n\niatTTL -> (long)\n\nThe number of milliseconds a token is valid after being issued to a user.\n\nauthTTL -> (long)\n\nThe number of milliseconds a token is valid after being authenticated.\n\nuserPoolConfig -> (structure)\n\nThe Amazon Cognito user pool configuration.\n\nuserPoolId -> (string)\n\nThe user pool ID.\n\nawsRegion -> (string)\n\nThe Amazon Web Services Region in which the user pool was created.\n\nappIdClientRegex -> (string)\n\nA regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called.\n\nxrayEnabled -> (boolean)\n\nA flag representing whether X-Ray tracing is enabled for this GraphqlApi .\n\nwafWebAclArn -> (string)\n\nThe ARN of the WAF ACL associated with this GraphqlApi , if one exists.\n\nlambdaAuthorizerConfig -> (structure)\n\nConfiguration for Amazon Web Services Lambda function authorization.\n\nauthorizerResultTtlInSeconds -> (integer)\n\nThe number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses.\n\nauthorizerUri -> (string)\n\nThe ARN of the Lambda function to be called for authorization. This may be a standard Lambda ARN, a version ARN (.../v3 ) or alias ARN.\n\nNote : This Lambda function must have the following resource-based policy assigned to it. When configuring Lambda authorizers in the Console, this is done for you. To do so with the Amazon Web Services CLI, run the following:\n\naws lambda add-permission --function-name \"arn:aws:lambda:us-east-2:111122223333:function:my-function\" --statement-id \"appsync\" --principal appsync.amazonaws.com --action lambda:InvokeFunction\n\nidentityValidationExpression -> (string)\n\nA regular expression for validation of tokens before the Lambda function is called."
    },
    {
      "command_name": "update-resolver",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-resolver.html",
      "command_description": "Description\n\nUpdates a Resolver object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resolver\n--api-id <value>\n--type-name <value>\n--field-name <value>\n[--data-source-name <value>]\n[--request-mapping-template <value>]\n[--response-mapping-template <value>]\n[--kind <value>]\n[--pipeline-config <value>]\n[--sync-config <value>]\n[--caching-config <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "--field-name <value>",
        "[--data-source-name <value>]",
        "[--request-mapping-template <value>]",
        "[--response-mapping-template <value>]",
        "[--kind <value>]",
        "[--pipeline-config <value>]",
        "[--sync-config <value>]",
        "[--caching-config <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe new type name.\n\n--field-name (string)\n\nThe new field name.\n\n--data-source-name (string)\n\nThe new data source name.\n\n--request-mapping-template (string)\n\nThe new request mapping template.\n\nA resolver uses a request mapping template to convert a GraphQL expression into a format that a data source can understand. Mapping templates are written in Apache Velocity Template Language (VTL).\n\nVTL request mapping templates are optional when using a Lambda data source. For all other data sources, VTL request and response mapping templates are required.\n\n--response-mapping-template (string)\n\nThe new response mapping template.\n\n--kind (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\nPossible values:\n\nUNIT\n\nPIPELINE\n\n--pipeline-config (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nShorthand Syntax:\n\nfunctions=string,string\n\n\nJSON Syntax:\n\n{\n  \"functions\": [\"string\", ...]\n}\n\n\n--sync-config (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\nShorthand Syntax:\n\nconflictHandler=string,conflictDetection=string,lambdaConflictHandlerConfig={lambdaConflictHandlerArn=string}\n\n\nJSON Syntax:\n\n{\n  \"conflictHandler\": \"OPTIMISTIC_CONCURRENCY\"|\"LAMBDA\"|\"AUTOMERGE\"|\"NONE\",\n  \"conflictDetection\": \"VERSION\"|\"NONE\",\n  \"lambdaConflictHandlerConfig\": {\n    \"lambdaConflictHandlerArn\": \"string\"\n  }\n}\n\n\n--caching-config (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)\n\nShorthand Syntax:\n\nttl=long,cachingKeys=string,string\n\n\nJSON Syntax:\n\n{\n  \"ttl\": long,\n  \"cachingKeys\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresolver -> (structure)\n\nThe updated Resolver object.\n\ntypeName -> (string)\n\nThe resolver type name.\n\nfieldName -> (string)\n\nThe resolver field name.\n\ndataSourceName -> (string)\n\nThe resolver data source name.\n\nresolverArn -> (string)\n\nThe resolver ARN.\n\nrequestMappingTemplate -> (string)\n\nThe request mapping template.\n\nresponseMappingTemplate -> (string)\n\nThe response mapping template.\n\nkind -> (string)\n\nThe resolver type.\n\nUNIT : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.\n\nPIPELINE : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of Function in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.\n\npipelineConfig -> (structure)\n\nThe PipelineConfig .\n\nfunctions -> (list)\n\nA list of Function objects.\n\n(string)\n\nsyncConfig -> (structure)\n\nThe SyncConfig for a resolver attached to a versioned datasource.\n\nconflictHandler -> (string)\n\nThe Conflict Resolution strategy to perform in the event of a conflict.\n\nOPTIMISTIC_CONCURRENCY : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.\n\nAUTOMERGE : Resolve conflicts with the Automerge conflict resolution strategy.\n\nLAMBDA : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.\n\nconflictDetection -> (string)\n\nThe Conflict Detection strategy to use.\n\nVERSION : Detect conflicts based on object versions for this resolver.\n\nNONE : Do not detect conflicts when executing this resolver.\n\nlambdaConflictHandlerConfig -> (structure)\n\nThe LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.\n\nlambdaConflictHandlerArn -> (string)\n\nThe Arn for the Lambda function to use as the Conflict Handler.\n\ncachingConfig -> (structure)\n\nThe caching configuration for the resolver.\n\nttl -> (long)\n\nThe TTL in seconds for a resolver that has caching enabled.\n\nValid values are between 1 and 3600 seconds.\n\ncachingKeys -> (list)\n\nThe caching keys for a resolver that has caching enabled.\n\nValid values are entries from the $context.arguments , $context.source , and $context.identity maps.\n\n(string)"
    },
    {
      "command_name": "update-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-type.html",
      "command_description": "Description\n\nUpdates a Type object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-type\n--api-id <value>\n--type-name <value>\n[--definition <value>]\n--format <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--api-id <value>",
        "--type-name <value>",
        "[--definition <value>]",
        "--format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--api-id (string)\n\nThe API ID.\n\n--type-name (string)\n\nThe new type name.\n\n--definition (string)\n\nThe new definition.\n\n--format (string)\n\nThe new type format: SDL or JSON.\n\nPossible values:\n\nSDL\n\nJSON\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntype -> (structure)\n\nThe updated Type object.\n\nname -> (string)\n\nThe type name.\n\ndescription -> (string)\n\nThe type description.\n\narn -> (string)\n\nThe type ARN.\n\ndefinition -> (string)\n\nThe type definition.\n\nformat -> (string)\n\nThe type format: SDL or JSON."
    }
  ],
  "service_description": "Description\n\nAppSync provides API actions for creating and interacting with data sources using GraphQL from your application."
}