{
  "service_name": "secretsmanager",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/index.html",
  "service_commands": [
    {
      "command_name": "cancel-rotate-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/cancel-rotate-secret.html",
      "command_description": "Description\n\nDisables automatic scheduled rotation and cancels the rotation of a secret if currently in progress.\n\nTo re-enable scheduled rotation, call RotateSecret with AutomaticallyRotateAfterDays set to a value greater than 0. This immediately rotates your secret and then enables the automatic schedule.\n\nNote\n\nIf you cancel a rotation while in progress, it can leave the VersionStage labels in an unexpected state. Depending on the step of the rotation in progress, you might need to remove the staging label AWSPENDING from the partially created version, specified by the VersionId response value. You should also evaluate the partially rotated new version to see if it should be deleted, which you can do by removing all staging labels from the new version VersionStage field.\n\nTo successfully start a rotation, the staging label AWSPENDING must be in one of the following states:\n\nNot attached to any version at all\n\nAttached to the same version as the staging label AWSCURRENT\n\nIf the staging label AWSPENDING attached to a different version than the version with AWSCURRENT then the attempt to rotate fails.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:CancelRotateSecret\n\nRelated operations\n\nTo configure rotation for a secret or to manually trigger a rotation, use RotateSecret .\n\nTo get the rotation configuration details for a secret, use DescribeSecret .\n\nTo list all of the currently available secrets, use ListSecrets .\n\nTo list all of the versions currently associated with a secret, use ListSecretVersionIds .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-rotate-secret\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret to cancel a rotation request. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret for which rotation was canceled.\n\nName -> (string)\n\nThe friendly name of the secret for which rotation was canceled.\n\nVersionId -> (string)\n\nThe unique identifier of the version of the secret created during the rotation. This version might not be complete, and should be evaluated for possible deletion. At the very least, you should remove the VersionStage value AWSPENDING to enable this version to be deleted. Failing to clean up a cancelled rotation can block you from successfully starting future rotations.",
      "command_examples": "Examples\n\nTo cancel scheduled rotation for a secret\n\nThe following example shows how to cancel rotation for a secret. The operation sets the RotationEnabled field to false and cancels all scheduled rotations. To resume scheduled rotations, you must re-enable rotation by calling the rotate-secret operation.\n\naws secretsmanager cancel-rotate-secret --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "create-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/create-secret.html",
      "command_description": "Description\n\nCreates a new secret. A secret in Secrets Manager consists of both the protected secret data and the important information needed to manage the secret.\n\nSecrets Manager stores the encrypted secret data in one of a collection of “versions” associated with the secret. Each version contains a copy of the encrypted secret data. Each version is associated with one or more “staging labels” that identify where the version is in the rotation cycle. The SecretVersionsToStages field of the secret contains the mapping of staging labels to the active versions of the secret. Versions without a staging label are considered deprecated and not included in the list.\n\nYou provide the secret data to be encrypted by putting text in either the SecretString parameter or binary data in the SecretBinary parameter, but not both. If you include SecretString or SecretBinary then Secrets Manager also creates an initial secret version and automatically attaches the staging label AWSCURRENT to the new version.\n\nNote\n\nIf you call an operation to encrypt or decrypt the SecretString or SecretBinary for a secret in the same account as the calling user and that secret doesn’t specify a Amazon Web Services KMS encryption key, Secrets Manager uses the account’s default Amazon Web Services managed customer master key (CMK) with the alias aws/secretsmanager . If this key doesn’t already exist in your account then Secrets Manager creates it for you automatically. All users and roles in the same Amazon Web Services account automatically have access to use the default CMK. Note that if an Secrets Manager API call results in Amazon Web Services creating the account’s Amazon Web Services-managed CMK, it can result in a one-time significant delay in returning the result.\n\nIf the secret resides in a different Amazon Web Services account from the credentials calling an API that requires encryption or decryption of the secret value then you must create and use a custom Amazon Web Services KMS CMK because you can’t access the default CMK for the account using credentials from a different Amazon Web Services account. Store the ARN of the CMK in the secret when you create the secret or when you update it by including it in the KMSKeyId . If you call an API that must encrypt or decrypt SecretString or SecretBinary using credentials from a different account then the Amazon Web Services KMS key policy must grant cross-account access to that other account’s user or role for both the kms:GenerateDataKey and kms:Decrypt operations.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:CreateSecret\n\nkms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account default Amazon Web Services managed CMK for Secrets Manager.\n\nkms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account default Amazon Web Services managed CMK for Secrets Manager.\n\nsecretsmanager:TagResource - needed only if you include the Tags parameter.\n\nRelated operations\n\nTo delete a secret, use DeleteSecret .\n\nTo modify an existing secret, use UpdateSecret .\n\nTo create a new version of a secret, use PutSecretValue .\n\nTo retrieve the encrypted secure string and secure binary values, use GetSecretValue .\n\nTo retrieve all other details for a secret, use DescribeSecret . This does not include the encrypted secure string and secure binary values.\n\nTo retrieve the list of secret versions associated with the current secret, use DescribeSecret and examine the SecretVersionsToStages response value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-secret\n--name <value>\n[--client-request-token <value>]\n[--description <value>]\n[--kms-key-id <value>]\n[--secret-binary <value>]\n[--secret-string <value>]\n[--tags <value>]\n[--add-replica-regions <value>]\n[--force-overwrite-replica-secret | --no-force-overwrite-replica-secret]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--client-request-token <value>]",
        "[--description <value>]",
        "[--kms-key-id <value>]",
        "[--secret-binary <value>]",
        "[--secret-string <value>]",
        "[--tags <value>]",
        "[--add-replica-regions <value>]",
        "[--force-overwrite-replica-secret | --no-force-overwrite-replica-secret]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nSpecifies the friendly name of the new secret.\n\nThe secret name must be ASCII letters, digits, or the following characters : /_+=.@-\n\nNote\n\nDo not end your secret name with a hyphen followed by six characters. If you do so, you risk confusion and unexpected results when searching for a secret by partial ARN. Secrets Manager automatically adds a hyphen and six random characters at the end of the ARN.\n\n--client-request-token (string)\n\n(Optional) If you include SecretString or SecretBinary , then an initial version is created as part of the secret, and this parameter specifies a unique identifier for the new version.\n\nNote\n\nIf you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call this operation, then you can leave this parameter empty. The CLI or SDK generates a random UUID for you and includes it as the value for this parameter in the request. If you don’t use the SDK and instead generate a raw HTTP request to the Secrets Manager service endpoint, then you must generate a ClientRequestToken yourself for the new version and include the value in the request.\n\nThis value helps ensure idempotency. Secrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during a rotation. We recommend that you generate a UUID-type value to ensure uniqueness of your versions within the specified secret.\n\nIf the ClientRequestToken value isn’t already associated with a version of the secret then a new version of the secret is created.\n\nIf a version with this value already exists and the version SecretString and SecretBinary values are the same as those in the request, then the request is ignored.\n\nIf a version with this value already exists and that version’s SecretString and SecretBinary values are different from those in the request, then the request fails because you cannot modify an existing version. Instead, use PutSecretValue to create a new version.\n\nThis value becomes the VersionId of the new version.\n\n--description (string)\n\n(Optional) Specifies a user-provided description of the secret.\n\n--kms-key-id (string)\n\n(Optional) Specifies the ARN, Key ID, or alias of the Amazon Web Services KMS customer master key (CMK) to be used to encrypt the SecretString or SecretBinary values in the versions stored in this secret.\n\nYou can specify any of the supported ways to identify a Amazon Web Services KMS key ID. If you need to reference a CMK in a different account, you can use only the key ARN or the alias ARN.\n\nIf you don’t specify this value, then Secrets Manager defaults to using the Amazon Web Services account’s default CMK (the one named aws/secretsmanager ). If a Amazon Web Services KMS CMK with that name doesn’t yet exist, then Secrets Manager creates it for you automatically the first time it needs to encrypt a version’s SecretString or SecretBinary fields.\n\nWarning\n\nYou can use the account default CMK to encrypt and decrypt only if you call this operation using credentials from the same account that owns the secret. If the secret resides in a different account, then you must create a custom CMK and specify the ARN in this field.\n\n--secret-binary (blob)\n\n(Optional) Specifies binary data that you want to encrypt and store in the new version of the secret. To use this parameter in the command-line tools, we recommend that you store your binary data in a file and then use the appropriate technique for your tool to pass the contents of the file as a parameter.\n\nEither SecretString or SecretBinary must have a value, but not both. They cannot both be empty.\n\nThis parameter is not available using the Secrets Manager console. It can be accessed only by using the Amazon Web Services CLI or one of the Amazon Web Services SDKs.\n\n--secret-string (string)\n\n(Optional) Specifies text data that you want to encrypt and store in this new version of the secret.\n\nEither SecretString or SecretBinary must have a value, but not both. They cannot both be empty.\n\nIf you create a secret by using the Secrets Manager console then Secrets Manager puts the protected secret text in only the SecretString parameter. The Secrets Manager console stores the information as a JSON structure of key/value pairs that the Lambda rotation function knows how to parse.\n\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.\n\n--tags (list)\n\n(Optional) Specifies a list of user-defined tags that are attached to the secret. Each tag is a “Key” and “Value” pair of strings. This operation only appends tags to the existing list of tags. To remove tags, you must use UntagResource .\n\nWarning\n\nSecrets Manager tag key names are case sensitive. A tag with the key “ABC” is a different tag from one with key “abc”.\n\nIf you check tags in IAM policy Condition elements as part of your security strategy, then adding or removing a tag can change permissions. If the successful completion of this operation would result in you losing your permissions for this secret, then this operation is blocked and returns an Access Denied error.\n\nThis parameter requires a JSON text string argument. For information on how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters in the CLI User Guide . For example:\n\n[{\"Key\":\"CostCenter\",\"Value\":\"12345\"},{\"Key\":\"environment\",\"Value\":\"production\"}]\n\nIf your command-line tool or SDK requires quotation marks around the parameter, you should use single quotes to avoid confusion with the double quotes required in the JSON text.\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per secret—50\n\nMaximum key length—127 Unicode characters in UTF-8\n\nMaximum value length—255 Unicode characters in UTF-8\n\nTag keys and values are case sensitive.\n\nDo not use the aws: prefix in your tag names or values because Amazon Web Services reserves it for Amazon Web Services use. You can’t edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.\n\nIf you use your tagging schema across multiple services and resources, remember other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.\n\n(structure)\n\nA structure that contains information about a tag.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value associated with the key of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--add-replica-regions (list)\n\n(Optional) Add a list of regions to replicate secrets. Secrets Manager replicates the KMSKeyID objects to the list of regions specified in the parameter.\n\n(structure)\n\n(Optional) Custom type consisting of a Region (required) and the KmsKeyId which can be an ARN , Key ID , or Alias .\n\nRegion -> (string)\n\nDescribes a single instance of Region objects.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nShorthand Syntax:\n\nRegion=string,KmsKeyId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Region\": \"string\",\n    \"KmsKeyId\": \"string\"\n  }\n  ...\n]\n\n\n--force-overwrite-replica-secret | --no-force-overwrite-replica-secret (boolean)\n\n(Optional) If set, the replication overwrites a secret with the same name in the destination region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of the secret that you just created.\n\nNote\n\nSecrets Manager automatically adds several random characters to the name at the end of the ARN when you initially create a secret. This affects only the ARN and not the actual friendly name. This ensures that if you create a new secret with the same name as an old secret that you previously deleted, then users with access to the old secret don’t automatically get access to the new secret because the ARNs are different.\n\nName -> (string)\n\nThe friendly name of the secret that you just created.\n\nVersionId -> (string)\n\nThe unique identifier associated with the version of the secret you just created.\n\nReplicationStatus -> (list)\n\nDescribes a list of replication status objects as InProgress , Failed or InSync .\n\n(structure)\n\nA replication object consisting of a RegionReplicationStatus object and includes a Region, KMSKeyId, status, and status message.\n\nRegion -> (string)\n\nThe Region where replication occurs.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nStatus -> (string)\n\nThe status can be InProgress , Failed , or InSync .\n\nStatusMessage -> (string)\n\nStatus message such as “Secret with this name already exists in this region “.\n\nLastAccessedDate -> (timestamp)\n\nThe date that you last accessed the secret in the Region.",
      "command_examples": "Examples\n\nTo create a basic secret\n\nThe following example shows how to create a secret. The credentials stored in the encrypted secret value are retrieved from a file on disk named mycreds.json.\n\naws secretsmanager create-secret --name MyTestDatabaseSecret \\\n    --description \"My test database secret created with the CLI\" \\\n    --secret-string file://mycreds.json\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\"\n}\n"
    },
    {
      "command_name": "delete-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/delete-resource-policy.html",
      "command_description": "Description\n\nDeletes the resource-based permission policy attached to the secret.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:DeleteResourcePolicy\n\nRelated operations\n\nTo attach a resource policy to a secret, use PutResourcePolicy .\n\nTo retrieve the current resource-based policy attached to a secret, use GetResourcePolicy .\n\nTo list all of the currently available secrets, use ListSecrets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to delete the attached resource-based policy for. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret that the resource-based policy was deleted for.\n\nName -> (string)\n\nThe friendly name of the secret that the resource-based policy was deleted for.",
      "command_examples": "Examples\n\nTo delete the resource-based policy attached to a secret\n\nThe following example shows how to delete the resource-based policy that is attached to a secret. For more information, see Resource-based Policies in the Secrets Manager User Guide. .. Resource-based Policies: http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_overview.html#auth-and-access_resource-policies:\n\naws secretsmanager delete-resource-policy --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following.\n\n{\n    \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseMasterSecret-a1b2c3\",\n    \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "delete-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/delete-secret.html",
      "command_description": "Description\n\nDeletes an entire secret and all of the versions. You can optionally include a recovery window during which you can restore the secret. If you don’t specify a recovery window value, the operation defaults to 30 days. Secrets Manager attaches a DeletionDate stamp to the secret that specifies the end of the recovery window. At the end of the recovery window, Secrets Manager deletes the secret permanently.\n\nAt any time before recovery window ends, you can use RestoreSecret to remove the DeletionDate and cancel the deletion of the secret.\n\nYou cannot access the encrypted secret information in any secret scheduled for deletion. If you need to access that information, you must cancel the deletion with RestoreSecret and then retrieve the information.\n\nNote\n\nThere is no explicit operation to delete a version of a secret. Instead, remove all staging labels from the VersionStage field of a version. That marks the version as deprecated and allows Secrets Manager to delete it as needed. Versions without any staging labels do not show up in ListSecretVersionIds unless you specify IncludeDeprecated .\n\nThe permanent secret deletion at the end of the waiting period is performed as a background task with low priority. There is no guarantee of a specific time after the recovery window for the actual delete operation to occur.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:DeleteSecret\n\nRelated operations\n\nTo create a secret, use CreateSecret .\n\nTo cancel deletion of a version of a secret before the recovery window has expired, use RestoreSecret .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-secret\n--secret-id <value>\n[--recovery-window-in-days <value>]\n[--force-delete-without-recovery | --no-force-delete-without-recovery]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--recovery-window-in-days <value>]",
        "[--force-delete-without-recovery | --no-force-delete-without-recovery]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret to delete. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--recovery-window-in-days (long)\n\n(Optional) Specifies the number of days that Secrets Manager waits before Secrets Manager can delete the secret. You can’t use both this parameter and the ForceDeleteWithoutRecovery parameter in the same API call.\n\nThis value can range from 7 to 30 days with a default value of 30.\n\n--force-delete-without-recovery | --no-force-delete-without-recovery (boolean)\n\n(Optional) Specifies that the secret is to be deleted without any recovery window. You can’t use both this parameter and the RecoveryWindowInDays parameter in the same API call.\n\nAn asynchronous background process performs the actual deletion, so there can be a short delay before the operation completes. If you write code to delete and then immediately recreate a secret with the same name, ensure that your code includes appropriate back off and retry logic.\n\nWarning\n\nUse this parameter with caution. This parameter causes the operation to skip the normal waiting period before the permanent deletion that Amazon Web Services would normally impose with the RecoveryWindowInDays parameter. If you delete a secret with the ForceDeleteWithouRecovery parameter, then you have no opportunity to recover the secret. You lose the secret permanently.\n\nWarning\n\nIf you use this parameter and include a previously deleted or nonexistent secret, the operation does not return the error ResourceNotFoundException in order to correctly handle retries.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret that is now scheduled for deletion.\n\nName -> (string)\n\nThe friendly name of the secret currently scheduled for deletion.\n\nDeletionDate -> (timestamp)\n\nThe date and time after which this secret can be deleted by Secrets Manager and can no longer be restored. This value is the date and time of the delete request plus the number of days specified in RecoveryWindowInDays .",
      "command_examples": "Examples\n\nTo delete a secret\n\nThe following example shows how to delete a secret. The secret stays in your account in a deprecated and inaccessible state until the recovery window ends. After the date and time in the DeletionDate response field has passed, you can no longer recover this secret with restore-secret.\n\naws secretsmanager delete-secret --secret-id MyTestDatabaseSecret1 \\\n    --recovery-window-in-days 7\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"DeletionDate\": 1524085349.095\n}\n"
    },
    {
      "command_name": "describe-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/describe-secret.html",
      "command_description": "Description\n\nRetrieves the details of a secret. It does not include the encrypted fields. Secrets Manager only returns fields populated with a value in the response.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:DescribeSecret\n\nRelated operations\n\nTo create a secret, use CreateSecret .\n\nTo modify a secret, use UpdateSecret .\n\nTo retrieve the encrypted secret information in a version of the secret, use GetSecretValue .\n\nTo list all of the secrets in the Amazon Web Services account, use ListSecrets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-secret\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nThe identifier of the secret whose details you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret.\n\nName -> (string)\n\nThe user-provided friendly name of the secret.\n\nDescription -> (string)\n\nThe user-provided description of the secret.\n\nKmsKeyId -> (string)\n\nThe ARN or alias of the Amazon Web Services KMS customer master key (CMK) that’s used to encrypt the SecretString or SecretBinary fields in each version of the secret. If you don’t provide a key, then Secrets Manager defaults to encrypting the secret fields with the default Amazon Web Services KMS CMK (the one named awssecretsmanager ) for this account.\n\nRotationEnabled -> (boolean)\n\nSpecifies whether automatic rotation is enabled for this secret.\n\nTo enable rotation, use RotateSecret with AutomaticallyRotateAfterDays set to a value greater than 0. To disable rotation, use CancelRotateSecret .\n\nRotationLambdaARN -> (string)\n\nThe ARN of a Lambda function that’s invoked by Secrets Manager to rotate the secret either automatically per the schedule or manually by a call to RotateSecret .\n\nRotationRules -> (structure)\n\nA structure with the rotation configuration for this secret. This field is only populated if rotation is configured.\n\nAutomaticallyAfterDays -> (long)\n\nSpecifies the number of days between automatic scheduled rotations of the secret.\n\nSecrets Manager schedules the next rotation when the previous one is complete. Secrets Manager schedules the date by adding the rotation interval (number of days) to the actual date of the last rotation. The service chooses the hour within that 24-hour date window randomly. The minute is also chosen somewhat randomly, but weighted towards the top of the hour and influenced by a variety of factors that help distribute load.\n\nLastRotatedDate -> (timestamp)\n\nThe last date and time that the rotation process for this secret was invoked.\n\nThe most recent date and time that the Secrets Manager rotation process successfully completed. If the secret doesn’t rotate, Secrets Manager returns a null value.\n\nLastChangedDate -> (timestamp)\n\nThe last date and time that this secret was modified in any way.\n\nLastAccessedDate -> (timestamp)\n\nThe last date that this secret was accessed. This value is truncated to midnight of the date and therefore shows only the date, not the time.\n\nDeletedDate -> (timestamp)\n\nThis value exists if the secret is scheduled for deletion. Some time after the specified date and time, Secrets Manager deletes the secret and all of its versions.\n\nIf a secret is scheduled for deletion, then its details, including the encrypted secret information, is not accessible. To cancel a scheduled deletion and restore access, use RestoreSecret .\n\nTags -> (list)\n\nThe list of user-defined tags that are associated with the secret. To add tags to a secret, use TagResource . To remove tags, use UntagResource .\n\n(structure)\n\nA structure that contains information about a tag.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value associated with the key of the tag.\n\nVersionIdsToStages -> (map)\n\nA list of all of the currently assigned VersionStage staging labels and the VersionId that each is attached to. Staging labels are used to keep track of the different versions during the rotation process.\n\nNote\n\nA version that does not have any staging labels attached is considered deprecated and subject to deletion. Such versions are not included in this list.\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nOwningService -> (string)\n\nReturns the name of the service that created this secret.\n\nCreatedDate -> (timestamp)\n\nThe date you created the secret.\n\nPrimaryRegion -> (string)\n\nSpecifies the primary region for secret replication.\n\nReplicationStatus -> (list)\n\nDescribes a list of replication status objects as InProgress , Failed or InSync .``P``\n\n(structure)\n\nA replication object consisting of a RegionReplicationStatus object and includes a Region, KMSKeyId, status, and status message.\n\nRegion -> (string)\n\nThe Region where replication occurs.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nStatus -> (string)\n\nThe status can be InProgress , Failed , or InSync .\n\nStatusMessage -> (string)\n\nStatus message such as “Secret with this name already exists in this region “.\n\nLastAccessedDate -> (timestamp)\n\nThe date that you last accessed the secret in the Region.",
      "command_examples": "Examples\n\nTo retrieve the details of a secret\n\nThe following example shows how to get the details about a secret.\n\naws secretsmanager describe-secret --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-Ca8JGt\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"Description\": \"My test database secret\",\n  \"LastChangedDate\": 1523477145.729,\n  \"RotationEnabled\": true\n  \"RotationLambdaARN\": \"arn:aws:lambda:us-west-2:123456789012:function:MyTestRotationLambda\",\n  \"RotationRules\": {\n    \"AutomaticallyAfterDays\": 30\n  },\n  \"LastRotatedDate\": 1525747253.72\n  \"Tags\": [\n    {\n      \"Key\": \"SecondTag\",\n      \"Value\": \"AnotherValue\"\n    },\n    {\n      \"Key\": \"FirstTag\",\n      \"Value\": \"SomeValue\"\n    }\n  ],\n  \"VersionIdsToStages\": {\n    \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\": [\n      \"AWSPREVIOUS\"\n    ],\n    \"EXAMPLE2-90ab-cdef-fedc-ba987EXAMPLE\": [\n      \"AWSCURRENT\"\n    ]\n  }\n}\n"
    },
    {
      "command_name": "get-random-password",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/get-random-password.html",
      "command_description": "Description\n\nGenerates a random password of the specified complexity. This operation is intended for use in the Lambda rotation function. Per best practice, we recommend that you specify the maximum length and include every character type that the system you are generating a password for can support.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:GetRandomPassword\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-random-password\n[--password-length <value>]\n[--exclude-characters <value>]\n[--exclude-numbers | --no-exclude-numbers]\n[--exclude-punctuation | --no-exclude-punctuation]\n[--exclude-uppercase | --no-exclude-uppercase]\n[--exclude-lowercase | --no-exclude-lowercase]\n[--include-space | --no-include-space]\n[--require-each-included-type | --no-require-each-included-type]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--password-length <value>]",
        "[--exclude-characters <value>]",
        "[--exclude-numbers | --no-exclude-numbers]",
        "[--exclude-punctuation | --no-exclude-punctuation]",
        "[--exclude-uppercase | --no-exclude-uppercase]",
        "[--exclude-lowercase | --no-exclude-lowercase]",
        "[--include-space | --no-include-space]",
        "[--require-each-included-type | --no-require-each-included-type]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--password-length (long)\n\nThe desired length of the generated password. The default value if you do not include this parameter is 32 characters.\n\n--exclude-characters (string)\n\nA string that includes characters that should not be included in the generated password. The default is that all characters from the included sets can be used.\n\n--exclude-numbers | --no-exclude-numbers (boolean)\n\nSpecifies that the generated password should not include digits. The default if you do not include this switch parameter is that digits can be included.\n\n--exclude-punctuation | --no-exclude-punctuation (boolean)\n\nSpecifies that the generated password should not include punctuation characters. The default if you do not include this switch parameter is that punctuation characters can be included.\n\nThe following are the punctuation characters that can be included in the generated password if you don’t explicitly exclude them with ExcludeCharacters or ExcludePunctuation :\n\n! \" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\ ] ^ _ ` { | } ~\n\n--exclude-uppercase | --no-exclude-uppercase (boolean)\n\nSpecifies that the generated password should not include uppercase letters. The default if you do not include this switch parameter is that uppercase letters can be included.\n\n--exclude-lowercase | --no-exclude-lowercase (boolean)\n\nSpecifies that the generated password should not include lowercase letters. The default if you do not include this switch parameter is that lowercase letters can be included.\n\n--include-space | --no-include-space (boolean)\n\nSpecifies that the generated password can include the space character. The default if you do not include this switch parameter is that the space character is not included.\n\n--require-each-included-type | --no-require-each-included-type (boolean)\n\nA boolean value that specifies whether the generated password must include at least one of every allowed character type. The default value is True and the operation requires at least one of every character type.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRandomPassword -> (string)\n\nA string with the generated password.",
      "command_examples": "Examples\n\nTo generate a random password\n\nThe following example shows how to request a randomly generated password. This example includes the optional flags to require spaces and at least one character of each included type. It specifies a length of 20 characters.\n\naws secretsmanager get-random-password --include-space --password-length 20 --require-each-included-type\n\n\nThe output shows the following:\n\n{\n  \"RandomPassword\": \"N+Z43a,>vx7j O8^*<8i3\"\n}\n"
    },
    {
      "command_name": "get-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/get-resource-policy.html",
      "command_description": "Description\n\nRetrieves the JSON text of the resource-based policy document attached to the specified secret. The JSON request string input and response output displays formatted code with white space and line breaks for better readability. Submit your input as a single line JSON string.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:GetResourcePolicy\n\nRelated operations\n\nTo attach a resource policy to a secret, use PutResourcePolicy .\n\nTo delete the resource-based policy attached to a secret, use DeleteResourcePolicy .\n\nTo list all of the currently available secrets, use ListSecrets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resource-policy\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to retrieve the attached resource-based policy for. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret that the resource-based policy was retrieved for.\n\nName -> (string)\n\nThe friendly name of the secret that the resource-based policy was retrieved for.\n\nResourcePolicy -> (string)\n\nA JSON-formatted string that describes the permissions that are associated with the attached secret. These permissions are combined with any permissions that are associated with the user or role that attempts to access this secret. The combined permissions specify who can access the secret and what actions they can perform. For more information, see Authentication and Access Control for Amazon Web Services Secrets Manager in the Amazon Web Services Secrets Manager User Guide .",
      "command_examples": "Examples\n\nTo retrieve the resource-based policy attached to a secret\n\nThe following example shows how to retrieve the resource-based policy that is attached to a secret. For more information, see Resource-based Policies in the Secrets Manager User Guide. .. Resource-based Policies: http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_overview.html#auth-and-access_resource-policies\n\naws secretsmanager get-resource-policy --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following. It is shown here word-wrapped and with extra white-space removed for clarity.\n\n{\n    \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n    \"Name\": \"MyTestDatabaseSecret\",\n    \"ResourcePolicy\": \"{\\n\\\"Version\\\":\\\"2012-10-17\\\",\\n\\\"Statement\\\":[{\\n\\\"Effect\\\":\\\"Allow\\\",\\n\n                       \\\"Principal\\\":{\\n\\\"AWS\\\":\\\"arn:aws:iam::123456789012:root\\\"\\n},\\n\\\"Action\\\":\n                       \\\"secretsmanager:GetSecretValue\\\",\\n\\\"Resource\\\":\\\"*\\\"\\n}]\\n}\"\n}\n"
    },
    {
      "command_name": "get-secret-value",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/get-secret-value.html",
      "command_description": "Description\n\nRetrieves the contents of the encrypted fields SecretString or SecretBinary from the specified version of a secret, whichever contains content.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:GetSecretValue\n\nkms:Decrypt - required only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account’s default Amazon Web Services managed CMK for Secrets Manager.\n\nRelated operations\n\nTo create a new version of the secret with different encrypted information, use PutSecretValue .\n\nTo retrieve the non-encrypted details for the secret, use DescribeSecret .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-secret-value\n--secret-id <value>\n[--version-id <value>]\n[--version-stage <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--version-id <value>]",
        "[--version-stage <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret containing the version that you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--version-id (string)\n\nSpecifies the unique identifier of the version of the secret that you want to retrieve. If you specify both this parameter and VersionStage , the two parameters must refer to the same secret version. If you don’t specify either a VersionStage or VersionId then the default is to perform the operation on the version with the VersionStage value of AWSCURRENT .\n\nThis value is typically a UUID-type value with 32 hexadecimal digits.\n\n--version-stage (string)\n\nSpecifies the secret version that you want to retrieve by the staging label attached to the version.\n\nStaging labels are used to keep track of different versions during the rotation process. If you specify both this parameter and VersionId , the two parameters must refer to the same secret version . If you don’t specify either a VersionStage or VersionId , then the default is to perform the operation on the version with the VersionStage value of AWSCURRENT .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret.\n\nName -> (string)\n\nThe friendly name of the secret.\n\nVersionId -> (string)\n\nThe unique identifier of this version of the secret.\n\nSecretBinary -> (blob)\n\nThe decrypted part of the protected secret information that was originally provided as binary data in the form of a byte array. The response parameter represents the binary data as a base64-encoded string.\n\nThis parameter is not used if the secret is created by the Secrets Manager console.\n\nIf you store custom information in this field of the secret, then you must code your Lambda rotation function to parse and interpret whatever you store in the SecretString or SecretBinary fields.\n\nSecretString -> (string)\n\nThe decrypted part of the protected secret information that was originally provided as a string.\n\nIf you create this secret by using the Secrets Manager console then only the SecretString parameter contains data. Secrets Manager stores the information as a JSON structure of key/value pairs that the Lambda rotation function knows how to parse.\n\nIf you store custom information in the secret by using the CreateSecret , UpdateSecret , or PutSecretValue API operations instead of the Secrets Manager console, or by using the Other secret type in the console, then you must code your Lambda rotation function to parse and interpret those values.\n\nVersionStages -> (list)\n\nA list of all of the staging labels currently attached to this version of the secret.\n\n(string)\n\nCreatedDate -> (timestamp)\n\nThe date and time that this version of the secret was created.",
      "command_examples": "Examples\n\nTo retrieve the encrypted secret value of a secret\n\nThe following example shows how to retrieve the secret string value from the version of the secret that has the AWSPREVIOUS staging label attached. If you want to retrieve the AWSCURRENT version of the secret, then you can omit the --version-stage` parameter because it defaults to ``AWSCURRENT.\n\naws secretsmanager get-secret-value --secret-id MyTestDatabaseSecret --version-stage AWSPREVIOUS\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\",\n  \"SecretString\": \"{\\n  \\\"username\\\":\\\"david\\\",\\n  \\\"password\\\":\\\"BnQw&XDWgaEeT9XGTT29\\\"\\n}\\n\",\n  \"VersionStages\": [\n    \"AWSPREVIOUS\"\n  ],\n  \"CreatedDate\": 1523477145.713\n}\n"
    },
    {
      "command_name": "list-secret-version-ids",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/list-secret-version-ids.html",
      "command_description": "Description\n\nLists all of the versions attached to the specified secret. The output does not include the SecretString or SecretBinary fields. By default, the list includes only versions that have at least one staging label in VersionStage attached.\n\nNote\n\nAlways check the NextToken response parameter when calling any of the List* operations. These operations can occasionally return an empty or shorter than expected list of results even when there more results become available. When this happens, the NextToken response parameter contains a value to pass to the next call to the same API to request the next part of the list.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:ListSecretVersionIds\n\nRelated operations\n\nTo list the secrets in an account, use ListSecrets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-secret-version-ids\n--secret-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--include-deprecated | --no-include-deprecated]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--include-deprecated | --no-include-deprecated]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nThe identifier for the secret containing the versions you want to list. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--max-results (integer)\n\n(Optional) Limits the number of results you want to include in the response. If you don’t include this parameter, it defaults to a value that’s specific to the operation. If additional items exist beyond the maximum you specify, the NextToken response element is present and has a value (isn’t null). Include that value as the NextToken request parameter in the next call to the operation to get the next part of the results. Note that Secrets Manager might return fewer results than the maximum even when there are more results available. You should check NextToken after every operation to ensure that you receive all of the results.\n\n--next-token (string)\n\n(Optional) Use this parameter in a request if you receive a NextToken response in a previous request indicating there’s more output available. In a subsequent call, set it to the value of the previous call NextToken response to indicate where the output should continue from.\n\n--include-deprecated | --no-include-deprecated (boolean)\n\n(Optional) Specifies that you want the results to include versions that do not have any staging labels attached to them. Such versions are considered deprecated and are subject to deletion by Secrets Manager as needed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVersions -> (list)\n\nThe list of the currently available versions of the specified secret.\n\n(structure)\n\nA structure that contains information about one version of a secret.\n\nVersionId -> (string)\n\nThe unique version identifier of this version of the secret.\n\nVersionStages -> (list)\n\nAn array of staging labels that are currently associated with this version of the secret.\n\n(string)\n\nLastAccessedDate -> (timestamp)\n\nThe date that this version of the secret was last accessed. Note that the resolution of this field is at the date level and does not include the time.\n\nCreatedDate -> (timestamp)\n\nThe date and time this version of the secret was created.\n\nKmsKeyIds -> (list)\n\nThe KMS keys used to encrypt the secret version.\n\n(string)\n\nNextToken -> (string)\n\nIf present in the response, this value indicates that there’s more output available than included in the current response. This can occur even when the response includes no values at all, such as when you ask for a filtered view of a very long list. Use this value in the NextToken request parameter in a subsequent call to the operation to continue processing and get the next part of the output. You should repeat this until the NextToken response element comes back empty (as null ).\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) for the secret.\n\nNote\n\nSecrets Manager automatically adds several random characters to the name at the end of the ARN when you initially create a secret. This affects only the ARN and not the actual friendly name. This ensures that if you create a new secret with the same name as an old secret that you previously deleted, then users with access to the old secret don’t automatically get access to the new secret because the ARNs are different.\n\nName -> (string)\n\nThe friendly name of the secret.",
      "command_examples": "Examples\n\nTo list all of the secret versions associated with a secret\n\nThe following example shows how to retrieve a list of all of the versions of a secret, including those without any staging labels.\n\naws secretsmanager list-secret-version-ids --secret-id MyTestDatabaseSecret \\\n  --include-deprecated\n\n\nThe output shows the following:\n\n{\n  \"Versions\": [\n    {\n      \"VersionId\": \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\",\n      \"VersionStages\": [\n        \"AWSPREVIOUS\"\n      ],\n      \"CreatedDate\": 1523477145.713\n    },\n    {\n      \"VersionId\": \"EXAMPLE2-90ab-cdef-fedc-ba987EXAMPLE\",\n      \"VersionStages\": [\n        \"AWSCURRENT\"\n      ],\n     \"CreatedDate\": 1523486221.391\n    },\n    {\n      \"CreatedDate\": 1.51197446236E9,\n      \"VersionId\": \"EXAMPLE3-90ab-cdef-fedc-ba987EXAMPLE;\"\n    }\n  ],\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "list-secrets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/list-secrets.html",
      "command_description": "Description\n\nLists all of the secrets that are stored by Secrets Manager in the Amazon Web Services account. To list the versions currently stored for a specific secret, use ListSecretVersionIds . The encrypted fields SecretString and SecretBinary are not included in the output. To get that information, call the GetSecretValue operation.\n\nNote\n\nAlways check the NextToken response parameter when calling any of the List* operations. These operations can occasionally return an empty or shorter than expected list of results even when there more results become available. When this happens, the NextToken response parameter contains a value to pass to the next call to the same API to request the next part of the list.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:ListSecrets\n\nRelated operations\n\nTo list the versions attached to a secret, use ListSecretVersionIds .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-secrets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SecretList",
      "command_synopsis": "Synopsis\n  list-secrets\n[--filters <value>]\n[--sort-order <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--sort-order <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nLists the secret request filters.\n\n(structure)\n\nAllows you to add filters when you use the search function in Secrets Manager.\n\nKey -> (string)\n\nFilters your list of secrets by a specific key.\n\nValues -> (list)\n\nFilters your list of secrets by a specific value.\n\nYou can prefix your search value with an exclamation mark (! ) in order to perform negation filters.\n\n(string)\n\nShorthand Syntax:\n\nKey=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"description\"|\"name\"|\"tag-key\"|\"tag-value\"|\"primary-region\"|\"all\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--sort-order (string)\n\nLists secrets in the requested order.\n\nPossible values:\n\nasc\n\ndesc\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecretList -> (list)\n\nA list of the secrets in the account.\n\n(structure)\n\nA structure that contains the details about a secret. It does not include the encrypted SecretString and SecretBinary values. To get those values, use the GetSecretValue operation.\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of the secret.\n\nFor more information about ARNs in Secrets Manager, see Policy Resources in the Amazon Web Services Secrets Manager User Guide .\n\nName -> (string)\n\nThe friendly name of the secret. You can use forward slashes in the name to represent a path hierarchy. For example, /prod/databases/dbserver1 could represent the secret for a server named dbserver1 in the folder databases in the folder prod .\n\nDescription -> (string)\n\nThe user-provided description of the secret.\n\nKmsKeyId -> (string)\n\nThe ARN or alias of the Amazon Web Services KMS customer master key (CMK) used to encrypt the SecretString and SecretBinary fields in each version of the secret. If you don’t provide a key, then Secrets Manager defaults to encrypting the secret fields with the default KMS CMK, the key named awssecretsmanager , for this account.\n\nRotationEnabled -> (boolean)\n\nIndicates whether automatic, scheduled rotation is enabled for this secret.\n\nRotationLambdaARN -> (string)\n\nThe ARN of an Amazon Web Services Lambda function invoked by Secrets Manager to rotate and expire the secret either automatically per the schedule or manually by a call to RotateSecret .\n\nRotationRules -> (structure)\n\nA structure that defines the rotation configuration for the secret.\n\nAutomaticallyAfterDays -> (long)\n\nSpecifies the number of days between automatic scheduled rotations of the secret.\n\nSecrets Manager schedules the next rotation when the previous one is complete. Secrets Manager schedules the date by adding the rotation interval (number of days) to the actual date of the last rotation. The service chooses the hour within that 24-hour date window randomly. The minute is also chosen somewhat randomly, but weighted towards the top of the hour and influenced by a variety of factors that help distribute load.\n\nLastRotatedDate -> (timestamp)\n\nThe most recent date and time that the Secrets Manager rotation process was successfully completed. This value is null if the secret hasn’t ever rotated.\n\nLastChangedDate -> (timestamp)\n\nThe last date and time that this secret was modified in any way.\n\nLastAccessedDate -> (timestamp)\n\nThe last date that this secret was accessed. This value is truncated to midnight of the date and therefore shows only the date, not the time.\n\nDeletedDate -> (timestamp)\n\nThe date and time the deletion of the secret occurred. Not present on active secrets. The secret can be recovered until the number of days in the recovery window has passed, as specified in the RecoveryWindowInDays parameter of the DeleteSecret operation.\n\nTags -> (list)\n\nThe list of user-defined tags associated with the secret. To add tags to a secret, use TagResource . To remove tags, use UntagResource .\n\n(structure)\n\nA structure that contains information about a tag.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value associated with the key of the tag.\n\nSecretVersionsToStages -> (map)\n\nA list of all of the currently assigned SecretVersionStage staging labels and the SecretVersionId attached to each one. Staging labels are used to keep track of the different versions during the rotation process.\n\nNote\n\nA version that does not have any SecretVersionStage is considered deprecated and subject to deletion. Such versions are not included in this list.\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nOwningService -> (string)\n\nReturns the name of the service that created the secret.\n\nCreatedDate -> (timestamp)\n\nThe date and time when a secret was created.\n\nPrimaryRegion -> (string)\n\nThe Region where Secrets Manager originated the secret.\n\nNextToken -> (string)\n\nIf present in the response, this value indicates that there’s more output available than included in the current response. This can occur even when the response includes no values at all, such as when you ask for a filtered view of a very long list. Use this value in the NextToken request parameter in a subsequent call to the operation to continue processing and get the next part of the output. You should repeat this until the NextToken response element comes back empty (as null ).",
      "command_examples": "Examples\n\nTo list the secrets in your account\n\nThe following example shows how to list all of the secrets in your account.\n\naws secretsmanager list-secrets\n\n\nThe output shows the following:\n\n{\n  \"SecretList\": [\n    {\n      \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n      \"Name\": \"MyTestDatabaseSecret\",\n      \"Description\": \"My test database secret\",\n      \"LastChangedDate\": 1523477145.729,\n      \"SecretVersionsToStages\": {\n        \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\": [\n          \"AWSCURRENT\"\n        ]\n      }\n    },\n    {\n      \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret1-d4e5f6\",\n      \"Name\": \"MyTestDatabaseSecret1\",\n      \"Description\": \"Another secret created for a different database\",\n      \"LastChangedDate\": 1523482025.685,\n      \"SecretVersionsToStages\": {\n        \"EXAMPLE2-90ab-cdef-fedc-ba987EXAMPLE\": [\n          \"AWSCURRENT\"\n        ]\n      }\n    }\n  ]\n}\n"
    },
    {
      "command_name": "put-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/put-resource-policy.html",
      "command_description": "Description\n\nAttaches the contents of the specified resource-based permission policy to a secret. A resource-based policy is optional. Alternatively, you can use IAM identity-based policies that specify the secret’s Amazon Resource Name (ARN) in the policy statement’s Resources element. You can also use a combination of both identity-based and resource-based policies. The affected users and roles receive the permissions that are permitted by all of the relevant policies. For more information, see Using Resource-Based Policies for Amazon Web Services Secrets Manager . For the complete description of the Amazon Web Services policy syntax and grammar, see IAM JSON Policy Reference in the IAM User Guide .\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:PutResourcePolicy\n\nRelated operations\n\nTo retrieve the resource policy attached to a secret, use GetResourcePolicy .\n\nTo delete the resource-based policy attached to a secret, use DeleteResourcePolicy .\n\nTo list all of the currently available secrets, use ListSecrets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-resource-policy\n--secret-id <value>\n--resource-policy <value>\n[--block-public-policy | --no-block-public-policy]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--resource-policy <value>",
        "[--block-public-policy | --no-block-public-policy]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to attach the resource-based policy. You can specify either the ARN or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--resource-policy (string)\n\nA JSON-formatted string constructed according to the grammar and syntax for an Amazon Web Services resource-based policy. The policy in the string identifies who can access or manage this secret and its versions. For information on how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters in the CLI User Guide .\n\n--block-public-policy | --no-block-public-policy (boolean)\n\n(Optional) If you set the parameter, BlockPublicPolicy to true, then you block resource-based policies that allow broad access to the secret.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret retrieved by the resource-based policy.\n\nName -> (string)\n\nThe friendly name of the secret retrieved by the resource-based policy.",
      "command_examples": "Examples\n\nTo add a resource-based policy to a secret\n\nThe following example shows how to add a resource-based policy to a secret. The policy is read from a file on disk and must contain a valid JSON policy document. For more information, see Resource-based Policies in the Secrets Manager User Guide. .. Resource-based Policies: http://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_overview.html#auth-and-access_resource-policies:\n\naws secretsmanager put-resource-policy --secret-id MyTestDatabaseMasterSecret \\\n    --resource-policy file://mysecretpolicy.json\n\n\nThe output shows the following:\n\n{\n    \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n    \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "put-secret-value",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/put-secret-value.html",
      "command_description": "Description\n\nStores a new encrypted secret value in the specified secret. To do this, the operation creates a new version and attaches it to the secret. The version can contain a new SecretString value or a new SecretBinary value. You can also specify the staging labels that are initially attached to the new version.\n\nWe recommend you avoid calling PutSecretValue at a sustained rate of more than once every 10 minutes. When you update the secret value, Secrets Manager creates a new version of the secret. Secrets Manager removes outdated versions when there are more than 100, but it does not remove versions created less than 24 hours ago. If you call PutSecretValue more than once every 10 minutes, you create more versions than Secrets Manager removes, and you will reach the quota for secret versions.\n\nIf this operation creates the first version for the secret then Secrets Manager automatically attaches the staging label AWSCURRENT to the new version.\n\nIf you do not specify a value for VersionStages then Secrets Manager automatically moves the staging label AWSCURRENT to this new version.\n\nIf this operation moves the staging label AWSCURRENT from another version to this version, then Secrets Manager also automatically moves the staging label AWSPREVIOUS to the version that AWSCURRENT was removed from.\n\nThis operation is idempotent. If a version with a VersionId with the same value as the ClientRequestToken parameter already exists and you specify the same secret data, the operation succeeds but does nothing. However, if the secret data is different, then the operation fails because you cannot modify an existing version; you can only create new ones.\n\nNote\n\nIf you call an operation to encrypt or decrypt the SecretString or SecretBinary for a secret in the same account as the calling user and that secret doesn’t specify a Amazon Web Services KMS encryption key, Secrets Manager uses the account’s default Amazon Web Services managed customer master key (CMK) with the alias aws/secretsmanager . If this key doesn’t already exist in your account then Secrets Manager creates it for you automatically. All users and roles in the same Amazon Web Services account automatically have access to use the default CMK. Note that if an Secrets Manager API call results in Amazon Web Services creating the account’s Amazon Web Services-managed CMK, it can result in a one-time significant delay in returning the result.\n\nIf the secret resides in a different Amazon Web Services account from the credentials calling an API that requires encryption or decryption of the secret value then you must create and use a custom Amazon Web Services KMS CMK because you can’t access the default CMK for the account using credentials from a different Amazon Web Services account. Store the ARN of the CMK in the secret when you create the secret or when you update it by including it in the KMSKeyId . If you call an API that must encrypt or decrypt SecretString or SecretBinary using credentials from a different account then the Amazon Web Services KMS key policy must grant cross-account access to that other account’s user or role for both the kms:GenerateDataKey and kms:Decrypt operations.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:PutSecretValue\n\nkms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account’s default Amazon Web Services managed CMK for Secrets Manager.\n\nRelated operations\n\nTo retrieve the encrypted value you store in the version of a secret, use GetSecretValue .\n\nTo create a secret, use CreateSecret .\n\nTo get the details for a secret, use DescribeSecret .\n\nTo list the versions attached to a secret, use ListSecretVersionIds .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-secret-value\n--secret-id <value>\n[--client-request-token <value>]\n[--secret-binary <value>]\n[--secret-string <value>]\n[--version-stages <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--client-request-token <value>]",
        "[--secret-binary <value>]",
        "[--secret-string <value>]",
        "[--version-stages <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--client-request-token (string)\n\n(Optional) Specifies a unique identifier for the new version of the secret.\n\nNote\n\nIf you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call this operation, then you can leave this parameter empty. The CLI or SDK generates a random UUID for you and includes that in the request. If you don’t use the SDK and instead generate a raw HTTP request to the Secrets Manager service endpoint, then you must generate a ClientRequestToken yourself for new versions and include that value in the request.\n\nThis value helps ensure idempotency. Secrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during the Lambda rotation function’s processing. We recommend that you generate a UUID-type value to ensure uniqueness within the specified secret.\n\nIf the ClientRequestToken value isn’t already associated with a version of the secret then a new version of the secret is created.\n\nIf a version with this value already exists and that version’s SecretString or SecretBinary values are the same as those in the request then the request is ignored (the operation is idempotent).\n\nIf a version with this value already exists and the version of the SecretString and SecretBinary values are different from those in the request then the request fails because you cannot modify an existing secret version. You can only create new versions to store new secret values.\n\nThis value becomes the VersionId of the new version.\n\n--secret-binary (blob)\n\n(Optional) Specifies binary data that you want to encrypt and store in the new version of the secret. To use this parameter in the command-line tools, we recommend that you store your binary data in a file and then use the appropriate technique for your tool to pass the contents of the file as a parameter. Either SecretBinary or SecretString must have a value, but not both. They cannot both be empty.\n\nThis parameter is not accessible if the secret using the Secrets Manager console.\n\n--secret-string (string)\n\n(Optional) Specifies text data that you want to encrypt and store in this new version of the secret. Either SecretString or SecretBinary must have a value, but not both. They cannot both be empty.\n\nIf you create this secret by using the Secrets Manager console then Secrets Manager puts the protected secret text in only the SecretString parameter. The Secrets Manager console stores the information as a JSON structure of key/value pairs that the default Lambda rotation function knows how to parse.\n\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.\n\n--version-stages (list)\n\n(Optional) Specifies a list of staging labels that are attached to this version of the secret. These staging labels are used to track the versions through the rotation process by the Lambda rotation function.\n\nA staging label must be unique to a single version of the secret. If you specify a staging label that’s already associated with a different version of the same secret then that staging label is automatically removed from the other version and attached to this version.\n\nIf you do not specify a value for VersionStages then Secrets Manager automatically moves the staging label AWSCURRENT to this new version.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) for the secret for which you just created a version.\n\nName -> (string)\n\nThe friendly name of the secret for which you just created or updated a version.\n\nVersionId -> (string)\n\nThe unique identifier of the version of the secret you just created or updated.\n\nVersionStages -> (list)\n\nThe list of staging labels that are currently attached to this version of the secret. Staging labels are used to track a version as it progresses through the secret rotation process.\n\n(string)",
      "command_examples": "Examples\n\nTo store a secret value in a new version of a secret\n\nThe following example shows how to create a new version of the secret. Alternatively, you can use the update-secret command.\n\naws secretsmanager put-secret-value --secret-id MyTestDatabaseSecret \\\n  --secret-string file://mycreds.json\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:128716708097:secret:MyTestDatabaseSecret-Ca8JGt\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"dd47d3af-7095-4da5-a267-11707c060178\",\n  \"VersionStages\": [\n    \"AWSCURRENT\"\n  ]\n}\n"
    },
    {
      "command_name": "remove-regions-from-replication",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/remove-regions-from-replication.html",
      "command_description": "Description\n\nRemove regions from replication.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-regions-from-replication\n--secret-id <value>\n--remove-replica-regions <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--remove-replica-regions <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nRemove a secret by SecretId from replica Regions.\n\n--remove-replica-regions (list)\n\nRemove replication from specific Regions.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe secret ARN removed from replication regions.\n\nReplicationStatus -> (list)\n\nDescribes the remaining replication status after you remove regions from the replication list.\n\n(structure)\n\nA replication object consisting of a RegionReplicationStatus object and includes a Region, KMSKeyId, status, and status message.\n\nRegion -> (string)\n\nThe Region where replication occurs.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nStatus -> (string)\n\nThe status can be InProgress , Failed , or InSync .\n\nStatusMessage -> (string)\n\nStatus message such as “Secret with this name already exists in this region “.\n\nLastAccessedDate -> (timestamp)\n\nThe date that you last accessed the secret in the Region."
    },
    {
      "command_name": "replicate-secret-to-regions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/replicate-secret-to-regions.html",
      "command_description": "Description\n\nConverts an existing secret to a multi-Region secret and begins replication the secret to a list of new regions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  replicate-secret-to-regions\n--secret-id <value>\n--add-replica-regions <value>\n[--force-overwrite-replica-secret | --no-force-overwrite-replica-secret]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--add-replica-regions <value>",
        "[--force-overwrite-replica-secret | --no-force-overwrite-replica-secret]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nUse the Secret Id to replicate a secret to regions.\n\n--add-replica-regions (list)\n\nAdd Regions to replicate the secret.\n\n(structure)\n\n(Optional) Custom type consisting of a Region (required) and the KmsKeyId which can be an ARN , Key ID , or Alias .\n\nRegion -> (string)\n\nDescribes a single instance of Region objects.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nShorthand Syntax:\n\nRegion=string,KmsKeyId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Region\": \"string\",\n    \"KmsKeyId\": \"string\"\n  }\n  ...\n]\n\n\n--force-overwrite-replica-secret | --no-force-overwrite-replica-secret (boolean)\n\n(Optional) If set, Secrets Manager replication overwrites a secret with the same name in the destination region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nReplicate a secret based on the ReplicaRegionType > consisting of a Region(required) and a KMSKeyId (optional) which can be the ARN, KeyID, or Alias.\n\nReplicationStatus -> (list)\n\nDescribes the secret replication status as PENDING , SUCCESS or FAIL .\n\n(structure)\n\nA replication object consisting of a RegionReplicationStatus object and includes a Region, KMSKeyId, status, and status message.\n\nRegion -> (string)\n\nThe Region where replication occurs.\n\nKmsKeyId -> (string)\n\nCan be an ARN , Key ID , or Alias .\n\nStatus -> (string)\n\nThe status can be InProgress , Failed , or InSync .\n\nStatusMessage -> (string)\n\nStatus message such as “Secret with this name already exists in this region “.\n\nLastAccessedDate -> (timestamp)\n\nThe date that you last accessed the secret in the Region."
    },
    {
      "command_name": "restore-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/restore-secret.html",
      "command_description": "Description\n\nCancels the scheduled deletion of a secret by removing the DeletedDate time stamp. This makes the secret accessible to query once again.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:RestoreSecret\n\nRelated operations\n\nTo delete a secret, use DeleteSecret .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  restore-secret\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to restore from a previously scheduled deletion. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret that was restored.\n\nName -> (string)\n\nThe friendly name of the secret that was restored.",
      "command_examples": "Examples\n\nTo restore a previously deleted secret\n\nThe following example shows how to restore a secret that you previously scheduled for deletion.\n\naws secretsmanager restore-secret --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "rotate-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/rotate-secret.html",
      "command_description": "Description\n\nConfigures and starts the asynchronous process of rotating this secret. If you include the configuration parameters, the operation sets those values for the secret and then immediately starts a rotation. If you do not include the configuration parameters, the operation starts a rotation with the values already stored in the secret. After the rotation completes, the protected service and its clients all use the new version of the secret.\n\nThis required configuration information includes the ARN of an Amazon Web Services Lambda function and optionally, the time between scheduled rotations. The Lambda rotation function creates a new version of the secret and creates or updates the credentials on the protected service to match. After testing the new credentials, the function marks the new secret with the staging label AWSCURRENT so that your clients all immediately begin to use the new version. For more information about rotating secrets and how to configure a Lambda function to rotate the secrets for your protected service, see Rotating Secrets in Amazon Web Services Secrets Manager in the Amazon Web Services Secrets Manager User Guide .\n\nSecrets Manager schedules the next rotation when the previous one completes. Secrets Manager schedules the date by adding the rotation interval (number of days) to the actual date of the last rotation. The service chooses the hour within that 24-hour date window randomly. The minute is also chosen somewhat randomly, but weighted towards the top of the hour and influenced by a variety of factors that help distribute load.\n\nThe rotation function must end with the versions of the secret in one of two states:\n\nThe AWSPENDING and AWSCURRENT staging labels are attached to the same version of the secret, or\n\nThe AWSPENDING staging label is not attached to any version of the secret.\n\nIf the AWSPENDING staging label is present but not attached to the same version as AWSCURRENT then any later invocation of RotateSecret assumes that a previous rotation request is still in progress and returns an error.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:RotateSecret\n\nlambda:InvokeFunction (on the function specified in the secret’s metadata)\n\nRelated operations\n\nTo list the secrets in your account, use ListSecrets .\n\nTo get the details for a version of a secret, use DescribeSecret .\n\nTo create a new version of a secret, use CreateSecret .\n\nTo attach staging labels to or remove staging labels from a version of a secret, use UpdateSecretVersionStage .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  rotate-secret\n--secret-id <value>\n[--client-request-token <value>]\n[--rotation-lambda-arn <value>]\n[--rotation-rules <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--client-request-token <value>]",
        "[--rotation-lambda-arn <value>]",
        "[--rotation-rules <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to rotate. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--client-request-token (string)\n\n(Optional) Specifies a unique identifier for the new version of the secret that helps ensure idempotency.\n\nIf you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call this operation, then you can leave this parameter empty. The CLI or SDK generates a random UUID for you and includes that in the request for this parameter. If you don’t use the SDK and instead generate a raw HTTP request to the Secrets Manager service endpoint, then you must generate a ClientRequestToken yourself for new versions and include that value in the request.\n\nYou only need to specify your own value if you implement your own retry logic and want to ensure that a given secret is not created twice. We recommend that you generate a UUID-type value to ensure uniqueness within the specified secret.\n\nSecrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during the function’s processing. This value becomes the VersionId of the new version.\n\n--rotation-lambda-arn (string)\n\n(Optional) Specifies the ARN of the Lambda function that can rotate the secret.\n\n--rotation-rules (structure)\n\nA structure that defines the rotation configuration for this secret.\n\nAutomaticallyAfterDays -> (long)\n\nSpecifies the number of days between automatic scheduled rotations of the secret.\n\nSecrets Manager schedules the next rotation when the previous one is complete. Secrets Manager schedules the date by adding the rotation interval (number of days) to the actual date of the last rotation. The service chooses the hour within that 24-hour date window randomly. The minute is also chosen somewhat randomly, but weighted towards the top of the hour and influenced by a variety of factors that help distribute load.\n\nShorthand Syntax:\n\nAutomaticallyAfterDays=long\n\n\nJSON Syntax:\n\n{\n  \"AutomaticallyAfterDays\": long\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret.\n\nName -> (string)\n\nThe friendly name of the secret.\n\nVersionId -> (string)\n\nThe ID of the new version of the secret created by the rotation started by this request.",
      "command_examples": "Examples\n\nTo configure rotation for a secret\n\nThe following example configures rotation for a secret by providing the ARN of a Lambda rotation function (which must already exist) and the number of days between rotation. The first rotation happens immediately upon completion of this command. The rotation function runs asynchronously in the background.\n\naws secretsmanager rotate-secret --secret-id MyTestDatabaseSecret \\\n  --rotation-lambda-arn arn:aws:lambda:us-west-2:1234566789012:function:MyTestRotationLambda \\\n  --rotation-rules AutomaticallyAfterDays=30\n\n\nThe output shows the following, including the VersionId of the new secret version:\n\n{\n  \"ARN\": \"aws:arn:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\"\n}\n\n\nTo request an immediate rotation for a secret\n\nThe following example requests an immediate invocation of the secret’s Lambda rotation function. It assumes that the specified secret already has rotation configured. The rotation function runs asynchronously in the background.\n\naws secretsmanager rotate-secret --secret-id MyTestDatabaseSecret\n\n\nThe output shows the following, including the VersionId of the new secret version:\n\n{\n  \"ARN\": \"aws:arn:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"EXAMPLE2-90ab-cdef-fedc-ba987EXAMPLE\"\n}\n"
    },
    {
      "command_name": "stop-replication-to-replica",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/stop-replication-to-replica.html",
      "command_description": "Description\n\nRemoves the secret from replication and promotes the secret to a regional secret in the replica Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-replication-to-replica\n--secret-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nResponse to StopReplicationToReplica of a secret, based on the SecretId .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nResponse StopReplicationToReplica of a secret, based on the ARN, ."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/tag-resource.html",
      "command_description": "Description\n\nAttaches one or more tags, each consisting of a key name and a value, to the specified secret. Tags are part of the secret’s overall metadata, and are not associated with any specific version of the secret. This operation only appends tags to the existing list of tags. To remove tags, you must use UntagResource .\n\nThe following basic restrictions apply to tags:\n\nMaximum number of tags per secret—50\n\nMaximum key length—127 Unicode characters in UTF-8\n\nMaximum value length—255 Unicode characters in UTF-8\n\nTag keys and values are case sensitive.\n\nDo not use the aws: prefix in your tag names or values because Amazon Web Services reserves it for Amazon Web Services use. You can’t edit or delete tag names or values with this prefix. Tags with this prefix do not count against your tags per secret limit.\n\nIf you use your tagging schema across multiple services and resources, remember other services might have restrictions on allowed characters. Generally allowed characters: letters, spaces, and numbers representable in UTF-8, plus the following special characters: + - = . _ : / @.\n\nWarning\n\nIf you use tags as part of your security strategy, then adding or removing a tag can change permissions. If successfully completing this operation would result in you losing your permissions for this secret, then the operation is blocked and returns an Access Denied error.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:TagResource\n\nRelated operations\n\nTo remove one or more tags from the collection attached to a secret, use UntagResource .\n\nTo view the list of tags attached to a secret, use DescribeSecret .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--secret-id <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nThe identifier for the secret that you want to attach tags to. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--tags (list)\n\nThe tags to attach to the secret. Each element in the list consists of a Key and a Value .\n\nThis parameter to the API requires a JSON text string argument.\n\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.\n\n(structure)\n\nA structure that contains information about a tag.\n\nKey -> (string)\n\nThe key identifier, or name, of the tag.\n\nValue -> (string)\n\nThe string value associated with the key of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to a secret\n\nThe following example shows how to attach two tags each with a Key and Value to a secret.\n\naws secretsmanager tag-resource --secret-id MyTestDatabaseSecret \\\n  --tags '[{\"Key\": \"FirstTag\", \"Value\": \"SomeValue\"}, {\"Key\": \"SecondTag\", \"Value\": \"AnotherValue\"}]'\n\n\nThere is no output from this API. To see the result, use the describe-secret operation."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from the specified secret.\n\nThis operation is idempotent. If a requested tag is not attached to the secret, no error is returned and the secret metadata is unchanged.\n\nWarning\n\nIf you use tags as part of your security strategy, then removing a tag can change permissions. If successfully completing this operation would result in you losing your permissions for this secret, then the operation is blocked and returns an Access Denied error.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:UntagResource\n\nRelated operations\n\nTo add one or more tags to the collection attached to a secret, use TagResource .\n\nTo view the list of tags attached to a secret, use DescribeSecret .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--secret-id <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nThe identifier for the secret that you want to remove tags from. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--tag-keys (list)\n\nA list of tag key names to remove from the secret. You don’t specify the value. Both the key and its associated value are removed.\n\nThis parameter to the API requires a JSON text string argument.\n\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a secret\n\nThe following example shows how to remove two tags from a secret’s metadata. For each tag, both the key and its associated value are removed.\n\naws secretsmanager untag-resource --secret-id MyTestDatabaseSecret \\\n  --tag-keys '[ \"FirstTag\", \"SecondTag\"]'\n\n\nThere is no output from this API. To see the result, use the describe-secret operation."
    },
    {
      "command_name": "update-secret",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/update-secret.html",
      "command_description": "Description\n\nModifies many of the details of the specified secret.\n\nTo change the secret value, you can also use PutSecretValue .\n\nTo change the rotation configuration of a secret, use RotateSecret instead.\n\nWe recommend you avoid calling UpdateSecret at a sustained rate of more than once every 10 minutes. When you call UpdateSecret to update the secret value, Secrets Manager creates a new version of the secret. Secrets Manager removes outdated versions when there are more than 100, but it does not remove versions created less than 24 hours ago. If you update the secret value more than once every 10 minutes, you create more versions than Secrets Manager removes, and you will reach the quota for secret versions.\n\nNote\n\nThe Secrets Manager console uses only the SecretString parameter and therefore limits you to encrypting and storing only a text string. To encrypt and store binary data as part of the version of a secret, you must use either the Amazon Web Services CLI or one of the Amazon Web Services SDKs.\n\nIf a version with a VersionId with the same value as the ClientRequestToken parameter already exists, the operation results in an error. You cannot modify an existing version, you can only create a new version.\n\nIf you include SecretString or SecretBinary to create a new secret version, Secrets Manager automatically attaches the staging label AWSCURRENT to the new version.\n\nNote\n\nIf you call an operation to encrypt or decrypt the SecretString or SecretBinary for a secret in the same account as the calling user and that secret doesn’t specify a Amazon Web Services KMS encryption key, Secrets Manager uses the account’s default Amazon Web Services managed customer master key (CMK) with the alias aws/secretsmanager . If this key doesn’t already exist in your account then Secrets Manager creates it for you automatically. All users and roles in the same Amazon Web Services account automatically have access to use the default CMK. Note that if an Secrets Manager API call results in Amazon Web Services creating the account’s Amazon Web Services-managed CMK, it can result in a one-time significant delay in returning the result.\n\nIf the secret resides in a different Amazon Web Services account from the credentials calling an API that requires encryption or decryption of the secret value then you must create and use a custom Amazon Web Services KMS CMK because you can’t access the default CMK for the account using credentials from a different Amazon Web Services account. Store the ARN of the CMK in the secret when you create the secret or when you update it by including it in the KMSKeyId . If you call an API that must encrypt or decrypt SecretString or SecretBinary using credentials from a different account then the Amazon Web Services KMS key policy must grant cross-account access to that other account’s user or role for both the kms:GenerateDataKey and kms:Decrypt operations.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:UpdateSecret\n\nkms:GenerateDataKey - needed only if you use a custom Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account’s Amazon Web Services managed CMK for Secrets Manager.\n\nkms:Decrypt - needed only if you use a custom Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account’s Amazon Web Services managed CMK for Secrets Manager.\n\nRelated operations\n\nTo create a new secret, use CreateSecret .\n\nTo add only a new version to an existing secret, use PutSecretValue .\n\nTo get the details for a secret, use DescribeSecret .\n\nTo list the versions contained in a secret, use ListSecretVersionIds .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-secret\n--secret-id <value>\n[--client-request-token <value>]\n[--description <value>]\n[--kms-key-id <value>]\n[--secret-binary <value>]\n[--secret-string <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "[--client-request-token <value>]",
        "[--description <value>]",
        "[--kms-key-id <value>]",
        "[--secret-binary <value>]",
        "[--secret-string <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret that you want to modify or to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--client-request-token (string)\n\n(Optional) If you want to add a new version to the secret, this parameter specifies a unique identifier for the new version that helps ensure idempotency.\n\nIf you use the Amazon Web Services CLI or one of the Amazon Web Services SDK to call this operation, then you can leave this parameter empty. The CLI or SDK generates a random UUID for you and includes that in the request. If you don’t use the SDK and instead generate a raw HTTP request to the Secrets Manager service endpoint, then you must generate a ClientRequestToken yourself for new versions and include that value in the request.\n\nYou typically only need to interact with this value if you implement your own retry logic and want to ensure that a given secret is not created twice. We recommend that you generate a UUID-type value to ensure uniqueness within the specified secret.\n\nSecrets Manager uses this value to prevent the accidental creation of duplicate versions if there are failures and retries during the Lambda rotation function’s processing.\n\nIf the ClientRequestToken value isn’t already associated with a version of the secret then a new version of the secret is created.\n\nIf a version with this value already exists and that version’s SecretString and SecretBinary values are the same as those in the request then the request is ignored (the operation is idempotent).\n\nIf a version with this value already exists and that version’s SecretString and SecretBinary values are different from the request then an error occurs because you cannot modify an existing secret value.\n\nThis value becomes the VersionId of the new version.\n\n--description (string)\n\n(Optional) Specifies an updated user-provided description of the secret.\n\n--kms-key-id (string)\n\n(Optional) Specifies an updated ARN or alias of the Amazon Web Services KMS customer master key (CMK) that Secrets Manager uses to encrypt the protected text in new versions of this secret as well as any existing versions of this secret that have the staging labels AWSCURRENT, AWSPENDING, or AWSPREVIOUS. For more information about staging labels, see Staging Labels in the Amazon Web Services Secrets Manager User Guide .\n\nWarning\n\nYou can only use the account’s default CMK to encrypt and decrypt if you call this operation using credentials from the same account that owns the secret. If the secret is in a different account, then you must create a custom CMK and provide the ARN of that CMK in this field. The user making the call must have permissions to both the secret and the CMK in their respective accounts.\n\n--secret-binary (blob)\n\n(Optional) Specifies updated binary data that you want to encrypt and store in the new version of the secret. To use this parameter in the command-line tools, we recommend that you store your binary data in a file and then use the appropriate technique for your tool to pass the contents of the file as a parameter. Either SecretBinary or SecretString must have a value, but not both. They cannot both be empty.\n\nThis parameter is not accessible using the Secrets Manager console.\n\n--secret-string (string)\n\n(Optional) Specifies updated text data that you want to encrypt and store in this new version of the secret. Either SecretBinary or SecretString must have a value, but not both. They cannot both be empty.\n\nIf you create this secret by using the Secrets Manager console then Secrets Manager puts the protected secret text in only the SecretString parameter. The Secrets Manager console stores the information as a JSON structure of key/value pairs that the default Lambda rotation function knows how to parse.\n\nFor storing multiple values, we recommend that you use a JSON text string argument and specify key/value pairs. For more information, see Specifying parameter values for the Amazon Web Services CLI in the Amazon Web Services CLI User Guide.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret that was updated.\n\nNote\n\nSecrets Manager automatically adds several random characters to the name at the end of the ARN when you initially create a secret. This affects only the ARN and not the actual friendly name. This ensures that if you create a new secret with the same name as an old secret that you previously deleted, then users with access to the old secret don’t automatically get access to the new secret because the ARNs are different.\n\nName -> (string)\n\nThe friendly name of the secret that was updated.\n\nVersionId -> (string)\n\nIf a new version of the secret was created by this operation, then VersionId contains the unique identifier of the new version.",
      "command_examples": "Examples\n\nThe following examples show how to modify individual components of the secret. Alternatively, you can combine all of the parameters into a single command to do them all in one operation.\n\nTo update the description of a secret\n\nThe following example shows how to modify the description of a secret.\n\naws secretsmanager update-secret --secret-id MyTestDatabaseSecret \\\n  --description \"This is a new description for the secret.\"\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n\n\nTo update the KMS key associated with a secret\n\nThis example shows how to update the KMS customer managed key (CMK) used to encrypt the secret value. The KMS CMK must be in the same region as the secret.\n\naws secretsmanager update-secret --secret-id MyTestDatabaseSecret \\\n  --kms-key-id arn:aws:kms:us-west-2:123456789012:key/EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n\n\nTo create a new version of the encrypted secret value\n\nThe following example shows how to create a new version of the secret by updating the –secret-string field. The secret string is read from the contents of the specified file. Alternatively, you can use the put-secret-value operation.\n\naws secretsmanager update-secret --secret-id MyTestDatabaseSecret \\\n  --secret-string file://mycreds.json\n\n\nThe output shows the following, including the VersionId of the new secret version:\n\n{\n  \"ARN\": \"aws:arn:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\",\n  \"VersionId\": \"EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\"\n}\n"
    },
    {
      "command_name": "update-secret-version-stage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/update-secret-version-stage.html",
      "command_description": "Description\n\nModifies the staging labels attached to a version of a secret. Staging labels are used to track a version as it progresses through the secret rotation process. You can attach a staging label to only one version of a secret at a time. If a staging label to be added is already attached to another version, then it is moved–removed from the other version first and then attached to this one. For more information about staging labels, see Staging Labels in the Amazon Web Services Secrets Manager User Guide .\n\nThe staging labels that you specify in the VersionStage parameter are added to the existing list of staging labels–they don’t replace it.\n\nYou can move the AWSCURRENT staging label to this version by including it in this call.\n\nNote\n\nWhenever you move AWSCURRENT , Secrets Manager automatically moves the label AWSPREVIOUS to the version that AWSCURRENT was removed from.\n\nIf this action results in the last label being removed from a version, then the version is considered to be ‘deprecated’ and can be deleted by Secrets Manager.\n\nMinimum permissions\n\nTo run this command, you must have the following permissions:\n\nsecretsmanager:UpdateSecretVersionStage\n\nRelated operations\n\nTo get the list of staging labels that are currently associated with a version of a secret, use `` DescribeSecret `` and examine the SecretVersionsToStages response value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-secret-version-stage\n--secret-id <value>\n--version-stage <value>\n[--remove-from-version-id <value>]\n[--move-to-version-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--secret-id <value>",
        "--version-stage <value>",
        "[--remove-from-version-id <value>]",
        "[--move-to-version-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\nSpecifies the secret with the version with the list of staging labels you want to modify. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--version-stage (string)\n\nThe staging label to add to this version.\n\n--remove-from-version-id (string)\n\nSpecifies the secret version ID of the version that the staging label is to be removed from. If the staging label you are trying to attach to one version is already attached to a different version, then you must include this parameter and specify the version that the label is to be removed from. If the label is attached and you either do not specify this parameter, or the version ID does not match, then the operation fails.\n\n--move-to-version-id (string)\n\n(Optional) The secret version ID that you want to add the staging label. If you want to remove a label from a version, then do not specify this parameter.\n\nIf the staging label is already attached to a different version of the secret, then you must also specify the RemoveFromVersionId parameter.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nARN -> (string)\n\nThe ARN of the secret with the modified staging label.\n\nName -> (string)\n\nThe friendly name of the secret with the modified staging label.",
      "command_examples": "Examples\n\nTo add a staging label attached to a version of a secret\n\nThe following example shows you how to add a staging label to a version of a secret. You can review the results by running the command list-secret-version-ids and viewing the VersionStages response field for the affected version.\n\naws secretsmanager update-secret-version-stage --secret-id MyTestDatabaseSecret \\\n  --version-stage STAGINGLABEL1 \\\n  --move-to-version-id EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n\n\nTo delete a staging label attached to a version of a secret\n\nThe following example shows you how to delete a staging label that is attached to a version of a secret. You can review the results by running the command list-secret-version-ids and viewing the VersionStages response field for the affected version.\n\naws secretsmanager update-secret-version-stage --secret-id MyTestDatabaseSecret \\\n  --version-stage STAGINGLABEL1 \\\n  --remove-from-version-id EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n\n\nTo move a staging label from one version of a secret to another\n\nThe following example shows you how to move a staging label that is attached to one version of a secret to a different version. You can review the results by running the command list-secret-version-ids and viewing the VersionStages response field for the affected version.\n\naws secretsmanager update-secret-version-stage --secret-id MyTestDatabaseSecret \\\n  --version-stage AWSCURRENT \\\n  --move-to-version-id EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE \\\n  --remove-from-version-id EXAMPLE2-90ab-cdef-fedc-ba987EXAMPLE\n\n\nThe output shows the following:\n\n{\n  \"ARN\": \"arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3\",\n  \"Name\": \"MyTestDatabaseSecret\"\n}\n"
    },
    {
      "command_name": "validate-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/secretsmanager/validate-resource-policy.html",
      "command_description": "Description\n\nValidates that the resource policy does not grant a wide range of IAM principals access to your secret. The JSON request string input and response output displays formatted code with white space and line breaks for better readability. Submit your input as a single line JSON string. A resource-based policy is optional for secrets.\n\nThe API performs three checks when validating the secret:\n\nSends a call to Zelkova , an automated reasoning engine, to ensure your Resource Policy does not allow broad access to your secret.\n\nChecks for correct syntax in a policy.\n\nVerifies the policy does not lock out a caller.\n\nMinimum Permissions\n\nYou must have the permissions required to access the following APIs:\n\nsecretsmanager:PutResourcePolicy\n\nsecretsmanager:ValidateResourcePolicy\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  validate-resource-policy\n[--secret-id <value>]\n--resource-policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--secret-id <value>]",
        "--resource-policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--secret-id (string)\n\n(Optional) The identifier of the secret with the resource-based policy you want to validate. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\nFor an ARN, we recommend that you specify a complete ARN rather than a partial ARN.\n\n--resource-policy (string)\n\nA JSON-formatted string constructed according to the grammar and syntax for an Amazon Web Services resource-based policy. The policy in the string identifies who can access or manage this secret and its versions. For information on how to format a JSON parameter for the various command line tool environments, see Using JSON for Parameters in the CLI User Guide .publi\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPolicyValidationPassed -> (boolean)\n\nReturns a message stating that your Reource Policy passed validation.\n\nValidationErrors -> (list)\n\nReturns an error message if your policy doesn’t pass validatation.\n\n(structure)\n\nDisplays errors that occurred during validation of the resource policy.\n\nCheckName -> (string)\n\nChecks the name of the policy.\n\nErrorMessage -> (string)\n\nDisplays error messages if validation encounters problems during validation of the resource policy."
    }
  ],
  "service_description": "Description\n\nAmazon Web Services Secrets Manager provides a service to enable you to store, manage, and retrieve, secrets.\n\nThis guide provides descriptions of the Secrets Manager API. For more information about using this service, see the Amazon Web Services Secrets Manager User Guide .\n\nAPI Version\n\nThis version of the Secrets Manager API Reference documents the Secrets Manager API version 2017-10-17.\n\nNote\n\nAs an alternative to using the API, you can use one of the Amazon Web Services SDKs, which consist of libraries and sample code for various programming languages and platforms such as Java, Ruby, .NET, iOS, and Android. The SDKs provide a convenient way to create programmatic access to Amazon Web Services Secrets Manager. For example, the SDKs provide cryptographically signing requests, managing errors, and retrying requests automatically. For more information about the Amazon Web Services SDKs, including downloading and installing them, see Tools for Amazon Web Services .\n\nWe recommend you use the Amazon Web Services SDKs to make programmatic API calls to Secrets Manager. However, you also can use the Secrets Manager HTTP Query API to make direct calls to the Secrets Manager web service. To learn more about the Secrets Manager HTTP Query API, see Making Query Requests in the Amazon Web Services Secrets Manager User Guide .\n\nSecrets Manager API supports GET and POST requests for all actions, and doesn’t require you to use GET for some actions and POST for others. However, GET requests are subject to the limitation size of a URL. Therefore, for operations that require larger sizes, use a POST request.\n\nSupport and Feedback for Amazon Web Services Secrets Manager\n\nWe welcome your feedback. Send your comments to awssecretsmanager-feedback@amazon.com , or post your feedback and questions in the Amazon Web Services Secrets Manager Discussion Forum . For more information about the Amazon Web Services Discussion Forums, see Forums Help .\n\nHow examples are presented\n\nThe JSON that Amazon Web Services Secrets Manager expects as your request parameters and the service returns as a response to HTTP query requests contain single, long strings without line breaks or white space formatting. The JSON shown in the examples displays the code formatted with both line breaks and white space to improve readability. When example input parameters can also cause long strings extending beyond the screen, you can insert line breaks to enhance readability. You should always submit the input as a single JSON text string.\n\nLogging API Requests\n\nAmazon Web Services Secrets Manager supports Amazon Web Services CloudTrail, a service that records Amazon Web Services API calls for your Amazon Web Services account and delivers log files to an Amazon S3 bucket. By using information that’s collected by Amazon Web Services CloudTrail, you can determine the requests successfully made to Secrets Manager, who made the request, when it was made, and so on. For more about Amazon Web Services Secrets Manager and support for Amazon Web Services CloudTrail, see Logging Amazon Web Services Secrets Manager Events with Amazon Web Services CloudTrail in the Amazon Web Services Secrets Manager User Guide . To learn more about CloudTrail, including enabling it and find your log files, see the Amazon Web Services CloudTrail User Guide ."
}