{
  "service_name": "sdb",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/index.html",
  "service_commands": [
    {
      "command_name": "batch-delete-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/batch-delete-attributes.html",
      "command_description": "Description\n\nPerforms multiple DeleteAttributes operations in a single call, which reduces round trips and latencies. This enables Amazon SimpleDB to optimize requests, which generally yields better throughput.\n\nThe following limitations are enforced for this operation:\n\n1 MB request size\n\n25 item limit per BatchDeleteAttributes operation\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-attributes\n--domain-name <value>\n--items <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--items <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain in which the attributes are being deleted.\n\n--items (list) A list of items on which to perform the operation.(structure)\n\nName -> (string)\n\nAttributes -> (list)\n\n(structure)\n\nName -> (string)\n\nThe name of the attribute.\n\nAlternateNameEncoding -> (string)\n\nValue -> (string)\n\nThe value of the attribute.\n\nAlternateValueEncoding -> (string)\n\nShorthand Syntax:\n\nName=string,Attributes=[{Name=string,AlternateNameEncoding=string,Value=string,AlternateValueEncoding=string},{Name=string,AlternateNameEncoding=string,Value=string,AlternateValueEncoding=string}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Attributes\": [\n      {\n        \"Name\": \"string\",\n        \"AlternateNameEncoding\": \"string\",\n        \"Value\": \"string\",\n        \"AlternateValueEncoding\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "batch-put-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/batch-put-attributes.html",
      "command_description": "Description\n\nThe BatchPutAttributes operation creates or replaces attributes within one or more items. By using this operation, the client can perform multiple PutAttribute operation with a single call. This helps yield savings in round trips and latencies, enabling Amazon SimpleDB to optimize requests and generally produce better throughput.\n\nThe client may specify the item name with the Item.X.ItemName parameter. The client may specify new attributes using a combination of the Item.X.Attribute.Y.Name and Item.X.Attribute.Y.Value parameters. The client may specify the first attribute for the first item using the parameters Item.0.Attribute.0.Name and Item.0.Attribute.0.Value , and for the second attribute for the first item by the parameters Item.0.Attribute.1.Name and Item.0.Attribute.1.Value , and so on.\n\nAttributes are uniquely identified within an item by their name/value combination. For example, a single item can have the attributes { \"first_name\", \"first_value\" } and { \"first_name\", \"second_value\" } . However, it cannot have two attribute instances where both the Item.X.Attribute.Y.Name and Item.X.Attribute.Y.Value are the same.\n\nOptionally, the requester can supply the Replace parameter for each individual value. Setting this value to true will cause the new attribute values to replace the existing attribute values. For example, if an item I has the attributes { 'a', '1' }, { 'b', '2'} and { 'b', '3' } and the requester does a BatchPutAttributes of {'I', 'b', '4' } with the Replace parameter set to true, the final attributes of the item will be { 'a', '1' } and { 'b', '4' } , replacing the previous values of the ‘b’ attribute with the new value.\n\nWarning\n\nThis operation is vulnerable to exceeding the maximum URL size when making a REST request using the HTTP GET method. This operation does not support conditions using Expected.X.Name , Expected.X.Value , or Expected.X.Exists .\n\nYou can execute multiple BatchPutAttributes operations and other operations in parallel. However, large numbers of concurrent BatchPutAttributes calls can result in Service Unavailable (503) responses.\n\nThe following limitations are enforced for this operation:\n\n256 attribute name-value pairs per item\n\n1 MB request size\n\n1 billion attributes per domain\n\n10 GB of total user data storage per domain\n\n25 item limit per BatchPutAttributes operation\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-put-attributes\n--domain-name <value>\n--items <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--items <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain in which the attributes are being stored.\n\n--items (list) A list of items on which to perform the operation.(structure)\n\nName -> (string)\n\nThe name of the replaceable item.\n\nAttributes -> (list)\n\nThe list of attributes for a replaceable item.\n\n(structure)\n\nName -> (string)\n\nThe name of the replaceable attribute.\n\nValue -> (string)\n\nThe value of the replaceable attribute.\n\nReplace -> (boolean)\n\nA flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is false .\n\nShorthand Syntax:\n\nName=string,Attributes=[{Name=string,Value=string,Replace=boolean},{Name=string,Value=string,Replace=boolean}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Attributes\": [\n      {\n        \"Name\": \"string\",\n        \"Value\": \"string\",\n        \"Replace\": true|false\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/create-domain.html",
      "command_description": "Description\n\nThe CreateDomain operation creates a new domain. The domain name should be unique among the domains associated with the Access Key ID provided in the request. The CreateDomain operation may take 10 or more seconds to complete.\n\nThe client can create up to 100 domains per account.\n\nIf the client requires additional domains, go to http://aws.amazon.com/contact-us/simpledb-limit-request/ .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-domain\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain to create. The name can range between 3 and 255 characters and can contain the following characters: a-z, A-Z, 0-9, ‘_’, ‘-‘, and ‘.’.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/delete-attributes.html",
      "command_description": "Description\n\nDeletes one or more attributes associated with an item. If all attributes of the item are deleted, the item is deleted.\n\nDeleteAttributes is an idempotent operation; running it multiple times on the same item or attribute does not result in an error response.\n\nBecause Amazon SimpleDB makes multiple copies of item data and uses an eventual consistency update model, performing a GetAttributes or Select operation (read) immediately after a DeleteAttributes or PutAttributes operation (write) might not return updated item data.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-attributes\n--domain-name <value>\n--item-name <value>\n[--attributes <value>]\n[--expected <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--item-name <value>",
        "[--attributes <value>]",
        "[--expected <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain in which to perform the operation.\n\n--item-name (string) The name of the item. Similar to rows on a spreadsheet, items represent individual objects that contain one or more value-attribute pairs.\n\n--attributes (list) A list of Attributes. Similar to columns on a spreadsheet, attributes represent categories of data that can be assigned to items.(structure)\n\nName -> (string)\n\nThe name of the attribute.\n\nAlternateNameEncoding -> (string)\n\nValue -> (string)\n\nThe value of the attribute.\n\nAlternateValueEncoding -> (string)\n\nShorthand Syntax:\n\nName=string,AlternateNameEncoding=string,Value=string,AlternateValueEncoding=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"AlternateNameEncoding\": \"string\",\n    \"Value\": \"string\",\n    \"AlternateValueEncoding\": \"string\"\n  }\n  ...\n]\n\n\n--expected (structure) The update condition which, if specified, determines whether the specified attributes will be deleted or not. The update condition must be satisfied in order for this request to be processed and the attributes to be deleted.Name -> (string)\n\nThe name of the attribute involved in the condition.\n\nValue -> (string)\n\nThe value of an attribute. This value can only be specified when the Exists parameter is equal to true .\n\nExists -> (boolean)\n\nA value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify true if the attribute must exist for the update condition to be satisfied. Specify false if the attribute should not exist in order for the update condition to be satisfied.\n\nShorthand Syntax:\n\nName=string,Value=string,Exists=boolean\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Value\": \"string\",\n  \"Exists\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/delete-domain.html",
      "command_description": "Description\n\nThe DeleteDomain operation deletes a domain. Any items (and their attributes) in the domain are deleted as well. The DeleteDomain operation might take 10 or more seconds to complete.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-domain\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "domain-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/domain-metadata.html",
      "command_description": "Description\n\nReturns information about the domain, including when the domain was created, the number of items and attributes in the domain, and the size of the attribute names and values.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  domain-metadata\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain for which to display the metadata of.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItemCount -> (integer)\n\nThe number of all items in the domain.\n\nItemNamesSizeBytes -> (long)\n\nThe total size of all item names in the domain, in bytes.\n\nAttributeNameCount -> (integer)\n\nThe number of unique attribute names in the domain.\n\nAttributeNamesSizeBytes -> (long)\n\nThe total size of all unique attribute names in the domain, in bytes.\n\nAttributeValueCount -> (integer)\n\nThe number of all attribute name/value pairs in the domain.\n\nAttributeValuesSizeBytes -> (long)\n\nThe total size of all attribute values in the domain, in bytes.\n\nTimestamp -> (integer)\n\nThe data and time when metadata was calculated, in Epoch (UNIX) seconds."
    },
    {
      "command_name": "get-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/get-attributes.html",
      "command_description": "Description\n\nReturns all of the attributes associated with the specified item. Optionally, the attributes returned can be limited to one or more attributes by specifying an attribute name parameter.\n\nIf the item does not exist on the replica that was accessed for this operation, an empty set is returned. The system does not return an error as it cannot guarantee the item does not exist on other replicas.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-attributes\n--domain-name <value>\n--item-name <value>\n[--attribute-names <value>]\n[--consistent-read | --no-consistent-read]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--item-name <value>",
        "[--attribute-names <value>]",
        "[--consistent-read | --no-consistent-read]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain in which to perform the operation.\n\n--item-name (string) The name of the item.\n\n--attribute-names (list) The names of the attributes.(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--consistent-read | --no-consistent-read (boolean) Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If true , any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAttributes -> (list)\n\nThe list of attributes returned by the operation.\n\n(structure)\n\nName -> (string)\n\nThe name of the attribute.\n\nAlternateNameEncoding -> (string)\n\nValue -> (string)\n\nThe value of the attribute.\n\nAlternateValueEncoding -> (string)"
    },
    {
      "command_name": "list-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/list-domains.html",
      "command_description": "Description\n\nThe ListDomains operation lists all domains associated with the Access Key ID. It returns domain names up to the limit set by MaxNumberOfDomains . A NextToken is returned if there are more than MaxNumberOfDomains domains. Calling ListDomains successive times with the NextToken provided by the operation returns up to MaxNumberOfDomains more domain names with each successive operation call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-domains is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DomainNames",
      "command_synopsis": "Synopsis\n  list-domains\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDomainNames -> (list)\n\nA list of domain names that match the expression.\n\n(string)\n\nNextToken -> (string)\n\nAn opaque token indicating that there are more domains than the specified MaxNumberOfDomains still available."
    },
    {
      "command_name": "put-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/put-attributes.html",
      "command_description": "Description\n\nThe PutAttributes operation creates or replaces attributes in an item. The client may specify new attributes using a combination of the Attribute.X.Name and Attribute.X.Value parameters. The client specifies the first attribute by the parameters Attribute.0.Name and Attribute.0.Value , the second attribute by the parameters Attribute.1.Name and Attribute.1.Value , and so on.\n\nAttributes are uniquely identified in an item by their name/value combination. For example, a single item can have the attributes { \"first_name\", \"first_value\" } and { \"first_name\", second_value\" } . However, it cannot have two attribute instances where both the Attribute.X.Name and Attribute.X.Value are the same.\n\nOptionally, the requestor can supply the Replace parameter for each individual attribute. Setting this value to true causes the new attribute value to replace the existing attribute value(s). For example, if an item has the attributes { 'a', '1' } , { 'b', '2'} and { 'b', '3' } and the requestor calls PutAttributes using the attributes { 'b', '4' } with the Replace parameter set to true, the final attributes of the item are changed to { 'a', '1' } and { 'b', '4' } , which replaces the previous values of the ‘b’ attribute with the new value.\n\nYou cannot specify an empty string as an attribute name.\n\nBecause Amazon SimpleDB makes multiple copies of client data and uses an eventual consistency update model, an immediate GetAttributes or Select operation (read) immediately after a PutAttributes or DeleteAttributes operation (write) might not return the updated data.\n\nThe following limitations are enforced for this operation:\n\n256 total attribute name-value pairs per item\n\nOne billion attributes per domain\n\n10 GB of total user data storage per domain\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-attributes\n--domain-name <value>\n--item-name <value>\n--attributes <value>\n[--expected <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--domain-name <value>",
        "--item-name <value>",
        "--attributes <value>",
        "[--expected <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--domain-name (string) The name of the domain in which to perform the operation.\n\n--item-name (string) The name of the item.\n\n--attributes (list) The list of attributes.(structure)\n\nName -> (string)\n\nThe name of the replaceable attribute.\n\nValue -> (string)\n\nThe value of the replaceable attribute.\n\nReplace -> (boolean)\n\nA flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is false .\n\nShorthand Syntax:\n\nName=string,Value=string,Replace=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Name\": \"string\",\n    \"Value\": \"string\",\n    \"Replace\": true|false\n  }\n  ...\n]\n\n\n--expected (structure) The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.Name -> (string)\n\nThe name of the attribute involved in the condition.\n\nValue -> (string)\n\nThe value of an attribute. This value can only be specified when the Exists parameter is equal to true .\n\nExists -> (boolean)\n\nA value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify true if the attribute must exist for the update condition to be satisfied. Specify false if the attribute should not exist in order for the update condition to be satisfied.\n\nShorthand Syntax:\n\nName=string,Value=string,Exists=boolean\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Value\": \"string\",\n  \"Exists\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "select",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sdb/select.html",
      "command_description": "Description\n\nThe Select operation returns a set of attributes for ItemNames that match the select expression. Select is similar to the standard SQL SELECT statement.\n\nThe total size of the response cannot exceed 1 MB in total size. Amazon SimpleDB automatically adjusts the number of items returned per page to enforce this limit. For example, if the client asks to retrieve 2500 items, but each individual item is 10 kB in size, the system returns 100 items and an appropriate NextToken so the client can access the next page of results.\n\nFor information on how to construct select expressions, see Using Select to Create Amazon SimpleDB Queries in the Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nselect is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Items",
      "command_synopsis": "Synopsis\n  select\n--select-expression <value>\n[--consistent-read | --no-consistent-read]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--select-expression <value>",
        "[--consistent-read | --no-consistent-read]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--select-expression (string) The expression used to query the domain.\n\n--consistent-read | --no-consistent-read (boolean) Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If true , any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nA list of items that match the select expression.\n\n(structure)\n\nName -> (string)\n\nThe name of the item.\n\nAlternateNameEncoding -> (string)\n\nAttributes -> (list)\n\nA list of attributes.\n\n(structure)\n\nName -> (string)\n\nThe name of the attribute.\n\nAlternateNameEncoding -> (string)\n\nValue -> (string)\n\nThe value of the attribute.\n\nAlternateValueEncoding -> (string)\n\nNextToken -> (string)\n\nAn opaque token indicating that more items than MaxNumberOfItems were matched, the response size exceeded 1 megabyte, or the execution time exceeded 5 seconds."
    }
  ],
  "service_description": "Description\n\nAmazon SimpleDB is a web service providing the core database functions of data indexing and querying in the cloud. By offloading the time and effort associated with building and operating a web-scale database, SimpleDB provides developers the freedom to focus on application development.\n\nA traditional, clustered relational database requires a sizable upfront capital outlay, is complex to design, and often requires extensive and repetitive database administration. Amazon SimpleDB is dramatically simpler, requiring no schema, automatically indexing your data and providing a simple API for storage and access. This approach eliminates the administrative burden of data modeling, index maintenance, and performance tuning. Developers gain access to this functionality within Amazon’s proven computing environment, are able to scale instantly, and pay only for what they use.\n\nVisit http://aws.amazon.com/simpledb/ for more information."
}