{
  "service_name": "directconnect",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/index.html",
  "service_commands": [
    {
      "command_name": "accept-direct-connect-gateway-association-proposal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/accept-direct-connect-gateway-association-proposal.html",
      "command_description": "Description\n\nAccepts a proposal request to attach a virtual private gateway or transit gateway to a Direct Connect gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  accept-direct-connect-gateway-association-proposal\n--direct-connect-gateway-id <value>\n--proposal-id <value>\n--associated-gateway-owner-account <value>\n[--override-allowed-prefixes-to-direct-connect-gateway <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-id <value>",
        "--proposal-id <value>",
        "--associated-gateway-owner-account <value>",
        "[--override-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--proposal-id (string)\n\nThe ID of the request proposal.\n\n--associated-gateway-owner-account (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway or transit gateway.\n\n--override-allowed-prefixes-to-direct-connect-gateway (list)\n\nOverrides the Amazon VPC prefixes advertised to the Direct Connect gateway.\n\nFor information about how to set the prefixes, see Allowed Prefixes in the Direct Connect User Guide .\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociation -> (structure)\n\nInformation about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated gateway.\n\nassociationState -> (string)\n\nThe state of the association. The following are the possible values:\n\nassociating : The initial state after calling CreateDirectConnectGatewayAssociation .\n\nassociated : The Direct Connect gateway and virtual private gateway or transit gateway are successfully associated and ready to pass traffic.\n\ndisassociating : The initial state after calling DeleteDirectConnectGatewayAssociation .\n\ndisassociated : The virtual private gateway or transit gateway is disassociated from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual private gateway or transit gateway is stopped.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nassociationId -> (string)\n\nThe ID of the Direct Connect gateway association.\n\nallowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\nvirtualGatewayRegion -> (string)\n\nThe Amazon Web Services Region where the virtual private gateway is located.\n\nvirtualGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway.",
      "command_examples": "Examples\n\nTo accept a gateway association proposal\n\nThe following accept-direct-connect-gateway-association-proposal accepts the specified proposal.\n\naws directconnect  accept-direct-connect-gateway-association-proposal \\\n    --direct-connect-gateway-id 11460968-4ac1-4fd3-bdb2-00599EXAMPLE \\\n    --proposal-id cb7f41cb-8128-43a5-93b1-dcaedEXAMPLE \\\n    --associated-gateway-owner-account 111122223333\n\n{\n    \"directConnectGatewayAssociation\": {\n        \"directConnectGatewayId\": \"11460968-4ac1-4fd3-bdb2-00599EXAMPLE\",\n        \"directConnectGatewayOwnerAccount\": \"111122223333\",\n        \"associationState\": \"associating\",\n        \"associatedGateway\": {\n            \"id\": \"tgw-02f776b1a7EXAMPLE\",\n            \"type\": \"transitGateway\",\n            \"ownerAccount\": \"111122223333\",\n            \"region\": \"us-east-1\"\n        },\n        \"associationId\": \"6441f8bf-5917-4279-ade1-9708bEXAMPLE\",\n        \"allowedPrefixesToDirectConnectGateway\": [\n            {\n                \"cidr\": \"192.168.1.0/30\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Accepting or Rejecting a Transit Gateway Association Proposal in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "allocate-hosted-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/allocate-hosted-connection.html",
      "command_description": "Description\n\nCreates a hosted connection on the specified interconnect or a link aggregation group (LAG) of interconnects.\n\nAllocates a VLAN number and a specified amount of capacity (bandwidth) for use by a hosted connection on the specified interconnect or LAG of interconnects. Amazon Web Services polices the hosted connection for the specified capacity and the Direct Connect Partner must also police the hosted connection for the specified capacity.\n\nNote\n\nIntended for use by Direct Connect Partners only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  allocate-hosted-connection\n--connection-id <value>\n--owner-account <value>\n--bandwidth <value>\n--connection-name <value>\n--vlan <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--owner-account <value>",
        "--bandwidth <value>",
        "--connection-name <value>",
        "--vlan <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the interconnect or LAG.\n\n--owner-account (string)\n\nThe ID of the Amazon Web Services account ID of the customer for the connection.\n\n--bandwidth (string)\n\nThe bandwidth of the connection. The possible values are 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, and 10Gbps. Note that only those Direct Connect Partners who have met specific requirements are allowed to create a 1Gbps, 2Gbps, 5Gbps or 10Gbps hosted connection.\n\n--connection-name (string)\n\nThe name of the hosted connection.\n\n--vlan (integer)\n\nThe dedicated VLAN provisioned to the hosted connection.\n\n--tags (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo create a hosted connection on an interconnect\n\nThe following allocate-hosted-connection example creates a hosted connection on the specified interconnect.\n\naws directconnect allocate-hosted-connection \\\n    --bandwidth 500Mbps \\\n    --connection-name mydcinterconnect \\\n    --owner-account 123456789012\n    -connection-id dxcon-fgktov66\n    -vlan 101\n\n\nOutput:\n\n{\n    \"partnerName\": \"TIVIT\",\n    \"vlan\": 101,\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-ffzc51m1\",\n    \"connectionState\": \"ordering\",\n    \"bandwidth\": \"500Mbps\",\n    \"location\": \"TIVIT\",\n    \"connectionName\": \"mydcinterconnect\",\n    \"region\": \"sa-east-1\"\n}\n"
    },
    {
      "command_name": "allocate-private-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/allocate-private-virtual-interface.html",
      "command_description": "Description\n\nProvisions a private virtual interface to be owned by the specified Amazon Web Services account.\n\nVirtual interfaces created using this action must be confirmed by the owner using ConfirmPrivateVirtualInterface . Until then, the virtual interface is in the Confirming state and is not available to handle traffic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  allocate-private-virtual-interface\n--connection-id <value>\n--owner-account <value>\n--new-private-virtual-interface-allocation <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--owner-account <value>",
        "--new-private-virtual-interface-allocation <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection on which the private virtual interface is provisioned.\n\n--owner-account (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private interface.\n\n--new-private-virtual-interface-allocation (structure)\n\nInformation about the private virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\ntags -> (list)\n\nThe tags associated with the private virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,mtu=integer,authKey=string,amazonAddress=string,addressFamily=string,customerAddress=string,tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"mtu\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"customerAddress\": \"string\",\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo provision a private virtual interface\n\nThe following allocate-private-virtual-interface command provisions a private virtual interface to be owned by a different customer:\n\naws directconnect allocate-private-virtual-interface --connection-id dxcon-ffjrkx17 --owner-account 123456789012 --new-private-virtual-interface-allocation virtualInterfaceName=PrivateVirtualInterface,vlan=1000,asn=65000,authKey=asdf34example,amazonAddress=192.168.1.1/30,customerAddress=192.168.1.2/30\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"confirming\",\n    \"asn\": 65000,\n    \"vlan\": 1000,\n    \"customerAddress\": \"192.168.1.2/30\",\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-ffjrkx17\",\n    \"virtualInterfaceId\": \"dxvif-fgy8orxu\",\n    \"authKey\": \"asdf34example\",\n    \"routeFilterPrefixes\": [],\n    \"location\": \"TIVIT\",\n    \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n  <logical_connection id=\\\"dxvif-fgy8orxu\\\">\\n  <vlan>1000</vlan>\\n  <customer_address>192.168.1.2/30</customer_address>\\n  <amazon_address>192.168.1.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n    \"amazonAddress\": \"192.168.1.1/30\",\n    \"virtualInterfaceType\": \"private\",\n    \"virtualInterfaceName\": \"PrivateVirtualInterface\"\n}\n"
    },
    {
      "command_name": "allocate-public-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/allocate-public-virtual-interface.html",
      "command_description": "Description\n\nProvisions a public virtual interface to be owned by the specified Amazon Web Services account.\n\nThe owner of a connection calls this function to provision a public virtual interface to be owned by the specified Amazon Web Services account.\n\nVirtual interfaces created using this function must be confirmed by the owner using ConfirmPublicVirtualInterface . Until this step has been completed, the virtual interface is in the confirming state and is not available to handle traffic.\n\nWhen creating an IPv6 public virtual interface, omit the Amazon address and customer address. IPv6 addresses are automatically assigned from the Amazon pool of IPv6 addresses; you cannot specify custom IPv6 addresses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  allocate-public-virtual-interface\n--connection-id <value>\n--owner-account <value>\n--new-public-virtual-interface-allocation <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--owner-account <value>",
        "--new-public-virtual-interface-allocation <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection on which the public virtual interface is provisioned.\n\n--owner-account (string)\n\nThe ID of the Amazon Web Services account that owns the public virtual interface.\n\n--new-public-virtual-interface-allocation (structure)\n\nInformation about the public virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\ntags -> (list)\n\nThe tags associated with the public virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,authKey=string,amazonAddress=string,customerAddress=string,addressFamily=string,routeFilterPrefixes=[{cidr=string},{cidr=string}],tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"string\"\n    }\n    ...\n  ],\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo provision a public virtual interface\n\nThe following allocate-public-virtual-interface command provisions a public virtual interface to be owned by a different customer:\n\naws directconnect allocate-public-virtual-interface --connection-id dxcon-ffjrkx17 --owner-account 123456789012 --new-public-virtual-interface-allocation virtualInterfaceName=PublicVirtualInterface,vlan=2000,asn=65000,authKey=asdf34example,amazonAddress=203.0.113.1/30,customerAddress=203.0.113.2/30,routeFilterPrefixes=[{cidr=203.0.113.0/30},{cidr=203.0.113.4/30}]\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"confirming\",\n    \"asn\": 65000,\n    \"vlan\": 2000,\n    \"customerAddress\": \"203.0.113.2/30\",\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-ffjrkx17\",\n    \"virtualInterfaceId\": \"dxvif-fg9xo9vp\",\n    \"authKey\": \"asdf34example\",\n    \"routeFilterPrefixes\": [\n        {\n            \"cidr\": \"203.0.113.0/30\"\n        },\n        {\n            \"cidr\": \"203.0.113.4/30\"\n        }\n    ],\n    \"location\": \"TIVIT\",\n    \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fg9xo9vp\\\">\\n  <vlan>2000</vlan>\\n  <customer_address>203.0.113.2/30</customer_address>\\n  <amazon_address>203.0.113.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>public</connection_type>\\n</logical_connection>\\n\",\n    \"amazonAddress\": \"203.0.113.1/30\",\n    \"virtualInterfaceType\": \"public\",\n    \"virtualInterfaceName\": \"PublicVirtualInterface\"\n}\n"
    },
    {
      "command_name": "allocate-transit-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/allocate-transit-virtual-interface.html",
      "command_description": "Description\n\nProvisions a transit virtual interface to be owned by the specified Amazon Web Services account. Use this type of interface to connect a transit gateway to your Direct Connect gateway.\n\nThe owner of a connection provisions a transit virtual interface to be owned by the specified Amazon Web Services account.\n\nAfter you create a transit virtual interface, it must be confirmed by the owner using ConfirmTransitVirtualInterface . Until this step has been completed, the transit virtual interface is in the requested state and is not available to handle traffic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  allocate-transit-virtual-interface\n--connection-id <value>\n--owner-account <value>\n--new-transit-virtual-interface-allocation <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--owner-account <value>",
        "--new-transit-virtual-interface-allocation <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection on which the transit virtual interface is provisioned.\n\n--owner-account (string)\n\nThe ID of the Amazon Web Services account that owns the transit virtual interface.\n\n--new-transit-virtual-interface-allocation (structure)\n\nInformation about the transit virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\ntags -> (list)\n\nThe tags associated with the transitive virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,mtu=integer,authKey=string,amazonAddress=string,customerAddress=string,addressFamily=string,tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"mtu\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterface -> (structure)\n\nInformation about a virtual interface.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo provision a transit virtual interface to be owned by the specified AWS account\n\nThe following allocate-transit-virtual-interface example provisions a transit virtual interface for the specified account.\n\naws directconnect allocate-transit-virtual-interface \\\n    --connection-id dxlag-fEXAMPLE \\\n    --owner-account 123456789012 \\\n    --new-transit-virtual-interface-allocation \"virtualInterfaceName=Example Transit Virtual Interface,vlan=126,asn=65110,mtu=1500,authKey=0xzxgA9YoW9h58u8SEXAMPLE,amazonAddress=192.168.1.1/30,customerAddress=192.168.1.2/30,addressFamily=ipv4,tags=[{key=Tag,value=Example}]\"\n\n\nOutput:\n\n{\n    \"virtualInterface\": {\n        \"ownerAccount\": \"123456789012\",\n        \"virtualInterfaceId\": \"dxvif-fEXAMPLE\",\n        \"location\": \"loc1\",\n        \"connectionId\": \"dxlag-fEXAMPLE\",\n        \"virtualInterfaceType\": \"transit\",\n        \"virtualInterfaceName\": \"Example Transit Virtual Interface\",\n        \"vlan\": 126,\n        \"asn\": 65110,\n        \"amazonSideAsn\": 7224,\n        \"authKey\": \"0xzxgA9YoW9h58u8SEXAMPLE\",\n        \"amazonAddress\": \"192.168.1.1/30\",\n        \"customerAddress\": \"192.168.1.2/30\",\n        \"addressFamily\": \"ipv4\",\n        \"virtualInterfaceState\": \"confirming\",\n        \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fEXAMPLE\\\">\\n  <vlan>126</vlan>\\n  <customer_address>192.168.1.2/30</customer_address>\\n  <amazon_address>192.168.1.1/30</amazon_address>\\n  <bgp_asn>65110</bgp_asn>\\n  <bgp_auth_key>0xzxgA9YoW9h58u8SEXAMPLE</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>transit</connection_type>\\n</logical_connection>\\n\",\n        \"mtu\": 1500,\n        \"jumboFrameCapable\": true,\n        \"virtualGatewayId\": \"\",\n        \"directConnectGatewayId\": \"\",\n        \"routeFilterPrefixes\": [],\n        \"bgpPeers\": [\n            {\n                \"bgpPeerId\": \"dxpeer-fEXAMPLE\",\n                \"asn\": 65110,\n                \"authKey\": \"0xzxgA9YoW9h58u8EXAMPLE\",\n                \"addressFamily\": \"ipv4\",\n                \"amazonAddress\": \"192.168.1.1/30\",\n                \"customerAddress\": \"192.168.1.2/30\",\n                \"bgpPeerState\": \"pending\",\n                \"bgpStatus\": \"down\",\n                \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\"\n            }\n        ],\n        \"region\": \"sa-east-1\",\n        \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\",\n        \"tags\": [\n            {\n                \"key\": \"Tag\",\n                \"value\": \"Example\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Creating a Hosted Transit Virtual Interface in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "associate-connection-with-lag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/associate-connection-with-lag.html",
      "command_description": "Description\n\nAssociates an existing connection with a link aggregation group (LAG). The connection is interrupted and re-established as a member of the LAG (connectivity to Amazon Web Services is interrupted). The connection must be hosted on the same Direct Connect endpoint as the LAG, and its bandwidth must match the bandwidth for the LAG. You can re-associate a connection that’s currently associated with a different LAG; however, if removing the connection would cause the original LAG to fall below its setting for minimum number of operational connections, the request fails.\n\nAny virtual interfaces that are directly associated with the connection are automatically re-associated with the LAG. If the connection was originally associated with a different LAG, the virtual interfaces remain associated with the original LAG.\n\nFor interconnects, any hosted connections are automatically re-associated with the LAG. If the interconnect was originally associated with a different LAG, the hosted connections remain associated with the original LAG.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-connection-with-lag\n--connection-id <value>\n--lag-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--lag-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--lag-id (string)\n\nThe ID of the LAG with which to associate the connection.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo associate a connection with a LAG\n\nThe following example associates the specified connection with the specified LAG.\n\nCommand:\n\naws directconnect associate-connection-with-lag --lag-id dxlag-fhccu14t --connection-id dxcon-fg9607vm\n\n\nOutput:\n\n{\n  \"ownerAccount\": \"123456789012\",\n  \"connectionId\": \"dxcon-fg9607vm\",\n  \"lagId\": \"dxlag-fhccu14t\",\n  \"connectionState\": \"requested\",\n  \"bandwidth\": \"1Gbps\",\n  \"location\": \"EqDC2\",\n  \"connectionName\": \"Con2ForLag\",\n  \"region\": \"us-east-1\"\n}\n"
    },
    {
      "command_name": "associate-hosted-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/associate-hosted-connection.html",
      "command_description": "Description\n\nAssociates a hosted connection and its virtual interfaces with a link aggregation group (LAG) or interconnect. If the target interconnect or LAG has an existing hosted connection with a conflicting VLAN number or IP address, the operation fails. This action temporarily interrupts the hosted connection’s connectivity to Amazon Web Services as it is being migrated.\n\nNote\n\nIntended for use by Direct Connect Partners only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-hosted-connection\n--connection-id <value>\n--parent-connection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--parent-connection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the hosted connection.\n\n--parent-connection-id (string)\n\nThe ID of the interconnect or the LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo associate a hosted connection with a LAG\n\nThe following example associates the specified hosted connection with the specified LAG.\n\nCommand:\n\naws directconnect associate-hosted-connection --parent-connection-id dxlag-fhccu14t --connection-id dxcon-fg9607vm\n\n\nOutput:\n\n{\n  \"partnerName\": \"TIVIT\",\n  \"vlan\": 101,\n  \"ownerAccount\": \"123456789012\",\n  \"connectionId\": \"dxcon-fg9607vm\",\n  \"lagId\": \"dxlag-fhccu14t\",\n  \"connectionState\": \"ordering\",\n  \"bandwidth\": \"500Mbps\",\n  \"location\": \"TIVIT\",\n  \"connectionName\": \"mydcinterconnect\",\n  \"region\": \"sa-east-1\"\n}\n"
    },
    {
      "command_name": "associate-mac-sec-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/associate-mac-sec-key.html",
      "command_description": "Description\n\nAssociates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity Association Key (CAK) pair with an Direct Connect dedicated connection.\n\nYou must supply either the secretARN, or the CKN/CAK (ckn and cak ) pair in the request.\n\nFor information about MAC Security (MACsec) key considerations, see MACsec pre-shared CKN/CAK key considerations in the Direct Connect User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-mac-sec-key\n--connection-id <value>\n[--secret-arn <value>]\n[--ckn <value>]\n[--cak <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--secret-arn <value>]",
        "[--ckn <value>]",
        "[--cak <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).\n\nYou can use DescribeConnections or DescribeLags to retrieve connection ID.\n\n--secret-arn (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key to associate with the dedicated connection.\n\nYou can use DescribeConnections or DescribeLags to retrieve the MAC Security (MACsec) secret key.\n\nIf you use this request parameter, you do not use the ckn and cak request parameters.\n\n--ckn (string)\n\nThe MAC Security (MACsec) CKN to associate with the dedicated connection.\n\nYou can create the CKN/CAK pair using an industry standard tool.\n\nThe valid values are 64 hexadecimal characters (0-9, A-E).\n\nIf you use this request parameter, you must use the cak request parameter and not use the secretARN request parameter.\n\n--cak (string)\n\nThe MAC Security (MACsec) CAK to associate with the dedicated connection.\n\nYou can create the CKN/CAK pair using an industry standard tool.\n\nThe valid values are 64 hexadecimal characters (0-9, A-E).\n\nIf you use this request parameter, you must use the ckn request parameter and not use the secretARN request parameter.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionId -> (string)\n\nThe ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the dedicated connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format."
    },
    {
      "command_name": "associate-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/associate-virtual-interface.html",
      "command_description": "Description\n\nAssociates a virtual interface with a specified link aggregation group (LAG) or connection. Connectivity to Amazon Web Services is temporarily interrupted as the virtual interface is being migrated. If the target connection or LAG has an associated virtual interface with a conflicting VLAN number or a conflicting IP address, the operation fails.\n\nVirtual interfaces associated with a hosted connection cannot be associated with a LAG; hosted connections must be migrated along with their virtual interfaces using AssociateHostedConnection .\n\nTo reassociate a virtual interface to a new connection or LAG, the requester must own either the virtual interface itself or the connection to which the virtual interface is currently associated. Additionally, the requester must own the connection or LAG for the association.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-virtual-interface\n--virtual-interface-id <value>\n--connection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "--connection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--connection-id (string)\n\nThe ID of the LAG or connection.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo associate a virtual interface with a connection\n\nThe following example associates the specified virtual interface with the specified LAG. Alternatively, to associate the virtual interface with a connection, specify the ID of an AWS Direct Connect connection for --connection-id; for example, dxcon-ffnikghc.\n\nCommand:\n\naws directconnect associate-virtual-interface --connection-id dxlag-ffjhj9lx --virtual-interface-id dxvif-fgputw0j\n\n\nOutput:\n\n{\n  \"virtualInterfaceState\": \"pending\",\n  \"asn\": 65000,\n  \"vlan\": 123,\n  \"customerAddress\": \"169.254.255.2/30\",\n  \"ownerAccount\": \"123456789012\",\n  \"connectionId\": \"dxlag-ffjhj9lx\",\n  \"addressFamily\": \"ipv4\",\n  \"virtualGatewayId\": \"vgw-38e90b51\",\n  \"virtualInterfaceId\": \"dxvif-fgputw0j\",\n  \"authKey\": \"0x123pK5_VBqv.UQ3kJ4123_\",\n  \"routeFilterPrefixes\": [],\n  \"location\": \"CSVA1\",\n  \"bgpPeers\": [\n      {\n          \"bgpStatus\": \"down\",\n          \"customerAddress\": \"169.254.255.2/30\",\n          \"addressFamily\": \"ipv4\",\n          \"authKey\": \"0x123pK5_VBqv.UQ3kJ4123_\",\n          \"bgpPeerState\": \"deleting\",\n          \"amazonAddress\": \"169.254.255.1/30\",\n          \"asn\": 65000\n      },\n      {\n          \"bgpStatus\": \"down\",\n          \"customerAddress\": \"169.254.255.2/30\",\n          \"addressFamily\": \"ipv4\",\n          \"authKey\": \"0x123pK5_VBqv.UQ3kJ4123_\",\n          \"bgpPeerState\": \"pending\",\n          \"amazonAddress\": \"169.254.255.1/30\",\n          \"asn\": 65000\n      }\n  ],\n  \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fgputw0j\\\">\\n  <vlan>123</vlan>\\n  <customer_address>169.254.255.2/30</customer_address>\\n  <amazon_address>169.254.255.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>0x123pK5_VBqv.UQ3kJ4123_</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n  \"amazonAddress\": \"169.254.255.1/30\",\n  \"virtualInterfaceType\": \"private\",\n  \"virtualInterfaceName\": \"VIF1A\"\n}\n"
    },
    {
      "command_name": "confirm-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/confirm-connection.html",
      "command_description": "Description\n\nConfirms the creation of the specified hosted connection on an interconnect.\n\nUpon creation, the hosted connection is initially in the Ordering state, and remains in this state until the owner confirms creation of the hosted connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  confirm-connection\n--connection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the hosted connection.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.",
      "command_examples": "Examples\n\nTo confirm the creation of a hosted connection on an interconnect\n\nThe following confirm-connection command confirms the creation of a hosted connection on an interconnect:\n\naws directconnect confirm-connection --connection-id dxcon-fg2wi7hy\n\n\nOutput:\n\n{\n    \"connectionState\": \"pending\"\n}\n"
    },
    {
      "command_name": "confirm-customer-agreement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/confirm-customer-agreement.html",
      "command_description": "Description\n\nThe confirmation of the terms of agreement when creating the connection/link aggregation group (LAG).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  confirm-customer-agreement\n[--agreement-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--agreement-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--agreement-name (string)\n\nThe name of the customer agreement.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe status of the customer agreement when the connection was created. This will be either signed or unsigned ."
    },
    {
      "command_name": "confirm-private-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/confirm-private-virtual-interface.html",
      "command_description": "Description\n\nAccepts ownership of a private virtual interface created by another Amazon Web Services account.\n\nAfter the virtual interface owner makes this call, the virtual interface is created and attached to the specified virtual private gateway or Direct Connect gateway, and is made available to handle traffic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  confirm-private-virtual-interface\n--virtual-interface-id <value>\n[--virtual-gateway-id <value>]\n[--direct-connect-gateway-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--virtual-gateway-id <value>]",
        "[--direct-connect-gateway-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--virtual-gateway-id (string)\n\nThe ID of the virtual private gateway.\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.",
      "command_examples": "Examples\n\nTo accept ownership of a private virtual interface\n\nThe following confirm-private-virtual-interface command accepts ownership of a private virtual interface created by another customer:\n\naws directconnect confirm-private-virtual-interface --virtual-interface-id dxvif-fgy8orxu --virtual-gateway-id vgw-e4a47df9\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"pending\"\n}\n"
    },
    {
      "command_name": "confirm-public-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/confirm-public-virtual-interface.html",
      "command_description": "Description\n\nAccepts ownership of a public virtual interface created by another Amazon Web Services account.\n\nAfter the virtual interface owner makes this call, the specified virtual interface is created and made available to handle traffic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  confirm-public-virtual-interface\n--virtual-interface-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.",
      "command_examples": "Examples\n\nTo accept ownership of a public virtual interface\n\nThe following confirm-public-virtual-interface command accepts ownership of a public virtual interface created by another customer:\n\naws directconnect confirm-public-virtual-interface --virtual-interface-id dxvif-fg9xo9vp\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"verifying\"\n}\n"
    },
    {
      "command_name": "confirm-transit-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/confirm-transit-virtual-interface.html",
      "command_description": "Description\n\nAccepts ownership of a transit virtual interface created by another Amazon Web Services account.\n\nAfter the owner of the transit virtual interface makes this call, the specified transit virtual interface is created and made available to handle traffic.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  confirm-transit-virtual-interface\n--virtual-interface-id <value>\n--direct-connect-gateway-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "--direct-connect-gateway-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.",
      "command_examples": "Examples\n\nTo accept ownership of a transit virtual interface\n\nThe following confirm-transit-virtual-interface accepts ownership of a transit virtual interface created by another customer.\n\naws directconnect confirm-transit-virtual-interface \\\n    --virtual-interface-id dxvif-fEXAMPLE \\\n    --direct-connect-gateway-id 4112ccf9-25e9-4111-8237-b6c5dEXAMPLE\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"pending\"\n}\n\n\nFor more information, see Accepting a Hosted Virtual Interface in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "create-bgp-peer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-bgp-peer.html",
      "command_description": "Description\n\nCreates a BGP peer on the specified virtual interface.\n\nYou must create a BGP peer for the corresponding address family (IPv4/IPv6) in order to access Amazon Web Services resources that also use that address family.\n\nIf logical redundancy is not supported by the connection, interconnect, or LAG, the BGP peer cannot be in the same address family as an existing BGP peer on the virtual interface.\n\nWhen creating a IPv6 BGP peer, omit the Amazon address and customer address. IPv6 addresses are automatically assigned from the Amazon pool of IPv6 addresses; you cannot specify custom IPv6 addresses.\n\nFor a public virtual interface, the Autonomous System Number (ASN) must be private or already on the allow list for the virtual interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bgp-peer\n[--virtual-interface-id <value>]\n[--new-bgp-peer <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--virtual-interface-id <value>]",
        "[--new-bgp-peer <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--new-bgp-peer (structure)\n\nInformation about the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nShorthand Syntax:\n\nasn=integer,authKey=string,addressFamily=string,amazonAddress=string,customerAddress=string\n\n\nJSON Syntax:\n\n{\n  \"asn\": integer,\n  \"authKey\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterface -> (structure)\n\nThe virtual interface.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo create an IPv6 BGP peering session\n\nThe following example creates an IPv6 BGP peering session on private virtual interface dxvif-fg1vuj3d. The peer IPv6 addresses are automatically allocated by Amazon.\n\nCommand:\n\naws directconnect create-bgp-peer --virtual-interface-id dxvif-fg1vuj3d --new-bgp-peer asn=64600,addressFamily=ipv6\n\n\nOutput:\n\n{\n  \"virtualInterface\": {\n      \"virtualInterfaceState\": \"available\",\n      \"asn\": 65000,\n      \"vlan\": 125,\n      \"customerAddress\": \"169.254.255.2/30\",\n      \"ownerAccount\": \"123456789012\",\n      \"connectionId\": \"dxcon-fguhmqlc\",\n      \"addressFamily\": \"ipv4\",\n      \"virtualGatewayId\": \"vgw-f9eb0c90\",\n      \"virtualInterfaceId\": \"dxvif-fg1vuj3d\",\n      \"authKey\": \"0xC_ukbCerl6EYA0example\",\n      \"routeFilterPrefixes\": [],\n      \"location\": \"EqDC2\",\n      \"bgpPeers\": [\n          {\n              \"bgpStatus\": \"down\",\n              \"customerAddress\": \"169.254.255.2/30\",\n              \"addressFamily\": \"ipv4\",\n              \"authKey\": \"0xC_ukbCerl6EYA0uexample\",\n              \"bgpPeerState\": \"available\",\n              \"amazonAddress\": \"169.254.255.1/30\",\n              \"asn\": 65000\n          },\n          {\n              \"bgpStatus\": \"down\",\n              \"customerAddress\": \"2001:db8:1100:2f0:0:1:9cb4:4216/125\",\n              \"addressFamily\": \"ipv6\",\n              \"authKey\": \"0xS27kAIU_VHPjjAexample\",\n              \"bgpPeerState\": \"pending\",\n              \"amazonAddress\": \"2001:db8:1100:2f0:0:1:9cb4:4211/125\",\n              \"asn\": 64600\n          }\n      ],\n      \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fg1vuj3d\\\">\\n  <vlan>125</vlan>\\n  <customer_address>169.254.255.2/30</customer_address>\\n  <amazon_address>169.254.255.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>0xC_ukbCerl6EYA0uexample</bgp_auth_key>\\n  <ipv6_customer_address>2001:db8:1100:2f0:0:1:9cb4:4216/125</ipv6_customer_address>\\n  <ipv6_amazon_address>2001:db8:1100:2f0:0:1:9cb4:4211/125</ipv6_amazon_address>\\n  <ipv6_bgp_asn>64600</ipv6_bgp_asn>\\n  <ipv6_bgp_auth_key>0xS27kAIU_VHPjjAexample</ipv6_bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n      \"amazonAddress\": \"169.254.255.1/30\",\n      \"virtualInterfaceType\": \"private\",\n      \"virtualInterfaceName\": \"Test\"\n  }\n}\n"
    },
    {
      "command_name": "create-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-connection.html",
      "command_description": "Description\n\nCreates a connection between a customer network and a specific Direct Connect location.\n\nA connection links your internal network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an Direct Connect router.\n\nTo find the locations for your Region, use DescribeLocations .\n\nYou can automatically add the new connection to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new connection is allocated on the same Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no connection is created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connection\n--location <value>\n--bandwidth <value>\n--connection-name <value>\n[--lag-id <value>]\n[--tags <value>]\n[--provider-name <value>]\n[--request-mac-sec | --no-request-mac-sec]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--location <value>",
        "--bandwidth <value>",
        "--connection-name <value>",
        "[--lag-id <value>]",
        "[--tags <value>]",
        "[--provider-name <value>]",
        "[--request-mac-sec | --no-request-mac-sec]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--location (string)\n\nThe location of the connection.\n\n--bandwidth (string)\n\nThe bandwidth of the connection.\n\n--connection-name (string)\n\nThe name of the connection.\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--tags (list)\n\nThe tags to associate with the lag.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--provider-name (string)\n\nThe name of the service provider associated with the requested connection.\n\n--request-mac-sec | --no-request-mac-sec (boolean)\n\nIndicates whether you want the connection to support MAC Security (MACsec).\n\nMAC Security (MACsec) is only available on dedicated connections. For information about MAC Security (MACsec) prerequisties, see MACsec prerequisties in the Direct Connect User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo create a connection from your network to an AWS Direct Connect location\n\nThe following create-connection command creates a connection from your network to an AWS Direct Connect location:\n\naws directconnect create-connection --location TIVIT --bandwidth 1Gbps --connection-name \"Connection to AWS\"\n\n\nOutput:\n\n{\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-fg31dyv6\",\n    \"connectionState\": \"requested\",\n    \"bandwidth\": \"1Gbps\",\n    \"location\": \"TIVIT\",\n    \"connectionName\": \"Connection to AWS\",\n    \"region\": \"sa-east-1\"\n}\n"
    },
    {
      "command_name": "create-direct-connect-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-direct-connect-gateway.html",
      "command_description": "Description\n\nCreates a Direct Connect gateway, which is an intermediate object that enables you to connect a set of virtual interfaces and virtual private gateways. A Direct Connect gateway is global and visible in any Amazon Web Services Region after it is created. The virtual interfaces and virtual private gateways that are connected through a Direct Connect gateway can be in different Amazon Web Services Regions. This enables you to connect to a VPC in any Region, regardless of the Region in which the virtual interfaces are located, and pass traffic between them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-direct-connect-gateway\n--direct-connect-gateway-name <value>\n[--amazon-side-asn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-name <value>",
        "[--amazon-side-asn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-name (string)\n\nThe name of the Direct Connect gateway.\n\n--amazon-side-asn (long)\n\nThe autonomous system number (ASN) for Border Gateway Protocol (BGP) to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294. The default is 64512.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGateway -> (structure)\n\nThe Direct Connect gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayName -> (string)\n\nThe name of the Direct Connect gateway.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\ndirectConnectGatewayState -> (string)\n\nThe state of the Direct Connect gateway. The following are the possible values:\n\npending : The initial state after calling CreateDirectConnectGateway .\n\navailable : The Direct Connect gateway is ready for use.\n\ndeleting : The initial state after calling DeleteDirectConnectGateway .\n\ndeleted : The Direct Connect gateway is deleted and cannot pass traffic.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.",
      "command_examples": "Examples\n\nTo create a Direct Connect gateway\n\nThe following example creates a Direct Connect gateway with the name DxGateway1.\n\nCommand:\n\naws directconnect create-direct-connect-gateway --direct-connect-gateway-name \"DxGateway1\"\n\n\nOutput:\n\n{\n  \"directConnectGateway\": {\n      \"amazonSideAsn\": 64512,\n      \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bdexample\",\n      \"ownerAccount\": \"123456789012\",\n      \"directConnectGatewayName\": \"DxGateway1\",\n      \"directConnectGatewayState\": \"available\"\n  }\n}\n"
    },
    {
      "command_name": "create-direct-connect-gateway-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-direct-connect-gateway-association.html",
      "command_description": "Description\n\nCreates an association between a Direct Connect gateway and a virtual private gateway. The virtual private gateway must be attached to a VPC and must not be associated with another Direct Connect gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-direct-connect-gateway-association\n--direct-connect-gateway-id <value>\n[--gateway-id <value>]\n[--add-allowed-prefixes-to-direct-connect-gateway <value>]\n[--virtual-gateway-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-id <value>",
        "[--gateway-id <value>]",
        "[--add-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--virtual-gateway-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--gateway-id (string)\n\nThe ID of the virtual private gateway or transit gateway.\n\n--add-allowed-prefixes-to-direct-connect-gateway (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway\n\nThis parameter is required when you create an association to a transit gateway.\n\nFor information about how to set the prefixes, see Allowed Prefixes in the Direct Connect User Guide .\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--virtual-gateway-id (string)\n\nThe ID of the virtual private gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociation -> (structure)\n\nThe association to be created.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated gateway.\n\nassociationState -> (string)\n\nThe state of the association. The following are the possible values:\n\nassociating : The initial state after calling CreateDirectConnectGatewayAssociation .\n\nassociated : The Direct Connect gateway and virtual private gateway or transit gateway are successfully associated and ready to pass traffic.\n\ndisassociating : The initial state after calling DeleteDirectConnectGatewayAssociation .\n\ndisassociated : The virtual private gateway or transit gateway is disassociated from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual private gateway or transit gateway is stopped.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nassociationId -> (string)\n\nThe ID of the Direct Connect gateway association.\n\nallowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\nvirtualGatewayRegion -> (string)\n\nThe Amazon Web Services Region where the virtual private gateway is located.\n\nvirtualGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway.",
      "command_examples": "Examples\n\nTo associate a virtual private gateway with a Direct Connect gateway\n\nThe following example associates virtual private gateway vgw-6efe725e with Direct Connect gateway 5f294f92-bafb-4011-916d-9b0bexample. You must run the command in the region in which the virtual private gateway is located.\n\nCommand:\n\naws directconnect create-direct-connect-gateway-association --direct-connect-gateway-id 5f294f92-bafb-4011-916d-9b0bexample --virtual-gateway-id vgw-6efe725e\n\n\nOutput:\n\n{\n  \"directConnectGatewayAssociation\": {\n      \"associationState\": \"associating\",\n      \"virtualGatewayOwnerAccount\": \"123456789012\",\n      \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bexample\",\n      \"virtualGatewayId\": \"vgw-6efe725e\",\n      \"virtualGatewayRegion\": \"us-east-2\"\n  }\n}\n"
    },
    {
      "command_name": "create-direct-connect-gateway-association-proposal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-direct-connect-gateway-association-proposal.html",
      "command_description": "Description\n\nCreates a proposal to associate the specified virtual private gateway or transit gateway with the specified Direct Connect gateway.\n\nYou can associate a Direct Connect gateway and virtual private gateway or transit gateway that is owned by any Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-direct-connect-gateway-association-proposal\n--direct-connect-gateway-id <value>\n--direct-connect-gateway-owner-account <value>\n--gateway-id <value>\n[--add-allowed-prefixes-to-direct-connect-gateway <value>]\n[--remove-allowed-prefixes-to-direct-connect-gateway <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-id <value>",
        "--direct-connect-gateway-owner-account <value>",
        "--gateway-id <value>",
        "[--add-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--remove-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--direct-connect-gateway-owner-account (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\n--gateway-id (string)\n\nThe ID of the virtual private gateway or transit gateway.\n\n--add-allowed-prefixes-to-direct-connect-gateway (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--remove-allowed-prefixes-to-direct-connect-gateway (list)\n\nThe Amazon VPC prefixes to no longer advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociationProposal -> (structure)\n\nInformation about the Direct Connect gateway proposal.\n\nproposalId -> (string)\n\nThe ID of the association proposal.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\nproposalState -> (string)\n\nThe state of the proposal. The following are possible values:\n\naccepted : The proposal has been accepted. The Direct Connect gateway association is available to use in this state.\n\ndeleted : The proposal has been deleted by the owner that made the proposal. The Direct Connect gateway association cannot be used in this state.\n\nrequested : The proposal has been requested. The Direct Connect gateway association cannot be used in this state.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nexistingAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe existing Amazon VPC prefixes advertised to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nrequestedAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.",
      "command_examples": "Examples\n\nTo create a proposal to associate the specified transit gateway with the specified Direct Connect gateway\n\nThe following create-direct-connect-gateway-association-proposal example creates a proposal that associates the specified transit gateway with the specified Direct Connect gateway.\n\naws directconnect create-direct-connect-gateway-association-proposal \\\n    --direct-connect-gateway-id 11460968-4ac1-4fd3-bdb2-00599EXAMPLE \\\n    --direct-connect-gateway-owner-account 111122223333 \\\n    --gateway-id tgw-02f776b1a7EXAMPLE \\\n    --add-allowed-prefixes-to-direct-connect-gateway cidr=192.168.1.0/30\n\n\nOutput:\n\n{\n    \"directConnectGatewayAssociationProposal\": {\n        \"proposalId\": \"cb7f41cb-8128-43a5-93b1-dcaedEXAMPLE\",\n        \"directConnectGatewayId\": \"11460968-4ac1-4fd3-bdb2-00599EXAMPLE\",\n        \"directConnectGatewayOwnerAccount\": \"111122223333\",\n        \"proposalState\": \"requested\",\n        \"associatedGateway\": {\n            \"id\": \"tgw-02f776b1a7EXAMPLE\",\n            \"type\": \"transitGateway\",\n            \"ownerAccount\": \"111122223333\",\n            \"region\": \"us-east-1\"\n        },\n        \"requestedAllowedPrefixesToDirectConnectGateway\": [\n            {\n                \"cidr\": \"192.168.1.0/30\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Creating a Transit Gateway Association Proposal in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "create-interconnect",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-interconnect.html",
      "command_description": "Description\n\nCreates an interconnect between an Direct Connect Partner’s network and a specific Direct Connect location.\n\nAn interconnect is a connection that is capable of hosting other connections. The Direct Connect Partner can use an interconnect to provide Direct Connect hosted connections to customers through their own network services. Like a standard connection, an interconnect links the partner’s network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end is connected to the partner’s router, the other to an Direct Connect router.\n\nYou can automatically add the new interconnect to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new interconnect is allocated on the same Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no interconnect is created.\n\nFor each end customer, the Direct Connect Partner provisions a connection on their interconnect by calling AllocateHostedConnection . The end customer can then connect to Amazon Web Services resources by creating a virtual interface on their connection, using the VLAN assigned to them by the Direct Connect Partner.\n\nNote\n\nIntended for use by Direct Connect Partners only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-interconnect\n--interconnect-name <value>\n--bandwidth <value>\n--location <value>\n[--lag-id <value>]\n[--tags <value>]\n[--provider-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--interconnect-name <value>",
        "--bandwidth <value>",
        "--location <value>",
        "[--lag-id <value>]",
        "[--tags <value>]",
        "[--provider-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--interconnect-name (string)\n\nThe name of the interconnect.\n\n--bandwidth (string)\n\nThe port bandwidth, in Gbps. The possible values are 1 and 10.\n\n--location (string)\n\nThe location of the interconnect.\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--tags (list)\n\nThe tags to associate with the interconnect.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--provider-name (string)\n\nThe name of the service provider associated with the interconnect.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninterconnectId -> (string)\n\nThe ID of the interconnect.\n\ninterconnectName -> (string)\n\nThe name of the interconnect.\n\ninterconnectState -> (string)\n\nThe state of the interconnect. The following are the possible values:\n\nrequested : The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The interconnect is approved, and is being initialized.\n\navailable : The network link is up, and the interconnect is ready for use.\n\ndown : The network link is down.\n\ndeleting : The interconnect is being deleted.\n\ndeleted : The interconnect is deleted.\n\nunknown : The state of the interconnect is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the interconnect supports a secondary BGP in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the interconnect.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the interconnect.",
      "command_examples": "Examples\n\nTo create an interconnect between a partner’s network and AWS\n\nThe following create-interconnect command creates an interconnect between an AWS Direct Connect partner’s network and a specific AWS Direct Connect location:\n\naws directconnect create-interconnect --interconnect-name \"1G Interconnect to AWS\" --bandwidth 1Gbps --location TIVIT\n\n\nOutput:\n\n{\n    \"region\": \"sa-east-1\",\n    \"bandwidth\": \"1Gbps\",\n    \"location\": \"TIVIT\",\n    \"interconnectName\": \"1G Interconnect to AWS\",\n    \"interconnectId\": \"dxcon-fgktov66\",\n    \"interconnectState\": \"requested\"\n}\n"
    },
    {
      "command_name": "create-lag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-lag.html",
      "command_description": "Description\n\nCreates a link aggregation group (LAG) with the specified number of bundled physical dedicated connections between the customer network and a specific Direct Connect location. A LAG is a logical interface that uses the Link Aggregation Control Protocol (LACP) to aggregate multiple interfaces, enabling you to treat them as a single interface.\n\nAll connections in a LAG must use the same bandwidth (either 1Gbps or 10Gbps) and must terminate at the same Direct Connect endpoint.\n\nYou can have up to 10 dedicated connections per LAG. Regardless of this limit, if you request more connections for the LAG than Direct Connect can allocate on a single endpoint, no LAG is created.\n\nYou can specify an existing physical dedicated connection or interconnect to include in the LAG (which counts towards the total number of connections). Doing so interrupts the current physical dedicated connection, and re-establishes them as a member of the LAG. The LAG will be created on the same Direct Connect endpoint to which the dedicated connection terminates. Any virtual interfaces associated with the dedicated connection are automatically disassociated and re-associated with the LAG. The connection ID does not change.\n\nIf the Amazon Web Services account used to create a LAG is a registered Direct Connect Partner, the LAG is automatically enabled to host sub-connections. For a LAG owned by a partner, any associated virtual interfaces cannot be directly configured.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-lag\n--number-of-connections <value>\n--location <value>\n--connections-bandwidth <value>\n--lag-name <value>\n[--connection-id <value>]\n[--tags <value>]\n[--child-connection-tags <value>]\n[--provider-name <value>]\n[--request-mac-sec | --no-request-mac-sec]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--number-of-connections <value>",
        "--location <value>",
        "--connections-bandwidth <value>",
        "--lag-name <value>",
        "[--connection-id <value>]",
        "[--tags <value>]",
        "[--child-connection-tags <value>]",
        "[--provider-name <value>]",
        "[--request-mac-sec | --no-request-mac-sec]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--number-of-connections (integer)\n\nThe number of physical dedicated connections initially provisioned and bundled by the LAG.\n\n--location (string)\n\nThe location for the LAG.\n\n--connections-bandwidth (string)\n\nThe bandwidth of the individual physical dedicated connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.\n\n--lag-name (string)\n\nThe name of the LAG.\n\n--connection-id (string)\n\nThe ID of an existing dedicated connection to migrate to the LAG.\n\n--tags (list)\n\nThe tags to associate with the LAG.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--child-connection-tags (list)\n\nThe tags to associate with the automtically created LAGs.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--provider-name (string)\n\nThe name of the service provider associated with the LAG.\n\n--request-mac-sec | --no-request-mac-sec (boolean)\n\nIndicates whether the connection will support MAC Security (MACsec).\n\nNote\n\nAll connections in the LAG must be capable of supporting MAC Security (MACsec). For information about MAC Security (MACsec) prerequisties, see MACsec prerequisties in the Direct Connect User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionsBandwidth -> (string)\n\nThe individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.\n\nnumberOfConnections -> (integer)\n\nThe number of physical dedicated connections bundled by the LAG, up to a maximum of 10.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the LAG.\n\nlagName -> (string)\n\nThe name of the LAG.\n\nlagState -> (string)\n\nThe state of the LAG. The following are the possible values:\n\nrequested : The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.\n\npending : The LAG has been approved and is being initialized.\n\navailable : The network link is established and the LAG is ready for use.\n\ndown : The network link is down.\n\ndeleting : The LAG is being deleted.\n\ndeleted : The LAG is deleted.\n\nunknown : The state of the LAG is not available.\n\nlocation -> (string)\n\nThe location of the LAG.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nminimumLinks -> (integer)\n\nThe minimum number of physical dedicated connections that must be operational for the LAG itself to be operational.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nconnections -> (list)\n\nThe connections bundled by the LAG.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.\n\nallowsHostedConnections -> (boolean)\n\nIndicates whether the LAG can host other connections.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the LAG.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the LAG.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the LAG supports MAC Security (MACsec).\n\nencryptionMode -> (string)\n\nThe LAG MAC Security (MACsec) encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the LAG.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo create a LAG with new connections\n\nThe following example creates a LAG and requests two new AWS Direct Connect connections for the LAG with a bandwidth of 1 Gbps.\n\nCommand:\n\naws directconnect create-lag --location CSVA1 --number-of-connections 2 --connections-bandwidth 1Gbps --lag-name 1GBLag\n\n\nOutput:\n\n{\n  \"awsDevice\": \"CSVA1-23u8tlpaz8iks\",\n  \"numberOfConnections\": 2,\n  \"lagState\": \"pending\",\n  \"ownerAccount\": \"123456789012\",\n  \"lagName\": \"1GBLag\",\n  \"connections\": [\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-ffqr6x5q\",\n          \"lagId\": \"dxlag-ffjhj9lx\",\n          \"connectionState\": \"requested\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"CSVA1\",\n          \"connectionName\": \"Requested Connection 1 for Lag dxlag-ffjhj9lx\",\n          \"region\": \"us-east-1\"\n      },\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-fflqyj95\",\n          \"lagId\": \"dxlag-ffjhj9lx\",\n          \"connectionState\": \"requested\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"CSVA1\",\n          \"connectionName\": \"Requested Connection 2 for Lag dxlag-ffjhj9lx\",\n          \"region\": \"us-east-1\"\n      }\n  ],\n  \"lagId\": \"dxlag-ffjhj9lx\",\n  \"minimumLinks\": 0,\n  \"connectionsBandwidth\": \"1Gbps\",\n  \"region\": \"us-east-1\",\n  \"location\": \"CSVA1\"\n}\n\n\nTo create a LAG using an existing connection\n\nThe following example creates a LAG from an existing connection in your account, and requests a second new connection for the LAG with the same bandwidth and location as the existing connection.\n\nCommand:\n\naws directconnect create-lag --location EqDC2 --number-of-connections 2 --connections-bandwidth 1Gbps --lag-name 2ConnLAG --connection-id dxcon-fgk145dr\n\n\nOutput:\n\n{\n  \"awsDevice\": \"EqDC2-4h6ce2r1bes6\",\n  \"numberOfConnections\": 2,\n  \"lagState\": \"pending\",\n  \"ownerAccount\": \"123456789012\",\n  \"lagName\": \"2ConnLAG\",\n  \"connections\": [\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-fh6ljcvo\",\n          \"lagId\": \"dxlag-fhccu14t\",\n          \"connectionState\": \"requested\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"EqDC2\",\n          \"connectionName\": \"Requested Connection 1 for Lag dxlag-fhccu14t\",\n          \"region\": \"us-east-1\"\n      },\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-fgk145dr\",\n          \"lagId\": \"dxlag-fhccu14t\",\n          \"connectionState\": \"down\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"EqDC2\",\n          \"connectionName\": \"VAConn1\",\n          \"region\": \"us-east-1\"\n      }\n  ],\n  \"lagId\": \"dxlag-fhccu14t\",\n  \"minimumLinks\": 0,\n  \"connectionsBandwidth\": \"1Gbps\",\n  \"region\": \"us-east-1\",\n  \"location\": \"EqDC2\"\n}\n"
    },
    {
      "command_name": "create-private-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-private-virtual-interface.html",
      "command_description": "Description\n\nCreates a private virtual interface. A virtual interface is the VLAN that transports Direct Connect traffic. A private virtual interface can be connected to either a Direct Connect gateway or a Virtual Private Gateway (VGW). Connecting the private virtual interface to a Direct Connect gateway enables the possibility for connecting to multiple VPCs, including VPCs in different Amazon Web Services Regions. Connecting the private virtual interface to a VGW only provides access to a single VPC within the same Region.\n\nSetting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update to the underlying physical connection if it wasn’t updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call DescribeConnections . To check whether your virtual interface supports jumbo frames, call DescribeVirtualInterfaces .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-private-virtual-interface\n--connection-id <value>\n--new-private-virtual-interface <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--new-private-virtual-interface <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--new-private-virtual-interface (structure)\n\nInformation about the private virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ntags -> (list)\n\nThe tags associated with the private virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,mtu=integer,authKey=string,amazonAddress=string,customerAddress=string,addressFamily=string,virtualGatewayId=string,directConnectGatewayId=string,tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"mtu\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"virtualGatewayId\": \"string\",\n  \"directConnectGatewayId\": \"string\",\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo create a private virtual interface\n\nThe following create-private-virtual-interface command creates a private virtual interface:\n\naws directconnect create-private-virtual-interface --connection-id dxcon-ffjrkx17 --new-private-virtual-interface virtualInterfaceName=PrivateVirtualInterface,vlan=101,asn=65000,authKey=asdf34example,amazonAddress=192.168.1.1/30,customerAddress=192.168.1.2/30,virtualGatewayId=vgw-aba37db6\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"pending\",\n    \"asn\": 65000,\n    \"vlan\": 101,\n    \"customerAddress\": \"192.168.1.2/30\",\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-ffjrkx17\",\n    \"virtualGatewayId\": \"vgw-aba37db6\",\n    \"virtualInterfaceId\": \"dxvif-ffhhk74f\",\n    \"authKey\": \"asdf34example\",\n    \"routeFilterPrefixes\": [],\n    \"location\": \"TIVIT\",\n    \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-ffhhk74f\\\">\\n  <vlan>101</vlan>\\n  <customer_address>192.168.1.2/30</customer_address>\\n  <amazon_address>192.168.1.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n    \"amazonAddress\": \"192.168.1.1/30\",\n    \"virtualInterfaceType\": \"private\",\n    \"virtualInterfaceName\": \"PrivateVirtualInterface\"\n}\n"
    },
    {
      "command_name": "create-public-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-public-virtual-interface.html",
      "command_description": "Description\n\nCreates a public virtual interface. A virtual interface is the VLAN that transports Direct Connect traffic. A public virtual interface supports sending traffic to public services of Amazon Web Services such as Amazon S3.\n\nWhen creating an IPv6 public virtual interface (addressFamily is ipv6 ), leave the customer and amazon address fields blank to use auto-assigned IPv6 space. Custom IPv6 addresses are not supported.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-public-virtual-interface\n--connection-id <value>\n--new-public-virtual-interface <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--new-public-virtual-interface <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--new-public-virtual-interface (structure)\n\nInformation about the public virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\ntags -> (list)\n\nThe tags associated with the public virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,authKey=string,amazonAddress=string,customerAddress=string,addressFamily=string,routeFilterPrefixes=[{cidr=string},{cidr=string}],tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"routeFilterPrefixes\": [\n    {\n      \"cidr\": \"string\"\n    }\n    ...\n  ],\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo create a public virtual interface\n\nThe following create-public-virtual-interface command creates a public virtual interface:\n\naws directconnect create-public-virtual-interface --connection-id dxcon-ffjrkx17 --new-public-virtual-interface virtualInterfaceName=PublicVirtualInterface,vlan=2000,asn=65000,authKey=asdf34example,amazonAddress=203.0.113.1/30,customerAddress=203.0.113.2/30,routeFilterPrefixes=[{cidr=203.0.113.0/30},{cidr=203.0.113.4/30}]\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"verifying\",\n    \"asn\": 65000,\n    \"vlan\": 2000,\n    \"customerAddress\": \"203.0.113.2/30\",\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-ffjrkx17\",\n    \"virtualInterfaceId\": \"dxvif-fgh0hcrk\",\n    \"authKey\": \"asdf34example\",\n    \"routeFilterPrefixes\": [\n        {\n            \"cidr\": \"203.0.113.0/30\"\n        },\n        {\n            \"cidr\": \"203.0.113.4/30\"\n        }\n    ],\n    \"location\": \"TIVIT\",\n    \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fgh0hcrk\\\">\\n  <vlan>2000</vlan>\\n  <customer_address>203.0.113.2/30</customer_address>\\n  <amazon_address>203.0.113.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>public</connection_type>\\n</logical_connection>\\n\",\n    \"amazonAddress\": \"203.0.113.1/30\",\n    \"virtualInterfaceType\": \"public\",\n    \"virtualInterfaceName\": \"PublicVirtualInterface\"\n}\n"
    },
    {
      "command_name": "create-transit-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/create-transit-virtual-interface.html",
      "command_description": "Description\n\nCreates a transit virtual interface. A transit virtual interface should be used to access one or more transit gateways associated with Direct Connect gateways. A transit virtual interface enables the connection of multiple VPCs attached to a transit gateway to a Direct Connect gateway.\n\nWarning\n\nIf you associate your transit gateway with one or more Direct Connect gateways, the Autonomous System Number (ASN) used by the transit gateway and the Direct Connect gateway must be different. For example, if you use the default ASN 64512 for both your the transit gateway and Direct Connect gateway, the association request fails.\n\nSetting the MTU of a virtual interface to 8500 (jumbo frames) can cause an update to the underlying physical connection if it wasn’t updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call DescribeConnections . To check whether your virtual interface supports jumbo frames, call DescribeVirtualInterfaces .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-transit-virtual-interface\n--connection-id <value>\n--new-transit-virtual-interface <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--new-transit-virtual-interface <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--new-transit-virtual-interface (structure)\n\nInformation about the transit virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ntags -> (list)\n\nThe tags associated with the transitive virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nvirtualInterfaceName=string,vlan=integer,asn=integer,mtu=integer,authKey=string,amazonAddress=string,customerAddress=string,addressFamily=string,directConnectGatewayId=string,tags=[{key=string,value=string},{key=string,value=string}]\n\n\nJSON Syntax:\n\n{\n  \"virtualInterfaceName\": \"string\",\n  \"vlan\": integer,\n  \"asn\": integer,\n  \"mtu\": integer,\n  \"authKey\": \"string\",\n  \"amazonAddress\": \"string\",\n  \"customerAddress\": \"string\",\n  \"addressFamily\": \"ipv4\"|\"ipv6\",\n  \"directConnectGatewayId\": \"string\",\n  \"tags\": [\n    {\n      \"key\": \"string\",\n      \"value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterface -> (structure)\n\nInformation about a virtual interface.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo create a transit virtual interface\n\nThe following create-transit-virtual-interface example creates a transit virtual interface for the specified connection.\n\nws directconnect create-transit-virtual-interface \\\n    --connection-id dxlag-fEXAMPLE \\\n    --new-transit-virtual-interface \"virtualInterfaceName=Example Transit Virtual Interface,vlan=126,asn=65110,mtu=1500,authKey=0xzxgA9YoW9h58u8SvEXAMPLE,amazonAddress=192.168.1.1/30,customerAddress=192.168.1.2/30,addressFamily=ipv4,directConnectGatewayId=8384da05-13ce-4a91-aada-5a1baEXAMPLE,tags=[{key=Tag,value=Example}]\"\n\n\nOutput:\n\n{\n    \"virtualInterface\": {\n        \"ownerAccount\": \"1111222233333\",\n        \"virtualInterfaceId\": \"dxvif-fEXAMPLE\",\n        \"location\": \"loc1\",\n        \"connectionId\": \"dxlag-fEXAMPLE\",\n        \"virtualInterfaceType\": \"transit\",\n        \"virtualInterfaceName\": \"Example Transit Virtual Interface\",\n        \"vlan\": 126,\n        \"asn\": 65110,\n        \"amazonSideAsn\": 4200000000,\n        \"authKey\": \"0xzxgA9YoW9h58u8SEXAMPLE\",\n        \"amazonAddress\": \"192.168.1.1/30\",\n        \"customerAddress\": \"192.168.1.2/30\",\n        \"addressFamily\": \"ipv4\",\n        \"virtualInterfaceState\": \"pending\",\n        \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fEXAMPLE\\\">\\n  <vlan>126</vlan>\\n  <customer_address>192.168.1.2/30</customer_address>\\n  <amazon_address>192.168.1.1/30</amazon_address>\\n  <bgp_asn>65110</bgp_asn>\\n  <bgp_auth_key>0xzxgA9YoW9h58u8SvOmXRTw</bgp_auth_key>\\n  <amazon_bgp_asn>4200000000</amazon_bgp_asn>\\n  <connection_type>transit</connection_type>\\n</logical_connection>\\n\",\n        \"mtu\": 1500,\n        \"jumboFrameCapable\": true,\n        \"virtualGatewayId\": \"\",\n        \"directConnectGatewayId\": \"8384da05-13ce-4a91-aada-5a1baEXAMPLE\",\n        \"routeFilterPrefixes\": [],\n        \"bgpPeers\": [\n            {\n                \"bgpPeerId\": \"dxpeer-EXAMPLE\",\n                \"asn\": 65110,\n                \"authKey\": \"0xzxgA9YoW9h58u8SEXAMPLE\",\n                \"addressFamily\": \"ipv4\",\n                \"amazonAddress\": \"192.168.1.1/30\",\n                \"customerAddress\": \"192.168.1.2/30\",\n                \"bgpPeerState\": \"pending\",\n                \"bgpStatus\": \"down\",\n                \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\"\n            }\n        ],\n        \"region\": \"sa-east-1\",\n        \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\",\n        \"tags\": [\n            {\n                \"key\": \"Tag\",\n                \"value\": \"Example\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Creating a Transit Virtual Interface to the Direct Connect Gateway in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "delete-bgp-peer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-bgp-peer.html",
      "command_description": "Description\n\nDeletes the specified BGP peer on the specified virtual interface with the specified customer address and ASN.\n\nYou cannot delete the last BGP peer from a virtual interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bgp-peer\n[--virtual-interface-id <value>]\n[--asn <value>]\n[--customer-address <value>]\n[--bgp-peer-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--virtual-interface-id <value>]",
        "[--asn <value>]",
        "[--customer-address <value>]",
        "[--bgp-peer-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--asn (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\n--customer-address (string)\n\nThe IP address assigned to the customer interface.\n\n--bgp-peer-id (string)\n\nThe ID of the BGP peer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterface -> (structure)\n\nThe virtual interface.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo delete a BGP peer from a virtual interface\n\nThe following example deletes the IPv6 BGP peer from virtual interface dxvif-fg1vuj3d.\n\nCommand:\n\naws directconnect delete-bgp-peer --virtual-interface-id dxvif-fg1vuj3d --asn 64600 --customer-address 2001:db8:1100:2f0:0:1:9cb4:4216/125\n\n\nOutput:\n\n{\n  \"virtualInterface\": {\n      \"virtualInterfaceState\": \"available\",\n      \"asn\": 65000,\n      \"vlan\": 125,\n      \"customerAddress\": \"169.254.255.2/30\",\n      \"ownerAccount\": \"123456789012\",\n      \"connectionId\": \"dxcon-fguhmqlc\",\n      \"addressFamily\": \"ipv4\",\n      \"virtualGatewayId\": \"vgw-f9eb0c90\",\n      \"virtualInterfaceId\": \"dxvif-fg1vuj3d\",\n      \"authKey\": \"0xC_ukbCerl6EYA0example\",\n      \"routeFilterPrefixes\": [],\n      \"location\": \"EqDC2\",\n      \"bgpPeers\": [\n          {\n              \"bgpStatus\": \"down\",\n              \"customerAddress\": \"169.254.255.2/30\",\n              \"addressFamily\": \"ipv4\",\n              \"authKey\": \"0xC_ukbCerl6EYA0uexample\",\n              \"bgpPeerState\": \"available\",\n              \"amazonAddress\": \"169.254.255.1/30\",\n              \"asn\": 65000\n          },\n          {\n              \"bgpStatus\": \"down\",\n              \"customerAddress\": \"2001:db8:1100:2f0:0:1:9cb4:4216/125\",\n              \"addressFamily\": \"ipv6\",\n              \"authKey\": \"0xS27kAIU_VHPjjAexample\",\n              \"bgpPeerState\": \"deleting\",\n              \"amazonAddress\": \"2001:db8:1100:2f0:0:1:9cb4:4211/125\",\n              \"asn\": 64600\n          }\n      ],\n      \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fg1vuj3d\\\">\\n  <vlan>125</vlan>\\n  <customer_address>169.254.255.2/30</customer_address>\\n  <amazon_address>169.254.255.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>0xC_ukbCerl6EYA0example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n      \"amazonAddress\": \"169.254.255.1/30\",\n      \"virtualInterfaceType\": \"private\",\n      \"virtualInterfaceName\": \"Test\"\n  }\n}\n"
    },
    {
      "command_name": "delete-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-connection.html",
      "command_description": "Description\n\nDeletes the specified connection.\n\nDeleting a connection only stops the Direct Connect port hour and data transfer charges. If you are partnering with any third parties to connect with the Direct Connect location, you must cancel your service with them separately.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-connection\n--connection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo delete a connection\n\nThe following delete-connection command deletes the specified connection:\n\naws directconnect delete-connection --connection-id dxcon-fg31dyv6\n\n\nOutput:\n\n{\n    \"ownerAccount\": \"123456789012\",\n    \"connectionId\": \"dxcon-fg31dyv6\",\n    \"connectionState\": \"deleted\",\n    \"bandwidth\": \"1Gbps\",\n    \"location\": \"TIVIT\",\n    \"connectionName\": \"Connection to AWS\",\n    \"region\": \"sa-east-1\"\n}\n"
    },
    {
      "command_name": "delete-direct-connect-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-direct-connect-gateway.html",
      "command_description": "Description\n\nDeletes the specified Direct Connect gateway. You must first delete all virtual interfaces that are attached to the Direct Connect gateway and disassociate all virtual private gateways associated with the Direct Connect gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-direct-connect-gateway\n--direct-connect-gateway-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGateway -> (structure)\n\nThe Direct Connect gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayName -> (string)\n\nThe name of the Direct Connect gateway.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\ndirectConnectGatewayState -> (string)\n\nThe state of the Direct Connect gateway. The following are the possible values:\n\npending : The initial state after calling CreateDirectConnectGateway .\n\navailable : The Direct Connect gateway is ready for use.\n\ndeleting : The initial state after calling DeleteDirectConnectGateway .\n\ndeleted : The Direct Connect gateway is deleted and cannot pass traffic.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.",
      "command_examples": "Examples\n\nTo delete a Direct Connect gateway\n\nThe following example deletes Direct Connect gateway 5f294f92-bafb-4011-916d-9b0bexample.\n\nCommand:\n\naws directconnect delete-direct-connect-gateway --direct-connect-gateway-id 5f294f92-bafb-4011-916d-9b0bexample\n\n\nOutput:\n\n{\n  \"directConnectGateway\": {\n      \"amazonSideAsn\": 64512,\n      \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bexample\",\n      \"ownerAccount\": \"123456789012\",\n      \"directConnectGatewayName\": \"DxGateway1\",\n      \"directConnectGatewayState\": \"deleting\"\n  }\n}\n"
    },
    {
      "command_name": "delete-direct-connect-gateway-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-direct-connect-gateway-association.html",
      "command_description": "Description\n\nDeletes the association between the specified Direct Connect gateway and virtual private gateway.\n\nWe recommend that you specify the associationID to delete the association. Alternatively, if you own virtual gateway and a Direct Connect gateway association, you can specify the virtualGatewayId and directConnectGatewayId to delete an association.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-direct-connect-gateway-association\n[--association-id <value>]\n[--direct-connect-gateway-id <value>]\n[--virtual-gateway-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--association-id <value>]",
        "[--direct-connect-gateway-id <value>]",
        "[--virtual-gateway-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--association-id (string)\n\nThe ID of the Direct Connect gateway association.\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--virtual-gateway-id (string)\n\nThe ID of the virtual private gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociation -> (structure)\n\nInformation about the deleted association.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated gateway.\n\nassociationState -> (string)\n\nThe state of the association. The following are the possible values:\n\nassociating : The initial state after calling CreateDirectConnectGatewayAssociation .\n\nassociated : The Direct Connect gateway and virtual private gateway or transit gateway are successfully associated and ready to pass traffic.\n\ndisassociating : The initial state after calling DeleteDirectConnectGatewayAssociation .\n\ndisassociated : The virtual private gateway or transit gateway is disassociated from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual private gateway or transit gateway is stopped.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nassociationId -> (string)\n\nThe ID of the Direct Connect gateway association.\n\nallowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\nvirtualGatewayRegion -> (string)\n\nThe Amazon Web Services Region where the virtual private gateway is located.\n\nvirtualGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway.",
      "command_examples": "Examples\n\nTo delete a Direct Connect gateway association\n\nThe following delete-direct-connect-gateway-association example deletes the Direct Connect gateway association with a transit gateway that has the specified association ID.\n\naws directconnect delete-direct-connect-gateway-association --association-id  be85116d-46eb-4b43-a27a-da0c2ad648de\n\n\nOutput:\n\n{\n    \"directConnectGatewayAssociation\": {\n        \"directConnectGatewayId\": \"11460968-4ac1-4fd3-bdb2-00599EXAMPlE\",\n        \"directConnectGatewayOwnerAccount\": \"123456789012\",\n        \"associationState\": \"disassociating\",\n        \"associatedGateway\": {\n            \"id\": \"tgw-095b3b0b54EXAMPLE\",\n            \"type\": \"transitGateway\",\n            \"ownerAccount\": \"123456789012\",\n            \"region\": \"us-east-1\"\n       },\n        \"associationId\": \" be85116d-46eb-4b43-a27a-da0c2ad648deEXAMPLE \",\n        \"allowedPrefixesToDirectConnectGateway\": [\n            {\n                \"cidr\": \"192.0.1.0/28\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Associating and Disassociating Transit Gateways in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "delete-direct-connect-gateway-association-proposal",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-direct-connect-gateway-association-proposal.html",
      "command_description": "Description\n\nDeletes the association proposal request between the specified Direct Connect gateway and virtual private gateway or transit gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-direct-connect-gateway-association-proposal\n--proposal-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--proposal-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--proposal-id (string)\n\nThe ID of the proposal.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociationProposal -> (structure)\n\nThe ID of the associated gateway.\n\nproposalId -> (string)\n\nThe ID of the association proposal.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\nproposalState -> (string)\n\nThe state of the proposal. The following are possible values:\n\naccepted : The proposal has been accepted. The Direct Connect gateway association is available to use in this state.\n\ndeleted : The proposal has been deleted by the owner that made the proposal. The Direct Connect gateway association cannot be used in this state.\n\nrequested : The proposal has been requested. The Direct Connect gateway association cannot be used in this state.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nexistingAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe existing Amazon VPC prefixes advertised to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nrequestedAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter."
    },
    {
      "command_name": "delete-interconnect",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-interconnect.html",
      "command_description": "Description\n\nDeletes the specified interconnect.\n\nNote\n\nIntended for use by Direct Connect Partners only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-interconnect\n--interconnect-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--interconnect-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--interconnect-id (string)\n\nThe ID of the interconnect.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninterconnectState -> (string)\n\nThe state of the interconnect. The following are the possible values:\n\nrequested : The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The interconnect is approved, and is being initialized.\n\navailable : The network link is up, and the interconnect is ready for use.\n\ndown : The network link is down.\n\ndeleting : The interconnect is being deleted.\n\ndeleted : The interconnect is deleted.\n\nunknown : The state of the interconnect is not available.",
      "command_examples": "Examples\n\nTo delete an interconnect\n\nThe following delete-interconnect command deletes the specified interconnect:\n\naws directconnect delete-interconnect --interconnect-id dxcon-fgktov66\n\n\nOutput:\n\n{\n    \"interconnectState\": \"deleted\"\n}\n"
    },
    {
      "command_name": "delete-lag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-lag.html",
      "command_description": "Description\n\nDeletes the specified link aggregation group (LAG). You cannot delete a LAG if it has active virtual interfaces or hosted connections.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-lag\n--lag-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--lag-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionsBandwidth -> (string)\n\nThe individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.\n\nnumberOfConnections -> (integer)\n\nThe number of physical dedicated connections bundled by the LAG, up to a maximum of 10.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the LAG.\n\nlagName -> (string)\n\nThe name of the LAG.\n\nlagState -> (string)\n\nThe state of the LAG. The following are the possible values:\n\nrequested : The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.\n\npending : The LAG has been approved and is being initialized.\n\navailable : The network link is established and the LAG is ready for use.\n\ndown : The network link is down.\n\ndeleting : The LAG is being deleted.\n\ndeleted : The LAG is deleted.\n\nunknown : The state of the LAG is not available.\n\nlocation -> (string)\n\nThe location of the LAG.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nminimumLinks -> (integer)\n\nThe minimum number of physical dedicated connections that must be operational for the LAG itself to be operational.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nconnections -> (list)\n\nThe connections bundled by the LAG.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.\n\nallowsHostedConnections -> (boolean)\n\nIndicates whether the LAG can host other connections.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the LAG.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the LAG.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the LAG supports MAC Security (MACsec).\n\nencryptionMode -> (string)\n\nThe LAG MAC Security (MACsec) encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the LAG.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo delete a LAG\n\nThe following example deletes the specified LAG.\n\nCommand:\n\naws directconnect delete-lag --lag-id dxlag-ffrhowd9\n\n\nOutput:\n\n{\n  \"awsDevice\": \"EqDC2-4h6ce2r1bes6\",\n  \"numberOfConnections\": 0,\n  \"lagState\": \"deleted\",\n  \"ownerAccount\": \"123456789012\",\n  \"lagName\": \"TestLAG\",\n  \"connections\": [],\n  \"lagId\": \"dxlag-ffrhowd9\",\n  \"minimumLinks\": 0,\n  \"connectionsBandwidth\": \"1Gbps\",\n  \"region\": \"us-east-1\",\n  \"location\": \"EqDC2\"\n}\n"
    },
    {
      "command_name": "delete-virtual-interface",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/delete-virtual-interface.html",
      "command_description": "Description\n\nDeletes a virtual interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-virtual-interface\n--virtual-interface-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.",
      "command_examples": "Examples\n\nTo delete a virtual interface\n\nThe following delete-virtual-interface command deletes the specified virtual interface:\n\naws directconnect delete-virtual-interface --virtual-interface-id dxvif-ffhhk74f\n\n\nOutput:\n\n{\n    \"virtualInterfaceState\": \"deleting\"\n}\n"
    },
    {
      "command_name": "describe-connections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-connections.html",
      "command_description": "Description\n\nDisplays the specified connection or all connections in this Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-connections\n[--connection-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--connection-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnections -> (list)\n\nThe connections.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo list all connections in the current region\n\nThe following describe-connections command lists all connections in the current region:\n\naws directconnect describe-connections\n\n\nOutput:\n\n{\n  \"connections\": [\n      {\n          \"awsDevice\": \"EqDC2-123h49s71dabc\",\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-fguhmqlc\",\n          \"lagId\": \"dxlag-ffrz71kw\",\n          \"connectionState\": \"down\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"EqDC2\",\n          \"connectionName\": \"My_Connection\",\n          \"loaIssueTime\": 1491568964.0,\n          \"region\": \"us-east-1\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-customer-metadata",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-customer-metadata.html",
      "command_description": "Description\n\nGet and view a list of customer agreements, along with their signed status and whether the customer is an NNIPartner, NNIPartnerV2, or a nonPartner.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-customer-metadata\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nagreements -> (list)\n\nThe list of customer agreements.\n\n(structure)\n\nThe name and status of a customer agreement.\n\nagreementName -> (string)\n\nThe name of the agreement.\n\nstatus -> (string)\n\nThe status of the customer agreement. This will be either signed or unsigned\n\nnniPartnerType -> (string)\n\nThe type of network-to-network interface (NNI) partner. The partner type will be one of the following:\n\nV1: This partner can only allocate 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps subgigabit connections.\n\nV2: This partner can only allocate 1GB, 2GB, 5GB, or 10GB hosted connections.\n\nnonPartner: The customer is not a partner."
    },
    {
      "command_name": "describe-direct-connect-gateway-association-proposals",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-direct-connect-gateway-association-proposals.html",
      "command_description": "Description\n\nDescribes one or more association proposals for connection between a virtual private gateway or transit gateway and a Direct Connect gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-direct-connect-gateway-association-proposals\n[--direct-connect-gateway-id <value>]\n[--proposal-id <value>]\n[--associated-gateway-id <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--direct-connect-gateway-id <value>]",
        "[--proposal-id <value>]",
        "[--associated-gateway-id <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--proposal-id (string)\n\nThe ID of the proposal.\n\n--associated-gateway-id (string)\n\nThe ID of the associated gateway.\n\n--max-results (integer)\n\nThe maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\n\nIf MaxResults is given a value larger than 100, only 100 results are returned.\n\n--next-token (string)\n\nThe token for the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociationProposals -> (list)\n\nDescribes the Direct Connect gateway association proposals.\n\n(structure)\n\nInformation about the proposal request to attach a virtual private gateway to a Direct Connect gateway.\n\nproposalId -> (string)\n\nThe ID of the association proposal.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\nproposalState -> (string)\n\nThe state of the proposal. The following are possible values:\n\naccepted : The proposal has been accepted. The Direct Connect gateway association is available to use in this state.\n\ndeleted : The proposal has been deleted by the owner that made the proposal. The Direct Connect gateway association cannot be used in this state.\n\nrequested : The proposal has been requested. The Direct Connect gateway association cannot be used in this state.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nexistingAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe existing Amazon VPC prefixes advertised to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nrequestedAllowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nnextToken -> (string)\n\nThe token to use to retrieve the next page of results. This value is null when there are no more results to return.",
      "command_examples": "Examples\n\nTo describe your Direct Connect gateway association proposals\n\nThe following describe-direct-connect-gateway-association-proposals example displays details about your Direct Connect gateway association proposals.\n\naws directconnect describe-direct-connect-gateway-association-proposals\n\n\nOutput:\n\n{\n    \"directConnectGatewayAssociationProposals\": [\n        {\n            \"proposalId\": \"c2ede9b4-bbc6-4d33-923c-bc4feEXAMPLE\",\n            \"directConnectGatewayId\": \"11460968-4ac1-4fd3-bdb2-00599EXAMPLE\",\n            \"directConnectGatewayOwnerAccount\": \"111122223333\",\n            \"proposalState\": \"requested\",\n            \"associatedGateway\": {\n                \"id\": \"tgw-02f776b1a7EXAMPLE\",\n                \"type\": \"transitGateway\",\n                \"ownerAccount\": \"111122223333\",\n                \"region\": \"us-east-1\"\n            },\n            \"existingAllowedPrefixesToDirectConnectGateway\": [\n                {\n                    \"cidr\": \"192.168.2.0/30\"\n                },\n                {\n                    \"cidr\": \"192.168.1.0/30\"\n                }\n            ],\n            \"requestedAllowedPrefixesToDirectConnectGateway\": [\n                {\n                    \"cidr\": \"192.168.1.0/30\"\n                }\n            ]\n        },\n        {\n            \"proposalId\": \"cb7f41cb-8128-43a5-93b1-dcaedEXAMPLE\",\n            \"directConnectGatewayId\": \"11560968-4ac1-4fd3-bcb2-00599EXAMPLE\",\n            \"directConnectGatewayOwnerAccount\": \"111122223333\",\n            \"proposalState\": \"accepted\",\n            \"associatedGateway\": {\n                \"id\": \"tgw-045776b1a7EXAMPLE\",\n                \"type\": \"transitGateway\",\n                \"ownerAccount\": \"111122223333\",\n                \"region\": \"us-east-1\"\n            },\n            \"existingAllowedPrefixesToDirectConnectGateway\": [\n                {\n                    \"cidr\": \"192.168.4.0/30\"\n                },\n                {\n                    \"cidr\": \"192.168.5.0/30\"\n                }\n            ],\n            \"requestedAllowedPrefixesToDirectConnectGateway\": [\n                {\n                    \"cidr\": \"192.168.5.0/30\"\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see Associating and Disassociating Transit Gateways in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "describe-direct-connect-gateway-associations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-direct-connect-gateway-associations.html",
      "command_description": "Description\n\nLists the associations between your Direct Connect gateways and virtual private gateways and transit gateways. You must specify one of the following:\n\nA Direct Connect gateway The response contains all virtual private gateways and transit gateways associated with the Direct Connect gateway.\n\nA virtual private gateway The response contains the Direct Connect gateway.\n\nA transit gateway The response contains the Direct Connect gateway.\n\nA Direct Connect gateway and a virtual private gateway The response contains the association between the Direct Connect gateway and virtual private gateway.\n\nA Direct Connect gateway and a transit gateway The response contains the association between the Direct Connect gateway and transit gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-direct-connect-gateway-associations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: directConnectGatewayAssociations",
      "command_synopsis": "Synopsis\n  describe-direct-connect-gateway-associations\n[--association-id <value>]\n[--associated-gateway-id <value>]\n[--direct-connect-gateway-id <value>]\n[--virtual-gateway-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--association-id <value>]",
        "[--associated-gateway-id <value>]",
        "[--direct-connect-gateway-id <value>]",
        "[--virtual-gateway-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--association-id (string)\n\nThe ID of the Direct Connect gateway association.\n\n--associated-gateway-id (string)\n\nThe ID of the associated gateway.\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--virtual-gateway-id (string)\n\nThe ID of the virtual private gateway or transit gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociations -> (list)\n\nInformation about the associations.\n\n(structure)\n\nInformation about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated gateway.\n\nassociationState -> (string)\n\nThe state of the association. The following are the possible values:\n\nassociating : The initial state after calling CreateDirectConnectGatewayAssociation .\n\nassociated : The Direct Connect gateway and virtual private gateway or transit gateway are successfully associated and ready to pass traffic.\n\ndisassociating : The initial state after calling DeleteDirectConnectGatewayAssociation .\n\ndisassociated : The virtual private gateway or transit gateway is disassociated from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual private gateway or transit gateway is stopped.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nassociationId -> (string)\n\nThe ID of the Direct Connect gateway association.\n\nallowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\nvirtualGatewayRegion -> (string)\n\nThe Amazon Web Services Region where the virtual private gateway is located.\n\nvirtualGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway.\n\nnextToken -> (string)\n\nThe token to retrieve the next page.",
      "command_examples": "Examples\n\nTo describe Direct Connect gateway associations\n\nThe following example describes all the associations with Direct Connect gateway 5f294f92-bafb-4011-916d-9b0bexample.\n\nCommand:\n\naws directconnect describe-direct-connect-gateway-associations --direct-connect-gateway-id 5f294f92-bafb-4011-916d-9b0bexample\n\n\nOutput:\n\n{\n  \"nextToken\": \"eyJ2IjoxLCJzIjoxLCJpIjoiOU83OTFodzdycnZCbkN4MExHeHVwQT09IiwiYyI6InIxTEN0UEVHV0I1UFlkaWFnNlUxanJkRWF6eW1iOElHM0FRVW1MdHRJK0dxcnN1RWtvcFBKWFE2ZjRNRGdGTkhCa0tDZmVINEtZOEYwZ0dEYWZpbmU0ZnZMYVhKRjdXRVdENmdQZ1Y4d2w0PSJ9\",\n  \"directConnectGatewayAssociations\": [\n      {\n          \"associationState\": \"associating\",\n          \"virtualGatewayOwnerAccount\": \"123456789012\",\n          \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bexample\",\n          \"virtualGatewayId\": \"vgw-6efe725e\",\n          \"virtualGatewayRegion\": \"us-east-2\"\n      },\n      {\n          \"associationState\": \"disassociating\",\n          \"virtualGatewayOwnerAccount\": \"123456789012\",\n          \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bexample\",\n          \"virtualGatewayId\": \"vgw-ebaa27db\",\n          \"virtualGatewayRegion\": \"us-east-2\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-direct-connect-gateway-attachments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-direct-connect-gateway-attachments.html",
      "command_description": "Description\n\nLists the attachments between your Direct Connect gateways and virtual interfaces. You must specify a Direct Connect gateway, a virtual interface, or both. If you specify a Direct Connect gateway, the response contains all virtual interfaces attached to the Direct Connect gateway. If you specify a virtual interface, the response contains all Direct Connect gateways attached to the virtual interface. If you specify both, the response contains the attachment between the Direct Connect gateway and the virtual interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-direct-connect-gateway-attachments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: directConnectGatewayAttachments",
      "command_synopsis": "Synopsis\n  describe-direct-connect-gateway-attachments\n[--direct-connect-gateway-id <value>]\n[--virtual-interface-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--direct-connect-gateway-id <value>]",
        "[--virtual-interface-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAttachments -> (list)\n\nThe attachments.\n\n(structure)\n\nInformation about an attachment between a Direct Connect gateway and a virtual interface.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nvirtualInterfaceRegion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nvirtualInterfaceOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nattachmentState -> (string)\n\nThe state of the attachment. The following are the possible values:\n\nattaching : The initial state after a virtual interface is created using the Direct Connect gateway.\n\nattached : The Direct Connect gateway and virtual interface are attached and ready to pass traffic.\n\ndetaching : The initial state after calling DeleteVirtualInterface .\n\ndetached : The virtual interface is detached from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual interface is stopped.\n\nattachmentType -> (string)\n\nThe type of attachment.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nnextToken -> (string)\n\nThe token to retrieve the next page.",
      "command_examples": "Examples\n\nTo describe Direct Connect gateway attachments\n\nThe following example describes the virtual interfaces that are attached to Direct Connect gateway 5f294f92-bafb-4011-916d-9b0bexample.\n\nCommand:\n\naws directconnect describe-direct-connect-gateway-attachments --direct-connect-gateway-id 5f294f92-bafb-4011-916d-9b0bexample\n\n\nOutput:\n\n{\n  \"directConnectGatewayAttachments\": [\n      {\n          \"virtualInterfaceOwnerAccount\": \"123456789012\",\n          \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bexample\",\n          \"virtualInterfaceRegion\": \"us-east-2\",\n          \"attachmentState\": \"attaching\",\n          \"virtualInterfaceId\": \"dxvif-fg9zyabc\"\n      }\n  ],\n  \"nextToken\": \"eyJ2IjoxLCJzIjoxLCJpIjoibEhXdlNpUXF5RzhoL1JyUW52SlV2QT09IiwiYyI6Im5wQjFHQ0RyQUdRS3puNnNXcUlINCtkTTA4dTk3KzBiU0xtb05JQmlaczZ6NXRIYmk3c3VESUxFTTd6a2FzVHM0VTFwaGJkZGNxTytqWmQ3QzMzOGRQaTVrTThrOG1zelRsV3gyMWV3VTNFPSJ9\"\n}\n"
    },
    {
      "command_name": "describe-direct-connect-gateways",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-direct-connect-gateways.html",
      "command_description": "Description\n\nLists all your Direct Connect gateways or only the specified Direct Connect gateway. Deleted Direct Connect gateways are not returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-direct-connect-gateways is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: directConnectGateways",
      "command_synopsis": "Synopsis\n  describe-direct-connect-gateways\n[--direct-connect-gateway-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--direct-connect-gateway-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGateways -> (list)\n\nThe Direct Connect gateways.\n\n(structure)\n\nInformation about a Direct Connect gateway, which enables you to connect virtual interfaces and virtual private gateway or transit gateways.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayName -> (string)\n\nThe name of the Direct Connect gateway.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\ndirectConnectGatewayState -> (string)\n\nThe state of the Direct Connect gateway. The following are the possible values:\n\npending : The initial state after calling CreateDirectConnectGateway .\n\navailable : The Direct Connect gateway is ready for use.\n\ndeleting : The initial state after calling DeleteDirectConnectGateway .\n\ndeleted : The Direct Connect gateway is deleted and cannot pass traffic.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nnextToken -> (string)\n\nThe token to retrieve the next page.",
      "command_examples": "Examples\n\nTo describe your Direct Connect gateways\n\nThe following example describe all of your Direct Connect gateways.\n\nCommand:\n\naws directconnect describe-direct-connect-gateways\n\n\nOutput:\n\n{\n  \"directConnectGateways\": [\n      {\n          \"amazonSideAsn\": 64512,\n          \"directConnectGatewayId\": \"cf68415c-f4ae-48f2-87a7-3b52cexample\",\n          \"ownerAccount\": \"123456789012\",\n          \"directConnectGatewayName\": \"DxGateway2\",\n          \"directConnectGatewayState\": \"available\"\n      },\n      {\n          \"amazonSideAsn\": 64512,\n          \"directConnectGatewayId\": \"5f294f92-bafb-4011-916d-9b0bdexample\",\n          \"ownerAccount\": \"123456789012\",\n          \"directConnectGatewayName\": \"DxGateway1\",\n          \"directConnectGatewayState\": \"available\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-hosted-connections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-hosted-connections.html",
      "command_description": "Description\n\nLists the hosted connections that have been provisioned on the specified interconnect or link aggregation group (LAG).\n\nNote\n\nIntended for use by Direct Connect Partners only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-hosted-connections\n--connection-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the interconnect or LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnections -> (list)\n\nThe connections.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo list connections on an interconnect\n\nThe following example lists connections that have been provisioned on the given interconnect.\n\nCommand:\n\naws directconnect describe-hosted-connections --connection-id dxcon-fgktov66\n\n\nOutput:\n\n{\n    \"connections\": [\n        {\n            \"partnerName\": \"TIVIT\",\n            \"vlan\": 101,\n            \"ownerAccount\": \"123456789012\",\n            \"connectionId\": \"dxcon-ffzc51m1\",\n            \"connectionState\": \"ordering\",\n            \"bandwidth\": \"500Mbps\",\n            \"location\": \"TIVIT\",\n            \"connectionName\": \"mydcinterconnect\",\n            \"region\": \"sa-east-1\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-interconnects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-interconnects.html",
      "command_description": "Description\n\nLists the interconnects owned by the Amazon Web Services account or only the specified interconnect.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-interconnects\n[--interconnect-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--interconnect-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--interconnect-id (string)\n\nThe ID of the interconnect.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ninterconnects -> (list)\n\nThe interconnects.\n\n(structure)\n\nInformation about an interconnect.\n\ninterconnectId -> (string)\n\nThe ID of the interconnect.\n\ninterconnectName -> (string)\n\nThe name of the interconnect.\n\ninterconnectState -> (string)\n\nThe state of the interconnect. The following are the possible values:\n\nrequested : The initial state of an interconnect. The interconnect stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The interconnect is approved, and is being initialized.\n\navailable : The network link is up, and the interconnect is ready for use.\n\ndown : The network link is down.\n\ndeleting : The interconnect is being deleted.\n\ndeleted : The interconnect is deleted.\n\nunknown : The state of the interconnect is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the interconnect supports a secondary BGP in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the interconnect.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the interconnect.",
      "command_examples": "Examples\n\nTo list interconnects\n\nThe following describe-interconnects command lists the interconnects owned by your AWS account:\n\naws directconnect describe-interconnects\n\n\nOutput:\n\n{\n    \"interconnects\": [\n        {\n            \"region\": \"sa-east-1\",\n            \"bandwidth\": \"1Gbps\",\n            \"location\": \"TIVIT\",\n            \"interconnectName\": \"1G Interconnect to AWS\",\n            \"interconnectId\": \"dxcon-fgktov66\",\n            \"interconnectState\": \"down\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-lags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-lags.html",
      "command_description": "Description\n\nDescribes all your link aggregation groups (LAG) or the specified LAG.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-lags\n[--lag-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--lag-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nlags -> (list)\n\nThe LAGs.\n\n(structure)\n\nInformation about a link aggregation group (LAG).\n\nconnectionsBandwidth -> (string)\n\nThe individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.\n\nnumberOfConnections -> (integer)\n\nThe number of physical dedicated connections bundled by the LAG, up to a maximum of 10.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the LAG.\n\nlagName -> (string)\n\nThe name of the LAG.\n\nlagState -> (string)\n\nThe state of the LAG. The following are the possible values:\n\nrequested : The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.\n\npending : The LAG has been approved and is being initialized.\n\navailable : The network link is established and the LAG is ready for use.\n\ndown : The network link is down.\n\ndeleting : The LAG is being deleted.\n\ndeleted : The LAG is deleted.\n\nunknown : The state of the LAG is not available.\n\nlocation -> (string)\n\nThe location of the LAG.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nminimumLinks -> (integer)\n\nThe minimum number of physical dedicated connections that must be operational for the LAG itself to be operational.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nconnections -> (list)\n\nThe connections bundled by the LAG.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.\n\nallowsHostedConnections -> (boolean)\n\nIndicates whether the LAG can host other connections.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the LAG.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the LAG.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the LAG supports MAC Security (MACsec).\n\nencryptionMode -> (string)\n\nThe LAG MAC Security (MACsec) encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the LAG.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo describe your LAGs\n\nThe following command describes all of your LAGs for the current region.\n\nCommand:\n\naws directconnect describe-lags\n\n\nOutput:\n\n{\n  \"lags\": [\n      {\n          \"awsDevice\": \"EqDC2-19y7z3m17xpuz\",\n          \"numberOfConnections\": 2,\n          \"lagState\": \"down\",\n          \"ownerAccount\": \"123456789012\",\n          \"lagName\": \"DA-LAG\",\n          \"connections\": [\n              {\n                  \"ownerAccount\": \"123456789012\",\n                  \"connectionId\": \"dxcon-ffnikghc\",\n                  \"lagId\": \"dxlag-fgsu9erb\",\n                  \"connectionState\": \"requested\",\n                  \"bandwidth\": \"10Gbps\",\n                  \"location\": \"EqDC2\",\n                  \"connectionName\": \"Requested Connection 1 for Lag dxlag-fgsu9erb\",\n                  \"region\": \"us-east-1\"\n              },\n              {\n                  \"ownerAccount\": \"123456789012\",\n                  \"connectionId\": \"dxcon-fglgbdea\",\n                  \"lagId\": \"dxlag-fgsu9erb\",\n                  \"connectionState\": \"requested\",\n                  \"bandwidth\": \"10Gbps\",\n                  \"location\": \"EqDC2\",\n                  \"connectionName\": \"Requested Connection 2 for Lag dxlag-fgsu9erb\",\n                  \"region\": \"us-east-1\"\n              }\n          ],\n          \"lagId\": \"dxlag-fgsu9erb\",\n          \"minimumLinks\": 0,\n          \"connectionsBandwidth\": \"10Gbps\",\n          \"region\": \"us-east-1\",\n          \"location\": \"EqDC2\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-loa",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-loa.html",
      "command_description": "Description\n\nGets the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).\n\nThe Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to Amazon Web Services at the colocation facility. For more information, see Requesting Cross Connects at Direct Connect Locations in the Direct Connect User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-loa\n--connection-id <value>\n[--provider-name <value>]\n[--loa-content-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--provider-name <value>]",
        "[--loa-content-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of a connection, LAG, or interconnect.\n\n--provider-name (string)\n\nThe name of the service provider who establishes connectivity on your behalf. If you specify this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.\n\n--loa-content-type (string)\n\nThe standard media type for the LOA-CFA document. The only supported value is application/pdf.\n\nPossible values:\n\napplication/pdf\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nloaContent -> (blob)\n\nThe binary contents of the LOA-CFA document.\n\nloaContentType -> (string)\n\nThe standard media type for the LOA-CFA document. The only supported value is application/pdf.",
      "command_examples": "Examples\n\nTo describe your LOA-CFA for a connection using Linux or Mac OS X\n\nThe following example describes your LOA-CFA for connection dxcon-fh6ayh1d. The contents of the LOA-CFA are base64-encoded. This command uses the --output and --query parameters to control the output and extract the contents of the loaContent structure. The final part of the command decodes the content using the base64 utility, and sends the output to a PDF file.\n\naws directconnect describe-loa --connection-id dxcon-fh6ayh1d --output text --query loa.loaContent|base64 --decode > myLoaCfa.pdf\n\n\nTo describe your LOA-CFA for a connection using Windows\n\nThe previous example requires the use of the base64 utility to decode the output. On a Windows computer, you can use certutil instead. In the following example, the first command describes your LOA-CFA for connection dxcon-fh6ayh1d and uses the --output and --query parameters to control the output and extract the contents of the loaContent structure to a file called myLoaCfa.base64. The second command uses the certutil utility to decode the file and send the output to a PDF file.\n\naws directconnect describe-loa --connection-id dxcon-fh6ayh1d --output text --query loa.loaContent > myLoaCfa.base64\n\ncertutil -decode myLoaCfa.base64 myLoaCfa.pdf\n\n\nFor more information about controlling AWS CLI output, see Controlling Command Output from the AWS Command Line Interface in the AWS Command Line Interface User Guide."
    },
    {
      "command_name": "describe-locations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-locations.html",
      "command_description": "Description\n\nLists the Direct Connect locations in the current Amazon Web Services Region. These are the locations that can be selected when calling CreateConnection or CreateInterconnect .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-locations\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nlocations -> (list)\n\nThe locations.\n\n(structure)\n\nInformation about an Direct Connect location.\n\nlocationCode -> (string)\n\nThe code for the location.\n\nlocationName -> (string)\n\nThe name of the location. This includes the name of the colocation partner and the physical site of the building.\n\nregion -> (string)\n\nThe Amazon Web Services Region for the location.\n\navailablePortSpeeds -> (list)\n\nThe available port speeds for the location.\n\n(string)\n\navailableProviders -> (list)\n\nThe name of the service provider for the location.\n\n(string)\n\navailableMacSecPortSpeeds -> (list)\n\nThe available MAC Security (MACsec) port speeds for the location.\n\n(string)",
      "command_examples": "Examples\n\nTo list AWS Direct Connect partners and locations\n\nThe following describe-locations command lists AWS Direct Connect partners and locations in the current region:\n\naws directconnect describe-locations\n\n\nOutput:\n\n{\n    \"locations\": [\n        {\n            \"locationName\": \"NAP do Brasil, Barueri, Sao Paulo\",\n            \"locationCode\": \"TNDB\"\n        },\n        {\n            \"locationName\": \"Tivit - Site Transamerica (Sao Paulo)\",\n            \"locationCode\": \"TIVIT\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-router-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-router-configuration.html",
      "command_description": "Description\n\nDetails about the router.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-router-configuration\n--virtual-interface-id <value>\n[--router-type-identifier <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--router-type-identifier <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--router-type-identifier (string)\n\nIdentifies the router by a combination of vendor, platform, and software version. For example, CiscoSystemsInc-2900SeriesRouters-IOS124 .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nrouter -> (structure)\n\nThe details about the router.\n\nvendor -> (string)\n\nThe vendor for the virtual interface’s router.\n\nplatform -> (string)\n\nThe virtual interface router platform.\n\nsoftware -> (string)\n\nThe router software.\n\nxsltTemplateName -> (string)\n\nThe template for the virtual interface’s router.\n\nxsltTemplateNameForMacSec -> (string)\n\nThe MAC Security (MACsec) template for the virtual interface’s router.\n\nrouterTypeIdentifier -> (string)\n\nIdentifies the router by a combination of vendor, platform, and software version. For example, CiscoSystemsInc-2900SeriesRouters-IOS124 .\n\nvirtualInterfaceId -> (string)\n\nThe ID assigned to the virtual interface.\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network."
    },
    {
      "command_name": "describe-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-tags.html",
      "command_description": "Description\n\nDescribes the tags associated with the specified Direct Connect resources.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-tags\n--resource-arns <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arns <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arns (list)\n\nThe Amazon Resource Names (ARNs) of the resources.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceTags -> (list)\n\nInformation about the tags.\n\n(structure)\n\nInformation about a tag associated with an Direct Connect resource.\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\ntags -> (list)\n\nThe tags.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo describe tags for your AWS Direct Connect resources\n\nThe following command describes the tags for the connection dxcon-abcabc12.\n\nCommand:\n\naws directconnect describe-tags --resource-arns arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-abcabc12\n\n\nOutput:\n\n{\n  \"resourceTags\": [\n      {\n          \"resourceArn\": \"arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-abcabc12\",\n          \"tags\": [\n              {\n                  \"value\": \"VAConnection\",\n                  \"key\": \"Name\"\n              }\n          ]\n      }\n  ]\n}\n"
    },
    {
      "command_name": "describe-virtual-gateways",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-virtual-gateways.html",
      "command_description": "Description\n\nLists the virtual private gateways owned by the Amazon Web Services account.\n\nYou can create one or more Direct Connect private virtual interfaces linked to a virtual private gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-gateways\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualGateways -> (list)\n\nThe virtual private gateways.\n\n(structure)\n\nInformation about a virtual private gateway for a private virtual interface.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway.\n\nvirtualGatewayState -> (string)\n\nThe state of the virtual private gateway. The following are the possible values:\n\npending : Initial state after creating the virtual private gateway.\n\navailable : Ready for use by a private virtual interface.\n\ndeleting : Initial state after deleting the virtual private gateway.\n\ndeleted : The virtual private gateway is deleted. The private virtual interface is unable to send traffic over this gateway.",
      "command_examples": "Examples\n\nTo list virtual private gateways\n\nThe following describe-virtual-gateways command lists virtual private gateways owned by your AWS account:\n\naws directconnect describe-virtual-gateways\n\n\nOutput:\n\n{\n    \"virtualGateways\": [\n        {\n            \"virtualGatewayId\": \"vgw-aba37db6\",\n            \"virtualGatewayState\": \"available\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-virtual-interfaces",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/describe-virtual-interfaces.html",
      "command_description": "Description\n\nDisplays all virtual interfaces for an Amazon Web Services account. Virtual interfaces deleted fewer than 15 minutes before you make the request are also returned. If you specify a connection ID, only the virtual interfaces associated with the connection are returned. If you specify a virtual interface ID, then only a single virtual interface is returned.\n\nA virtual interface (VLAN) transmits the traffic between the Direct Connect location and the customer network.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-virtual-interfaces\n[--connection-id <value>]\n[--virtual-interface-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--connection-id <value>]",
        "[--virtual-interface-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaces -> (list)\n\nThe virtual interfaces\n\n(structure)\n\nInformation about a virtual interface.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo list all virtual interfaces\n\nThe following describe-virtual-interfaces command lists the information about all virtual interfaces associated with your AWS account:\n\naws directconnect describe-virtual-interfaces --connection-id dxcon-ffjrkx17\n\n\nOutput:\n\n{\n    \"virtualInterfaces\": [\n        {\n            \"virtualInterfaceState\": \"down\",\n            \"asn\": 65000,\n            \"vlan\": 101,\n            \"customerAddress\": \"192.168.1.2/30\",\n            \"ownerAccount\": \"123456789012\",\n            \"connectionId\": \"dxcon-ffjrkx17\",\n            \"virtualGatewayId\": \"vgw-aba37db6\",\n            \"virtualInterfaceId\": \"dxvif-ffhhk74f\",\n            \"authKey\": \"asdf34example\",\n            \"routeFilterPrefixes\": [],\n            \"location\": \"TIVIT\",\n            \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-ffhhk74f\\\">\\n  <vlan>101</vlan>\\n  <customer_address>192.168.1.2/30</customer_address>\\n  <amazon_address>192.168.1.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>private</connection_type>\\n</logical_connection>\\n\",\n            \"amazonAddress\": \"192.168.1.1/30\",\n            \"virtualInterfaceType\": \"private\",\n            \"virtualInterfaceName\": \"PrivateVirtualInterface\"\n        },\n        {\n            \"virtualInterfaceState\": \"verifying\",\n            \"asn\": 65000,\n            \"vlan\": 2000,\n            \"customerAddress\": \"203.0.113.2/30\",\n            \"ownerAccount\": \"123456789012\",\n            \"connectionId\": \"dxcon-ffjrkx17\",\n            \"virtualGatewayId\": \"\",\n            \"virtualInterfaceId\": \"dxvif-fgh0hcrk\",\n            \"authKey\": \"asdf34example\",\n            \"routeFilterPrefixes\": [\n                {\n                    \"cidr\": \"203.0.113.4/30\"\n                },\n                {\n                    \"cidr\": \"203.0.113.0/30\"\n                }\n            ],\n            \"location\": \"TIVIT\",\n            \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fgh0hcrk\\\">\\n  <vlan>2000</vlan>\\n  <customer_address>203.0.113.2/30</customer_address>\\n  <amazon_address>203.0.113.1/30</amazon_address>\\n  <bgp_asn>65000</bgp_asn>\\n  <bgp_auth_key>asdf34example</bgp_auth_key>\\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\\n  <connection_type>public</connection_type>\\n</logical_connection>\\n\",\n            \"amazonAddress\": \"203.0.113.1/30\",\n            \"virtualInterfaceType\": \"public\",\n            \"virtualInterfaceName\": \"PublicVirtualInterface\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "disassociate-connection-from-lag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/disassociate-connection-from-lag.html",
      "command_description": "Description\n\nDisassociates a connection from a link aggregation group (LAG). The connection is interrupted and re-established as a standalone connection (the connection is not deleted; to delete the connection, use the DeleteConnection request). If the LAG has associated virtual interfaces or hosted connections, they remain associated with the LAG. A disassociated connection owned by an Direct Connect Partner is automatically converted to an interconnect.\n\nIf disassociating the connection would cause the LAG to fall below its setting for minimum number of operational connections, the request fails, except when it’s the last member of the LAG. If all connections are disassociated, the LAG continues to exist as an empty LAG with no physical connections.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-connection-from-lag\n--connection-id <value>\n--lag-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--lag-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the connection.\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo disassociate a connection from a LAG\n\nThe following example disassociates the specified connection from the specified LAG.\n\nCommand:\n\naws directconnect disassociate-connection-from-lag --lag-id dxlag-fhccu14t --connection-id  dxcon-fg9607vm\n\n\nOutput:\n\n{\n  \"ownerAccount\": \"123456789012\",\n  \"connectionId\": \"dxcon-fg9607vm\",\n  \"connectionState\": \"requested\",\n  \"bandwidth\": \"1Gbps\",\n  \"location\": \"EqDC2\",\n  \"connectionName\": \"Con2ForLag\",\n  \"region\": \"us-east-1\"\n}\n"
    },
    {
      "command_name": "disassociate-mac-sec-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/disassociate-mac-sec-key.html",
      "command_description": "Description\n\nRemoves the association between a MAC Security (MACsec) security key and an Direct Connect dedicated connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-mac-sec-key\n--connection-id <value>\n--secret-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "--secret-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).\n\nYou can use DescribeConnections or DescribeLags to retrieve connection ID.\n\n--secret-arn (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nYou can use DescribeConnections to retrieve the ARN of the MAC Security (MACsec) secret key.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionId -> (string)\n\nThe ID of the dedicated connection (dxcon-xxxx), or the ID of the LAG (dxlag-xxxx).\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys no longer associated with the dedicated connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format."
    },
    {
      "command_name": "list-virtual-interface-test-history",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/list-virtual-interface-test-history.html",
      "command_description": "Description\n\nLists the virtual interface failover test history.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-virtual-interface-test-history\n[--test-id <value>]\n[--virtual-interface-id <value>]\n[--bgp-peers <value>]\n[--status <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--test-id <value>]",
        "[--virtual-interface-id <value>]",
        "[--bgp-peers <value>]",
        "[--status <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--test-id (string)\n\nThe ID of the virtual interface failover test.\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface that was tested.\n\n--bgp-peers (list)\n\nThe BGP peers that were placed in the DOWN state during the virtual interface failover test.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--status (string)\n\nThe status of the virtual interface failover test.\n\n--max-results (integer)\n\nThe maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.\n\nIf MaxResults is given a value larger than 100, only 100 results are returned.\n\n--next-token (string)\n\nThe token for the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceTestHistory -> (list)\n\nThe ID of the tested virtual interface.\n\n(structure)\n\nInformation about the virtual interface failover test.\n\ntestId -> (string)\n\nThe ID of the virtual interface failover test.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the tested virtual interface.\n\nbgpPeers -> (list)\n\nThe BGP peers that were put in the DOWN state as part of the virtual interface failover test.\n\n(string)\n\nstatus -> (string)\n\nThe status of the virtual interface failover test.\n\nownerAccount -> (string)\n\nThe owner ID of the tested virtual interface.\n\ntestDurationInMinutes -> (integer)\n\nThe time that the virtual interface failover test ran in minutes.\n\nstartTime -> (timestamp)\n\nThe time that the virtual interface moves to the DOWN state.\n\nendTime -> (timestamp)\n\nThe time that the virtual interface moves out of the DOWN state.\n\nnextToken -> (string)\n\nThe token to use to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "start-bgp-failover-test",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/start-bgp-failover-test.html",
      "command_description": "Description\n\nStarts the virtual interface failover test that verifies your configuration meets your resiliency requirements by placing the BGP peering session in the DOWN state. You can then send traffic to verify that there are no outages.\n\nYou can run the test on public, private, transit, and hosted virtual interfaces.\n\nYou can use ListVirtualInterfaceTestHistory to view the virtual interface test history.\n\nIf you need to stop the test before the test interval completes, use StopBgpFailoverTest .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-bgp-failover-test\n--virtual-interface-id <value>\n[--bgp-peers <value>]\n[--test-duration-in-minutes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--bgp-peers <value>]",
        "[--test-duration-in-minutes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface you want to test.\n\n--bgp-peers (list)\n\nThe BGP peers to place in the DOWN state.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--test-duration-in-minutes (integer)\n\nThe time in minutes that the virtual interface failover test will last.\n\nMaximum value: 180 minutes (3 hours).\n\nDefault: 180 minutes (3 hours).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceTest -> (structure)\n\nInformation about the virtual interface failover test.\n\ntestId -> (string)\n\nThe ID of the virtual interface failover test.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the tested virtual interface.\n\nbgpPeers -> (list)\n\nThe BGP peers that were put in the DOWN state as part of the virtual interface failover test.\n\n(string)\n\nstatus -> (string)\n\nThe status of the virtual interface failover test.\n\nownerAccount -> (string)\n\nThe owner ID of the tested virtual interface.\n\ntestDurationInMinutes -> (integer)\n\nThe time that the virtual interface failover test ran in minutes.\n\nstartTime -> (timestamp)\n\nThe time that the virtual interface moves to the DOWN state.\n\nendTime -> (timestamp)\n\nThe time that the virtual interface moves out of the DOWN state."
    },
    {
      "command_name": "stop-bgp-failover-test",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/stop-bgp-failover-test.html",
      "command_description": "Description\n\nStops the virtual interface failover test.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-bgp-failover-test\n--virtual-interface-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual interface you no longer want to test.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvirtualInterfaceTest -> (structure)\n\nInformation about the virtual interface failover test.\n\ntestId -> (string)\n\nThe ID of the virtual interface failover test.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the tested virtual interface.\n\nbgpPeers -> (list)\n\nThe BGP peers that were put in the DOWN state as part of the virtual interface failover test.\n\n(string)\n\nstatus -> (string)\n\nThe status of the virtual interface failover test.\n\nownerAccount -> (string)\n\nThe owner ID of the tested virtual interface.\n\ntestDurationInMinutes -> (integer)\n\nThe time that the virtual interface failover test ran in minutes.\n\nstartTime -> (timestamp)\n\nThe time that the virtual interface moves to the DOWN state.\n\nendTime -> (timestamp)\n\nThe time that the virtual interface moves out of the DOWN state."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/tag-resource.html",
      "command_description": "Description\n\nAdds the specified tags to the specified Direct Connect resource. Each resource can have a maximum of 50 tags.\n\nEach tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--tags (list)\n\nThe tags to add.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to an AWS Direct Connect resource\n\nThe following command adds a tag with a key of Name and a value of VAConnection to the connection dxcon-abcabc12. If the command succeeds, no output is returned.\n\nCommand:\n\naws directconnect tag-resource --resource-arn arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-abcabc12 --tags \"key=Name,value=VAConnection\"\n"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from the specified Direct Connect resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource.\n\n--tag-keys (list)\n\nThe tag keys of the tags to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from an AWS Direct Connect resource\n\nThe following command removes the tag with the key Name from connection dxcon-abcabc12. If the command succeeds, no output is returned.\n\nCommand:\n\naws directconnect untag-resource --resource-arn arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-abcabc12 --tag-keys Name\n"
    },
    {
      "command_name": "update-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/update-connection.html",
      "command_description": "Description\n\nUpdates the Direct Connect dedicated connection configuration.\n\nYou can update the following parameters for a connection:\n\nThe connection name\n\nThe connection’s MAC Security (MACsec) encryption mode.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-connection\n--connection-id <value>\n[--connection-name <value>]\n[--encryption-mode <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-id <value>",
        "[--connection-name <value>]",
        "[--encryption-mode <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-id (string)\n\nThe ID of the dedicated connection.\n\nYou can use DescribeConnections to retrieve the connection ID.\n\n--connection-name (string)\n\nThe name of the connection.\n\n--encryption-mode (string)\n\nThe connection MAC Security (MACsec) encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format."
    },
    {
      "command_name": "update-direct-connect-gateway",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/update-direct-connect-gateway.html",
      "command_description": "Description\n\nUpdates the name of a current Direct Connect gateway.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-direct-connect-gateway\n--direct-connect-gateway-id <value>\n--new-direct-connect-gateway-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--direct-connect-gateway-id <value>",
        "--new-direct-connect-gateway-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--direct-connect-gateway-id (string)\n\nThe ID of the Direct Connect gateway to update.\n\n--new-direct-connect-gateway-name (string)\n\nThe new name for the Direct Connect gateway.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGateway -> (structure)\n\nInformation about a Direct Connect gateway, which enables you to connect virtual interfaces and virtual private gateway or transit gateways.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayName -> (string)\n\nThe name of the Direct Connect gateway.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the Direct Connect gateway.\n\ndirectConnectGatewayState -> (string)\n\nThe state of the Direct Connect gateway. The following are the possible values:\n\npending : The initial state after calling CreateDirectConnectGateway .\n\navailable : The Direct Connect gateway is ready for use.\n\ndeleting : The initial state after calling DeleteDirectConnectGateway .\n\ndeleted : The Direct Connect gateway is deleted and cannot pass traffic.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance."
    },
    {
      "command_name": "update-direct-connect-gateway-association",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/update-direct-connect-gateway-association.html",
      "command_description": "Description\n\nUpdates the specified attributes of the Direct Connect gateway association.\n\nAdd or remove prefixes from the association.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-direct-connect-gateway-association\n[--association-id <value>]\n[--add-allowed-prefixes-to-direct-connect-gateway <value>]\n[--remove-allowed-prefixes-to-direct-connect-gateway <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--association-id <value>]",
        "[--add-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--remove-allowed-prefixes-to-direct-connect-gateway <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--association-id (string)\n\nThe ID of the Direct Connect gateway association.\n\n--add-allowed-prefixes-to-direct-connect-gateway (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--remove-allowed-prefixes-to-direct-connect-gateway (list)\n\nThe Amazon VPC prefixes to no longer advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nShorthand Syntax:\n\ncidr=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"cidr\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndirectConnectGatewayAssociation -> (structure)\n\nInformation about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\ndirectConnectGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated gateway.\n\nassociationState -> (string)\n\nThe state of the association. The following are the possible values:\n\nassociating : The initial state after calling CreateDirectConnectGatewayAssociation .\n\nassociated : The Direct Connect gateway and virtual private gateway or transit gateway are successfully associated and ready to pass traffic.\n\ndisassociating : The initial state after calling DeleteDirectConnectGatewayAssociation .\n\ndisassociated : The virtual private gateway or transit gateway is disassociated from the Direct Connect gateway. Traffic flow between the Direct Connect gateway and virtual private gateway or transit gateway is stopped.\n\nstateChangeError -> (string)\n\nThe error message if the state of an object failed to advance.\n\nassociatedGateway -> (structure)\n\nInformation about the associated gateway.\n\nid -> (string)\n\nThe ID of the associated gateway.\n\ntype -> (string)\n\nThe type of associated gateway.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the associated virtual private gateway or transit gateway.\n\nregion -> (string)\n\nThe Region where the associated gateway is located.\n\nassociationId -> (string)\n\nThe ID of the Direct Connect gateway association.\n\nallowedPrefixesToDirectConnectGateway -> (list)\n\nThe Amazon VPC prefixes to advertise to the Direct Connect gateway.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\nvirtualGatewayRegion -> (string)\n\nThe Amazon Web Services Region where the virtual private gateway is located.\n\nvirtualGatewayOwnerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual private gateway.",
      "command_examples": "Examples\n\nTo update the specified attributes of the Direct Connect gateway association\n\nThe following update-direct-connect-gateway-association example adds the specified CIDR block to a Direct Connect gateway association.\n\naws directconnect update-direct-connect-gateway-association \\\n    --association-id 820a6e4f-5374-4004-8317-3f64bEXAMPLE \\\n    --add-allowed-prefixes-to-direct-connect-gateway cidr=192.168.2.0/30\n\n\nOutput:\n\n{\n    \"directConnectGatewayAssociation\": {\n        \"directConnectGatewayId\": \"11460968-4ac1-4fd3-bdb2-00599EXAMPLE\",\n        \"directConnectGatewayOwnerAccount\": \"111122223333\",\n        \"associationState\": \"updating\",\n        \"associatedGateway\": {\n            \"id\": \"tgw-02f776b1a7EXAMPLE\",\n            \"type\": \"transitGateway\",\n            \"ownerAccount\": \"111122223333\",\n            \"region\": \"us-east-1\"\n        },\n        \"associationId\": \"820a6e4f-5374-4004-8317-3f64bEXAMPLE\",\n        \"allowedPrefixesToDirectConnectGateway\": [\n            {\n                \"cidr\": \"192.168.2.0/30\"\n            },\n            {\n                \"cidr\": \"192.168.1.0/30\"\n            }\n        ]\n    }\n}\n\n\nFor more information, see Working with Direct Connect Gateways in the AWS Direct Connect User Guide."
    },
    {
      "command_name": "update-lag",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/update-lag.html",
      "command_description": "Description\n\nUpdates the attributes of the specified link aggregation group (LAG).\n\nYou can update the following LAG attributes:\n\nThe name of the LAG.\n\nThe value for the minimum number of connections that must be operational for the LAG itself to be operational.\n\nThe LAG’s MACsec encryption mode. Amazon Web Services assigns this value to each connection which is part of the LAG.\n\nThe tags\n\nNote\n\nIf you adjust the threshold value for the minimum number of operational connections, ensure that the new value does not cause the LAG to fall below the threshold and become non-operational.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-lag\n--lag-id <value>\n[--lag-name <value>]\n[--minimum-links <value>]\n[--encryption-mode <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--lag-id <value>",
        "[--lag-name <value>]",
        "[--minimum-links <value>]",
        "[--encryption-mode <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--lag-id (string)\n\nThe ID of the LAG.\n\n--lag-name (string)\n\nThe name of the LAG.\n\n--minimum-links (integer)\n\nThe minimum number of physical connections that must be operational for the LAG itself to be operational.\n\n--encryption-mode (string)\n\nThe LAG MAC Security (MACsec) encryption mode.\n\nAmazon Web Services applies the value to all connections which are part of the LAG.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconnectionsBandwidth -> (string)\n\nThe individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.\n\nnumberOfConnections -> (integer)\n\nThe number of physical dedicated connections bundled by the LAG, up to a maximum of 10.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the LAG.\n\nlagName -> (string)\n\nThe name of the LAG.\n\nlagState -> (string)\n\nThe state of the LAG. The following are the possible values:\n\nrequested : The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available.\n\npending : The LAG has been approved and is being initialized.\n\navailable : The network link is established and the LAG is ready for use.\n\ndown : The network link is down.\n\ndeleting : The LAG is being deleted.\n\ndeleted : The LAG is deleted.\n\nunknown : The state of the LAG is not available.\n\nlocation -> (string)\n\nThe location of the LAG.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nminimumLinks -> (integer)\n\nThe minimum number of physical dedicated connections that must be operational for the LAG itself to be operational.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that hosts the LAG.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nconnections -> (list)\n\nThe connections bundled by the LAG.\n\n(structure)\n\nInformation about an Direct Connect connection.\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nconnectionName -> (string)\n\nThe name of the connection.\n\nconnectionState -> (string)\n\nThe state of the connection. The following are the possible values:\n\nordering : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.\n\nrequested : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.\n\npending : The connection has been approved and is being initialized.\n\navailable : The network link is up and the connection is ready for use.\n\ndown : The network link is down.\n\ndeleting : The connection is being deleted.\n\ndeleted : The connection has been deleted.\n\nrejected : A hosted connection in the ordering state enters the rejected state if it is deleted by the customer.\n\nunknown : The state of the connection is not available.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the connection is located.\n\nlocation -> (string)\n\nThe location of the connection.\n\nbandwidth -> (string)\n\nThe bandwidth of the connection.\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\npartnerName -> (string)\n\nThe name of the Direct Connect service provider associated with the connection.\n\nloaIssueTime -> (timestamp)\n\nThe time of the most recent call to DescribeLoa for this connection.\n\nlagId -> (string)\n\nThe ID of the LAG.\n\nawsDevice -> (string)\n\nThe Direct Connect endpoint on which the physical connection terminates.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the connection.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the connection.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the connection supports MAC Security (MACsec).\n\nportEncryptionStatus -> (string)\n\nThe MAC Security (MACsec) port link status of the connection.\n\nThe valid values are Encryption Up , which means that there is an active Connection Key Name, or Encryption Down .\n\nencryptionMode -> (string)\n\nThe MAC Security (MACsec) connection encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the connection.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.\n\nallowsHostedConnections -> (boolean)\n\nIndicates whether the LAG can host other connections.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nhasLogicalRedundancy -> (string)\n\nIndicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).\n\ntags -> (list)\n\nThe tags associated with the LAG.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.\n\nproviderName -> (string)\n\nThe name of the service provider associated with the LAG.\n\nmacSecCapable -> (boolean)\n\nIndicates whether the LAG supports MAC Security (MACsec).\n\nencryptionMode -> (string)\n\nThe LAG MAC Security (MACsec) encryption mode.\n\nThe valid values are no_encrypt , should_encrypt , and must_encrypt .\n\nmacSecKeys -> (list)\n\nThe MAC Security (MACsec) security keys associated with the LAG.\n\n(structure)\n\nInformation about the MAC Security (MACsec) secret key.\n\nsecretARN -> (string)\n\nThe Amazon Resource Name (ARN) of the MAC Security (MACsec) secret key.\n\nckn -> (string)\n\nThe Connection Key Name (CKN) for the MAC Security secret key.\n\nstate -> (string)\n\nThe state of the MAC Security (MACsec) secret key.\n\nThe possible values are:\n\nassociating : The MAC Security (MACsec) secret key is being validated and not yet associated with the connection or LAG.\n\nassociated : The MAC Security (MACsec) secret key is validated and associated with the connection or LAG.\n\ndisassociating : The MAC Security (MACsec) secret key is being disassociated from the connection or LAG\n\ndisassociated : The MAC Security (MACsec) secret key is no longer associated with the connection or LAG.\n\nstartOn -> (string)\n\nThe date that the MAC Security (MACsec) secret key takes effect. The value is displayed in UTC format.",
      "command_examples": "Examples\n\nTo update a LAG\n\nThe following example changes the name of the specified LAG.\n\nCommand:\n\naws directconnect update-lag --lag-id dxlag-ffjhj9lx --lag-name 2ConnLag\n\n\nOutput:\n\n{\n  \"awsDevice\": \"CSVA1-23u8tlpaz8iks\",\n  \"numberOfConnections\": 2,\n  \"lagState\": \"down\",\n  \"ownerAccount\": \"123456789012\",\n  \"lagName\": \"2ConnLag\",\n  \"connections\": [\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-fflqyj95\",\n          \"lagId\": \"dxlag-ffjhj9lx\",\n          \"connectionState\": \"requested\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"CSVA1\",\n          \"connectionName\": \"Requested Connection 2 for Lag dxlag-ffjhj9lx\",\n          \"region\": \"us-east-1\"\n      },\n      {\n          \"ownerAccount\": \"123456789012\",\n          \"connectionId\": \"dxcon-ffqr6x5q\",\n          \"lagId\": \"dxlag-ffjhj9lx\",\n          \"connectionState\": \"requested\",\n          \"bandwidth\": \"1Gbps\",\n          \"location\": \"CSVA1\",\n          \"connectionName\": \"Requested Connection 1 for Lag dxlag-ffjhj9lx\",\n          \"region\": \"us-east-1\"\n      }\n  ],\n  \"lagId\": \"dxlag-ffjhj9lx\",\n  \"minimumLinks\": 0,\n  \"connectionsBandwidth\": \"1Gbps\",\n  \"region\": \"us-east-1\",\n  \"location\": \"CSVA1\"\n}\n"
    },
    {
      "command_name": "update-virtual-interface-attributes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/directconnect/update-virtual-interface-attributes.html",
      "command_description": "Description\n\nUpdates the specified attributes of the specified virtual private interface.\n\nSetting the MTU of a virtual interface to 9001 (jumbo frames) can cause an update to the underlying physical connection if it wasn’t updated to support jumbo frames. Updating the connection disrupts network connectivity for all virtual interfaces associated with the connection for up to 30 seconds. To check whether your connection supports jumbo frames, call DescribeConnections . To check whether your virtual q interface supports jumbo frames, call DescribeVirtualInterfaces .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-virtual-interface-attributes\n--virtual-interface-id <value>\n[--mtu <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--virtual-interface-id <value>",
        "[--mtu <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--virtual-interface-id (string)\n\nThe ID of the virtual private interface.\n\n--mtu (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nownerAccount -> (string)\n\nThe ID of the Amazon Web Services account that owns the virtual interface.\n\nvirtualInterfaceId -> (string)\n\nThe ID of the virtual interface.\n\nlocation -> (string)\n\nThe location of the connection.\n\nconnectionId -> (string)\n\nThe ID of the connection.\n\nvirtualInterfaceType -> (string)\n\nThe type of virtual interface. The possible values are private and public .\n\nvirtualInterfaceName -> (string)\n\nThe name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a-z, 0-9 and a hyphen (-).\n\nvlan -> (integer)\n\nThe ID of the VLAN.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nThe valid values are 1-2147483647.\n\namazonSideAsn -> (long)\n\nThe autonomous system number (ASN) for the Amazon side of the connection.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\nvirtualInterfaceState -> (string)\n\nThe state of the virtual interface. The following are the possible values:\n\nconfirming : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.\n\nverifying : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.\n\npending : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.\n\navailable : A virtual interface that is able to forward traffic.\n\ndown : A virtual interface that is BGP down.\n\ndeleting : A virtual interface is in this state immediately after calling DeleteVirtualInterface until it can no longer forward traffic.\n\ndeleted : A virtual interface that cannot forward traffic.\n\nrejected : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the Confirming state is deleted by the virtual interface owner, the virtual interface enters the Rejected state.\n\nunknown : The state of the virtual interface is not available.\n\ncustomerRouterConfig -> (string)\n\nThe customer router configuration.\n\nmtu -> (integer)\n\nThe maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.\n\njumboFrameCapable -> (boolean)\n\nIndicates whether jumbo frames (9001 MTU) are supported.\n\nvirtualGatewayId -> (string)\n\nThe ID of the virtual private gateway. Applies only to private virtual interfaces.\n\ndirectConnectGatewayId -> (string)\n\nThe ID of the Direct Connect gateway.\n\nrouteFilterPrefixes -> (list)\n\nThe routes to be advertised to the Amazon Web Services network in this Region. Applies to public virtual interfaces.\n\n(structure)\n\nInformation about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.\n\ncidr -> (string)\n\nThe CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.\n\nbgpPeers -> (list)\n\nThe BGP peers configured on this virtual interface.\n\n(structure)\n\nInformation about a BGP peer.\n\nbgpPeerId -> (string)\n\nThe ID of the BGP peer.\n\nasn -> (integer)\n\nThe autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.\n\nauthKey -> (string)\n\nThe authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.\n\naddressFamily -> (string)\n\nThe address family for the BGP peer.\n\namazonAddress -> (string)\n\nThe IP address assigned to the Amazon interface.\n\ncustomerAddress -> (string)\n\nThe IP address assigned to the customer interface.\n\nbgpPeerState -> (string)\n\nThe state of the BGP peer. The following are the possible values:\n\nverifying : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.\n\npending : The BGP peer is created, and remains in this state until it is ready to be established.\n\navailable : The BGP peer is ready to be established.\n\ndeleting : The BGP peer is being deleted.\n\ndeleted : The BGP peer is deleted and cannot be established.\n\nbgpStatus -> (string)\n\nThe status of the BGP peer. The following are the possible values:\n\nup : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.\n\ndown : The BGP peer is down.\n\nunknown : The BGP peer status is not available.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the BGP peer.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\nregion -> (string)\n\nThe Amazon Web Services Region where the virtual interface is located.\n\nawsDeviceV2 -> (string)\n\nThe Direct Connect endpoint that terminates the physical connection.\n\nawsLogicalDeviceId -> (string)\n\nThe Direct Connect endpoint that terminates the logical connection. This device might be different than the device that terminates the physical connection.\n\ntags -> (list)\n\nThe tags associated with the virtual interface.\n\n(structure)\n\nInformation about a tag.\n\nkey -> (string)\n\nThe key.\n\nvalue -> (string)\n\nThe value.",
      "command_examples": "Examples\n\nTo update the MTU of a virtual interface\n\nThe following update-virtual-interface-attributes example updates the MTU of the specified virtual interface.\n\naws directconnect update-virtual-interface-attributes \\\n    --virtual-interface-id dxvif-fEXAMPLE \\\n    --mtu 1500\n\n\nOutput:\n\n{\n    \"ownerAccount\": \"1111222233333\",\n    \"virtualInterfaceId\": \"dxvif-fEXAMPLE\",\n    \"location\": \"loc1\",\n    \"connectionId\": \"dxlag-fEXAMPLE\",\n    \"virtualInterfaceType\": \"transit\",\n    \"virtualInterfaceName\": \"example trasit virtual interface\",\n    \"vlan\": 125,\n    \"asn\": 650001,\n    \"amazonSideAsn\": 64512,\n    \"authKey\": \"0xzxgA9YoW9h58u8SEXAMPLE\",\n    \"amazonAddress\": \"169.254.248.1/30\",\n    \"customerAddress\": \"169.254.248.2/30\",\n    \"addressFamily\": \"ipv4\",\n    \"virtualInterfaceState\": \"down\",\n    \"customerRouterConfig\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<logical_connection id=\\\"dxvif-fEXAMPLE\\\">\\n  <vlan>125</vlan>\\n  <customer_address>169.254.248.2/30</customer_address>\\n  <amazon_address>169.254.248.1/30</amazon_address>\\n  <bgp_asn>650001</bgp_asn>\\n  <bgp_auth_key>0xzxgA9YoW9h58u8SEXAMPLE</bgp_auth_key>\\n  <amazon_bgp_asn>64512</amazon_bgp_asn>\\n  <connection_type>transit</connection_type>\\n</logical_connection>\\n\",\n    \"mtu\": 1500,\n    \"jumboFrameCapable\": true,\n    \"virtualGatewayId\": \"\",\n    \"directConnectGatewayId\": \"879b76a1-403d-4700-8b53-4a56ed85436e\",\n    \"routeFilterPrefixes\": [],\n    \"bgpPeers\": [\n        {\n            \"bgpPeerId\": \"dxpeer-fEXAMPLE\",\n            \"asn\": 650001,\n            \"authKey\": \"0xzxgA9YoW9h58u8SEXAMPLE\",\n            \"addressFamily\": \"ipv4\",\n            \"amazonAddress\": \"169.254.248.1/30\",\n            \"customerAddress\": \"169.254.248.2/30\",\n            \"bgpPeerState\": \"available\",\n            \"bgpStatus\": \"down\",\n            \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\"\n        }\n    ],\n    \"region\": \"sa-east-1\",\n    \"awsDeviceV2\": \"loc1-26wz6vEXAMPLE\",\n    \"tags\": []\n}\n\n\nFor more information, see Setting Network MTU for Private Virtual Interfaces or Transit Virtual Interfaces in the AWS Direct Connect User Guide."
    }
  ],
  "service_description": "Description\n\nDirect Connect links your internal network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an Direct Connect router. With this connection in place, you can create virtual interfaces directly to the Amazon Web Services Cloud (for example, to Amazon EC2 and Amazon S3) and to Amazon VPC, bypassing Internet service providers in your network path. A connection provides access to all Amazon Web Services Regions except the China (Beijing) and (China) Ningxia Regions. Amazon Web Services resources in the China Regions can only be accessed through locations associated with those Regions."
}