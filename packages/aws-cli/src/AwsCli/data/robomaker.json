{
  "service_name": "robomaker",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/index.html",
  "service_commands": [
    {
      "command_name": "batch-delete-worlds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/batch-delete-worlds.html",
      "command_description": "Description\n\nDeletes one or more worlds in a batch operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-worlds\n--worlds <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--worlds <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--worlds (list)\n\nA list of Amazon Resource Names (arns) that correspond to worlds to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nunprocessedWorlds -> (list)\n\nA list of unprocessed worlds associated with the call. These worlds were not deleted.\n\n(string)"
    },
    {
      "command_name": "batch-describe-simulation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/batch-describe-simulation-job.html",
      "command_description": "Description\n\nDescribes one or more simulation jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-describe-simulation-job\n--jobs <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--jobs <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--jobs (list)\n\nA list of Amazon Resource Names (ARNs) of simulation jobs to describe.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobs -> (list)\n\nA list of simulation jobs.\n\n(structure)\n\nInformation about a simulation job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nname -> (string)\n\nThe name of the simulation job.\n\nstatus -> (string)\n\nStatus of the simulation job.\n\nlastStartedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last started.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nfailureCode -> (string)\n\nThe failure code of the simulation job if it failed.\n\nfailureReason -> (string)\n\nThe reason why the simulation job failed.\n\nclientRequestToken -> (string)\n\nA unique identifier for this SimulationJob request.\n\noutputLocation -> (structure)\n\nLocation for output files generated by the simulation job.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\nsimulationTimeMillis -> (long)\n\nThe simulation job execution duration in milliseconds.\n\niamRole -> (string)\n\nThe IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nrobotApplications -> (list)\n\nA list of robot applications.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nA list of simulation applications.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nThe data sources for the simulation job.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(structure)\n\nInformation about S3 keys.\n\ns3Key -> (string)\n\nThe S3 key.\n\netag -> (string)\n\nThe etag for the object.\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job.\n\nkey -> (string)\n\nvalue -> (string)\n\nvpcConfig -> (structure)\n\nVPC configuration information.\n\nsubnets -> (list)\n\nA list of subnet IDs associated with the simulation job.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of security group IDs associated with the simulation job.\n\n(string)\n\nvpcId -> (string)\n\nThe VPC ID associated with your simulation job.\n\nassignPublicIp -> (boolean)\n\nA boolean indicating if a public IP was assigned.\n\nnetworkInterface -> (structure)\n\nInformation about a network interface.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nprivateIpAddress -> (string)\n\nThe IPv4 address of the network interface within the subnet.\n\npublicIpAddress -> (string)\n\nThe IPv4 public address of the network interface.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type response information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\nunprocessedJobs -> (list)\n\nA list of unprocessed simulation job Amazon Resource Names (ARNs).\n\n(string)",
      "command_examples": "Examples\n\nTo batch describe simulation jobs\n\nThe following batch-describe-simulation-job example retrieves details for the three specified simulation jobs.\n\nCommand:\n\naws robomaker batch-describe-simulation-job \\\n--job arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-66bbb3gpxm8x arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-p0cpdrrwng2n arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-g8h6tglmblgw\n\n\nOutput:\n\n{\n    \"jobs\": [\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-66bbb3gpxm8x\",\n            \"status\": \"Completed\",\n            \"lastUpdatedAt\": 1548959178.0,\n            \"failureBehavior\": \"Continue\",\n            \"clientRequestToken\": \"6020408e-b05c-4310-9f13-4ed71c5221ed\",\n            \"outputLocation\": {\n                \"s3Bucket\": \"awsrobomakerobjecttracker-111111111-bundlesbucket-2lk584kiq1oa\",\n                \"s3Prefix\": \"output\"\n            },\n            \"maxJobDurationInSeconds\": 3600,\n            \"simulationTimeMillis\": 0,\n            \"iamRole\": \"arn:aws:iam::111111111111:role/AWSRoboMakerObjectTracker-154895-SimulationJobRole-14D5ASA7PQE3A\",\n            \"simulationApplications\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/AWSRoboMakerObjectTracker-1548959046124_NPvyfcatq/1548959170096\",\n                    \"applicationVersion\": \"$LATEST\",\n                    \"launchConfig\": {\n                        \"packageName\": \"object_tracker_simulation\",\n                        \"launchFile\": \"local_training.launch\",\n                        \"environmentVariables\": {\n                            \"MARKOV_PRESET_FILE\": \"object_tracker.py\",\n                            \"MODEL_S3_BUCKET\": \"awsrobomakerobjecttracker-111111111-bundlesbucket-2lk584kiq1oa\",\n                            \"MODEL_S3_PREFIX\": \"model-store\",\n                            \"ROS_AWS_REGION\": \"us-west-2\"\n                        }\n                    }\n                }\n            ],\n            \"tags\": {},\n            \"vpcConfig\": {\n                \"subnets\": [\n                    \"subnet-716dd52a\",\n                    \"subnet-43c22325\",\n                    \"subnet-3f526976\"\n                ],\n                \"securityGroups\": [\n                    \"sg-3fb40545\"\n                ],\n                \"vpcId\": \"vpc-99895eff\",\n                \"assignPublicIp\": true\n            }\n        },\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-p0cpdrrwng2n\",\n            \"status\": \"Completed\",\n            \"lastUpdatedAt\": 1548168817.0,\n            \"failureBehavior\": \"Continue\",\n            \"clientRequestToken\": \"e4a23e75-f9a7-411d-835f-21881c82c58b\",\n            \"outputLocation\": {\n                \"s3Bucket\": \"awsrobomakercloudwatch-111111111111-bundlesbucket-14e5s9jvwtmv7\",\n                \"s3Prefix\": \"output\"\n            },\n            \"maxJobDurationInSeconds\": 3600,\n            \"simulationTimeMillis\": 0,\n            \"iamRole\": \"arn:aws:iam::111111111111:role/AWSRoboMakerCloudWatch-154766341-SimulationJobRole-G0OBWTQ8YBG6\",\n            \"robotApplications\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/AWSRoboMakerCloudWatch-1547663411642_NZbpqEJ3T/1547663517377\",\n                    \"applicationVersion\": \"$LATEST\",\n                    \"launchConfig\": {\n                        \"packageName\": \"cloudwatch_robot\",\n                        \"launchFile\": \"await_commands.launch\",\n                        \"environmentVariables\": {\n                            \"LAUNCH_ID\": \"1548168752173\",\n                            \"ROS_AWS_REGION\": \"us-west-2\"\n                        }\n                    }\n                }\n            ],\n            \"simulationApplications\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/AWSRoboMakerCloudWatch-1547663411642_0LIt6D1h6/1547663521470\",\n                    \"applicationVersion\": \"$LATEST\",\n                    \"launchConfig\": {\n                        \"packageName\": \"cloudwatch_simulation\",\n                        \"launchFile\": \"bookstore_turtlebot_navigation.launch\",\n                        \"environmentVariables\": {\n                            \"LAUNCH_ID\": \"1548168752173\",\n                            \"ROS_AWS_REGION\": \"us-west-2\",\n                            \"TURTLEBOT3_MODEL\": \"waffle_pi\"\n                        }\n                    }\n                }\n            ],\n            \"tags\": {},\n            \"vpcConfig\": {\n                \"subnets\": [\n                    \"subnet-716dd52a\",\n                    \"subnet-43c22325\",\n                    \"subnet-3f526976\"\n                ],\n                \"securityGroups\": [\n                    \"sg-3fb40545\"\n                ],\n                \"vpcId\": \"vpc-99895eff\",\n                \"assignPublicIp\": true\n            }\n        },\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-g8h6tglmblgw\",\n            \"status\": \"Canceled\",\n            \"lastUpdatedAt\": 1546543442.0,\n            \"failureBehavior\": \"Fail\",\n            \"clientRequestToken\": \"d796bbb4-2a2c-1abc-f2a9-0d9e547d853f\",\n            \"outputLocation\": {\n                \"s3Bucket\": \"sample-bucket\",\n                \"s3Prefix\": \"SimulationLog_115490482698\"\n            },\n            \"maxJobDurationInSeconds\": 28800,\n            \"simulationTimeMillis\": 0,\n            \"iamRole\": \"arn:aws:iam::111111111111:role/RoboMakerSampleTheFirst\",\n            \"robotApplications\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/RoboMakerHelloWorldRobot/1546541208251\",\n                    \"applicationVersion\": \"$LATEST\",\n                    \"launchConfig\": {\n                        \"packageName\": \"hello_world_robot\",\n                        \"launchFile\": \"rotate.launch\"\n                    }\n                }\n            ],\n            \"simulationApplications\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/RoboMakerHelloWorldSimulation/1546541198985\",\n                    \"applicationVersion\": \"$LATEST\",\n                    \"launchConfig\": {\n                        \"packageName\": \"hello_world_simulation\",\n                        \"launchFile\": \"empty_world.launch\"\n                    }\n                }\n            ],\n            \"tags\": {}\n        }\n    ],\n    \"unprocessedJobs\": []\n}\n"
    },
    {
      "command_name": "cancel-deployment-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/cancel-deployment-job.html",
      "command_description": "Description\n\nCancels the specified deployment job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-deployment-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe deployment job ARN to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "cancel-simulation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/cancel-simulation-job.html",
      "command_description": "Description\n\nCancels the specified simulation job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-simulation-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe simulation job ARN to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo cancel a simulation job\n\nThe following cancel-simulation-job example cancels the specified simulation job.\n\naws robomaker cancel-simulation-job \\\n    --job arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-66bbb3gpxm8x\n"
    },
    {
      "command_name": "cancel-simulation-job-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/cancel-simulation-job-batch.html",
      "command_description": "Description\n\nCancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-simulation-job-batch\n--batch <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch (string)\n\nThe id of the batch to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "cancel-world-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/cancel-world-export-job.html",
      "command_description": "Description\n\nCancels the specified export job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-world-export-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (arn) of the world export job to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "cancel-world-generation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/cancel-world-generation-job.html",
      "command_description": "Description\n\nCancels the specified world generator job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-world-generation-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (arn) of the world generator job to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-deployment-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-deployment-job.html",
      "command_description": "Description\n\nDeploys a specific version of a robot application to robots in a fleet.\n\nThe robot application must have a numbered applicationVersion for consistency reasons. To create a new version, use CreateRobotApplicationVersion or see Creating a Robot Application Version .\n\nNote\n\nAfter 90 days, deployment jobs expire and will be deleted. They will no longer be accessible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment-job\n[--deployment-config <value>]\n[--client-request-token <value>]\n--fleet <value>\n--deployment-application-configs <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-config <value>]",
        "[--client-request-token <value>]",
        "--fleet <value>",
        "--deployment-application-configs <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-config (structure)\n\nThe requested deployment configuration.\n\nconcurrentDeploymentPercentage -> (integer)\n\nThe percentage of robots receiving the deployment at the same time.\n\nfailureThresholdPercentage -> (integer)\n\nThe percentage of deployments that need to fail before stopping deployment.\n\nrobotDeploymentTimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.\n\ndownloadConditionFile -> (structure)\n\nThe download condition file.\n\nbucket -> (string)\n\nThe bucket containing the object.\n\nkey -> (string)\n\nThe key of the object.\n\netag -> (string)\n\nThe etag of the object.\n\nShorthand Syntax:\n\nconcurrentDeploymentPercentage=integer,failureThresholdPercentage=integer,robotDeploymentTimeoutInSeconds=long,downloadConditionFile={bucket=string,key=string,etag=string}\n\n\nJSON Syntax:\n\n{\n  \"concurrentDeploymentPercentage\": integer,\n  \"failureThresholdPercentage\": integer,\n  \"robotDeploymentTimeoutInSeconds\": long,\n  \"downloadConditionFile\": {\n    \"bucket\": \"string\",\n    \"key\": \"string\",\n    \"etag\": \"string\"\n  }\n}\n\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--fleet (string)\n\nThe Amazon Resource Name (ARN) of the fleet to deploy.\n\n--deployment-application-configs (list)\n\nThe deployment application configuration.\n\n(structure)\n\nInformation about a deployment application configuration.\n\napplication -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\napplicationVersion -> (string)\n\nThe version of the application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration.\n\npackageName -> (string)\n\nThe package name.\n\npreLaunchFile -> (string)\n\nThe deployment pre-launch file. This file will be executed prior to the launch file.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\npostLaunchFile -> (string)\n\nThe deployment post-launch file. This file will be executed after the launch file.\n\nenvironmentVariables -> (map)\n\nAn array of key/value pairs specifying environment variables for the robot application\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\napplication=string,applicationVersion=string,launchConfig={packageName=string,preLaunchFile=string,launchFile=string,postLaunchFile=string,environmentVariables={KeyName1=string,KeyName2=string}} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"application\": \"string\",\n    \"applicationVersion\": \"string\",\n    \"launchConfig\": {\n      \"packageName\": \"string\",\n      \"preLaunchFile\": \"string\",\n      \"launchFile\": \"string\",\n      \"postLaunchFile\": \"string\",\n      \"environmentVariables\": {\"string\": \"string\"\n        ...}\n    }\n  }\n  ...\n]\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the deployment job.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the deployment job.\n\nfleet -> (string)\n\nThe target fleet for the deployment job.\n\nstatus -> (string)\n\nThe status of the deployment job.\n\ndeploymentApplicationConfigs -> (list)\n\nThe deployment application configuration.\n\n(structure)\n\nInformation about a deployment application configuration.\n\napplication -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\napplicationVersion -> (string)\n\nThe version of the application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration.\n\npackageName -> (string)\n\nThe package name.\n\npreLaunchFile -> (string)\n\nThe deployment pre-launch file. This file will be executed prior to the launch file.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\npostLaunchFile -> (string)\n\nThe deployment post-launch file. This file will be executed after the launch file.\n\nenvironmentVariables -> (map)\n\nAn array of key/value pairs specifying environment variables for the robot application\n\nkey -> (string)\n\nvalue -> (string)\n\nfailureReason -> (string)\n\nThe failure reason of the deployment job if it failed.\n\nfailureCode -> (string)\n\nThe failure code of the simulation job if it failed:\n\nBadPermissionError\n\nAWS Greengrass requires a service-level role permission to access other services. The role must include the ` AWSGreengrassResourceAccessRolePolicy managed policy <https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor>`__ .\n\nExtractingBundleFailure\n\nThe robot application could not be extracted from the bundle.\n\nFailureThresholdBreached\n\nThe percentage of robots that could not be updated exceeded the percentage set for the deployment.\n\nGreengrassDeploymentFailed\n\nThe robot application could not be deployed to the robot.\n\nGreengrassGroupVersionDoesNotExist\n\nThe AWS Greengrass group or version associated with a robot is missing.\n\nInternalServerError\n\nAn internal error has occurred. Retry your request, but if the problem persists, contact us with details.\n\nMissingRobotApplicationArchitecture\n\nThe robot application does not have a source that matches the architecture of the robot.\n\nMissingRobotDeploymentResource\n\nOne or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?\n\nPostLaunchFileFailure\n\nThe post-launch script failed.\n\nPreLaunchFileFailure\n\nThe pre-launch script failed.\n\nResourceNotFound\n\nOne or more deployment resources are missing. For example, do robot application source bundles still exist?\n\nRobotDeploymentNoResponse\n\nThere is no response from the robot. It might not be powered on or connected to the internet.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the fleet was created.\n\ndeploymentConfig -> (structure)\n\nThe deployment configuration.\n\nconcurrentDeploymentPercentage -> (integer)\n\nThe percentage of robots receiving the deployment at the same time.\n\nfailureThresholdPercentage -> (integer)\n\nThe percentage of deployments that need to fail before stopping deployment.\n\nrobotDeploymentTimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.\n\ndownloadConditionFile -> (structure)\n\nThe download condition file.\n\nbucket -> (string)\n\nThe bucket containing the object.\n\nkey -> (string)\n\nThe key of the object.\n\netag -> (string)\n\nThe etag of the object.\n\ntags -> (map)\n\nThe list of all tags added to the deployment job.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo create a deployment job\n\nThis example creates a deployment job for fleet MyFleet. It includes an environment variable named “ENVIRONMENT”. It also attaches a tag named “Region”.\n\nCommand:\n\naws robomaker create-deployment-job --deployment-config concurrentDeploymentPercentage=20,failureThresholdPercentage=25 --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/Trek/1539894765711 --tags Region=West --deployment-application-configs application=arn:aws:robomaker:us-west-2:111111111111:robot-application/RoboMakerVoiceInteractionRobot/1546537110575,applicationVersion=1,launchConfig={environmentVariables={ENVIRONMENT=Beta},launchFile=await_commands.launch,packageName=voice_interaction_robot}\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/sim-0974h36s4v0t\",\n  \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n  \"status\": \"Pending\",\n  \"deploymentApplicationConfigs\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/RoboMakerVoiceInteractionRobot/1546537110575\",\n          \"applicationVersion\": \"1\",\n          \"launchConfig\": {\n              \"packageName\": \"voice_interaction_robot\",\n              \"launchFile\": \"await_commands.launch\",\n              \"environmentVariables\": {\n                  \"ENVIRONMENT\": \"Beta\"\n              }\n          }\n      }\n  ],\n  \"createdAt\": 1550770236.0,\n  \"deploymentConfig\": {\n      \"concurrentDeploymentPercentage\": 20,\n      \"failureThresholdPercentage\": 25\n  },\n  \"tags\": {\n      \"Region\": \"West\"\n  }\n}\n"
    },
    {
      "command_name": "create-fleet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-fleet.html",
      "command_description": "Description\n\nCreates a fleet, a logical group of robots running the same robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-fleet\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the fleet.\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the fleet.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nname -> (string)\n\nThe name of the fleet.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the fleet was created.\n\ntags -> (map)\n\nThe list of all tags added to the fleet.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo create a fleet\n\nThis example creates a fleet. It attaches a tag named Region.\n\nCommand:\n\naws robomaker create-fleet --name MyFleet --tags Region=East\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyOtherFleet/1550771394395\",\n  \"name\": \"MyFleet\",\n  \"createdAt\": 1550771394.0,\n  \"tags\": {\n      \"Region\": \"East\"\n  }\n}\n"
    },
    {
      "command_name": "create-robot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-robot.html",
      "command_description": "Description\n\nCreates a robot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-robot\n--name <value>\n--architecture <value>\n--greengrass-group-id <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--architecture <value>",
        "--greengrass-group-id <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name for the robot.\n\n--architecture (string)\n\nThe target architecture of the robot.\n\nPossible values:\n\nX86_64\n\nARM64\n\nARMHF\n\n--greengrass-group-id (string)\n\nThe Greengrass group id.\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the robot.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\nname -> (string)\n\nThe name of the robot.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot was created.\n\ngreengrassGroupId -> (string)\n\nThe Amazon Resource Name (ARN) of the Greengrass group associated with the robot.\n\narchitecture -> (string)\n\nThe target architecture of the robot.\n\ntags -> (map)\n\nThe list of all tags added to the robot.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo create a robot\n\nThis example creates a robot. It uses the ARMHF architecture. It also attaches a tag named Region.\n\nCommand:\n\naws robomaker create-robot --name MyRobot --architecture ARMHF --greengrass-group-id 0f728a3c-7dbf-4a3e-976d-d16a8360caba --tags Region=East\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\",\n  \"name\": \"MyRobot\",\n  \"createdAt\": 1550772325.0,\n  \"greengrassGroupId\": \"0f728a3c-7dbf-4a3e-976d-d16a8360caba\",\n  \"architecture\": \"ARMHF\",\n  \"tags\": {\n      \"Region\": \"East\"\n  }\n}\n"
    },
    {
      "command_name": "create-robot-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-robot-application.html",
      "command_description": "Description\n\nCreates a robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-robot-application\n--name <value>\n[--sources <value>]\n--robot-software-suite <value>\n[--tags <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--sources <value>]",
        "--robot-software-suite <value>",
        "[--tags <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the robot application.\n\n--sources (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source configuration.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\narchitecture -> (string)\n\nThe target processor architecture for the application.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string,architecture=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"s3Bucket\": \"string\",\n    \"s3Key\": \"string\",\n    \"architecture\": \"X86_64\"|\"ARM64\"|\"ARMHF\"\n  }\n  ...\n]\n\n\n--robot-software-suite (structure)\n\nThe robot software suite (ROS distribuition) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"ROS\"|\"ROS2\"|\"General\",\n  \"version\": \"Kinetic\"|\"Melodic\"|\"Dashing\"|\"Foxy\"\n}\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the robot application.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--environment (structure)\n\nThe object that contains that URI of the Docker image that you use for your robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nShorthand Syntax:\n\nuri=string\n\n\nJSON Syntax:\n\n{\n  \"uri\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\nname -> (string)\n\nThe name of the robot application.\n\nversion -> (string)\n\nThe version of the robot application.\n\nsources -> (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nrobotSoftwareSuite -> (structure)\n\nThe robot software suite (ROS distribution) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot application was last updated.\n\nrevisionId -> (string)\n\nThe revision id of the robot application.\n\ntags -> (map)\n\nThe list of all tags added to the robot application.\n\nkey -> (string)\n\nvalue -> (string)\n\nenvironment -> (structure)\n\nAn object that contains the Docker image URI used to a create your robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo create a robot application\n\nThis example creates a robot application.\n\nCommand:\n\naws robomaker create-robot-application --name MyRobotApplication --sources s3Bucket=my-bucket,s3Key=my-robot-application.tar.gz,architecture=X86_64 --robot-software-suite name=ROS,version=Kinetic\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551201873931\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-robot-application.tar.gz\",\n          \"architecture\": \"ARMHF\"\n      }\n  ],\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"lastUpdatedAt\": 1551201873.0,\n  \"revisionId\": \"1f3cb539-9239-4841-a656-d3efcffa07e1\",\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "create-robot-application-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-robot-application-version.html",
      "command_description": "Description\n\nCreates a version of a robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-robot-application-version\n--application <value>\n[--current-revision-id <value>]\n[--s3-etags <value>]\n[--image-digest <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--current-revision-id <value>]",
        "[--s3-etags <value>]",
        "[--image-digest <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the robot application.\n\n--current-revision-id (string)\n\nThe current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.\n\n--s3-etags (list)\n\nThe Amazon S3 identifier for the zip file bundle that you use for your robot application.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--image-digest (string)\n\nA SHA256 identifier for the Docker image that you use for your robot application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\nname -> (string)\n\nThe name of the robot application.\n\nversion -> (string)\n\nThe version of the robot application.\n\nsources -> (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nrobotSoftwareSuite -> (structure)\n\nThe robot software suite (ROS distribution) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot application was last updated.\n\nrevisionId -> (string)\n\nThe revision id of the robot application.\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI used to create your robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo create a robot application version\n\nThis example creates a robot application version.\n\nCommand:\n\naws robomaker create-robot-application-version --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551201873931\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551201873931\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"1\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-robot-application.tar.gz\",\n          \"etag\": \"f8cf5526f1c6e7b3a72c3ed3f79c5493-70\",\n          \"architecture\": \"ARMHF\"\n      }\n  ],\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"lastUpdatedAt\": 1551201873.0,\n  \"revisionId\": \"9986bb8d-a695-4ab4-8810-9f4a74d1aa00\"\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "create-simulation-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-simulation-application.html",
      "command_description": "Description\n\nCreates a simulation application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-simulation-application\n--name <value>\n[--sources <value>]\n--simulation-software-suite <value>\n--robot-software-suite <value>\n[--rendering-engine <value>]\n[--tags <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--sources <value>]",
        "--simulation-software-suite <value>",
        "--robot-software-suite <value>",
        "[--rendering-engine <value>]",
        "[--tags <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the simulation application.\n\n--sources (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source configuration.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\narchitecture -> (string)\n\nThe target processor architecture for the application.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string,architecture=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"s3Bucket\": \"string\",\n    \"s3Key\": \"string\",\n    \"architecture\": \"X86_64\"|\"ARM64\"|\"ARMHF\"\n  }\n  ...\n]\n\n\n--simulation-software-suite (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"Gazebo\"|\"RosbagPlay\"|\"SimulationRuntime\",\n  \"version\": \"string\"\n}\n\n\n--robot-software-suite (structure)\n\nThe robot software suite (ROS distribution) used by the simulation application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"ROS\"|\"ROS2\"|\"General\",\n  \"version\": \"Kinetic\"|\"Melodic\"|\"Dashing\"|\"Foxy\"\n}\n\n\n--rendering-engine (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"OGRE\",\n  \"version\": \"string\"\n}\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the simulation application.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--environment (structure)\n\nThe object that contains the Docker image URI used to create your simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nShorthand Syntax:\n\nuri=string\n\n\nJSON Syntax:\n\n{\n  \"uri\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation application.\n\nname -> (string)\n\nThe name of the simulation application.\n\nversion -> (string)\n\nThe version of the simulation application.\n\nsources -> (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nsimulationSoftwareSuite -> (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about the robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nrenderingEngine -> (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation application was last updated.\n\nrevisionId -> (string)\n\nThe revision id of the simulation application.\n\ntags -> (map)\n\nThe list of all tags added to the simulation application.\n\nkey -> (string)\n\nvalue -> (string)\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI that you used to create your simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo create a simulation application\n\nThis example creates a simulation application.\n\nCommand:\n\naws robomaker create-simulation-application  --name MyRobotApplication --sources s3Bucket=my-bucket,s3Key=my-simulation-application.tar.gz,architecture=ARMHF --robot-software-suite name=ROS,version=Kinetic --simulation-software-suite name=Gazebo,version=7 --rendering-engine name=OGRE,version=1.x\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MyRobotApplication/1551203301792\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-simulation-application.tar.gz\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"simulationSoftwareSuite\": {\n      \"name\": \"Gazebo\",\n      \"version\": \"7\"\n  },\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"renderingEngine\": {\n      \"name\": \"OGRE\",\n      \"version\": \"1.x\"\n  },\n  \"lastUpdatedAt\": 1551203301.0,\n  \"revisionId\": \"ee753e53-519c-4d37-895d-65e79bcd1914\",\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "create-simulation-application-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-simulation-application-version.html",
      "command_description": "Description\n\nCreates a simulation application with a specific revision id.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-simulation-application-version\n--application <value>\n[--current-revision-id <value>]\n[--s3-etags <value>]\n[--image-digest <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--current-revision-id <value>]",
        "[--s3-etags <value>]",
        "[--image-digest <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the simulation application.\n\n--current-revision-id (string)\n\nThe current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.\n\n--s3-etags (list)\n\nThe Amazon S3 eTag identifier for the zip file bundle that you use to create the simulation application.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--image-digest (string)\n\nThe SHA256 digest used to identify the Docker image URI used to created the simulation application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation application.\n\nname -> (string)\n\nThe name of the simulation application.\n\nversion -> (string)\n\nThe version of the simulation application.\n\nsources -> (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nsimulationSoftwareSuite -> (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about the robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nrenderingEngine -> (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation application was last updated.\n\nrevisionId -> (string)\n\nThe revision ID of the simulation application.\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI used to create the simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo create a simulation application version\n\nThis example creates a robot application version.\n\nCommand:\n\naws robomaker create-simulation-application-version --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MySimulationApplication/1551203427605\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MyRobotApplication/1551203427605\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"1\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-simulation-application.tar.gz\",\n          \"etag\": \"00d8a94ff113856688c4fce618ae0f45-94\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"simulationSoftwareSuite\": {\n      \"name\": \"Gazebo\",\n      \"version\": \"7\"\n  },\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"renderingEngine\": {\n      \"name\": \"OGRE\",\n      \"version\": \"1.x\"\n  },\n \"lastUpdatedAt\": 1551203853.0,\n  \"revisionId\": \"ee753e53-519c-4d37-895d-65e79bcd1914\",\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "create-simulation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-simulation-job.html",
      "command_description": "Description\n\nCreates a simulation job.\n\nNote\n\nAfter 90 days, simulation jobs expire and will be deleted. They will no longer be accessible.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-simulation-job\n[--client-request-token <value>]\n[--output-location <value>]\n[--logging-config <value>]\n--max-job-duration-in-seconds <value>\n--iam-role <value>\n[--failure-behavior <value>]\n[--robot-applications <value>]\n[--simulation-applications <value>]\n[--data-sources <value>]\n[--tags <value>]\n[--vpc-config <value>]\n[--compute <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "[--output-location <value>]",
        "[--logging-config <value>]",
        "--max-job-duration-in-seconds <value>",
        "--iam-role <value>",
        "[--failure-behavior <value>]",
        "[--robot-applications <value>]",
        "[--simulation-applications <value>]",
        "[--data-sources <value>]",
        "[--tags <value>]",
        "[--vpc-config <value>]",
        "[--compute <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--output-location (structure)\n\nLocation for output files generated by the simulation job.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Prefix=string\n\n\nJSON Syntax:\n\n{\n  \"s3Bucket\": \"string\",\n  \"s3Prefix\": \"string\"\n}\n\n\n--logging-config (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nShorthand Syntax:\n\nrecordAllRosTopics=boolean\n\n\nJSON Syntax:\n\n{\n  \"recordAllRosTopics\": true|false\n}\n\n\n--max-job-duration-in-seconds (long)\n\nThe maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When maxJobDurationInSeconds is reached, the simulation job will status will transition to Completed .\n\n--iam-role (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\n--failure-behavior (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the instance running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nPossible values:\n\nFail\n\nContinue\n\n--robot-applications (list)\n\nThe robot application to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nJSON Syntax:\n\n[\n  {\n    \"application\": \"string\",\n    \"applicationVersion\": \"string\",\n    \"launchConfig\": {\n      \"packageName\": \"string\",\n      \"launchFile\": \"string\",\n      \"environmentVariables\": {\"string\": \"string\"\n        ...},\n      \"portForwardingConfig\": {\n        \"portMappings\": [\n          {\n            \"jobPort\": integer,\n            \"applicationPort\": integer,\n            \"enableOnPublicIp\": true|false\n          }\n          ...\n        ]\n      },\n      \"streamUI\": true|false,\n      \"command\": [\"string\", ...]\n    },\n    \"uploadConfigurations\": [\n      {\n        \"name\": \"string\",\n        \"path\": \"string\",\n        \"uploadBehavior\": \"UPLOAD_ON_TERMINATE\"|\"UPLOAD_ROLLING_AUTO_REMOVE\"\n      }\n      ...\n    ],\n    \"useDefaultUploadConfigurations\": true|false,\n    \"tools\": [\n      {\n        \"streamUI\": true|false,\n        \"name\": \"string\",\n        \"command\": \"string\",\n        \"streamOutputToCloudWatch\": true|false,\n        \"exitBehavior\": \"FAIL\"|\"RESTART\"\n      }\n      ...\n    ],\n    \"useDefaultTools\": true|false\n  }\n  ...\n]\n\n\n--simulation-applications (list)\n\nThe simulation application to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nJSON Syntax:\n\n[\n  {\n    \"application\": \"string\",\n    \"applicationVersion\": \"string\",\n    \"launchConfig\": {\n      \"packageName\": \"string\",\n      \"launchFile\": \"string\",\n      \"environmentVariables\": {\"string\": \"string\"\n        ...},\n      \"portForwardingConfig\": {\n        \"portMappings\": [\n          {\n            \"jobPort\": integer,\n            \"applicationPort\": integer,\n            \"enableOnPublicIp\": true|false\n          }\n          ...\n        ]\n      },\n      \"streamUI\": true|false,\n      \"command\": [\"string\", ...]\n    },\n    \"uploadConfigurations\": [\n      {\n        \"name\": \"string\",\n        \"path\": \"string\",\n        \"uploadBehavior\": \"UPLOAD_ON_TERMINATE\"|\"UPLOAD_ROLLING_AUTO_REMOVE\"\n      }\n      ...\n    ],\n    \"worldConfigs\": [\n      {\n        \"world\": \"string\"\n      }\n      ...\n    ],\n    \"useDefaultUploadConfigurations\": true|false,\n    \"tools\": [\n      {\n        \"streamUI\": true|false,\n        \"name\": \"string\",\n        \"command\": \"string\",\n        \"streamOutputToCloudWatch\": true|false,\n        \"exitBehavior\": \"FAIL\"|\"RESTART\"\n      }\n      ...\n    ],\n    \"useDefaultTools\": true|false\n  }\n  ...\n]\n\n\n--data-sources (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nShorthand Syntax:\n\nname=string,s3Bucket=string,s3Keys=string,string,type=string,destination=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"s3Bucket\": \"string\",\n    \"s3Keys\": [\"string\", ...],\n    \"type\": \"Prefix\"|\"Archive\"|\"File\",\n    \"destination\": \"string\"\n  }\n  ...\n]\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--vpc-config (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\nShorthand Syntax:\n\nsubnets=string,string,securityGroups=string,string,assignPublicIp=boolean\n\n\nJSON Syntax:\n\n{\n  \"subnets\": [\"string\", ...],\n  \"securityGroups\": [\"string\", ...],\n  \"assignPublicIp\": true|false\n}\n\n\n--compute (structure)\n\nCompute information for the simulation job.\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\nShorthand Syntax:\n\nsimulationUnitLimit=integer,computeType=string,gpuUnitLimit=integer\n\n\nJSON Syntax:\n\n{\n  \"simulationUnitLimit\": integer,\n  \"computeType\": \"CPU\"|\"GPU_AND_CPU\",\n  \"gpuUnitLimit\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nstatus -> (string)\n\nThe status of the simulation job.\n\nlastStartedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last started.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nfailureBehavior -> (string)\n\nthe failure behavior for the simulation job.\n\nfailureCode -> (string)\n\nThe failure code of the simulation job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nRobotApplicationCrash\n\nRobot application exited abnormally.\n\nSimulationApplicationCrash\n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\nUnable to publish outputs to customer-provided S3 bucket.\n\nBadPermissionsCloudwatchLogs\n\nUnable to publish logs to customer-provided CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\nSubnet IP limit exceeded.\n\nENILimitExceeded\n\nENI limit exceeded.\n\nBadPermissionsUserCredentials\n\nUnable to use the Role provided.\n\nInvalidBundleRobotApplication\n\nRobot bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\nSimulation bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\nEtag for RobotApplication does not match value during version creation.\n\nSimulationApplicationVersionMismatchedEtag\n\nEtag for SimulationApplication does not match value during version creation.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\noutputLocation -> (structure)\n\nSimulation job output files location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds.\n\nsimulationTimeMillis -> (long)\n\nThe simulation job execution duration in milliseconds.\n\niamRole -> (string)\n\nThe IAM role that allows the simulation job to call the AWS APIs that are specified in its associated policies on your behalf.\n\nrobotApplications -> (list)\n\nThe robot application used by the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation application used by the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nThe data sources for the simulation job.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(structure)\n\nInformation about S3 keys.\n\ns3Key -> (string)\n\nThe S3 key.\n\netag -> (string)\n\nThe etag for the object.\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\ntags -> (map)\n\nThe list of all tags added to the simulation job.\n\nkey -> (string)\n\nvalue -> (string)\n\nvpcConfig -> (structure)\n\nInformation about the vpc configuration.\n\nsubnets -> (list)\n\nA list of subnet IDs associated with the simulation job.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of security group IDs associated with the simulation job.\n\n(string)\n\nvpcId -> (string)\n\nThe VPC ID associated with your simulation job.\n\nassignPublicIp -> (boolean)\n\nA boolean indicating if a public IP was assigned.\n\ncompute -> (structure)\n\nCompute information for the simulation job.\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type response information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.",
      "command_examples": "Examples\n\nTo create a simulation job\n\nThis example creates a simulation job. It uses a robot application and a simulation application.\n\nCommand:\n\naws robomaker create-simulation-job --max-job-duration-in-seconds 3600 --iam-role arn:aws:iam::111111111111:role/AWSRoboMakerCloudWatch-154766341-SimulationJobRole-G0OBWTQ8YBG6 --robot-applications application=arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821,launchConfig={packageName=hello_world_robot,launchFile=rotate.launch} --simulation-applications application=arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605,launchConfig={packageName=hello_world_simulation,launchFile=empty_world.launch} --tags Region=North\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-w7m68wpr05h8\",\n  \"status\": \"Pending\",\n  \"lastUpdatedAt\": 1551213837.0,\n  \"failureBehavior\": \"Fail\",\n  \"clientRequestToken\": \"b283ccce-e468-43ee-8642-be76a9d69f15\",\n  \"maxJobDurationInSeconds\": 3600,\n  \"simulationTimeMillis\": 0,\n  \"iamRole\": \"arn:aws:iam::111111111111:role/MySimulationRole\",\n  \"robotApplications\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821\",\n          \"applicationVersion\": \"$LATEST\",\n          \"launchConfig\": {\n              \"packageName\": \"hello_world_robot\",\n              \"launchFile\": \"rotate.launch\"\n          }\n      }\n  ],\n  \"simulationApplications\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605\",\n          \"applicationVersion\": \"$LATEST\",\n          \"launchConfig\": {\n              \"packageName\": \"hello_world_simulation\",\n              \"launchFile\": \"empty_world.launch\"\n          }\n      }\n  ],\n  \"tags\": {\n      \"Region\": \"North\"\n  }\n}\n"
    },
    {
      "command_name": "create-world-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-world-export-job.html",
      "command_description": "Description\n\nCreates a world export job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-world-export-job\n[--client-request-token <value>]\n--worlds <value>\n--output-location <value>\n--iam-role <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "--worlds <value>",
        "--output-location <value>",
        "--iam-role <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--worlds (list)\n\nA list of Amazon Resource Names (arns) that correspond to worlds to export.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--output-location (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Prefix=string\n\n\nJSON Syntax:\n\n{\n  \"s3Bucket\": \"string\",\n  \"s3Prefix\": \"string\"\n}\n\n\n--iam-role (string)\n\nThe IAM role that the world export process uses to access the Amazon S3 bucket and put the export.\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the world export job.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world export job.\n\nstatus -> (string)\n\nThe status of the world export job.\n\nPending\n\nThe world export job request is pending.\n\nRunning\n\nThe world export job is running.\n\nCompleted\n\nThe world export job completed.\n\nFailed\n\nThe world export job failed. See failureCode for more information.\n\nCanceled\n\nThe world export job was cancelled.\n\nCanceling\n\nThe world export job is being cancelled.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world export job was created.\n\nfailureCode -> (string)\n\nThe failure code of the world export job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nLimitExceeded\n\nThe requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed.\n\nResourceNotFound\n\nThe specified resource could not be found.\n\nRequestThrottled\n\nThe request was throttled.\n\nInvalidInput\n\nAn input parameter in the request is not valid.\n\nAllWorldGenerationFailed\n\nAll of the worlds in the world generation job failed. This can happen if your worldCount is greater than 50 or less than 1.\n\nFor more information about troubleshooting WorldForge, see Troubleshooting Simulation WorldForge .\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\niamRole -> (string)\n\nThe IAM role that the world export process uses to access the Amazon S3 bucket and put the export.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world export job.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-world-generation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-world-generation-job.html",
      "command_description": "Description\n\nCreates worlds using the specified template.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-world-generation-job\n[--client-request-token <value>]\n--template <value>\n--world-count <value>\n[--tags <value>]\n[--world-tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "--template <value>",
        "--world-count <value>",
        "[--tags <value>]",
        "[--world-tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--template (string)\n\nThe Amazon Resource Name (arn) of the world template describing the worlds you want to create.\n\n--world-count (structure)\n\nInformation about the world count.\n\nfloorplanCount -> (integer)\n\nThe number of unique floorplans.\n\ninteriorCountPerFloorplan -> (integer)\n\nThe number of unique interiors per floorplan.\n\nShorthand Syntax:\n\nfloorplanCount=integer,interiorCountPerFloorplan=integer\n\n\nJSON Syntax:\n\n{\n  \"floorplanCount\": integer,\n  \"interiorCountPerFloorplan\": integer\n}\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the world generator job.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--world-tags (map)\n\nA map that contains tag keys and tag values that are attached to the generated worlds.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world generator job.\n\nstatus -> (string)\n\nThe status of the world generator job.\n\nPending\n\nThe world generator job request is pending.\n\nRunning\n\nThe world generator job is running.\n\nCompleted\n\nThe world generator job completed.\n\nFailed\n\nThe world generator job failed. See failureCode for more information.\n\nPartialFailed\n\nSome worlds did not generate.\n\nCanceled\n\nThe world generator job was cancelled.\n\nCanceling\n\nThe world generator job is being cancelled.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world generator job was created.\n\nfailureCode -> (string)\n\nThe failure code of the world generator job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nLimitExceeded\n\nThe requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed.\n\nResourceNotFound\n\nThe specified resource could not be found.\n\nRequestThrottled\n\nThe request was throttled.\n\nInvalidInput\n\nAn input parameter in the request is not valid.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\ntemplate -> (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\nworldCount -> (structure)\n\nInformation about the world count.\n\nfloorplanCount -> (integer)\n\nThe number of unique floorplans.\n\ninteriorCountPerFloorplan -> (integer)\n\nThe number of unique interiors per floorplan.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world generator job.\n\nkey -> (string)\n\nvalue -> (string)\n\nworldTags -> (map)\n\nA map that contains tag keys and tag values that are attached to the generated worlds.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-world-template",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/create-world-template.html",
      "command_description": "Description\n\nCreates a world template.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-world-template\n[--client-request-token <value>]\n[--name <value>]\n[--template-body <value>]\n[--template-location <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "[--name <value>]",
        "[--template-body <value>]",
        "[--template-location <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--name (string)\n\nThe name of the world template.\n\n--template-body (string)\n\nThe world template body.\n\n--template-location (structure)\n\nThe location of the world template.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe list of S3 keys identifying the data source files.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string\n\n\nJSON Syntax:\n\n{\n  \"s3Bucket\": \"string\",\n  \"s3Key\": \"string\"\n}\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the world template.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world template.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world template was created.\n\nname -> (string)\n\nThe name of the world template.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world template.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "delete-fleet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/delete-fleet.html",
      "command_description": "Description\n\nDeletes a fleet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-fleet\n--fleet <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--fleet <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--fleet (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a fleet\n\nThis example deletes a fleet.\n\nCommand:\n\naws robomaker delete-fleet --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771394395\n"
    },
    {
      "command_name": "delete-robot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/delete-robot.html",
      "command_description": "Description\n\nDeletes a robot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-robot\n--robot <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--robot <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--robot (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a robot\n\nThis example deletes a robot.\n\nCommand:\n\naws robomaker delete-robot --robot arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1540829698778\n"
    },
    {
      "command_name": "delete-robot-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/delete-robot-application.html",
      "command_description": "Description\n\nDeletes a robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-robot-application\n--application <value>\n[--application-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--application-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe Amazon Resource Name (ARN) of the the robot application.\n\n--application-version (string)\n\nThe version of the robot application to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a robot application\n\nThis example deletes a robot application.\n\nCommand:\n\naws robomaker delete-robot-application --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821\n"
    },
    {
      "command_name": "delete-simulation-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/delete-simulation-application.html",
      "command_description": "Description\n\nDeletes a simulation application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-simulation-application\n--application <value>\n[--application-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--application-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the simulation application to delete.\n\n--application-version (string)\n\nThe version of the simulation application to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a simulation application\n\nThis example deletes a simulation application.\n\nCommand:\n\naws robomaker delete-simulation-application --application arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605\n"
    },
    {
      "command_name": "delete-world-template",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/delete-world-template.html",
      "command_description": "Description\n\nDeletes a world template.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-world-template\n--template <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--template <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--template (string)\n\nThe Amazon Resource Name (arn) of the world template you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "deregister-robot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/deregister-robot.html",
      "command_description": "Description\n\nDeregisters a robot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-robot\n--fleet <value>\n--robot <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--fleet <value>",
        "--robot <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--fleet (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\n--robot (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfleet -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nrobot -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.",
      "command_examples": "Examples\n\nTo deregister a robot from a fleet\n\nThis example deregisters a robot from a fleet.\n\nCommand:\n\naws robomaker deregister-robot --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771358907 --robot arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\n\n\nOutput:\n\n{\n  \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771358907\",\n  \"robot\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\"\n}\n"
    },
    {
      "command_name": "describe-deployment-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-deployment-job.html",
      "command_description": "Description\n\nDescribes a deployment job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-deployment-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (ARN) of the deployment job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the deployment job.\n\nfleet -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the deployment job.\n\ndeploymentConfig -> (structure)\n\nThe deployment configuration.\n\nconcurrentDeploymentPercentage -> (integer)\n\nThe percentage of robots receiving the deployment at the same time.\n\nfailureThresholdPercentage -> (integer)\n\nThe percentage of deployments that need to fail before stopping deployment.\n\nrobotDeploymentTimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.\n\ndownloadConditionFile -> (structure)\n\nThe download condition file.\n\nbucket -> (string)\n\nThe bucket containing the object.\n\nkey -> (string)\n\nThe key of the object.\n\netag -> (string)\n\nThe etag of the object.\n\ndeploymentApplicationConfigs -> (list)\n\nThe deployment application configuration.\n\n(structure)\n\nInformation about a deployment application configuration.\n\napplication -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\napplicationVersion -> (string)\n\nThe version of the application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration.\n\npackageName -> (string)\n\nThe package name.\n\npreLaunchFile -> (string)\n\nThe deployment pre-launch file. This file will be executed prior to the launch file.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\npostLaunchFile -> (string)\n\nThe deployment post-launch file. This file will be executed after the launch file.\n\nenvironmentVariables -> (map)\n\nAn array of key/value pairs specifying environment variables for the robot application\n\nkey -> (string)\n\nvalue -> (string)\n\nfailureReason -> (string)\n\nA short description of the reason why the deployment job failed.\n\nfailureCode -> (string)\n\nThe deployment job failure code.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the deployment job was created.\n\nrobotDeploymentSummary -> (list)\n\nA list of robot deployment summaries.\n\n(structure)\n\nInformation about a robot deployment.\n\narn -> (string)\n\nThe robot deployment Amazon Resource Name (ARN).\n\ndeploymentStartTime -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the deployment was started.\n\ndeploymentFinishTime -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the deployment finished.\n\nstatus -> (string)\n\nThe status of the robot deployment.\n\nprogressDetail -> (structure)\n\nInformation about how the deployment is progressing.\n\ncurrentProgress -> (string)\n\nThe current progress status.\n\nValidating\n\nValidating the deployment.\n\nDownloadingExtracting\n\nDownloading and extracting the bundle on the robot.\n\nExecutingPreLaunch\n\nExecuting pre-launch script(s) if provided.\n\nLaunching\n\nLaunching the robot application.\n\nExecutingPostLaunch\n\nExecuting post-launch script(s) if provided.\n\nFinished\n\nDeployment is complete.\n\npercentDone -> (float)\n\nPrecentage of the step that is done. This currently only applies to the Downloading/Extracting step of the deployment. It is empty for other steps.\n\nestimatedTimeRemainingSeconds -> (integer)\n\nEstimated amount of time in seconds remaining in the step. This currently only applies to the Downloading/Extracting step of the deployment. It is empty for other steps.\n\ntargetResource -> (string)\n\nThe Amazon Resource Name (ARN) of the deployment job.\n\nfailureReason -> (string)\n\nA short description of the reason why the robot deployment failed.\n\nfailureCode -> (string)\n\nThe robot deployment failure code.\n\ntags -> (map)\n\nThe list of all tags added to the specified deployment job.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo describe a deployment job\n\nThe following describe-deployment-job example retrieves the details about the specified deployment job.\n\naws robomaker describe-deployment-job \\\n    --job arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-xl8qssl6pbcn\n\n\nOutput:\n\n{\n    \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-xl8qssl6pbcn\",\n    \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/Trek/1539894765711\",\n    \"status\": \"InProgress\",\n    \"deploymentConfig\": {\n        \"concurrentDeploymentPercentage\": 20,\n        \"failureThresholdPercentage\": 25\n    },\n    \"deploymentApplicationConfigs\": [\n        {\n            \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/RoboMakerHelloWorldRobot/1546541208251\",\n            \"applicationVersion\": \"1\",\n            \"launchConfig\": {\n                \"packageName\": \"hello_world_robot\",\n                \"launchFile\": \"rotate.launch\"\n            }\n        }\n    ],\n    \"createdAt\": 1551218369.0,\n    \"robotDeploymentSummary\": [\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1540834232469\",\n            \"deploymentStartTime\": 1551218376.0,\n            \"status\": \"Deploying\",\n            \"progressDetail\": {}\n        }\n    ],\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "describe-fleet",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-fleet.html",
      "command_description": "Description\n\nDescribes a fleet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-fleet\n--fleet <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--fleet <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--fleet (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nname -> (string)\n\nThe name of the fleet.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nrobots -> (list)\n\nA list of robots.\n\n(structure)\n\nInformation about a robot.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\nname -> (string)\n\nThe name of the robot.\n\nfleetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the robot.\n\ngreenGrassGroupId -> (string)\n\nThe Greengrass group associated with the robot.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot was created.\n\narchitecture -> (string)\n\nThe architecture of the robot.\n\nlastDeploymentJob -> (string)\n\nThe Amazon Resource Name (ARN) of the last deployment job.\n\nlastDeploymentTime -> (timestamp)\n\nThe time of the last deployment.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the fleet was created.\n\nlastDeploymentStatus -> (string)\n\nThe status of the last deployment.\n\nlastDeploymentJob -> (string)\n\nThe Amazon Resource Name (ARN) of the last deployment job.\n\nlastDeploymentTime -> (timestamp)\n\nThe time of the last deployment.\n\ntags -> (map)\n\nThe list of all tags added to the specified fleet.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo describe a fleet\n\nThe following describe-fleet example retrieves the details for the specified fleet.\n\naws robomaker describe-fleet \\\n    --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771358907\n\n\nOutput:\n\n{\n    \"name\": \"MyFleet\",\n    \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n    \"robots\": [\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1540834232469\",\n            \"createdAt\": 1540834232.0\n        },\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyOtherRobot/1540829698778\",\n            \"createdAt\": 1540829698.0\n        }\n    ],\n    \"createdAt\": 1539894765.0,\n    \"lastDeploymentStatus\": \"Succeeded\",\n    \"lastDeploymentJob\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-xl8qssl6pbcn\",\n    \"lastDeploymentTime\": 1551218369.0,\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "describe-robot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-robot.html",
      "command_description": "Description\n\nDescribes a robot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-robot\n--robot <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--robot <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--robot (string)\n\nThe Amazon Resource Name (ARN) of the robot to be described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\nname -> (string)\n\nThe name of the robot.\n\nfleetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the fleet.\n\ngreengrassGroupId -> (string)\n\nThe Greengrass group id.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot was created.\n\narchitecture -> (string)\n\nThe target architecture of the robot application.\n\nlastDeploymentJob -> (string)\n\nThe Amazon Resource Name (ARN) of the last deployment job.\n\nlastDeploymentTime -> (timestamp)\n\nThe time of the last deployment job.\n\ntags -> (map)\n\nThe list of all tags added to the specified robot.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo describe a robot\n\nThis example describes a robot.\n\nCommand:\n\naws robomaker describe-robot --robot arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\",\n  \"name\": \"MyRobot\",\n  \"status\": \"Available\",\n  \"greengrassGroupId\": \"0f728a3c-7dbf-4a3e-976d-d16a8360caba\",\n  \"createdAt\": 1550772325.0,\n  \"architecture\": \"ARMHF\",\n  \"tags\": {\n      \"Region\": \"East\"\n  }\n}\n"
    },
    {
      "command_name": "describe-robot-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-robot-application.html",
      "command_description": "Description\n\nDescribes a robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-robot-application\n--application <value>\n[--application-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--application-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\n--application-version (string)\n\nThe version of the robot application to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\nname -> (string)\n\nThe name of the robot application.\n\nversion -> (string)\n\nThe version of the robot application.\n\nsources -> (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nrobotSoftwareSuite -> (structure)\n\nThe robot software suite (ROS distribution) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nrevisionId -> (string)\n\nThe revision id of the robot application.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot application was last updated.\n\ntags -> (map)\n\nThe list of all tags added to the specified robot application.\n\nkey -> (string)\n\nvalue -> (string)\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI used to create the robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nimageDigest -> (string)\n\nA SHA256 identifier for the Docker image that you use for your robot application.",
      "command_examples": "Examples\n\nTo describe a robot application\n\nThis example describes a robot application.\n\nCommand:\n\naws robomaker describe-robot-application --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-robot-application.tar.gz\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"revisionId\": \"e72efe0d-f44f-4333-b604-f6fa5c6bb50b\",\n  \"lastUpdatedAt\": 1551203485.0,\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "describe-simulation-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-simulation-application.html",
      "command_description": "Description\n\nDescribes a simulation application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-simulation-application\n--application <value>\n[--application-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--application-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the simulation application.\n\n--application-version (string)\n\nThe version of the simulation application to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot simulation application.\n\nname -> (string)\n\nThe name of the simulation application.\n\nversion -> (string)\n\nThe version of the simulation application.\n\nsources -> (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nsimulationSoftwareSuite -> (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about the robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nrenderingEngine -> (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nrevisionId -> (string)\n\nThe revision id of the simulation application.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation application was last updated.\n\ntags -> (map)\n\nThe list of all tags added to the specified simulation application.\n\nkey -> (string)\n\nvalue -> (string)\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI used to create the simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nimageDigest -> (string)\n\nA SHA256 identifier for the Docker image that you use for your simulation application.",
      "command_examples": "Examples\n\nTo describe a simulation application\n\nThis example describes a simulation application.\n\nCommand:\n\naws robomaker describe-simulation-application --application arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605\",\n  \"name\": \"MySimulationApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-simulation-application.tar.gz\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"simulationSoftwareSuite\": {\n      \"name\": \"Gazebo\",\n      \"version\": \"7\"\n  },\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"renderingEngine\": {\n      \"name\": \"OGRE\",\n      \"version\": \"1.x\"\n  },\n  \"revisionId\": \"783674ab-b7b8-42d9-b01f-9373907987e5\",\n  \"lastUpdatedAt\": 1551203427.0,\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "describe-simulation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-simulation-job.html",
      "command_description": "Description\n\nDescribes a simulation job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-simulation-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (ARN) of the simulation job to be described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nname -> (string)\n\nThe name of the simulation job.\n\nstatus -> (string)\n\nThe status of the simulation job.\n\nlastStartedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last started.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nfailureBehavior -> (string)\n\nThe failure behavior for the simulation job.\n\nfailureCode -> (string)\n\nThe failure code of the simulation job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nRobotApplicationCrash\n\nRobot application exited abnormally.\n\nSimulationApplicationCrash\n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\nUnable to publish outputs to customer-provided S3 bucket.\n\nBadPermissionsCloudwatchLogs\n\nUnable to publish logs to customer-provided CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\nSubnet IP limit exceeded.\n\nENILimitExceeded\n\nENI limit exceeded.\n\nBadPermissionsUserCredentials\n\nUnable to use the Role provided.\n\nInvalidBundleRobotApplication\n\nRobot bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\nSimulation bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\nEtag for RobotApplication does not match value during version creation.\n\nSimulationApplicationVersionMismatchedEtag\n\nEtag for SimulationApplication does not match value during version creation.\n\nfailureReason -> (string)\n\nDetails about why the simulation job failed. For more information about troubleshooting, see Troubleshooting .\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\noutputLocation -> (structure)\n\nLocation for output files generated by the simulation job.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\nsimulationTimeMillis -> (long)\n\nThe simulation job execution duration in milliseconds.\n\niamRole -> (string)\n\nThe IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf.\n\nrobotApplications -> (list)\n\nA list of robot applications.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nA list of simulation applications.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nThe data sources for the simulation job.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(structure)\n\nInformation about S3 keys.\n\ns3Key -> (string)\n\nThe S3 key.\n\netag -> (string)\n\nThe etag for the object.\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\ntags -> (map)\n\nThe list of all tags added to the specified simulation job.\n\nkey -> (string)\n\nvalue -> (string)\n\nvpcConfig -> (structure)\n\nThe VPC configuration.\n\nsubnets -> (list)\n\nA list of subnet IDs associated with the simulation job.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of security group IDs associated with the simulation job.\n\n(string)\n\nvpcId -> (string)\n\nThe VPC ID associated with your simulation job.\n\nassignPublicIp -> (boolean)\n\nA boolean indicating if a public IP was assigned.\n\nnetworkInterface -> (structure)\n\nThe network interface information for the simulation job.\n\nnetworkInterfaceId -> (string)\n\nThe ID of the network interface.\n\nprivateIpAddress -> (string)\n\nThe IPv4 address of the network interface within the subnet.\n\npublicIpAddress -> (string)\n\nThe IPv4 public address of the network interface.\n\ncompute -> (structure)\n\nCompute information for the simulation job.\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type response information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.",
      "command_examples": "Examples\n\nTo describe a simulation job\n\nThis example describes a simulation job.\n\nCommand:\n\naws robomaker describe-simulation-job --job arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-pql32v7pfjy6\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-pql32v7pfjy6\",\n  \"status\": \"Running\",\n  \"lastUpdatedAt\": 1551219349.0,\n  \"failureBehavior\": \"Continue\",\n  \"clientRequestToken\": \"a19ec4b5-e50d-3591-33da-c2e593c60615\",\n  \"outputLocation\": {\n      \"s3Bucket\": \"my-output-bucket\",\n      \"s3Prefix\": \"output\"\n  },\n  \"maxJobDurationInSeconds\": 3600,\n  \"simulationTimeMillis\": 0,\n  \"iamRole\": \"arn:aws:iam::111111111111:role/MySimulationRole\",\n  \"robotApplications\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551206341136\",\n          \"applicationVersion\": \"$LATEST\",\n          \"launchConfig\": {\n              \"packageName\": \"hello_world_robot\",\n              \"launchFile\": \"rotate.launch\"\n          }\n      }\n  ],\n  \"simulationApplications\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551206347967\",\n          \"applicationVersion\": \"$LATEST\",\n          \"launchConfig\": {\n              \"packageName\": \"hello_world_simulation\",\n              \"launchFile\": \"empty_world.launch\"\n          }\n      }\n  ],\n  \"tags\": {}\n}\n"
    },
    {
      "command_name": "describe-simulation-job-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-simulation-job-batch.html",
      "command_description": "Description\n\nDescribes a simulation job batch.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-simulation-job-batch\n--batch <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--batch <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--batch (string)\n\nThe id of the batch to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the batch.\n\nstatus -> (string)\n\nThe status of the batch.\n\nPending\n\nThe simulation job batch request is pending.\n\nInProgress\n\nThe simulation job batch is in progress.\n\nFailed\n\nThe simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like InternalServiceError ). See failureCode and failureReason for more information.\n\nCompleted\n\nThe simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to InternalServiceError and (2) when all created simulation jobs have reached a terminal state (for example, Completed or Failed ).\n\nCanceled\n\nThe simulation batch job was cancelled.\n\nCanceling\n\nThe simulation batch job is being cancelled.\n\nCompleting\n\nThe simulation batch job is completing.\n\nTimingOut\n\nThe simulation job batch is timing out.\n\nIf a batch timing out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), the batch status will be Failed . If there are no such failing request, the batch status will be TimedOut .\n\nTimedOut\n\nThe simulation batch job timed out.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch was last updated.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch was created.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\nbatchPolicy -> (structure)\n\nThe batch policy.\n\ntimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for the batch to complete.\n\nIf a batch times out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), they will be moved to the failed list and the batch status will be Failed . If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be TimedOut .\n\nmaxConcurrency -> (integer)\n\nThe number of active simulation jobs create as part of the batch that can be in an active state at the same time.\n\nActive states include: Pending ,``Preparing`` , Running , Restarting , RunningFailed and Terminating . All other states are terminal states.\n\nfailureCode -> (string)\n\nThe failure code of the simulation job batch.\n\nfailureReason -> (string)\n\nThe reason the simulation job batch failed.\n\nfailedRequests -> (list)\n\nA list of failed create simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID.\n\n(structure)\n\nInformation about a failed create simulation job request.\n\nrequest -> (structure)\n\nThe simulation job request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\niamRole -> (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nuseDefaultApplications -> (boolean)\n\nA Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access.\n\nrobotApplications -> (list)\n\nThe robot applications to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation applications to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nvpcConfig -> (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job request.\n\nkey -> (string)\n\nvalue -> (string)\n\nfailureReason -> (string)\n\nThe failure reason of the simulation job request.\n\nfailureCode -> (string)\n\nThe failure code.\n\nfailedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch failed.\n\npendingRequests -> (list)\n\nA list of pending simulation job requests. These requests have not yet been created into simulation jobs.\n\n(structure)\n\nInformation about a simulation job request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\niamRole -> (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nuseDefaultApplications -> (boolean)\n\nA Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access.\n\nrobotApplications -> (list)\n\nThe robot applications to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation applications to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nvpcConfig -> (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job request.\n\nkey -> (string)\n\nvalue -> (string)\n\ncreatedRequests -> (list)\n\nA list of created simulation job summaries.\n\n(structure)\n\nSummary information for a simulation job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nname -> (string)\n\nThe name of the simulation job.\n\nstatus -> (string)\n\nThe status of the simulation job.\n\nsimulationApplicationNames -> (list)\n\nA list of simulation job simulation application names.\n\n(string)\n\nrobotApplicationNames -> (list)\n\nA list of simulation job robot application names.\n\n(string)\n\ndataSourceNames -> (list)\n\nThe names of the data sources.\n\n(string)\n\ncomputeType -> (string)\n\nThe compute type for the simulation job summary.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job batch.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-world",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-world.html",
      "command_description": "Description\n\nDescribes a world.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-world\n--world <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--world <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--world (string)\n\nThe Amazon Resource Name (arn) of the world you want to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (arn) of the world.\n\ngenerationJob -> (string)\n\nThe Amazon Resource Name (arn) of the world generation job that generated the world.\n\ntemplate -> (string)\n\nThe world template.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world was created.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world.\n\nkey -> (string)\n\nvalue -> (string)\n\nworldDescriptionBody -> (string)\n\nReturns the JSON formatted string that describes the contents of your world."
    },
    {
      "command_name": "describe-world-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-world-export-job.html",
      "command_description": "Description\n\nDescribes a world export job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-world-export-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (arn) of the world export job to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world export job.\n\nstatus -> (string)\n\nThe status of the world export job.\n\nPending\n\nThe world export job request is pending.\n\nRunning\n\nThe world export job is running.\n\nCompleted\n\nThe world export job completed.\n\nFailed\n\nThe world export job failed. See failureCode and failureReason for more information.\n\nCanceled\n\nThe world export job was cancelled.\n\nCanceling\n\nThe world export job is being cancelled.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world export job was created.\n\nfailureCode -> (string)\n\nThe failure code of the world export job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nLimitExceeded\n\nThe requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed.\n\nResourceNotFound\n\nThe specified resource could not be found.\n\nRequestThrottled\n\nThe request was throttled.\n\nInvalidInput\n\nAn input parameter in the request is not valid.\n\nfailureReason -> (string)\n\nThe reason why the world export job failed.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\nworlds -> (list)\n\nA list of Amazon Resource Names (arns) that correspond to worlds to be exported.\n\n(string)\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\niamRole -> (string)\n\nThe IAM role that the world export process uses to access the Amazon S3 bucket and put the export.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world export job.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-world-generation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-world-generation-job.html",
      "command_description": "Description\n\nDescribes a world generation job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-world-generation-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (arn) of the world generation job to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world generation job.\n\nstatus -> (string)\n\nThe status of the world generation job:\n\nPending\n\nThe world generation job request is pending.\n\nRunning\n\nThe world generation job is running.\n\nCompleted\n\nThe world generation job completed.\n\nFailed\n\nThe world generation job failed. See failureCode for more information.\n\nPartialFailed\n\nSome worlds did not generate.\n\nCanceled\n\nThe world generation job was cancelled.\n\nCanceling\n\nThe world generation job is being cancelled.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world generation job was created.\n\nfailureCode -> (string)\n\nThe failure code of the world generation job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nLimitExceeded\n\nThe requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed.\n\nResourceNotFound\n\nThe specified resource could not be found.\n\nRequestThrottled\n\nThe request was throttled.\n\nInvalidInput\n\nAn input parameter in the request is not valid.\n\nfailureReason -> (string)\n\nThe reason why the world generation job failed.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\ntemplate -> (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\nworldCount -> (structure)\n\nInformation about the world count.\n\nfloorplanCount -> (integer)\n\nThe number of unique floorplans.\n\ninteriorCountPerFloorplan -> (integer)\n\nThe number of unique interiors per floorplan.\n\nfinishedWorldsSummary -> (structure)\n\nSummary information about finished worlds.\n\nfinishedCount -> (integer)\n\nThe total number of finished worlds.\n\nsucceededWorlds -> (list)\n\nA list of worlds that succeeded.\n\n(string)\n\nfailureSummary -> (structure)\n\nInformation about worlds that failed.\n\ntotalFailureCount -> (integer)\n\nThe total number of failures.\n\nfailures -> (list)\n\nThe worlds that failed.\n\n(structure)\n\nInformation about a failed world.\n\nfailureCode -> (string)\n\nThe failure code of the world export job if it failed:\n\nInternalServiceError\n\nInternal service error.\n\nLimitExceeded\n\nThe requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed.\n\nResourceNotFound\n\nThe specified resource could not be found.\n\nRequestThrottled\n\nThe request was throttled.\n\nInvalidInput\n\nAn input parameter in the request is not valid.\n\nsampleFailureReason -> (string)\n\nThe sample reason why the world failed. World errors are aggregated. A sample is used as the sampleFailureReason .\n\nfailureCount -> (integer)\n\nThe number of failed worlds.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world generation job.\n\nkey -> (string)\n\nvalue -> (string)\n\nworldTags -> (map)\n\nA map that contains tag keys and tag values that are attached to the generated worlds.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-world-template",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/describe-world-template.html",
      "command_description": "Description\n\nDescribes a world template.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-world-template\n--template <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--template <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--template (string)\n\nThe Amazon Resource Name (arn) of the world template you want to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world template.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\nname -> (string)\n\nThe name of the world template.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world template was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world template was last updated.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the world template.\n\nkey -> (string)\n\nvalue -> (string)\n\nversion -> (string)\n\nThe version of the world template that you’re using."
    },
    {
      "command_name": "get-world-template-body",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/get-world-template-body.html",
      "command_description": "Description\n\nGets the world template body.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-world-template-body\n[--template <value>]\n[--generation-job <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--template <value>]",
        "[--generation-job <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--template (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\n--generation-job (string)\n\nThe Amazon Resource Name (arn) of the world generator job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntemplateBody -> (string)\n\nThe world template body."
    },
    {
      "command_name": "list-deployment-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-deployment-jobs.html",
      "command_description": "Description\n\nReturns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployment-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: deploymentJobs",
      "command_synopsis": "Synopsis\n  list-deployment-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results.\n\nThe filter names status and fleetName are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status InProgress or the status Pending .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndeploymentJobs -> (list)\n\nA list of deployment jobs that meet the criteria of the request.\n\n(structure)\n\nInformation about a deployment job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the deployment job.\n\nfleet -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the deployment job.\n\ndeploymentApplicationConfigs -> (list)\n\nThe deployment application configuration.\n\n(structure)\n\nInformation about a deployment application configuration.\n\napplication -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\napplicationVersion -> (string)\n\nThe version of the application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration.\n\npackageName -> (string)\n\nThe package name.\n\npreLaunchFile -> (string)\n\nThe deployment pre-launch file. This file will be executed prior to the launch file.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\npostLaunchFile -> (string)\n\nThe deployment post-launch file. This file will be executed after the launch file.\n\nenvironmentVariables -> (map)\n\nAn array of key/value pairs specifying environment variables for the robot application\n\nkey -> (string)\n\nvalue -> (string)\n\ndeploymentConfig -> (structure)\n\nThe deployment configuration.\n\nconcurrentDeploymentPercentage -> (integer)\n\nThe percentage of robots receiving the deployment at the same time.\n\nfailureThresholdPercentage -> (integer)\n\nThe percentage of deployments that need to fail before stopping deployment.\n\nrobotDeploymentTimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.\n\ndownloadConditionFile -> (structure)\n\nThe download condition file.\n\nbucket -> (string)\n\nThe bucket containing the object.\n\nkey -> (string)\n\nThe key of the object.\n\netag -> (string)\n\nThe etag of the object.\n\nfailureReason -> (string)\n\nA short description of the reason why the deployment job failed.\n\nfailureCode -> (string)\n\nThe deployment job failure code.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the deployment job was created.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListDeploymentJobs again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list deployment jobs\n\nThe following list-deployment-jobs example retrieves a list of deployment jobs.\n\naws robomaker list-deployment-jobs\n\n\nOutput:\n\n{\n    \"deploymentJobs\": [\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/sim-6293szzm56rv\",\n            \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n            \"status\": \"InProgress\",\n            \"deploymentApplicationConfigs\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/HelloWorldRobot/1546537110575\",\n                    \"applicationVersion\": \"1\",\n                    \"launchConfig\": {\n                        \"packageName\": \"hello_world_robot\",\n                        \"launchFile\": \"rotate.launch\",\n                        \"environmentVariables\": {\n                            \"ENVIRONMENT\": \"Desert\"\n                        }\n                    }\n                }\n            ],\n            \"deploymentConfig\": {\n                \"concurrentDeploymentPercentage\": 20,\n                \"failureThresholdPercentage\": 25\n            },\n            \"createdAt\": 1550689373.0\n        },\n        {\n            \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-4w4g69p25zdb\",\n            \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n            \"status\": \"Pending\",\n            \"deploymentApplicationConfigs\": [\n                {\n                    \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/AWSRoboMakerHelloWorld-1544562726923_YGHM_sh5M/1544562822877\",\n                    \"applicationVersion\": \"1\",\n                    \"launchConfig\": {\n                        \"packageName\": \"fail\",\n                        \"launchFile\": \"fail\"\n                    }\n                }\n            ],\n            \"deploymentConfig\": {\n                \"concurrentDeploymentPercentage\": 20,\n                \"failureThresholdPercentage\": 25\n            },\n            \"failureReason\": \"\",\n            \"failureCode\": \"\",\n            \"createdAt\": 1544719763.0\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-fleets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-fleets.html",
      "command_description": "Description\n\nReturns a list of fleets. You can optionally provide filters to retrieve specific fleets.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-fleets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: fleetDetails",
      "command_synopsis": "Synopsis\n  list-fleets\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results.\n\nThe filter name name is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfleetDetails -> (list)\n\nA list of fleet details meeting the request criteria.\n\n(structure)\n\nInformation about a fleet.\n\nname -> (string)\n\nThe name of the fleet.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the fleet was created.\n\nlastDeploymentStatus -> (string)\n\nThe status of the last fleet deployment.\n\nlastDeploymentJob -> (string)\n\nThe Amazon Resource Name (ARN) of the last deployment job.\n\nlastDeploymentTime -> (timestamp)\n\nThe time of the last deployment.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListFleets again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list fleets\n\nThis example lists fleets. A maximum of 20 fleets will be returned.\n\nCommand:\n\naws robomaker list-fleets --max-items 20\n\n\nOutput:\n\n{\n  \"fleetDetails\": [\n      {\n          \"name\": \"Trek\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n          \"createdAt\": 1539894765.0,\n          \"lastDeploymentStatus\": \"Failed\",\n          \"lastDeploymentJob\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-4w4g69p25zdb\",\n          \"lastDeploymentTime\": 1544719763.0\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-robot-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-robot-applications.html",
      "command_description": "Description\n\nReturns a list of robot application. You can optionally provide filters to retrieve specific robot applications.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-robot-applications is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: robotApplicationSummaries",
      "command_synopsis": "Synopsis\n  list-robot-applications\n[--version-qualifier <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--version-qualifier <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--version-qualifier (string)\n\nThe version qualifier of the robot application.\n\n--filters (list)\n\nOptional filters to limit results.\n\nThe filter name name is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrobotApplicationSummaries -> (list)\n\nA list of robot application summaries that meet the criteria of the request.\n\n(structure)\n\nSummary information for a robot application.\n\nname -> (string)\n\nThe name of the robot application.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\nversion -> (string)\n\nThe version of the robot application.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot application was last updated.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about a robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListRobotApplications again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list robot applications\n\nThis example lists robot applications. Results are limited to 20 robot applications.\n\nCommand:\n\naws robomaker list-robot-applications --max-results 20\n\n\nOutput:\n\n{\n  \"robotApplicationSummaries\": [\n      {\n          \"name\": \"MyRobot\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobot/1546537110575\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1546540372.0\n      },\n      {\n          \"name\": \"AnotherRobot\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/AnotherRobot/1546541208251\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1546541208.0\n      },\n      {\n          \"name\": \"MySuperRobot\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MySuperRobot/1547663517377\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1547663517.0\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-robots",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-robots.html",
      "command_description": "Description\n\nReturns a list of robots. You can optionally provide filters to retrieve specific robots.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-robots is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: robots",
      "command_synopsis": "Synopsis\n  list-robots\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results.\n\nThe filter names status and fleetName are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status Registered or the status Available .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrobots -> (list)\n\nA list of robots that meet the criteria of the request.\n\n(structure)\n\nInformation about a robot.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\nname -> (string)\n\nThe name of the robot.\n\nfleetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the robot.\n\ngreenGrassGroupId -> (string)\n\nThe Greengrass group associated with the robot.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot was created.\n\narchitecture -> (string)\n\nThe architecture of the robot.\n\nlastDeploymentJob -> (string)\n\nThe Amazon Resource Name (ARN) of the last deployment job.\n\nlastDeploymentTime -> (timestamp)\n\nThe time of the last deployment.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListRobots again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list robots\n\nThis example lists robots. A maximum of 20 robots will be returned.\n\nCommand:\n\naws robomaker list-robots --max-results 20\n\n\nOutput:\n\n{\n  \"robots\": [\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/Robot100/1544035373264\",\n          \"name\": \"Robot100\",\n          \"status\": \"Available\",\n          \"createdAt\": 1544035373.0,\n          \"architecture\": \"X86_64\"\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/Robot101/1542146976587\",\n          \"name\": \"Robot101\",\n          \"status\": \"Available\",\n          \"createdAt\": 1542146976.0,\n          \"architecture\": \"X86_64\"\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/Robot102/1540834232469\",\n          \"name\": \"Robot102\",\n          \"fleetArn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/Trek/1539894765711\",\n          \"status\": \"Available\",\n          \"createdAt\": 1540834232.0,\n          \"architecture\": \"X86_64\",\n          \"lastDeploymentJob\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-jb007b75gl5f\",\n          \"lastDeploymentTime\": 1550689533.0\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1540829698778\",\n          \"name\": \"MyRobot\",\n          \"status\": \"Registered\",\n          \"createdAt\": 1540829698.0,\n          \"architecture\": \"X86_64\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-simulation-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-simulation-applications.html",
      "command_description": "Description\n\nReturns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-simulation-applications is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: simulationApplicationSummaries",
      "command_synopsis": "Synopsis\n  list-simulation-applications\n[--version-qualifier <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--version-qualifier <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--version-qualifier (string)\n\nThe version qualifier of the simulation application.\n\n--filters (list)\n\nOptional list of filters to limit results.\n\nThe filter name name is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsimulationApplicationSummaries -> (list)\n\nA list of simulation application summaries that meet the criteria of the request.\n\n(structure)\n\nSummary information for a simulation application.\n\nname -> (string)\n\nThe name of the simulation application.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation application.\n\nversion -> (string)\n\nThe version of the simulation application.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation application was last updated.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about a robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nsimulationSoftwareSuite -> (structure)\n\nInformation about a simulation software suite.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListSimulationApplications again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list simulation applications\n\nThis example lists simulation applications. A maximum of 20 simulation applications will be returned.\n\nCommand:\n\naws robomaker list-simulation-applications --max-results 20\n\n\nOutput:\n\n{\n  \"simulationApplicationSummaries\": [\n      {\n          \"name\": \"AWSRoboMakerObjectTracker-1548959046124_NPvyfcatq\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/AWSRoboMakerObjectTracker-1548959046124_NPvyfcatq/1548959170096\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1548959170.0\n      },\n      {\n          \"name\": \"RoboMakerHelloWorldSimulation\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/RoboMakerHelloWorldSimulation/1546541198985\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1546541198.0\n      },\n      {\n          \"name\": \"RoboMakerObjectTrackerSimulation\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/RoboMakerObjectTrackerSimulation/1545846795615\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1545847405.0\n      },\n      {\n          \"name\": \"RoboMakerVoiceInteractionSimulation\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/RoboMakerVoiceInteractionSimulation/1546537100507\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1546540352.0\n      },\n      {\n          \"name\": \"AWSRoboMakerCloudWatch-1547663411642_0LIt6D1h6\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/AWSRoboMakerCloudWatch-1547663411642_0LIt6D1h6/1547663521470\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1547663521.0\n      },\n      {\n          \"name\": \"AWSRoboMakerDeepRacer-1545848257672_1YZCaieQ-\",\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/AWSRoboMakerDeepRacer-1545848257672_1YZCaieQ-/1545848370525\",\n          \"version\": \"$LATEST\",\n          \"lastUpdatedAt\": 1545848370.0\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-simulation-job-batches",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-simulation-job-batches.html",
      "command_description": "Description\n\nReturns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-simulation-job-batches is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: simulationJobBatchSummaries",
      "command_synopsis": "Synopsis\n  list-simulation-job-batches\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results.\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsimulationJobBatchSummaries -> (list)\n\nA list of simulation job batch summaries.\n\n(structure)\n\nInformation about a simulation job batch.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the batch.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch was last updated.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch was created.\n\nstatus -> (string)\n\nThe status of the simulation job batch.\n\nPending\n\nThe simulation job batch request is pending.\n\nInProgress\n\nThe simulation job batch is in progress.\n\nFailed\n\nThe simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like InternalServiceError ). See failureCode and failureReason for more information.\n\nCompleted\n\nThe simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to InternalServiceError and (2) when all created simulation jobs have reached a terminal state (for example, Completed or Failed ).\n\nCanceled\n\nThe simulation batch job was cancelled.\n\nCanceling\n\nThe simulation batch job is being cancelled.\n\nCompleting\n\nThe simulation batch job is completing.\n\nTimingOut\n\nThe simulation job batch is timing out.\n\nIf a batch timing out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), the batch status will be Failed . If there are no such failing request, the batch status will be TimedOut .\n\nTimedOut\n\nThe simulation batch job timed out.\n\nfailedRequestCount -> (integer)\n\nThe number of failed simulation job requests.\n\npendingRequestCount -> (integer)\n\nThe number of pending simulation job requests.\n\ncreatedRequestCount -> (integer)\n\nThe number of created simulation job requests.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListSimulationJobBatches again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null."
    },
    {
      "command_name": "list-simulation-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-simulation-jobs.html",
      "command_description": "Description\n\nReturns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-simulation-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: simulationJobSummaries",
      "command_synopsis": "Synopsis\n  list-simulation-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results.\n\nThe filter names status and simulationApplicationName and robotApplicationName are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status Preparing or the status Running .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nsimulationJobSummaries -> (list)\n\nA list of simulation job summaries that meet the criteria of the request.\n\n(structure)\n\nSummary information for a simulation job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nname -> (string)\n\nThe name of the simulation job.\n\nstatus -> (string)\n\nThe status of the simulation job.\n\nsimulationApplicationNames -> (list)\n\nA list of simulation job simulation application names.\n\n(string)\n\nrobotApplicationNames -> (list)\n\nA list of simulation job robot application names.\n\n(string)\n\ndataSourceNames -> (list)\n\nThe names of the data sources.\n\n(string)\n\ncomputeType -> (string)\n\nThe compute type for the simulation job summary.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListSimulationJobs again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null.",
      "command_examples": "Examples\n\nTo list simulation jobs\n\nThis example lists simulation jobs.\n\nCommand:\n\naws robomaker list-simulation-jobs\n\n\nOutput:\n\n{\n  \"simulationJobSummaries\": [\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-66bbb3gpxm8x\",\n          \"lastUpdatedAt\": 1548959178.0,\n          \"status\": \"Completed\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerObjectTracker-1548959046124_NPvyfcatq\"\n          ],\n          \"robotApplicationNames\": [\n              null\n          ]\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-b27c4rkrtzcw\",\n          \"lastUpdatedAt\": 1543514088.0,\n          \"status\": \"Canceled\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerPersonDetection-1543513948280_T8rHW2_lu\"\n          ],\n          \"robotApplicationNames\": [\n              \"AWSRoboMakerPersonDetection-1543513948280_EYaMT0mYb\"\n          ]\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-51vxjbzy4q8t\",\n          \"lastUpdatedAt\": 1543508858.0,\n          \"status\": \"Canceled\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerCloudWatch-1543504747391_lFF9ZQyx6\"\n          ],\n          \"robotApplicationNames\": [\n              \"AWSRoboMakerCloudWatch-1543504747391_axbYa3S3K\"\n          ]\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-kgf1fqxflqbx\",\n          \"lastUpdatedAt\": 1543504862.0,\n          \"status\": \"Completed\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerCloudWatch-1543504747391_lFF9ZQyx6\"\n          ],\n          \"robotApplicationNames\": [\n              \"AWSRoboMakerCloudWatch-1543504747391_axbYa3S3K\"\n          ]\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-vw8lvh061nqt\",\n          \"lastUpdatedAt\": 1543441430.0,\n          \"status\": \"Completed\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerHelloWorld-1543437372341__yb_Jg96l\"\n          ],\n          \"robotApplicationNames\": [\n              \"AWSRoboMakerHelloWorld-1543437372341_lNbmKHvs9\"\n          ]\n      },\n      {\n          \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-txy5ypxmhz84\",\n          \"lastUpdatedAt\": 1543437488.0,\n          \"status\": \"Completed\",\n          \"simulationApplicationNames\": [\n              \"AWSRoboMakerHelloWorld-1543437372341__yb_Jg96l\"\n          ],\n          \"robotApplicationNames\": [\n              \"AWSRoboMakerHelloWorld-1543437372341_lNbmKHvs9\"\n          ]\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-tags-for-resource.html",
      "command_description": "Description\n\nLists all tags on a AWS RoboMaker resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe list of all tags added to the specified resource.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list tags for a resource\n\nThis example lists tags for an AWS RoboMaker resource.\n\nCommand:\n\naws robomaker list-tags-for-resource --resource-arn \"arn:aws:robomaker:us-west-2:111111111111:robot/Robby_the_Robot/1544035373264\"\n\n\nOutput:\n\n{\n  \"tags\": {\n      \"Region\": \"North\",\n      \"Stage\": \"Initial\"\n  }\n}\n"
    },
    {
      "command_name": "list-world-export-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-world-export-jobs.html",
      "command_description": "Description\n\nLists world export jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-world-export-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: worldExportJobSummaries",
      "command_synopsis": "Synopsis\n  list-world-export-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results. You can use generationJobId and templateId .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nworldExportJobSummaries -> (list)\n\nSummary information for world export jobs.\n\n(structure)\n\nInformation about a world export job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world export job.\n\nstatus -> (string)\n\nThe status of the world export job.\n\nPending\n\nThe world export job request is pending.\n\nRunning\n\nThe world export job is running.\n\nCompleted\n\nThe world export job completed.\n\nFailed\n\nThe world export job failed. See failureCode for more information.\n\nCanceled\n\nThe world export job was cancelled.\n\nCanceling\n\nThe world export job is being cancelled.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world export job was created.\n\nworlds -> (list)\n\nA list of worlds.\n\n(string)\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListWorldExportJobsRequest again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null."
    },
    {
      "command_name": "list-world-generation-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-world-generation-jobs.html",
      "command_description": "Description\n\nLists world generator jobs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-world-generation-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: worldGenerationJobSummaries",
      "command_synopsis": "Synopsis\n  list-world-generation-jobs\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results. You can use status and templateId .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nworldGenerationJobSummaries -> (list)\n\nSummary information for world generator jobs.\n\n(structure)\n\nInformation about a world generator job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world generator job.\n\ntemplate -> (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world generator job was created.\n\nstatus -> (string)\n\nThe status of the world generator job:\n\nPending\n\nThe world generator job request is pending.\n\nRunning\n\nThe world generator job is running.\n\nCompleted\n\nThe world generator job completed.\n\nFailed\n\nThe world generator job failed. See failureCode for more information.\n\nPartialFailed\n\nSome worlds did not generate.\n\nCanceled\n\nThe world generator job was cancelled.\n\nCanceling\n\nThe world generator job is being cancelled.\n\nworldCount -> (structure)\n\nInformation about the world count.\n\nfloorplanCount -> (integer)\n\nThe number of unique floorplans.\n\ninteriorCountPerFloorplan -> (integer)\n\nThe number of unique interiors per floorplan.\n\nsucceededWorldCount -> (integer)\n\nThe number of worlds that were generated.\n\nfailedWorldCount -> (integer)\n\nThe number of worlds that failed.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListWorldGeneratorJobsRequest again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null."
    },
    {
      "command_name": "list-world-templates",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-world-templates.html",
      "command_description": "Description\n\nLists world templates.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-world-templates is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: templateSummaries",
      "command_synopsis": "Synopsis\n  list-world-templates\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntemplateSummaries -> (list)\n\nSummary information for templates.\n\n(structure)\n\nSummary information for a template.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the template.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the template was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the template was last updated.\n\nname -> (string)\n\nThe name of the template.\n\nversion -> (string)\n\nThe version of the template that you’re using.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListWorldTemplates again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null."
    },
    {
      "command_name": "list-worlds",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/list-worlds.html",
      "command_description": "Description\n\nLists worlds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-worlds is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: worldSummaries",
      "command_synopsis": "Synopsis\n  list-worlds\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nOptional filters to limit results. You can use status .\n\n(structure)\n\nInformation about a filter.\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA list of values.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nworldSummaries -> (list)\n\nSummary information for worlds.\n\n(structure)\n\nInformation about a world.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the world.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world was created.\n\ngenerationJob -> (string)\n\nThe Amazon Resource Name (arn) of the world generation job.\n\ntemplate -> (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\nnextToken -> (string)\n\nIf the previous paginated request did not return all of the remaining results, the response object’s nextToken parameter value is set to a token. To retrieve the next set of results, call ListWorlds again and assign that token to the request object’s nextToken parameter. If there are no remaining results, the previous response object’s NextToken parameter is set to null."
    },
    {
      "command_name": "register-robot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/register-robot.html",
      "command_description": "Description\n\nRegisters a robot with a fleet.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-robot\n--fleet <value>\n--robot <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--fleet <value>",
        "--robot <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--fleet (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\n--robot (string)\n\nThe Amazon Resource Name (ARN) of the robot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nfleet -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet that the robot will join.\n\nrobot -> (string)\n\nInformation about the robot registration.",
      "command_examples": "Examples\n\nTo register a robot\n\nThis example registers a robot to a fleet.\n\nCommand:\n\naws robomaker register-robot --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771358907 --robot arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\n\n\nOutput:\n\n{\n  \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1550771358907\",\n  \"robot\": \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1550772324398\"\n}\n"
    },
    {
      "command_name": "restart-simulation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/restart-simulation-job.html",
      "command_description": "Description\n\nRestarts a running simulation job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  restart-simulation-job\n--job <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo restart a simulation\n\nThis example restarts a simulation.\n\nCommand:\n\naws robomaker restart-simulation-job --job arn:aws:robomaker:us-west-2:111111111111:simulation-job/sim-t6rdgt70mftr\n"
    },
    {
      "command_name": "start-simulation-job-batch",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/start-simulation-job-batch.html",
      "command_description": "Description\n\nStarts a new simulation job batch. The batch is defined using one or more SimulationJobRequest objects.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-simulation-job-batch\n[--client-request-token <value>]\n[--batch-policy <value>]\n--create-simulation-job-requests <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "[--batch-policy <value>]",
        "--create-simulation-job-requests <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--batch-policy (structure)\n\nThe batch policy.\n\ntimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for the batch to complete.\n\nIf a batch times out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), they will be moved to the failed list and the batch status will be Failed . If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be TimedOut .\n\nmaxConcurrency -> (integer)\n\nThe number of active simulation jobs create as part of the batch that can be in an active state at the same time.\n\nActive states include: Pending ,``Preparing`` , Running , Restarting , RunningFailed and Terminating . All other states are terminal states.\n\nShorthand Syntax:\n\ntimeoutInSeconds=long,maxConcurrency=integer\n\n\nJSON Syntax:\n\n{\n  \"timeoutInSeconds\": long,\n  \"maxConcurrency\": integer\n}\n\n\n--create-simulation-job-requests (list)\n\nA list of simulation job requests to create in the batch.\n\n(structure)\n\nInformation about a simulation job request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\niamRole -> (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nuseDefaultApplications -> (boolean)\n\nA Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access.\n\nrobotApplications -> (list)\n\nThe robot applications to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation applications to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nvpcConfig -> (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job request.\n\nkey -> (string)\n\nvalue -> (string)\n\nJSON Syntax:\n\n[\n  {\n    \"outputLocation\": {\n      \"s3Bucket\": \"string\",\n      \"s3Prefix\": \"string\"\n    },\n    \"loggingConfig\": {\n      \"recordAllRosTopics\": true|false\n    },\n    \"maxJobDurationInSeconds\": long,\n    \"iamRole\": \"string\",\n    \"failureBehavior\": \"Fail\"|\"Continue\",\n    \"useDefaultApplications\": true|false,\n    \"robotApplications\": [\n      {\n        \"application\": \"string\",\n        \"applicationVersion\": \"string\",\n        \"launchConfig\": {\n          \"packageName\": \"string\",\n          \"launchFile\": \"string\",\n          \"environmentVariables\": {\"string\": \"string\"\n            ...},\n          \"portForwardingConfig\": {\n            \"portMappings\": [\n              {\n                \"jobPort\": integer,\n                \"applicationPort\": integer,\n                \"enableOnPublicIp\": true|false\n              }\n              ...\n            ]\n          },\n          \"streamUI\": true|false,\n          \"command\": [\"string\", ...]\n        },\n        \"uploadConfigurations\": [\n          {\n            \"name\": \"string\",\n            \"path\": \"string\",\n            \"uploadBehavior\": \"UPLOAD_ON_TERMINATE\"|\"UPLOAD_ROLLING_AUTO_REMOVE\"\n          }\n          ...\n        ],\n        \"useDefaultUploadConfigurations\": true|false,\n        \"tools\": [\n          {\n            \"streamUI\": true|false,\n            \"name\": \"string\",\n            \"command\": \"string\",\n            \"streamOutputToCloudWatch\": true|false,\n            \"exitBehavior\": \"FAIL\"|\"RESTART\"\n          }\n          ...\n        ],\n        \"useDefaultTools\": true|false\n      }\n      ...\n    ],\n    \"simulationApplications\": [\n      {\n        \"application\": \"string\",\n        \"applicationVersion\": \"string\",\n        \"launchConfig\": {\n          \"packageName\": \"string\",\n          \"launchFile\": \"string\",\n          \"environmentVariables\": {\"string\": \"string\"\n            ...},\n          \"portForwardingConfig\": {\n            \"portMappings\": [\n              {\n                \"jobPort\": integer,\n                \"applicationPort\": integer,\n                \"enableOnPublicIp\": true|false\n              }\n              ...\n            ]\n          },\n          \"streamUI\": true|false,\n          \"command\": [\"string\", ...]\n        },\n        \"uploadConfigurations\": [\n          {\n            \"name\": \"string\",\n            \"path\": \"string\",\n            \"uploadBehavior\": \"UPLOAD_ON_TERMINATE\"|\"UPLOAD_ROLLING_AUTO_REMOVE\"\n          }\n          ...\n        ],\n        \"worldConfigs\": [\n          {\n            \"world\": \"string\"\n          }\n          ...\n        ],\n        \"useDefaultUploadConfigurations\": true|false,\n        \"tools\": [\n          {\n            \"streamUI\": true|false,\n            \"name\": \"string\",\n            \"command\": \"string\",\n            \"streamOutputToCloudWatch\": true|false,\n            \"exitBehavior\": \"FAIL\"|\"RESTART\"\n          }\n          ...\n        ],\n        \"useDefaultTools\": true|false\n      }\n      ...\n    ],\n    \"dataSources\": [\n      {\n        \"name\": \"string\",\n        \"s3Bucket\": \"string\",\n        \"s3Keys\": [\"string\", ...],\n        \"type\": \"Prefix\"|\"Archive\"|\"File\",\n        \"destination\": \"string\"\n      }\n      ...\n    ],\n    \"vpcConfig\": {\n      \"subnets\": [\"string\", ...],\n      \"securityGroups\": [\"string\", ...],\n      \"assignPublicIp\": true|false\n    },\n    \"compute\": {\n      \"simulationUnitLimit\": integer,\n      \"computeType\": \"CPU\"|\"GPU_AND_CPU\",\n      \"gpuUnitLimit\": integer\n    },\n    \"tags\": {\"string\": \"string\"\n      ...}\n  }\n  ...\n]\n\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the deployment job batch.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (arn) of the batch.\n\nstatus -> (string)\n\nThe status of the simulation job batch.\n\nPending\n\nThe simulation job batch request is pending.\n\nInProgress\n\nThe simulation job batch is in progress.\n\nFailed\n\nThe simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like InternalServiceError ). See failureCode and failureReason for more information.\n\nCompleted\n\nThe simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to InternalServiceError and (2) when all created simulation jobs have reached a terminal state (for example, Completed or Failed ).\n\nCanceled\n\nThe simulation batch job was cancelled.\n\nCanceling\n\nThe simulation batch job is being cancelled.\n\nCompleting\n\nThe simulation batch job is completing.\n\nTimingOut\n\nThe simulation job batch is timing out.\n\nIf a batch timing out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), the batch status will be Failed . If there are no such failing request, the batch status will be TimedOut .\n\nTimedOut\n\nThe simulation batch job timed out.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch was created.\n\nclientRequestToken -> (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\nbatchPolicy -> (structure)\n\nThe batch policy.\n\ntimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for the batch to complete.\n\nIf a batch times out, and there are pending requests that were failing due to an internal failure (like InternalServiceError ), they will be moved to the failed list and the batch status will be Failed . If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be TimedOut .\n\nmaxConcurrency -> (integer)\n\nThe number of active simulation jobs create as part of the batch that can be in an active state at the same time.\n\nActive states include: Pending ,``Preparing`` , Running , Restarting , RunningFailed and Terminating . All other states are terminal states.\n\nfailureCode -> (string)\n\nThe failure code if the simulation job batch failed.\n\nfailureReason -> (string)\n\nThe reason the simulation job batch failed.\n\nfailedRequests -> (list)\n\nA list of failed simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID.\n\n(structure)\n\nInformation about a failed create simulation job request.\n\nrequest -> (structure)\n\nThe simulation job request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\niamRole -> (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nuseDefaultApplications -> (boolean)\n\nA Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access.\n\nrobotApplications -> (list)\n\nThe robot applications to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation applications to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nvpcConfig -> (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job request.\n\nkey -> (string)\n\nvalue -> (string)\n\nfailureReason -> (string)\n\nThe failure reason of the simulation job request.\n\nfailureCode -> (string)\n\nThe failure code.\n\nfailedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job batch failed.\n\npendingRequests -> (list)\n\nA list of pending simulation job requests. These requests have not yet been created into simulation jobs.\n\n(structure)\n\nInformation about a simulation job request.\n\noutputLocation -> (structure)\n\nThe output location.\n\ns3Bucket -> (string)\n\nThe S3 bucket for output.\n\ns3Prefix -> (string)\n\nThe S3 folder in the s3Bucket where output files will be placed.\n\nloggingConfig -> (structure)\n\nThe logging configuration.\n\nrecordAllRosTopics -> (boolean)\n\nA boolean indicating whether to record all ROS topics.\n\nmaxJobDurationInSeconds -> (long)\n\nThe maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.\n\niamRole -> (string)\n\nThe IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.\n\nfailureBehavior -> (string)\n\nThe failure behavior the simulation job.\n\nContinue\n\nLeaves the host running for its maximum timeout duration after a 4XX error code.\n\nFail\n\nStop the simulation job and terminate the instance.\n\nuseDefaultApplications -> (boolean)\n\nA Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access.\n\nrobotApplications -> (list)\n\nThe robot applications to use in the simulation job.\n\n(structure)\n\nApplication configuration information for a robot.\n\napplication -> (string)\n\nThe application information for the robot application.\n\napplicationVersion -> (string)\n\nThe version of the robot application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the robot application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nThe upload configurations for the robot application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the robot application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\nsimulationApplications -> (list)\n\nThe simulation applications to use in the simulation job.\n\n(structure)\n\nInformation about a simulation application configuration.\n\napplication -> (string)\n\nThe application information for the simulation application.\n\napplicationVersion -> (string)\n\nThe version of the simulation application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration for the simulation application.\n\npackageName -> (string)\n\nThe package name.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\nenvironmentVariables -> (map)\n\nThe environment variables for the application launch.\n\nkey -> (string)\n\nvalue -> (string)\n\nportForwardingConfig -> (structure)\n\nThe port forwarding configuration.\n\nportMappings -> (list)\n\nThe port mappings for the configuration.\n\n(structure)\n\nAn object representing a port mapping.\n\njobPort -> (integer)\n\nThe port number on the simulation job instance to use as a remote connection point.\n\napplicationPort -> (integer)\n\nThe port number on the application.\n\nenableOnPublicIp -> (boolean)\n\nA Boolean indicating whether to enable this port mapping on public IP.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the application. If True , AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface.\n\ncommand -> (list)\n\nIf you’ve specified General as the value for your RobotSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\nIf you’ve specified SimulationRuntime as the value for your SimulationSoftwareSuite , you can use this field to specify a list of commands for your container image.\n\n(string)\n\nuploadConfigurations -> (list)\n\nInformation about upload configurations for the simulation application.\n\n(structure)\n\nProvides upload configuration information. Files are uploaded from the simulation job to a location you specify.\n\nname -> (string)\n\nA prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path.\n\nFor example, if your simulation output location is s3://my-bucket and your upload configuration name is robot-test , your files will be uploaded to s3://my-bucket/<simid>/<runid>/robot-test .\n\npath -> (string)\n\nSpecifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of ** as a super asterisk . For example, specifying /var/log/**.log causes all .log files in the /var/log directory tree to be collected. For more examples, see Glob Library .\n\nuploadBehavior -> (string)\n\nSpecifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\nMatching files are uploaded once the simulation enters the TERMINATING state. Matching files are not uploaded until all of your code (including tools) have stopped.\n\nIf there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\nMatching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped.\n\nworldConfigs -> (list)\n\nA list of world configurations.\n\n(structure)\n\nConfiguration information for a world.\n\nworld -> (string)\n\nThe world generated by Simulation WorldForge.\n\nuseDefaultUploadConfigurations -> (boolean)\n\nA Boolean indicating whether to use default upload configurations. By default, .ros and .gazebo files are uploaded when the application terminates and all ROS topics will be recorded.\n\nIf you set this value, you must specify an outputLocation .\n\ntools -> (list)\n\nInformation about tools configured for the simulation application.\n\n(structure)\n\nInformation about a tool. Tools are used in a simulation job.\n\nstreamUI -> (boolean)\n\nBoolean indicating whether a streaming session will be configured for the tool. If True , AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is False .\n\nname -> (string)\n\nThe name of the tool.\n\ncommand -> (string)\n\nCommand-line arguments for the tool. It must include the tool executable name.\n\nstreamOutputToCloudWatch -> (boolean)\n\nBoolean indicating whether logs will be recorded in CloudWatch for the tool. The default is False .\n\nexitBehavior -> (string)\n\nExit behavior determines what happens when your tool quits running. RESTART will cause your tool to be restarted. FAIL will cause your job to exit. The default is RESTART .\n\nuseDefaultTools -> (boolean)\n\nA Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is False .\n\ndataSources -> (list)\n\nSpecify data sources to mount read-only files from S3 into your simulation. These files are available under /opt/robomaker/datasources/data_source_name .\n\nNote\n\nThere is a limit of 100 files and a combined size of 25GB for all DataSourceConfig objects.\n\n(structure)\n\nInformation about a data source.\n\nname -> (string)\n\nThe name of the data source.\n\ns3Bucket -> (string)\n\nThe S3 bucket where the data files are located.\n\ns3Keys -> (list)\n\nThe list of S3 keys identifying the data source files.\n\n(string)\n\ntype -> (string)\n\nThe data type for the data source that you’re using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.\n\nIf you don’t specify a field, the default value is File .\n\ndestination -> (string)\n\nThe location where your files are mounted in the container image.\n\nIf you’ve specified the type of the data source as an Archive , you must provide an Amazon S3 object key to your archive. The object key must point to either a .zip or .tar.gz file.\n\nIf you’ve specified the type of the data source as a Prefix , you provide the Amazon S3 prefix that points to the files that you are using for your data source.\n\nIf you’ve specified the type of the data source as a File , you provide the Amazon S3 path to the file that you’re using as your data source.\n\nvpcConfig -> (structure)\n\nIf your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.\n\nsubnets -> (list)\n\nA list of one or more subnet IDs in your VPC.\n\n(string)\n\nsecurityGroups -> (list)\n\nA list of one or more security groups IDs in your VPC.\n\n(string)\n\nassignPublicIp -> (boolean)\n\nA boolean indicating whether to assign a public IP address.\n\ncompute -> (structure)\n\nCompute information for the simulation job\n\nsimulationUnitLimit -> (integer)\n\nThe simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15.\n\ncomputeType -> (string)\n\nCompute type information for the simulation job.\n\ngpuUnitLimit -> (integer)\n\nCompute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the simulation job request.\n\nkey -> (string)\n\nvalue -> (string)\n\ncreatedRequests -> (list)\n\nA list of created simulation job request summaries.\n\n(structure)\n\nSummary information for a simulation job.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the simulation job.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation job was last updated.\n\nname -> (string)\n\nThe name of the simulation job.\n\nstatus -> (string)\n\nThe status of the simulation job.\n\nsimulationApplicationNames -> (list)\n\nA list of simulation job simulation application names.\n\n(string)\n\nrobotApplicationNames -> (list)\n\nA list of simulation job robot application names.\n\n(string)\n\ndataSourceNames -> (list)\n\nThe names of the data sources.\n\n(string)\n\ncomputeType -> (string)\n\nThe compute type for the simulation job summary.\n\ntags -> (map)\n\nA map that contains tag keys and tag values that are attached to the deployment job batch.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "sync-deployment-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/sync-deployment-job.html",
      "command_description": "Description\n\nSyncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  sync-deployment-job\n[--client-request-token <value>]\n--fleet <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "--fleet <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nUnique, case-sensitive identifier that you provide to ensure the idempotency of the request.\n\n--fleet (string)\n\nThe target fleet for the synchronization.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the synchronization request.\n\nfleet -> (string)\n\nThe Amazon Resource Name (ARN) of the fleet.\n\nstatus -> (string)\n\nThe status of the synchronization job.\n\ndeploymentConfig -> (structure)\n\nInformation about the deployment configuration.\n\nconcurrentDeploymentPercentage -> (integer)\n\nThe percentage of robots receiving the deployment at the same time.\n\nfailureThresholdPercentage -> (integer)\n\nThe percentage of deployments that need to fail before stopping deployment.\n\nrobotDeploymentTimeoutInSeconds -> (long)\n\nThe amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.\n\ndownloadConditionFile -> (structure)\n\nThe download condition file.\n\nbucket -> (string)\n\nThe bucket containing the object.\n\nkey -> (string)\n\nThe key of the object.\n\netag -> (string)\n\nThe etag of the object.\n\ndeploymentApplicationConfigs -> (list)\n\nInformation about the deployment application configurations.\n\n(structure)\n\nInformation about a deployment application configuration.\n\napplication -> (string)\n\nThe Amazon Resource Name (ARN) of the robot application.\n\napplicationVersion -> (string)\n\nThe version of the application.\n\nlaunchConfig -> (structure)\n\nThe launch configuration.\n\npackageName -> (string)\n\nThe package name.\n\npreLaunchFile -> (string)\n\nThe deployment pre-launch file. This file will be executed prior to the launch file.\n\nlaunchFile -> (string)\n\nThe launch file name.\n\npostLaunchFile -> (string)\n\nThe deployment post-launch file. This file will be executed after the launch file.\n\nenvironmentVariables -> (map)\n\nAn array of key/value pairs specifying environment variables for the robot application\n\nkey -> (string)\n\nvalue -> (string)\n\nfailureReason -> (string)\n\nThe failure reason if the job fails.\n\nfailureCode -> (string)\n\nThe failure code if the job fails:\n\nInternalServiceError\n\nInternal service error.\n\nRobotApplicationCrash\n\nRobot application exited abnormally.\n\nSimulationApplicationCrash\n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\nUnable to publish outputs to customer-provided S3 bucket.\n\nBadPermissionsCloudwatchLogs\n\nUnable to publish logs to customer-provided CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\nSubnet IP limit exceeded.\n\nENILimitExceeded\n\nENI limit exceeded.\n\nBadPermissionsUserCredentials\n\nUnable to use the Role provided.\n\nInvalidBundleRobotApplication\n\nRobot bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\nSimulation bundle cannot be extracted (invalid format, bundling error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\nEtag for RobotApplication does not match value during version creation.\n\nSimulationApplicationVersionMismatchedEtag\n\nEtag for SimulationApplication does not match value during version creation.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the fleet was created.",
      "command_examples": "Examples\n\nTo sync a deployment job\n\nThis example synchronizes a deployment job.\n\nCommand:\n\naws robomaker sync-deployment-job --fleet arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/Trek/1539894765711\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-job/deployment-09ccxs3tlfms\",\n  \"fleet\": \"arn:aws:robomaker:us-west-2:111111111111:deployment-fleet/MyFleet/1539894765711\",\n  \"status\": \"Pending\",\n  \"deploymentConfig\": {\n      \"concurrentDeploymentPercentage\": 20,\n      \"failureThresholdPercentage\": 25\n  },\n  \"deploymentApplicationConfigs\": [\n      {\n          \"application\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1546541208251\",\n          \"applicationVersion\": \"1\",\n          \"launchConfig\": {\n              \"packageName\": \"hello_world_simulation\",\n              \"launchFile\": \"empty_world.launch\"\n          }\n      }\n  ],\n  \"createdAt\": 1551286954.0\n}\n"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/tag-resource.html",
      "command_description": "Description\n\nAdds or edits tags for a AWS RoboMaker resource.\n\nEach tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings.\n\nFor information about the rules that apply to tag keys and tag values, see User-Defined Tag Restrictions in the AWS Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to the resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resource\n\nThis example tags a resource. It attaches two tags: Region and Stage.\n\nCommand:\n\naws robomaker tag-resource --resource-arn \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1544035373264\" --tags Region=North,Stage=Initial\n"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/untag-resource.html",
      "command_description": "Description\n\nRemoves the specified tags from the specified AWS RoboMaker resource.\n\nTo remove a tag, specify the tag key. To change the tag value of an existing tag key, use ` TagResource https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html`__ .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.\n\n--tag-keys (list)\n\nA map that contains tag keys and tag values that will be unattached from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo untag a resource\n\nThis example removes a tag from a resource. It removes the Region tag.\n\nCommand:\n\naws robomaker untag-resource --resource-arn \"arn:aws:robomaker:us-west-2:111111111111:robot/MyRobot/1544035373264\" --tag-keys Region\n"
    },
    {
      "command_name": "update-robot-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/update-robot-application.html",
      "command_description": "Description\n\nUpdates a robot application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-robot-application\n--application <value>\n[--sources <value>]\n--robot-software-suite <value>\n[--current-revision-id <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--sources <value>]",
        "--robot-software-suite <value>",
        "[--current-revision-id <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the robot application.\n\n--sources (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source configuration.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\narchitecture -> (string)\n\nThe target processor architecture for the application.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string,architecture=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"s3Bucket\": \"string\",\n    \"s3Key\": \"string\",\n    \"architecture\": \"X86_64\"|\"ARM64\"|\"ARMHF\"\n  }\n  ...\n]\n\n\n--robot-software-suite (structure)\n\nThe robot software suite (ROS distribution) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"ROS\"|\"ROS2\"|\"General\",\n  \"version\": \"Kinetic\"|\"Melodic\"|\"Dashing\"|\"Foxy\"\n}\n\n\n--current-revision-id (string)\n\nThe revision id for the robot application.\n\n--environment (structure)\n\nThe object that contains the Docker image URI for your robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nShorthand Syntax:\n\nuri=string\n\n\nJSON Syntax:\n\n{\n  \"uri\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the updated robot application.\n\nname -> (string)\n\nThe name of the robot application.\n\nversion -> (string)\n\nThe version of the robot application.\n\nsources -> (list)\n\nThe sources of the robot application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nrobotSoftwareSuite -> (structure)\n\nThe robot software suite (ROS distribution) used by the robot application.\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the robot application was last updated.\n\nrevisionId -> (string)\n\nThe revision id of the robot application.\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI for your robot application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo update a robot application\n\nThis example updates a robot application.\n\nCommand:\n\naws robomaker update-robot-application --application arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821 --sources s3Bucket=my-bucket,s3Key=my-robot-application.tar.gz,architecture=X86_64 --robot-software-suite name=ROS,version=Kinetic\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:robot-application/MyRobotApplication/1551203485821\",\n  \"name\": \"MyRobotApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-robot-application.tar.gz\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"lastUpdatedAt\": 1551287993.0,\n  \"revisionId\": \"20b5e331-24fd-4504-8b8c-531afe5f4c94\"\n}\n"
    },
    {
      "command_name": "update-simulation-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/update-simulation-application.html",
      "command_description": "Description\n\nUpdates a simulation application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-simulation-application\n--application <value>\n[--sources <value>]\n--simulation-software-suite <value>\n--robot-software-suite <value>\n[--rendering-engine <value>]\n[--current-revision-id <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application <value>",
        "[--sources <value>]",
        "--simulation-software-suite <value>",
        "--robot-software-suite <value>",
        "[--rendering-engine <value>]",
        "[--current-revision-id <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application information for the simulation application.\n\n--sources (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source configuration.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\narchitecture -> (string)\n\nThe target processor architecture for the application.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string,architecture=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"s3Bucket\": \"string\",\n    \"s3Key\": \"string\",\n    \"architecture\": \"X86_64\"|\"ARM64\"|\"ARMHF\"\n  }\n  ...\n]\n\n\n--simulation-software-suite (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"Gazebo\"|\"RosbagPlay\"|\"SimulationRuntime\",\n  \"version\": \"string\"\n}\n\n\n--robot-software-suite (structure)\n\nInformation about the robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"ROS\"|\"ROS2\"|\"General\",\n  \"version\": \"Kinetic\"|\"Melodic\"|\"Dashing\"|\"Foxy\"\n}\n\n\n--rendering-engine (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nShorthand Syntax:\n\nname=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"name\": \"OGRE\",\n  \"version\": \"string\"\n}\n\n\n--current-revision-id (string)\n\nThe revision id for the robot application.\n\n--environment (structure)\n\nThe object that contains the Docker image URI for your simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.\n\nShorthand Syntax:\n\nuri=string\n\n\nJSON Syntax:\n\n{\n  \"uri\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the updated simulation application.\n\nname -> (string)\n\nThe name of the simulation application.\n\nversion -> (string)\n\nThe version of the robot application.\n\nsources -> (list)\n\nThe sources of the simulation application.\n\n(structure)\n\nInformation about a source.\n\ns3Bucket -> (string)\n\nThe s3 bucket name.\n\ns3Key -> (string)\n\nThe s3 object key.\n\netag -> (string)\n\nA hash of the object specified by s3Bucket and s3Key .\n\narchitecture -> (string)\n\nThe taget processor architecture for the application.\n\nsimulationSoftwareSuite -> (structure)\n\nThe simulation software suite used by the simulation application.\n\nname -> (string)\n\nThe name of the simulation software suite.\n\nversion -> (string)\n\nThe version of the simulation software suite.\n\nrobotSoftwareSuite -> (structure)\n\nInformation about the robot software suite (ROS distribution).\n\nname -> (string)\n\nThe name of the robot software suite (ROS distribution).\n\nversion -> (string)\n\nThe version of the robot software suite (ROS distribution).\n\nrenderingEngine -> (structure)\n\nThe rendering engine for the simulation application.\n\nname -> (string)\n\nThe name of the rendering engine.\n\nversion -> (string)\n\nThe version of the rendering engine.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the simulation application was last updated.\n\nrevisionId -> (string)\n\nThe revision id of the simulation application.\n\nenvironment -> (structure)\n\nThe object that contains the Docker image URI used for your simulation application.\n\nuri -> (string)\n\nThe Docker image URI for either your robot or simulation applications.",
      "command_examples": "Examples\n\nTo update a simulation application\n\nThis example updates a simulation application.\n\nCommand:\n\naws robomaker update-simulation-application --application arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605 --sources s3Bucket=my-bucket,s3Key=my-simulation-application.tar.gz,architecture=X86_64 --robot-software-suite name=ROS,version=Kinetic --simulation-software-suite name=Gazebo,version=7 --rendering-engine name=OGRE,version=1.x\n\n\nOutput:\n\n{\n  \"arn\": \"arn:aws:robomaker:us-west-2:111111111111:simulation-application/MySimulationApplication/1551203427605\",\n  \"name\": \"MySimulationApplication\",\n  \"version\": \"$LATEST\",\n  \"sources\": [\n      {\n          \"s3Bucket\": \"my-bucket\",\n          \"s3Key\": \"my-simulation-application.tar.gz\",\n          \"architecture\": \"X86_64\"\n      }\n  ],\n  \"simulationSoftwareSuite\": {\n      \"name\": \"Gazebo\",\n      \"version\": \"7\"\n  },\n  \"robotSoftwareSuite\": {\n      \"name\": \"ROS\",\n      \"version\": \"Kinetic\"\n  },\n  \"renderingEngine\": {\n      \"name\": \"OGRE\",\n      \"version\": \"1.x\"\n  },\n  \"lastUpdatedAt\": 1551289361.0,\n  \"revisionId\": \"4a22cb5d-93c5-4cef-9311-52bdd119b79e\"\n}\n"
    },
    {
      "command_name": "update-world-template",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/robomaker/update-world-template.html",
      "command_description": "Description\n\nUpdates a world template.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-world-template\n--template <value>\n[--name <value>]\n[--template-body <value>]\n[--template-location <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--template <value>",
        "[--name <value>]",
        "[--template-body <value>]",
        "[--template-location <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--template (string)\n\nThe Amazon Resource Name (arn) of the world template to update.\n\n--name (string)\n\nThe name of the template.\n\n--template-body (string)\n\nThe world template body.\n\n--template-location (structure)\n\nThe location of the world template.\n\ns3Bucket -> (string)\n\nThe Amazon S3 bucket name.\n\ns3Key -> (string)\n\nThe list of S3 keys identifying the data source files.\n\nShorthand Syntax:\n\ns3Bucket=string,s3Key=string\n\n\nJSON Syntax:\n\n{\n  \"s3Bucket\": \"string\",\n  \"s3Key\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\narn -> (string)\n\nThe Amazon Resource Name (arn) of the world template.\n\nname -> (string)\n\nThe name of the world template.\n\ncreatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world template was created.\n\nlastUpdatedAt -> (timestamp)\n\nThe time, in milliseconds since the epoch, when the world template was last updated."
    }
  ],
  "service_description": "Description\n\nThis section provides documentation for the AWS RoboMaker API operations."
}