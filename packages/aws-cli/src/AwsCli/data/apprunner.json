{
  "service_name": "apprunner",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/index.html",
  "service_commands": [
    {
      "command_name": "associate-custom-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/associate-custom-domain.html",
      "command_description": "Description\n\nAssociate your own domain name with the App Runner subdomain URL of your App Runner service.\n\nAfter you call AssociateCustomDomain and receive a successful response, use the information in the CustomDomain record that’s returned to add CNAME records to your Domain Name System (DNS). For each mapped domain name, add a mapping to the target App Runner subdomain and one or more certificate validation records. App Runner then performs DNS validation to verify that you own or control the domain name that you associated. App Runner tracks domain validity in a certificate stored in AWS Certificate Manager (ACM) .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-custom-domain\n--service-arn <value>\n--domain-name <value>\n[--enable-www-subdomain | --no-enable-www-subdomain]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "--domain-name <value>",
        "[--enable-www-subdomain | --no-enable-www-subdomain]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to associate a custom domain name with.\n\n--domain-name (string)\n\nA custom domain endpoint to associate. Specify a root domain (for example, example.com ), a subdomain (for example, login.example.com or admin.login.example.com ), or a wildcard (for example, *.example.com ).\n\n--enable-www-subdomain | --no-enable-www-subdomain (boolean)\n\nSet to true to associate the subdomain ``www.*DomainName* `` with the App Runner service in addition to the base domain.\n\nDefault: true\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDNSTarget -> (string)\n\nThe App Runner subdomain of the App Runner service. The custom domain name is mapped to this target name.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service with which a custom domain name is associated.\n\nCustomDomain -> (structure)\n\nA description of the domain name that’s being associated.\n\nDomainName -> (string)\n\nAn associated custom domain endpoint. It can be a root domain (for example, example.com ), a subdomain (for example, login.example.com or admin.login.example.com ), or a wildcard (for example, *.example.com ).\n\nEnableWWWSubdomain -> (boolean)\n\nWhen true , the subdomain ``www.*DomainName* `` is associated with the App Runner service in addition to the base domain.\n\nCertificateValidationRecords -> (list)\n\nA list of certificate CNAME records that’s used for this domain name.\n\n(structure)\n\nDescribes a certificate CNAME record to add to your DNS. For more information, see AssociateCustomDomain .\n\nName -> (string)\n\nThe certificate CNAME record name.\n\nType -> (string)\n\nThe record type, always CNAME .\n\nValue -> (string)\n\nThe certificate CNAME record value.\n\nStatus -> (string)\n\nThe current state of the certificate CNAME record validation. It should change to SUCCESS after App Runner completes validation with your DNS.\n\nStatus -> (string)\n\nThe current state of the domain name association."
    },
    {
      "command_name": "create-auto-scaling-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/create-auto-scaling-configuration.html",
      "command_description": "Description\n\nCreate an App Runner automatic scaling configuration resource. App Runner requires this resource when you create App Runner services that require non-default auto scaling settings. You can share an auto scaling configuration across multiple services.\n\nCreate multiple revisions of a configuration by using the same AutoScalingConfigurationName and different AutoScalingConfigurationRevision values. When you create a service, you can set it to use the latest active revision of an auto scaling configuration or a specific revision.\n\nConfigure a higher MinSize to increase the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher minimal cost.\n\nConfigure a lower MaxSize to control your cost. The tradeoff is lower responsiveness during peak demand.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-auto-scaling-configuration\n--auto-scaling-configuration-name <value>\n[--max-concurrency <value>]\n[--min-size <value>]\n[--max-size <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--auto-scaling-configuration-name <value>",
        "[--max-concurrency <value>]",
        "[--min-size <value>]",
        "[--max-size <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--auto-scaling-configuration-name (string)\n\nA name for the auto scaling configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.\n\n--max-concurrency (integer)\n\nThe maximum number of concurrent requests that you want an instance to process. If the number of concurrent requests exceeds this limit, App Runner scales up your service.\n\nDefault: 100\n\n--min-size (integer)\n\nThe minimum number of instances that App Runner provisions for your service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.\n\nApp Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.\n\nDefault: 1\n\n--max-size (integer)\n\nThe maximum number of instances that your service scales up to. At most MaxSize instances actively serve traffic for your service.\n\nDefault: 25\n\n--tags (list)\n\nA list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.\n\n(structure)\n\nDescribes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAutoScalingConfiguration -> (structure)\n\nA description of the App Runner auto scaling configuration that’s created by this request.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) that share the same AutoScalingConfigurationName .\n\nLatest -> (boolean)\n\nIt’s set to true for the configuration with the highest Revision among all configurations that share the same Name . It’s set to false otherwise.\n\nStatus -> (string)\n\nThe current state of the auto scaling configuration. If the status of a configuration revision is INACTIVE , it was deleted and can’t be used. Inactive configuration revisions are permanently removed some time after they are deleted.\n\nMaxConcurrency -> (integer)\n\nThe maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up.\n\nMinSize -> (integer)\n\nThe minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.\n\nApp Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.\n\nMaxSize -> (integer)\n\nThe maximum number of instances that a service scales up to. At most MaxSize instances actively serve traffic for your service.\n\nCreatedAt -> (timestamp)\n\nThe time when the auto scaling configuration was created. It’s in Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the auto scaling configuration was deleted. It’s in Unix time stamp format."
    },
    {
      "command_name": "create-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/create-connection.html",
      "command_description": "Description\n\nCreate an App Runner connection resource. App Runner requires a connection resource when you create App Runner services that access private repositories from certain third-party providers. You can share a connection across multiple services.\n\nA connection resource is needed to access GitHub repositories. GitHub requires a user interface approval process through the App Runner console before you can use the connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connection\n--connection-name <value>\n--provider-type <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-name <value>",
        "--provider-type <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-name (string)\n\nA name for the new connection. It must be unique across all App Runner connections for the Amazon Web Services account in the Amazon Web Services Region.\n\n--provider-type (string)\n\nThe source repository provider.\n\nPossible values:\n\nGITHUB\n\n--tags (list)\n\nA list of metadata items that you can associate with your connection resource. A tag is a key-value pair.\n\n(structure)\n\nDescribes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnection -> (structure)\n\nA description of the App Runner connection that’s created by this request.\n\nConnectionName -> (string)\n\nThe customer-provided connection name.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of this connection.\n\nProviderType -> (string)\n\nThe source repository provider.\n\nStatus -> (string)\n\nThe current state of the App Runner connection. When the state is AVAILABLE , you can use the connection to create an App Runner service.\n\nCreatedAt -> (timestamp)\n\nThe App Runner connection creation time, expressed as a Unix time stamp."
    },
    {
      "command_name": "create-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/create-service.html",
      "command_description": "Description\n\nCreate an App Runner service. After the service is created, the action also automatically starts a deployment.\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-service\n--service-name <value>\n--source-configuration <value>\n[--instance-configuration <value>]\n[--tags <value>]\n[--encryption-configuration <value>]\n[--health-check-configuration <value>]\n[--auto-scaling-configuration-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-name <value>",
        "--source-configuration <value>",
        "[--instance-configuration <value>]",
        "[--tags <value>]",
        "[--encryption-configuration <value>]",
        "[--health-check-configuration <value>]",
        "[--auto-scaling-configuration-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-name (string)\n\nA name for the new service. It must be unique across all the running App Runner services in your Amazon Web Services account in the Amazon Web Services Region.\n\n--source-configuration (structure)\n\nThe source to deploy to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nJSON Syntax:\n\n{\n  \"CodeRepository\": {\n    \"RepositoryUrl\": \"string\",\n    \"SourceCodeVersion\": {\n      \"Type\": \"BRANCH\",\n      \"Value\": \"string\"\n    },\n    \"CodeConfiguration\": {\n      \"ConfigurationSource\": \"REPOSITORY\"|\"API\",\n      \"CodeConfigurationValues\": {\n        \"Runtime\": \"PYTHON_3\"|\"NODEJS_12\",\n        \"BuildCommand\": \"string\",\n        \"StartCommand\": \"string\",\n        \"Port\": \"string\",\n        \"RuntimeEnvironmentVariables\": {\"string\": \"string\"\n          ...}\n      }\n    }\n  },\n  \"ImageRepository\": {\n    \"ImageIdentifier\": \"string\",\n    \"ImageConfiguration\": {\n      \"RuntimeEnvironmentVariables\": {\"string\": \"string\"\n        ...},\n      \"StartCommand\": \"string\",\n      \"Port\": \"string\"\n    },\n    \"ImageRepositoryType\": \"ECR\"|\"ECR_PUBLIC\"\n  },\n  \"AutoDeploymentsEnabled\": true|false,\n  \"AuthenticationConfiguration\": {\n    \"ConnectionArn\": \"string\",\n    \"AccessRoleArn\": \"string\"\n  }\n}\n\n\n--instance-configuration (structure)\n\nThe runtime configuration of instances (scaling units) of the App Runner service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nShorthand Syntax:\n\nCpu=string,Memory=string,InstanceRoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"Cpu\": \"string\",\n  \"Memory\": \"string\",\n  \"InstanceRoleArn\": \"string\"\n}\n\n\n--tags (list)\n\nAn optional list of metadata items that you can associate with your service resource. A tag is a key-value pair.\n\n(structure)\n\nDescribes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--encryption-configuration (structure)\n\nAn optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nShorthand Syntax:\n\nKmsKey=string\n\n\nJSON Syntax:\n\n{\n  \"KmsKey\": \"string\"\n}\n\n\n--health-check-configuration (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of your service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nShorthand Syntax:\n\nProtocol=string,Path=string,Interval=integer,Timeout=integer,HealthyThreshold=integer,UnhealthyThreshold=integer\n\n\nJSON Syntax:\n\n{\n  \"Protocol\": \"TCP\"|\"HTTP\",\n  \"Path\": \"string\",\n  \"Interval\": integer,\n  \"Timeout\": integer,\n  \"HealthyThreshold\": integer,\n  \"UnhealthyThreshold\": integer\n}\n\n\n--auto-scaling-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA description of the App Runner service that’s created by this request.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    },
    {
      "command_name": "delete-auto-scaling-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/delete-auto-scaling-configuration.html",
      "command_description": "Description\n\nDelete an App Runner automatic scaling configuration resource. You can delete a specific revision or the latest active revision. You can’t delete a configuration that’s used by one or more App Runner services.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-auto-scaling-configuration\n--auto-scaling-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--auto-scaling-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--auto-scaling-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to delete.\n\nThe ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either ``…/name `` or ``…/name /revision `` . If a revision isn’t specified, the latest active revision is deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAutoScalingConfiguration -> (structure)\n\nA description of the App Runner auto scaling configuration that this request just deleted.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) that share the same AutoScalingConfigurationName .\n\nLatest -> (boolean)\n\nIt’s set to true for the configuration with the highest Revision among all configurations that share the same Name . It’s set to false otherwise.\n\nStatus -> (string)\n\nThe current state of the auto scaling configuration. If the status of a configuration revision is INACTIVE , it was deleted and can’t be used. Inactive configuration revisions are permanently removed some time after they are deleted.\n\nMaxConcurrency -> (integer)\n\nThe maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up.\n\nMinSize -> (integer)\n\nThe minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.\n\nApp Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.\n\nMaxSize -> (integer)\n\nThe maximum number of instances that a service scales up to. At most MaxSize instances actively serve traffic for your service.\n\nCreatedAt -> (timestamp)\n\nThe time when the auto scaling configuration was created. It’s in Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the auto scaling configuration was deleted. It’s in Unix time stamp format."
    },
    {
      "command_name": "delete-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/delete-connection.html",
      "command_description": "Description\n\nDelete an App Runner connection. You must first ensure that there are no running App Runner services that use this connection. If there are any, the DeleteConnection action fails.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-connection\n--connection-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connection-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnection -> (structure)\n\nA description of the App Runner connection that this request just deleted.\n\nConnectionName -> (string)\n\nThe customer-provided connection name.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of this connection.\n\nProviderType -> (string)\n\nThe source repository provider.\n\nStatus -> (string)\n\nThe current state of the App Runner connection. When the state is AVAILABLE , you can use the connection to create an App Runner service.\n\nCreatedAt -> (timestamp)\n\nThe App Runner connection creation time, expressed as a Unix time stamp."
    },
    {
      "command_name": "delete-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/delete-service.html",
      "command_description": "Description\n\nDelete an App Runner service.\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-service\n--service-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA description of the App Runner service that this request just deleted.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    },
    {
      "command_name": "describe-auto-scaling-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/describe-auto-scaling-configuration.html",
      "command_description": "Description\n\nReturn a full description of an App Runner automatic scaling configuration resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-auto-scaling-configuration\n--auto-scaling-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--auto-scaling-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--auto-scaling-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want a description for.\n\nThe ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either ``…/name `` or ``…/name /revision `` . If a revision isn’t specified, the latest active revision is described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAutoScalingConfiguration -> (structure)\n\nA full description of the App Runner auto scaling configuration that you specified in this request.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) that share the same AutoScalingConfigurationName .\n\nLatest -> (boolean)\n\nIt’s set to true for the configuration with the highest Revision among all configurations that share the same Name . It’s set to false otherwise.\n\nStatus -> (string)\n\nThe current state of the auto scaling configuration. If the status of a configuration revision is INACTIVE , it was deleted and can’t be used. Inactive configuration revisions are permanently removed some time after they are deleted.\n\nMaxConcurrency -> (integer)\n\nThe maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up.\n\nMinSize -> (integer)\n\nThe minimum number of instances that App Runner provisions for a service. The service always has at least MinSize provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.\n\nApp Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.\n\nMaxSize -> (integer)\n\nThe maximum number of instances that a service scales up to. At most MaxSize instances actively serve traffic for your service.\n\nCreatedAt -> (timestamp)\n\nThe time when the auto scaling configuration was created. It’s in Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the auto scaling configuration was deleted. It’s in Unix time stamp format."
    },
    {
      "command_name": "describe-custom-domains",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/describe-custom-domains.html",
      "command_description": "Description\n\nReturn a description of custom domain names that are associated with an App Runner service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-custom-domains\n--service-arn <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want associated custom domain names to be described for.\n\n--next-token (string)\n\nA token from a previous result page. It’s used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones that are specified in the initial request.\n\nIf you don’t specify NextToken , the request retrieves the first result page.\n\n--max-results (integer)\n\nThe maximum number of results that each response (result page) can include. It’s used for a paginated request.\n\nIf you don’t specify MaxResults , the request retrieves all available results in a single response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDNSTarget -> (string)\n\nThe App Runner subdomain of the App Runner service. The associated custom domain names are mapped to this target name.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service whose associated custom domain names you want to describe.\n\nCustomDomains -> (list)\n\nA list of descriptions of custom domain names that are associated with the service. In a paginated request, the request returns up to MaxResults records per call.\n\n(structure)\n\nDescribes a custom domain that’s associated with an App Runner service.\n\nDomainName -> (string)\n\nAn associated custom domain endpoint. It can be a root domain (for example, example.com ), a subdomain (for example, login.example.com or admin.login.example.com ), or a wildcard (for example, *.example.com ).\n\nEnableWWWSubdomain -> (boolean)\n\nWhen true , the subdomain ``www.*DomainName* `` is associated with the App Runner service in addition to the base domain.\n\nCertificateValidationRecords -> (list)\n\nA list of certificate CNAME records that’s used for this domain name.\n\n(structure)\n\nDescribes a certificate CNAME record to add to your DNS. For more information, see AssociateCustomDomain .\n\nName -> (string)\n\nThe certificate CNAME record name.\n\nType -> (string)\n\nThe record type, always CNAME .\n\nValue -> (string)\n\nThe certificate CNAME record value.\n\nStatus -> (string)\n\nThe current state of the certificate CNAME record validation. It should change to SUCCESS after App Runner completes validation with your DNS.\n\nStatus -> (string)\n\nThe current state of the domain name association.\n\nNextToken -> (string)\n\nThe token that you can pass in a subsequent request to get the next result page. It’s returned in a paginated request."
    },
    {
      "command_name": "describe-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/describe-service.html",
      "command_description": "Description\n\nReturn a full description of an App Runner service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-service\n--service-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want a description for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA full description of the App Runner service that you specified in this request.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName ."
    },
    {
      "command_name": "disassociate-custom-domain",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/disassociate-custom-domain.html",
      "command_description": "Description\n\nDisassociate a custom domain name from an App Runner service.\n\nCertificates tracking domain validity are associated with a custom domain and are stored in AWS Certificate Manager (ACM) . These certificates aren’t deleted as part of this action. App Runner delays certificate deletion for 30 days after a domain is disassociated from your service.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-custom-domain\n--service-arn <value>\n--domain-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "--domain-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to disassociate a custom domain name from.\n\n--domain-name (string)\n\nThe domain name that you want to disassociate from the App Runner service.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDNSTarget -> (string)\n\nThe App Runner subdomain of the App Runner service. The disassociated custom domain name was mapped to this target name.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that a custom domain name is disassociated from.\n\nCustomDomain -> (structure)\n\nA description of the domain name that’s being disassociated.\n\nDomainName -> (string)\n\nAn associated custom domain endpoint. It can be a root domain (for example, example.com ), a subdomain (for example, login.example.com or admin.login.example.com ), or a wildcard (for example, *.example.com ).\n\nEnableWWWSubdomain -> (boolean)\n\nWhen true , the subdomain ``www.*DomainName* `` is associated with the App Runner service in addition to the base domain.\n\nCertificateValidationRecords -> (list)\n\nA list of certificate CNAME records that’s used for this domain name.\n\n(structure)\n\nDescribes a certificate CNAME record to add to your DNS. For more information, see AssociateCustomDomain .\n\nName -> (string)\n\nThe certificate CNAME record name.\n\nType -> (string)\n\nThe record type, always CNAME .\n\nValue -> (string)\n\nThe certificate CNAME record value.\n\nStatus -> (string)\n\nThe current state of the certificate CNAME record validation. It should change to SUCCESS after App Runner completes validation with your DNS.\n\nStatus -> (string)\n\nThe current state of the domain name association."
    },
    {
      "command_name": "list-auto-scaling-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/list-auto-scaling-configurations.html",
      "command_description": "Description\n\nReturns a list of App Runner automatic scaling configurations in your Amazon Web Services account. You can query the revisions for a specific configuration name or the revisions for all configurations in your account. You can optionally query only the latest revision of each requested name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-auto-scaling-configurations\n[--auto-scaling-configuration-name <value>]\n[--latest-only | --no-latest-only]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--auto-scaling-configuration-name <value>]",
        "[--latest-only | --no-latest-only]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--auto-scaling-configuration-name (string)\n\nThe name of the App Runner auto scaling configuration that you want to list. If specified, App Runner lists revisions that share this name. If not specified, App Runner returns revisions of all configurations.\n\n--latest-only | --no-latest-only (boolean)\n\nSet to true to list only the latest revision for each requested configuration name.\n\nKeep as false to list all revisions for each requested configuration name.\n\nDefault: false\n\n--max-results (integer)\n\nThe maximum number of results to include in each response (result page). It’s used for a paginated request.\n\nIf you don’t specify MaxResults , the request retrieves all available results in a single response.\n\n--next-token (string)\n\nA token from a previous result page. It’s used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones that are specified in the initial request.\n\nIf you don’t specify NextToken , the request retrieves the first result page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAutoScalingConfigurationSummaryList -> (list)\n\nA list of summary information records for auto scaling configurations. In a paginated request, the request returns up to MaxResults records for each call.\n\n(structure)\n\nProvides summary information about an App Runner automatic scaling configuration resource.\n\nThis type contains limited information about an auto scaling configuration. It includes only identification information, without configuration details. It’s returned by the ListAutoScalingConfigurations action. Complete configuration information is returned by the CreateAutoScalingConfiguration , DescribeAutoScalingConfiguration , and DeleteAutoScalingConfiguration actions using the AutoScalingConfiguration type.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nNextToken -> (string)\n\nThe token that you can pass in a subsequent request to get the next result page. It’s returned in a paginated request."
    },
    {
      "command_name": "list-connections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/list-connections.html",
      "command_description": "Description\n\nReturns a list of App Runner connections that are associated with your Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-connections\n[--connection-name <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--connection-name <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connection-name (string)\n\nIf specified, only this connection is returned. If not specified, the result isn’t filtered by name.\n\n--max-results (integer)\n\nThe maximum number of results to include in each response (result page). Used for a paginated request.\n\nIf you don’t specify MaxResults , the request retrieves all available results in a single response.\n\n--next-token (string)\n\nA token from a previous result page. Used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones specified in the initial request.\n\nIf you don’t specify NextToken , the request retrieves the first result page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionSummaryList -> (list)\n\nA list of summary information records for connections. In a paginated request, the request returns up to MaxResults records for each call.\n\n(structure)\n\nProvides summary information about an App Runner connection resource.\n\nConnectionName -> (string)\n\nThe customer-provided connection name.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of this connection.\n\nProviderType -> (string)\n\nThe source repository provider.\n\nStatus -> (string)\n\nThe current state of the App Runner connection. When the state is AVAILABLE , you can use the connection to create an App Runner service.\n\nCreatedAt -> (timestamp)\n\nThe App Runner connection creation time, expressed as a Unix time stamp.\n\nNextToken -> (string)\n\nThe token that you can pass in a subsequent request to get the next result page. Returned in a paginated request."
    },
    {
      "command_name": "list-operations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/list-operations.html",
      "command_description": "Description\n\nReturn a list of operations that occurred on an App Runner service.\n\nThe resulting list of OperationSummary objects is sorted in reverse chronological order. The first object on the list represents the last started operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-operations\n--service-arn <value>\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want a list of operations for.\n\n--next-token (string)\n\nA token from a previous result page. It’s used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones specified in the initial request.\n\nIf you don’t specify NextToken , the request retrieves the first result page.\n\n--max-results (integer)\n\nThe maximum number of results to include in each response (result page). It’s used for a paginated request.\n\nIf you don’t specify MaxResults , the request retrieves all available results in a single response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationSummaryList -> (list)\n\nA list of operation summary information records. In a paginated request, the request returns up to MaxResults records for each call.\n\n(structure)\n\nProvides summary information for an operation that occurred on an App Runner service.\n\nId -> (string)\n\nA unique ID of this operation. It’s unique in the scope of the App Runner service.\n\nType -> (string)\n\nThe type of operation. It indicates a specific action that occured.\n\nStatus -> (string)\n\nThe current state of the operation.\n\nTargetArn -> (string)\n\nThe Amazon Resource Name (ARN) of the resource that the operation acted on (for example, an App Runner service).\n\nStartedAt -> (timestamp)\n\nThe time when the operation started. It’s in the Unix time stamp format.\n\nEndedAt -> (timestamp)\n\nThe time when the operation ended. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the operation was last updated. It’s in the Unix time stamp format.\n\nNextToken -> (string)\n\nThe token that you can pass in a subsequent request to get the next result page. It’s returned in a paginated request."
    },
    {
      "command_name": "list-services",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/list-services.html",
      "command_description": "Description\n\nReturns a list of running App Runner services in your Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-services\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA token from a previous result page. Used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones specified in the initial request.\n\nIf you don’t specify NextToken , the request retrieves the first result page.\n\n--max-results (integer)\n\nThe maximum number of results to include in each response (result page). It’s used for a paginated request.\n\nIf you don’t specify MaxResults , the request retrieves all available results in a single response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServiceSummaryList -> (list)\n\nA list of service summary information records. In a paginated request, the request returns up to MaxResults records for each call.\n\n(structure)\n\nProvides summary information for an App Runner service.\n\nThis type contains limited information about a service. It doesn’t include configuration details. It’s returned by the ListServices action. Complete service information is returned by the CreateService , DescribeService , and DeleteService actions using the Service type.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated. It’s in theUnix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. Read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nNextToken -> (string)\n\nThe token that you can pass in a subsequent request to get the next result page. It’s returned in a paginated request."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/list-tags-for-resource.html",
      "command_description": "Description\n\nList tags that are associated with for an App Runner resource. The response contains a list of tag key-value pairs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that a tag list is requested for.\n\nIt must be the ARN of an App Runner resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nA list of the tag key-value pairs that are associated with the resource.\n\n(structure)\n\nDescribes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag."
    },
    {
      "command_name": "pause-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/pause-service.html",
      "command_description": "Description\n\nPause an active App Runner service. App Runner reduces compute capacity for the service to zero and loses state (for example, ephemeral storage is removed).\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  pause-service\n--service-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to pause.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA description of the App Runner service that this request just paused.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    },
    {
      "command_name": "resume-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/resume-service.html",
      "command_description": "Description\n\nResume an active App Runner service. App Runner provisions compute capacity for the service.\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  resume-service\n--service-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to resume.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA description of the App Runner service that this request just resumed.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    },
    {
      "command_name": "start-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/start-deployment.html",
      "command_description": "Description\n\nInitiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner service.\n\nFor a source code repository, App Runner retrieves the commit and builds a Docker image. For a source image repository, App Runner retrieves the latest Docker image. In both cases, App Runner then deploys the new image to your service and starts a new container instance.\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-deployment\n--service-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to manually deploy to.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/tag-resource.html",
      "command_description": "Description\n\nAdd tags to, or update the tag values of, an App Runner resource. A tag is a key-value pair.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to update tags for.\n\nIt must be the ARN of an App Runner resource.\n\n--tags (list)\n\nA list of tag key-value pairs to add or update. If a key is new to the resource, the tag is added with the provided value. If a key is already associated with the resource, the value of the tag is updated.\n\n(structure)\n\nDescribes a tag that is applied to an App Runner resource. A tag is a metadata item consisting of a key-value pair.\n\nKey -> (string)\n\nThe key of the tag.\n\nValue -> (string)\n\nThe value of the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/untag-resource.html",
      "command_description": "Description\n\nRemove tags from an App Runner resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to remove tags from.\n\nIt must be the ARN of an App Runner resource.\n\n--tag-keys (list)\n\nA list of tag keys that you want to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-service",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apprunner/update-service.html",
      "command_description": "Description\n\nUpdate an App Runner service. You can update the source configuration and instance configuration of the service. You can also update the ARN of the auto scaling configuration resource that’s associated with the service. However, you can’t change the name or the encryption configuration of the service. These can be set only when you create the service.\n\nTo update the tags applied to your service, use the separate actions TagResource and UntagResource .\n\nThis is an asynchronous operation. On a successful call, you can use the returned OperationId and the ListOperations call to track the operation’s progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-service\n--service-arn <value>\n[--source-configuration <value>]\n[--instance-configuration <value>]\n[--auto-scaling-configuration-arn <value>]\n[--health-check-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--service-arn <value>",
        "[--source-configuration <value>]",
        "[--instance-configuration <value>]",
        "[--auto-scaling-configuration-arn <value>]",
        "[--health-check-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--service-arn (string)\n\nThe Amazon Resource Name (ARN) of the App Runner service that you want to update.\n\n--source-configuration (structure)\n\nThe source configuration to apply to the App Runner service.\n\nYou can change the configuration of the code or image repository that the service uses. However, you can’t switch from code to image or the other way around. This means that you must provide the same structure member of SourceConfiguration that you originally included when you created the service. Specifically, you can include either CodeRepository or ImageRepository . To update the source configuration, set the values to members of the structure that you include.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nJSON Syntax:\n\n{\n  \"CodeRepository\": {\n    \"RepositoryUrl\": \"string\",\n    \"SourceCodeVersion\": {\n      \"Type\": \"BRANCH\",\n      \"Value\": \"string\"\n    },\n    \"CodeConfiguration\": {\n      \"ConfigurationSource\": \"REPOSITORY\"|\"API\",\n      \"CodeConfigurationValues\": {\n        \"Runtime\": \"PYTHON_3\"|\"NODEJS_12\",\n        \"BuildCommand\": \"string\",\n        \"StartCommand\": \"string\",\n        \"Port\": \"string\",\n        \"RuntimeEnvironmentVariables\": {\"string\": \"string\"\n          ...}\n      }\n    }\n  },\n  \"ImageRepository\": {\n    \"ImageIdentifier\": \"string\",\n    \"ImageConfiguration\": {\n      \"RuntimeEnvironmentVariables\": {\"string\": \"string\"\n        ...},\n      \"StartCommand\": \"string\",\n      \"Port\": \"string\"\n    },\n    \"ImageRepositoryType\": \"ECR\"|\"ECR_PUBLIC\"\n  },\n  \"AutoDeploymentsEnabled\": true|false,\n  \"AuthenticationConfiguration\": {\n    \"ConnectionArn\": \"string\",\n    \"AccessRoleArn\": \"string\"\n  }\n}\n\n\n--instance-configuration (structure)\n\nThe runtime configuration to apply to instances (scaling units) of the App Runner service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nShorthand Syntax:\n\nCpu=string,Memory=string,InstanceRoleArn=string\n\n\nJSON Syntax:\n\n{\n  \"Cpu\": \"string\",\n  \"Memory\": \"string\",\n  \"InstanceRoleArn\": \"string\"\n}\n\n\n--auto-scaling-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service.\n\n--health-check-configuration (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of your service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nShorthand Syntax:\n\nProtocol=string,Path=string,Interval=integer,Timeout=integer,HealthyThreshold=integer,UnhealthyThreshold=integer\n\n\nJSON Syntax:\n\n{\n  \"Protocol\": \"TCP\"|\"HTTP\",\n  \"Path\": \"string\",\n  \"Interval\": integer,\n  \"Timeout\": integer,\n  \"HealthyThreshold\": integer,\n  \"UnhealthyThreshold\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nService -> (structure)\n\nA description of the App Runner service updated by this request. All configuration values in the returned Service structure reflect configuration changes that are being applied by this request.\n\nServiceName -> (string)\n\nThe customer-provided service name.\n\nServiceId -> (string)\n\nAn ID that App Runner generated for this service. It’s unique within the Amazon Web Services Region.\n\nServiceArn -> (string)\n\nThe Amazon Resource Name (ARN) of this service.\n\nServiceUrl -> (string)\n\nA subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.\n\nCreatedAt -> (timestamp)\n\nThe time when the App Runner service was created. It’s in the Unix time stamp format.\n\nUpdatedAt -> (timestamp)\n\nThe time when the App Runner service was last updated at. It’s in the Unix time stamp format.\n\nDeletedAt -> (timestamp)\n\nThe time when the App Runner service was deleted. It’s in the Unix time stamp format.\n\nStatus -> (string)\n\nThe current state of the App Runner service. These particular values mean the following.\n\nCREATE_FAILED – The service failed to create. To troubleshoot this failure, read the failure events and logs, change any parameters that need to be fixed, and retry the call to create the service. The failed service isn’t usable, and still counts towards your service quota. When you’re done analyzing the failure, delete the service.\n\nDELETE_FAILED – The service failed to delete and can’t be successfully recovered. Retry the service deletion call to ensure that all related resources are removed.\n\nSourceConfiguration -> (structure)\n\nThe source deployed to the App Runner service. It can be a code or an image repository.\n\nCodeRepository -> (structure)\n\nThe description of a source code repository.\n\nYou must provide either this member or ImageRepository (but not both).\n\nRepositoryUrl -> (string)\n\nThe location of the repository that contains the source code.\n\nSourceCodeVersion -> (structure)\n\nThe version that should be used within the source code repository.\n\nType -> (string)\n\nThe type of version identifier.\n\nFor a git-based repository, branches represent versions.\n\nValue -> (string)\n\nA source code version.\n\nFor a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.\n\nCodeConfiguration -> (structure)\n\nConfiguration for building and running the service from a source code repository.\n\nConfigurationSource -> (string)\n\nThe source of the App Runner configuration. Values are interpreted as follows:\n\nREPOSITORY – App Runner reads configuration values from the apprunner.yaml file in the source code repository and ignores CodeConfigurationValues .\n\nAPI – App Runner uses configuration values provided in CodeConfigurationValues and ignores the apprunner.yaml file in the source code repository.\n\nCodeConfigurationValues -> (structure)\n\nThe basic configuration for building and running the App Runner service. Use it to quickly launch an App Runner service without providing a apprunner.yaml file in the source code repository (or ignoring the file if it exists).\n\nRuntime -> (string)\n\nA runtime environment type for building and running an App Runner service. It represents a programming language runtime.\n\nBuildCommand -> (string)\n\nThe command App Runner runs to build your application.\n\nStartCommand -> (string)\n\nThe command App Runner runs to start your application.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nRuntimeEnvironmentVariables -> (map)\n\nThe environment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nImageRepository -> (structure)\n\nThe description of a source image repository.\n\nYou must provide either this member or CodeRepository (but not both).\n\nImageIdentifier -> (string)\n\nThe identifier of an image.\n\nFor an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the image name format, see Pulling an image in the Amazon ECR User Guide .\n\nImageConfiguration -> (structure)\n\nConfiguration for running the identified image.\n\nRuntimeEnvironmentVariables -> (map)\n\nEnvironment variables that are available to your running App Runner service. An array of key-value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren’t valid.\n\nkey -> (string)\n\nvalue -> (string)\n\nStartCommand -> (string)\n\nAn optional command that App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.\n\nPort -> (string)\n\nThe port that your application listens to in the container.\n\nDefault: 8080\n\nImageRepositoryType -> (string)\n\nThe type of the image repository. This reflects the repository provider and whether the repository is private or public.\n\nAutoDeploymentsEnabled -> (boolean)\n\nIf true , continuous integration from the source repository is enabled for the App Runner service. Each repository change (including any source code commit or new image version) starts a deployment.\n\nDefault: App Runner sets to false for a source image that uses an ECR Public repository or an ECR repository that’s in an Amazon Web Services account other than the one that the service is in. App Runner sets to true in all other cases (which currently include a source code repository or a source image using a same-account ECR repository).\n\nAuthenticationConfiguration -> (structure)\n\nDescribes the resources that are needed to authenticate access to some source repositories.\n\nConnectionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the App Runner connection that enables the App Runner service to connect to a source repository. It’s required for GitHub code repositories.\n\nAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role that grants the App Runner service access to a source repository. It’s required for ECR image repositories (but not for ECR Public repositories).\n\nInstanceConfiguration -> (structure)\n\nThe runtime configuration of instances (scaling units) of this service.\n\nCpu -> (string)\n\nThe number of CPU units reserved for each instance of your App Runner service.\n\nDefault: 1 vCPU\n\nMemory -> (string)\n\nThe amount of memory, in MB or GB, reserved for each instance of your App Runner service.\n\nDefault: 2 GB\n\nInstanceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any Amazon Web Services APIs.\n\nEncryptionConfiguration -> (structure)\n\nThe encryption key that App Runner uses to encrypt the service logs and the copy of the source repository that App Runner maintains for the service. It can be either a customer-provided encryption key or an Amazon Web Services managed CMK.\n\nKmsKey -> (string)\n\nThe ARN of the KMS key that’s used for encryption.\n\nHealthCheckConfiguration -> (structure)\n\nThe settings for the health check that App Runner performs to monitor the health of this service.\n\nProtocol -> (string)\n\nThe IP protocol that App Runner uses to perform health checks for your service.\n\nIf you set Protocol to HTTP , App Runner sends health check requests to the HTTP path specified by Path .\n\nDefault: TCP\n\nPath -> (string)\n\nThe URL that health check requests are sent to.\n\nPath is only applicable when you set Protocol to HTTP .\n\nDefault: \"/\"\n\nInterval -> (integer)\n\nThe time interval, in seconds, between health checks.\n\nDefault: 5\n\nTimeout -> (integer)\n\nThe time, in seconds, to wait for a health check response before deciding it failed.\n\nDefault: 2\n\nHealthyThreshold -> (integer)\n\nThe number of consecutive checks that must succeed before App Runner decides that the service is healthy.\n\nDefault: 1\n\nUnhealthyThreshold -> (integer)\n\nThe number of consecutive checks that must fail before App Runner decides that the service is unhealthy.\n\nDefault: 5\n\nAutoScalingConfigurationSummary -> (structure)\n\nSummary information for the App Runner automatic scaling configuration resource that’s associated with this service.\n\nAutoScalingConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of this auto scaling configuration.\n\nAutoScalingConfigurationName -> (string)\n\nThe customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.\n\nAutoScalingConfigurationRevision -> (integer)\n\nThe revision of this auto scaling configuration. It’s unique among all the active configurations (\"Status\": \"ACTIVE\" ) with the same AutoScalingConfigurationName .\n\nOperationId -> (string)\n\nThe unique ID of the asynchronous operation that this request started. You can use it combined with the ListOperations call to track the operation’s progress."
    }
  ],
  "service_description": "Description\n\nApp Runner is an application service that provides a fast, simple, and cost-effective way to go directly from an existing container image or source code to a running service in the Amazon Web Services Cloud in seconds. You don’t need to learn new technologies, decide which compute service to use, or understand how to provision and configure Amazon Web Services resources.\n\nApp Runner connects directly to your container registry or source code repository. It provides an automatic delivery pipeline with fully managed operations, high performance, scalability, and security.\n\nFor more information about App Runner, see the App Runner Developer Guide . For release information, see the App Runner Release Notes .\n\nTo install the Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools that you can use to access the API, see Tools for Amazon Web Services .\n\nEndpoints\n\nFor a list of Region-specific endpoints that App Runner supports, see App Runner endpoints and quotas in the Amazon Web Services General Reference ."
}