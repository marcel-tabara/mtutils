{
  "service_name": "appconfig",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/index.html",
  "service_commands": [
    {
      "command_name": "create-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/create-application.html",
      "command_description": "Description\n\nAn application in AppConfig is a logical unit of code that provides capabilities for your customers. For example, an application can be a microservice that runs on Amazon EC2 instances, a mobile application installed by your users, a serverless application using Amazon API Gateway and AWS Lambda, or any system you run on behalf of others.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-application\n--name <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nA name for the application.\n\n--description (string)\n\nA description of the application.\n\n--tags (map)\n\nMetadata to assign to the application. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe application ID.\n\nName -> (string)\n\nThe application name.\n\nDescription -> (string)\n\nThe description of the application."
    },
    {
      "command_name": "create-configuration-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/create-configuration-profile.html",
      "command_description": "Description\n\nInformation that enables AppConfig to access the configuration source. Valid configuration sources include Systems Manager (SSM) documents, SSM Parameter Store parameters, and Amazon S3 objects. A configuration profile includes the following information.\n\nThe Uri location of the configuration data.\n\nThe AWS Identity and Access Management (IAM) role that provides access to the configuration data.\n\nA validator for the configuration data. Available validators include either a JSON Schema or an AWS Lambda function.\n\nFor more information, see Create a Configuration and a Configuration Profile in the AWS AppConfig User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-configuration-profile\n--application-id <value>\n--name <value>\n[--description <value>]\n--location-uri <value>\n[--retrieval-role-arn <value>]\n[--validators <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--name <value>",
        "[--description <value>]",
        "--location-uri <value>",
        "[--retrieval-role-arn <value>]",
        "[--validators <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--name (string)\n\nA name for the configuration profile.\n\n--description (string)\n\nA description of the configuration profile.\n\n--location-uri (string)\n\nA URI to locate the configuration. You can specify a Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey> . Here is an example: s3://my-bucket/my-app/us-east-1/my-config.json\n\n--retrieval-role-arn (string)\n\nThe ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n\n--validators (list)\n\nA list of methods for validating the configuration.\n\n(structure)\n\nA validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nType -> (string)\n\nAppConfig supports validators of type JSON_SCHEMA and LAMBDA\n\nContent -> (string)\n\nEither the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function.\n\nShorthand Syntax:\n\nType=string,Content=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"JSON_SCHEMA\"|\"LAMBDA\",\n    \"Content\": \"string\"\n  }\n  ...\n]\n\n\n--tags (map)\n\nMetadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe configuration profile ID.\n\nName -> (string)\n\nThe name of the configuration profile.\n\nDescription -> (string)\n\nThe configuration profile description.\n\nLocationUri -> (string)\n\nThe URI location of the configuration.\n\nRetrievalRoleArn -> (string)\n\nThe ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n\nValidators -> (list)\n\nA list of methods for validating the configuration.\n\n(structure)\n\nA validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nType -> (string)\n\nAppConfig supports validators of type JSON_SCHEMA and LAMBDA\n\nContent -> (string)\n\nEither the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function."
    },
    {
      "command_name": "create-deployment-strategy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/create-deployment-strategy.html",
      "command_description": "Description\n\nA deployment strategy defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes: the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment-strategy\n--name <value>\n[--description <value>]\n--deployment-duration-in-minutes <value>\n[--final-bake-time-in-minutes <value>]\n--growth-factor <value>\n[--growth-type <value>]\n--replicate-to <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--deployment-duration-in-minutes <value>",
        "[--final-bake-time-in-minutes <value>]",
        "--growth-factor <value>",
        "[--growth-type <value>]",
        "--replicate-to <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nA name for the deployment strategy.\n\n--description (string)\n\nA description of the deployment strategy.\n\n--deployment-duration-in-minutes (integer)\n\nTotal amount of time for a deployment to last.\n\n--final-bake-time-in-minutes (integer)\n\nThe amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\n--growth-factor (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\n--growth-type (string)\n\nThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\n\nLinear : For this type, AppConfig processes the deployment by dividing the total number of targets by the value specified for Step percentage . For example, a linear deployment that uses a Step percentage of 10 deploys the configuration to 10 percent of the hosts. After those deployments are complete, the system deploys the configuration to the next 10 percent. This continues until 100% of the targets have successfully received the configuration.\n\nExponential : For this type, AppConfig processes the deployment exponentially using the following formula: G*(2^N) . In this formula, G is the growth factor specified by the user and N is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\n\n2*(2^0)\n\n2*(2^1)\n\n2*(2^2)\n\nExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\n\nPossible values:\n\nLINEAR\n\nEXPONENTIAL\n\n--replicate-to (string)\n\nSave the deployment strategy to a Systems Manager (SSM) document.\n\nPossible values:\n\nNONE\n\nSSM_DOCUMENT\n\n--tags (map)\n\nMetadata to assign to the deployment strategy. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe deployment strategy ID.\n\nName -> (string)\n\nThe name of the deployment strategy.\n\nDescription -> (string)\n\nThe description of the deployment strategy.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets that received a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nReplicateTo -> (string)\n\nSave the deployment strategy to a Systems Manager (SSM) document."
    },
    {
      "command_name": "create-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/create-environment.html",
      "command_description": "Description\n\nFor each application, you define one or more environments. An environment is a logical deployment group of AppConfig targets, such as applications in a Beta or Production environment. You can also define environments for application subcomponents such as the Web , Mobile and Back-end components for your application. You can configure Amazon CloudWatch alarms for each environment. The system monitors alarms during a configuration deployment. If an alarm is triggered, the system rolls back the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-environment\n--application-id <value>\n--name <value>\n[--description <value>]\n[--monitors <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--name <value>",
        "[--description <value>]",
        "[--monitors <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--name (string)\n\nA name for the environment.\n\n--description (string)\n\nA description of the environment.\n\n--monitors (list)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn .\n\nShorthand Syntax:\n\nAlarmArn=string,AlarmRoleArn=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AlarmArn\": \"string\",\n    \"AlarmRoleArn\": \"string\"\n  }\n  ...\n]\n\n\n--tags (map)\n\nMetadata to assign to the environment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe environment ID.\n\nName -> (string)\n\nThe name of the environment.\n\nDescription -> (string)\n\nThe description of the environment.\n\nState -> (string)\n\nThe state of the environment. An environment can be in one of the following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK , or ROLLED_BACK\n\nMonitors -> (list)\n\nAmazon CloudWatch alarms monitored during the deployment.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn ."
    },
    {
      "command_name": "create-hosted-configuration-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/create-hosted-configuration-version.html",
      "command_description": "Description\n\nCreate a new configuration in the AppConfig configuration store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-hosted-configuration-version\n--application-id <value>\n--configuration-profile-id <value>\n[--description <value>]\n--content <value>\n--content-type <value>\n[--latest-version-number <value>]\n<outfile>\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "[--description <value>]",
        "--content <value>",
        "--content-type <value>",
        "[--latest-version-number <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--description (string)\n\nA description of the configuration.\n\n--content (blob)\n\nThe content of the configuration or the configuration data.\n\n--content-type (string)\n\nA standard MIME type describing the format of the configuration content. For more information, see Content-Type .\n\n--latest-version-number (integer)\n\nAn optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version of the latest hosted configuration version.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nConfigurationProfileId -> (string)\n\nThe configuration profile ID.\n\nVersionNumber -> (integer)\n\nThe configuration version.\n\nDescription -> (string)\n\nA description of the configuration.\n\nContent -> (blob)\n\nThe content of the configuration or the configuration data.\n\nContentType -> (string)\n\nA standard MIME type describing the format of the configuration content. For more information, see Content-Type ."
    },
    {
      "command_name": "delete-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/delete-application.html",
      "command_description": "Description\n\nDelete an application. Deleting an application does not delete a configuration from a host.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-application\n--application-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe ID of the application to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-configuration-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/delete-configuration-profile.html",
      "command_description": "Description\n\nDelete a configuration profile. Deleting a configuration profile does not delete a configuration from a host.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-configuration-profile\n--application-id <value>\n--configuration-profile-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID that includes the configuration profile you want to delete.\n\n--configuration-profile-id (string)\n\nThe ID of the configuration profile you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-deployment-strategy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/delete-deployment-strategy.html",
      "command_description": "Description\n\nDelete a deployment strategy. Deleting a deployment strategy does not delete a configuration from a host.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-deployment-strategy\n--deployment-strategy-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-strategy-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-strategy-id (string)\n\nThe ID of the deployment strategy you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/delete-environment.html",
      "command_description": "Description\n\nDelete an environment. Deleting an environment does not delete a configuration from a host.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-environment\n--application-id <value>\n--environment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID that includes the environment you want to delete.\n\n--environment-id (string)\n\nThe ID of the environment you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-hosted-configuration-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/delete-hosted-configuration-version.html",
      "command_description": "Description\n\nDelete a version of a configuration from the AppConfig configuration store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-hosted-configuration-version\n--application-id <value>\n--configuration-profile-id <value>\n--version-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "--version-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--version-number (integer)\n\nThe versions number to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-application.html",
      "command_description": "Description\n\nRetrieve information about an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-application\n--application-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe ID of the application you want to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe application ID.\n\nName -> (string)\n\nThe application name.\n\nDescription -> (string)\n\nThe description of the application."
    },
    {
      "command_name": "get-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-configuration.html",
      "command_description": "Description\n\nReceive information about a configuration.\n\nWarning\n\nAWS AppConfig uses the value of the ClientConfigurationVersion parameter to identify the configuration version on your clients. If you don’t send ClientConfigurationVersion with each call to GetConfiguration , your clients receive the current configuration. You are charged each time your clients receive a configuration.\n\nTo avoid excess charges, we recommend that you include the ClientConfigurationVersion value with every call to GetConfiguration . This value must be saved on your client. Subsequent calls to GetConfiguration must pass this value by using the ClientConfigurationVersion parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-configuration\n--application <value>\n--environment <value>\n--configuration <value>\n--client-id <value>\n[--client-configuration-version <value>]\n<outfile>\n",
      "command_options": [
        "--application <value>",
        "--environment <value>",
        "--configuration <value>",
        "--client-id <value>",
        "[--client-configuration-version <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--application (string)\n\nThe application to get. Specify either the application name or the application ID.\n\n--environment (string)\n\nThe environment to get. Specify either the environment name or the environment ID.\n\n--configuration (string)\n\nThe configuration to get. Specify either the configuration name or the configuration ID.\n\n--client-id (string)\n\nA unique ID to identify the client for the configuration. This ID enables AppConfig to deploy the configuration in intervals, as defined in the deployment strategy.\n\n--client-configuration-version (string)\n\nThe configuration version returned in the most recent GetConfiguration response.\n\nWarning\n\nAWS AppConfig uses the value of the ClientConfigurationVersion parameter to identify the configuration version on your clients. If you don’t send ClientConfigurationVersion with each call to GetConfiguration , your clients receive the current configuration. You are charged each time your clients receive a configuration.\n\nTo avoid excess charges, we recommend that you include the ClientConfigurationVersion value with every call to GetConfiguration . This value must be saved on your client. Subsequent calls to GetConfiguration must pass this value by using the ClientConfigurationVersion parameter.\n\nFor more information about working with configurations, see Retrieving the Configuration in the AWS AppConfig User Guide .\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContent -> (blob)\n\nThe content of the configuration or the configuration data.\n\nConfigurationVersion -> (string)\n\nThe configuration version.\n\nContentType -> (string)\n\nA standard MIME type describing the format of the configuration content. For more information, see Content-Type .",
      "command_examples": "Examples\n\nTo list the AppConfig applications in your AWS account\n\nThis get-configuration example lists the applications in your account in the current Region.\n\naws appconfig get-configuration \\\n    --application abc1234 \\\n    --environment 9x8y7z6 \\\n    --configuration 9sd1ukd \\\n    --client-id any-id \\\n    outfile_name\n\n\nOutput:\n\n{\n    \"ConfigurationVersion\": \"2\",\n    \"ContentType\": \"application/octet-stream\"\n}\n\n\nFor more information, see Retrieving the Configuration in the AWS Systems Manager User Guide."
    },
    {
      "command_name": "get-configuration-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-configuration-profile.html",
      "command_description": "Description\n\nRetrieve information about a configuration profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-configuration-profile\n--application-id <value>\n--configuration-profile-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe ID of the application that includes the configuration profile you want to get.\n\n--configuration-profile-id (string)\n\nThe ID of the configuration profile you want to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe configuration profile ID.\n\nName -> (string)\n\nThe name of the configuration profile.\n\nDescription -> (string)\n\nThe configuration profile description.\n\nLocationUri -> (string)\n\nThe URI location of the configuration.\n\nRetrievalRoleArn -> (string)\n\nThe ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n\nValidators -> (list)\n\nA list of methods for validating the configuration.\n\n(structure)\n\nA validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nType -> (string)\n\nAppConfig supports validators of type JSON_SCHEMA and LAMBDA\n\nContent -> (string)\n\nEither the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function."
    },
    {
      "command_name": "get-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-deployment.html",
      "command_description": "Description\n\nRetrieve information about a configuration deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment\n--application-id <value>\n--environment-id <value>\n--deployment-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "--deployment-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe ID of the application that includes the deployment you want to get.\n\n--environment-id (string)\n\nThe ID of the environment that includes the deployment you want to get.\n\n--deployment-number (integer)\n\nThe sequence number of the deployment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe ID of the application that was deployed.\n\nEnvironmentId -> (string)\n\nThe ID of the environment that was deployed.\n\nDeploymentStrategyId -> (string)\n\nThe ID of the deployment strategy that was deployed.\n\nConfigurationProfileId -> (string)\n\nThe ID of the configuration profile that was deployed.\n\nDeploymentNumber -> (integer)\n\nThe sequence number of the deployment.\n\nConfigurationName -> (string)\n\nThe name of the configuration.\n\nConfigurationLocationUri -> (string)\n\nInformation about the source location of the configuration.\n\nConfigurationVersion -> (string)\n\nThe configuration version that was deployed.\n\nDescription -> (string)\n\nThe description of the deployment.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nState -> (string)\n\nThe state of the deployment.\n\nEventLog -> (list)\n\nA list containing all events related to a deployment. The most recent events are displayed first.\n\n(structure)\n\nAn object that describes a deployment event.\n\nEventType -> (string)\n\nThe type of deployment event. Deployment event types include the start, stop, or completion of a deployment; a percentage update; the start or stop of a bake period; the start or completion of a rollback.\n\nTriggeredBy -> (string)\n\nThe entity that triggered the deployment event. Events can be triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an internal error.\n\nDescription -> (string)\n\nA description of the deployment event. Descriptions include, but are not limited to, the user account or the CloudWatch alarm ARN that initiated a rollback, the percentage of hosts that received the deployment, or in the case of an internal error, a recommendation to attempt a new deployment.\n\nOccurredAt -> (timestamp)\n\nThe date and time the event occurred.\n\nPercentageComplete -> (float)\n\nThe percentage of targets for which the deployment is available.\n\nStartedAt -> (timestamp)\n\nThe time the deployment started.\n\nCompletedAt -> (timestamp)\n\nThe time the deployment completed."
    },
    {
      "command_name": "get-deployment-strategy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-deployment-strategy.html",
      "command_description": "Description\n\nRetrieve information about a deployment strategy. A deployment strategy defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes: the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment-strategy\n--deployment-strategy-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-strategy-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-strategy-id (string)\n\nThe ID of the deployment strategy to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe deployment strategy ID.\n\nName -> (string)\n\nThe name of the deployment strategy.\n\nDescription -> (string)\n\nThe description of the deployment strategy.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets that received a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nReplicateTo -> (string)\n\nSave the deployment strategy to a Systems Manager (SSM) document."
    },
    {
      "command_name": "get-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-environment.html",
      "command_description": "Description\n\nRetrieve information about an environment. An environment is a logical deployment group of AppConfig applications, such as applications in a Production environment or in an EU_Region environment. Each configuration deployment targets an environment. You can enable one or more Amazon CloudWatch alarms for an environment. If an alarm is triggered during a deployment, AppConfig roles back the configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-environment\n--application-id <value>\n--environment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe ID of the application that includes the environment you want to get.\n\n--environment-id (string)\n\nThe ID of the environment you wnat to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe environment ID.\n\nName -> (string)\n\nThe name of the environment.\n\nDescription -> (string)\n\nThe description of the environment.\n\nState -> (string)\n\nThe state of the environment. An environment can be in one of the following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK , or ROLLED_BACK\n\nMonitors -> (list)\n\nAmazon CloudWatch alarms monitored during the deployment.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn ."
    },
    {
      "command_name": "get-hosted-configuration-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/get-hosted-configuration-version.html",
      "command_description": "Description\n\nGet information about a specific configuration version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-hosted-configuration-version\n--application-id <value>\n--configuration-profile-id <value>\n--version-number <value>\n<outfile>\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "--version-number <value>",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--version-number (integer)\n\nThe version.\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nConfigurationProfileId -> (string)\n\nThe configuration profile ID.\n\nVersionNumber -> (integer)\n\nThe configuration version.\n\nDescription -> (string)\n\nA description of the configuration.\n\nContent -> (blob)\n\nThe content of the configuration or the configuration data.\n\nContentType -> (string)\n\nA standard MIME type describing the format of the configuration content. For more information, see Content-Type ."
    },
    {
      "command_name": "list-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-applications.html",
      "command_description": "Description\n\nList all applications in your AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-applications\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nId -> (string)\n\nThe application ID.\n\nName -> (string)\n\nThe application name.\n\nDescription -> (string)\n\nThe description of the application.\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results.",
      "command_examples": "Examples\n\nTo list the AppConfig applications in your AWS account\n\nThis list-applications example lists the applications in your account in the current Region.\n\naws appconfig list-applications\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"Description\": \"My first AppConfig application\",\n            \"Id\": \"abc1234\",\n            \"Name\": \"MyTestApp\"\n        }\n    ]\n}\n\n\nFor more information, see Create an AppConfig Application in the AWS Systems Manager User Guide."
    },
    {
      "command_name": "list-configuration-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-configuration-profiles.html",
      "command_description": "Description\n\nLists the configuration profiles for an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-configuration-profiles\n--application-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nA summary of a configuration profile.\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe ID of the configuration profile.\n\nName -> (string)\n\nThe name of the configuration profile.\n\nLocationUri -> (string)\n\nThe URI location of the configuration.\n\nValidatorTypes -> (list)\n\nThe types of validators in the configuration profile.\n\n(string)\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results.",
      "command_examples": "Examples\n\nTo list the configuration profiles for an AppConfig application\n\nThis list-configuration-profiles example lists the configuration profiles for an application.\n\naws appconfig list-configuration-profiles \\\n    --application-id abc1234\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"ValidatorTypes\": [\n                \"JSON_SCHEMA\"\n            ],\n            \"ApplicationId\": \"abc1234\",\n            \"Id\": \"9x8y7z6\",\n            \"LocationUri\": \"ssm-parameter:///blogapp/featureX_switch\",\n            \"Name\": \"TestConfigurationProfile\"\n        },\n        {\n            \"ValidatorTypes\": [\n                \"JSON_SCHEMA\"\n            ],\n            \"ApplicationId\": \"abc1234\",\n            \"Id\": \"hijklmn\",\n            \"LocationUri\": \"ssm-parameter:///testapp/featureX_switch\",\n            \"Name\": \"TestAppConfigurationProfile\"\n        }\n    ]\n}\n\n\nFor more information, see Create a Configuration and a Configuration Profile in the AWS Systems Manager User Guide."
    },
    {
      "command_name": "list-deployment-strategies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-deployment-strategies.html",
      "command_description": "Description\n\nList deployment strategies.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-deployment-strategies\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nId -> (string)\n\nThe deployment strategy ID.\n\nName -> (string)\n\nThe name of the deployment strategy.\n\nDescription -> (string)\n\nThe description of the deployment strategy.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets that received a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nReplicateTo -> (string)\n\nSave the deployment strategy to a Systems Manager (SSM) document.\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results."
    },
    {
      "command_name": "list-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-deployments.html",
      "command_description": "Description\n\nLists the deployments for an environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-deployments\n--application-id <value>\n--environment-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--environment-id (string)\n\nThe environment ID.\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nInformation about the deployment.\n\nDeploymentNumber -> (integer)\n\nThe sequence number of the deployment.\n\nConfigurationName -> (string)\n\nThe name of the configuration.\n\nConfigurationVersion -> (string)\n\nThe version of the configuration.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grows over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nState -> (string)\n\nThe state of the deployment.\n\nPercentageComplete -> (float)\n\nThe percentage of targets for which the deployment is available.\n\nStartedAt -> (timestamp)\n\nTime the deployment started.\n\nCompletedAt -> (timestamp)\n\nTime the deployment completed.\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results."
    },
    {
      "command_name": "list-environments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-environments.html",
      "command_description": "Description\n\nList the environments for an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-environments\n--application-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe environment ID.\n\nName -> (string)\n\nThe name of the environment.\n\nDescription -> (string)\n\nThe description of the environment.\n\nState -> (string)\n\nThe state of the environment. An environment can be in one of the following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK , or ROLLED_BACK\n\nMonitors -> (list)\n\nAmazon CloudWatch alarms monitored during the deployment.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn .\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results.",
      "command_examples": "Examples\n\nTo list environments for an AppConfig application\n\nThis list-environments example lists the environments that exist for an application.\n\naws appconfig list-environments \\\n    --application-id abc1234\n\n\nOutput:\n\n{\n    \"Items\": [\n        {\n            \"Description\": \"My AppConfig environment\",\n            \"Id\": \"2d4e6f8\",\n            \"State\": \"ReadyForDeployment\",\n            \"ApplicationId\": \"abc1234\",\n            \"Monitors\": [],\n            \"Name\": \"TestEnvironment\"\n        }\n    ]\n}\n\n\nFor more information, see Create an Environment in the AWS Systems Manager User Guide."
    },
    {
      "command_name": "list-hosted-configuration-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-hosted-configuration-versions.html",
      "command_description": "Description\n\nView a list of configurations stored in the AppConfig configuration store by version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-hosted-configuration-versions\n--application-id <value>\n--configuration-profile-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--max-results (integer)\n\nThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.\n\n--next-token (string)\n\nA token to start the list. Use this token to get the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nItems -> (list)\n\nThe elements from this collection.\n\n(structure)\n\nInformation about the configuration.\n\nApplicationId -> (string)\n\nThe application ID.\n\nConfigurationProfileId -> (string)\n\nThe configuration profile ID.\n\nVersionNumber -> (integer)\n\nThe configuration version.\n\nDescription -> (string)\n\nA description of the configuration.\n\nContentType -> (string)\n\nA standard MIME type describing the format of the configuration content. For more information, see Content-Type .\n\nNextToken -> (string)\n\nThe token for the next set of items to return. Use this token to get the next set of results."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieves the list of key-value tags assigned to the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe resource ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nMetadata to assign to AppConfig resources. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "start-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/start-deployment.html",
      "command_description": "Description\n\nStarts a deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-deployment\n--application-id <value>\n--environment-id <value>\n--deployment-strategy-id <value>\n--configuration-profile-id <value>\n--configuration-version <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "--deployment-strategy-id <value>",
        "--configuration-profile-id <value>",
        "--configuration-version <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--environment-id (string)\n\nThe environment ID.\n\n--deployment-strategy-id (string)\n\nThe deployment strategy ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--configuration-version (string)\n\nThe configuration version to deploy.\n\n--description (string)\n\nA description of the deployment.\n\n--tags (map)\n\nMetadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe ID of the application that was deployed.\n\nEnvironmentId -> (string)\n\nThe ID of the environment that was deployed.\n\nDeploymentStrategyId -> (string)\n\nThe ID of the deployment strategy that was deployed.\n\nConfigurationProfileId -> (string)\n\nThe ID of the configuration profile that was deployed.\n\nDeploymentNumber -> (integer)\n\nThe sequence number of the deployment.\n\nConfigurationName -> (string)\n\nThe name of the configuration.\n\nConfigurationLocationUri -> (string)\n\nInformation about the source location of the configuration.\n\nConfigurationVersion -> (string)\n\nThe configuration version that was deployed.\n\nDescription -> (string)\n\nThe description of the deployment.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nState -> (string)\n\nThe state of the deployment.\n\nEventLog -> (list)\n\nA list containing all events related to a deployment. The most recent events are displayed first.\n\n(structure)\n\nAn object that describes a deployment event.\n\nEventType -> (string)\n\nThe type of deployment event. Deployment event types include the start, stop, or completion of a deployment; a percentage update; the start or stop of a bake period; the start or completion of a rollback.\n\nTriggeredBy -> (string)\n\nThe entity that triggered the deployment event. Events can be triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an internal error.\n\nDescription -> (string)\n\nA description of the deployment event. Descriptions include, but are not limited to, the user account or the CloudWatch alarm ARN that initiated a rollback, the percentage of hosts that received the deployment, or in the case of an internal error, a recommendation to attempt a new deployment.\n\nOccurredAt -> (timestamp)\n\nThe date and time the event occurred.\n\nPercentageComplete -> (float)\n\nThe percentage of targets for which the deployment is available.\n\nStartedAt -> (timestamp)\n\nThe time the deployment started.\n\nCompletedAt -> (timestamp)\n\nThe time the deployment completed."
    },
    {
      "command_name": "stop-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/stop-deployment.html",
      "command_description": "Description\n\nStops a deployment. This API action works only on deployments that have a status of DEPLOYING . This action moves the deployment to a status of ROLLED_BACK .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-deployment\n--application-id <value>\n--environment-id <value>\n--deployment-number <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "--deployment-number <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--environment-id (string)\n\nThe environment ID.\n\n--deployment-number (integer)\n\nThe sequence number of the deployment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe ID of the application that was deployed.\n\nEnvironmentId -> (string)\n\nThe ID of the environment that was deployed.\n\nDeploymentStrategyId -> (string)\n\nThe ID of the deployment strategy that was deployed.\n\nConfigurationProfileId -> (string)\n\nThe ID of the configuration profile that was deployed.\n\nDeploymentNumber -> (integer)\n\nThe sequence number of the deployment.\n\nConfigurationName -> (string)\n\nThe name of the configuration.\n\nConfigurationLocationUri -> (string)\n\nInformation about the source location of the configuration.\n\nConfigurationVersion -> (string)\n\nThe configuration version that was deployed.\n\nDescription -> (string)\n\nThe description of the deployment.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nState -> (string)\n\nThe state of the deployment.\n\nEventLog -> (list)\n\nA list containing all events related to a deployment. The most recent events are displayed first.\n\n(structure)\n\nAn object that describes a deployment event.\n\nEventType -> (string)\n\nThe type of deployment event. Deployment event types include the start, stop, or completion of a deployment; a percentage update; the start or stop of a bake period; the start or completion of a rollback.\n\nTriggeredBy -> (string)\n\nThe entity that triggered the deployment event. Events can be triggered by a user, AWS AppConfig, an Amazon CloudWatch alarm, or an internal error.\n\nDescription -> (string)\n\nA description of the deployment event. Descriptions include, but are not limited to, the user account or the CloudWatch alarm ARN that initiated a rollback, the percentage of hosts that received the deployment, or in the case of an internal error, a recommendation to attempt a new deployment.\n\nOccurredAt -> (timestamp)\n\nThe date and time the event occurred.\n\nPercentageComplete -> (float)\n\nThe percentage of targets for which the deployment is available.\n\nStartedAt -> (timestamp)\n\nThe time the deployment started.\n\nCompletedAt -> (timestamp)\n\nThe time the deployment completed."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/tag-resource.html",
      "command_description": "Description\n\nMetadata to assign to an AppConfig resource. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define. You can specify a maximum of 50 tags for a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource for which to retrieve tags.\n\n--tags (map)\n\nThe key-value string map. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with aws: . The tag value can be up to 256 characters.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/untag-resource.html",
      "command_description": "Description\n\nDeletes a tag key and value from an AppConfig resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource for which to remove tags.\n\n--tag-keys (list)\n\nThe tag keys to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/update-application.html",
      "command_description": "Description\n\nUpdates an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-application\n--application-id <value>\n[--name <value>]\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--name (string)\n\nThe name of the application.\n\n--description (string)\n\nA description of the application.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe application ID.\n\nName -> (string)\n\nThe application name.\n\nDescription -> (string)\n\nThe description of the application."
    },
    {
      "command_name": "update-configuration-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/update-configuration-profile.html",
      "command_description": "Description\n\nUpdates a configuration profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-configuration-profile\n--application-id <value>\n--configuration-profile-id <value>\n[--name <value>]\n[--description <value>]\n[--retrieval-role-arn <value>]\n[--validators <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--retrieval-role-arn <value>]",
        "[--validators <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe ID of the configuration profile.\n\n--name (string)\n\nThe name of the configuration profile.\n\n--description (string)\n\nA description of the configuration profile.\n\n--retrieval-role-arn (string)\n\nThe ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n\n--validators (list)\n\nA list of methods for validating the configuration.\n\n(structure)\n\nA validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nType -> (string)\n\nAppConfig supports validators of type JSON_SCHEMA and LAMBDA\n\nContent -> (string)\n\nEither the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function.\n\nShorthand Syntax:\n\nType=string,Content=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"JSON_SCHEMA\"|\"LAMBDA\",\n    \"Content\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe configuration profile ID.\n\nName -> (string)\n\nThe name of the configuration profile.\n\nDescription -> (string)\n\nThe configuration profile description.\n\nLocationUri -> (string)\n\nThe URI location of the configuration.\n\nRetrievalRoleArn -> (string)\n\nThe ARN of an IAM role with permission to access the configuration at the specified LocationUri.\n\nValidators -> (list)\n\nA list of methods for validating the configuration.\n\n(structure)\n\nA validator provides a syntactic or semantic check to ensure the configuration you want to deploy functions as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nType -> (string)\n\nAppConfig supports validators of type JSON_SCHEMA and LAMBDA\n\nContent -> (string)\n\nEither the JSON Schema content or the Amazon Resource Name (ARN) of an AWS Lambda function."
    },
    {
      "command_name": "update-deployment-strategy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/update-deployment-strategy.html",
      "command_description": "Description\n\nUpdates a deployment strategy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-deployment-strategy\n--deployment-strategy-id <value>\n[--description <value>]\n[--deployment-duration-in-minutes <value>]\n[--final-bake-time-in-minutes <value>]\n[--growth-factor <value>]\n[--growth-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-strategy-id <value>",
        "[--description <value>]",
        "[--deployment-duration-in-minutes <value>]",
        "[--final-bake-time-in-minutes <value>]",
        "[--growth-factor <value>]",
        "[--growth-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-strategy-id (string)\n\nThe deployment strategy ID.\n\n--description (string)\n\nA description of the deployment strategy.\n\n--deployment-duration-in-minutes (integer)\n\nTotal amount of time for a deployment to last.\n\n--final-bake-time-in-minutes (integer)\n\nThe amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\n--growth-factor (float)\n\nThe percentage of targets to receive a deployed configuration during each interval.\n\n--growth-type (string)\n\nThe algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:\n\nLinear : For this type, AppConfig processes the deployment by increments of the growth factor evenly distributed over the deployment time. For example, a linear deployment that uses a growth factor of 20 initially makes the configuration available to 20 percent of the targets. After 1/5th of the deployment time has passed, the system updates the percentage to 40 percent. This continues until 100% of the targets are set to receive the deployed configuration.\n\nExponential : For this type, AppConfig processes the deployment exponentially using the following formula: G*(2^N) . In this formula, G is the growth factor specified by the user and N is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:\n\n2*(2^0)\n\n2*(2^1)\n\n2*(2^2)\n\nExpressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.\n\nPossible values:\n\nLINEAR\n\nEXPONENTIAL\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nId -> (string)\n\nThe deployment strategy ID.\n\nName -> (string)\n\nThe name of the deployment strategy.\n\nDescription -> (string)\n\nThe description of the deployment strategy.\n\nDeploymentDurationInMinutes -> (integer)\n\nTotal amount of time the deployment lasted.\n\nGrowthType -> (string)\n\nThe algorithm used to define how percentage grew over time.\n\nGrowthFactor -> (float)\n\nThe percentage of targets that received a deployed configuration during each interval.\n\nFinalBakeTimeInMinutes -> (integer)\n\nThe amount of time AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.\n\nReplicateTo -> (string)\n\nSave the deployment strategy to a Systems Manager (SSM) document."
    },
    {
      "command_name": "update-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/update-environment.html",
      "command_description": "Description\n\nUpdates an environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-environment\n--application-id <value>\n--environment-id <value>\n[--name <value>]\n[--description <value>]\n[--monitors <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--environment-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--monitors <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--environment-id (string)\n\nThe environment ID.\n\n--name (string)\n\nThe name of the environment.\n\n--description (string)\n\nA description of the environment.\n\n--monitors (list)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn .\n\nShorthand Syntax:\n\nAlarmArn=string,AlarmRoleArn=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"AlarmArn\": \"string\",\n    \"AlarmRoleArn\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApplicationId -> (string)\n\nThe application ID.\n\nId -> (string)\n\nThe environment ID.\n\nName -> (string)\n\nThe name of the environment.\n\nDescription -> (string)\n\nThe description of the environment.\n\nState -> (string)\n\nThe state of the environment. An environment can be in one of the following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK , or ROLLED_BACK\n\nMonitors -> (list)\n\nAmazon CloudWatch alarms monitored during the deployment.\n\n(structure)\n\nAmazon CloudWatch alarms to monitor during the deployment process.\n\nAlarmArn -> (string)\n\nARN of the Amazon CloudWatch alarm.\n\nAlarmRoleArn -> (string)\n\nARN of an IAM role for AppConfig to monitor AlarmArn ."
    },
    {
      "command_name": "validate-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appconfig/validate-configuration.html",
      "command_description": "Description\n\nUses the validators in a configuration profile to validate a configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  validate-configuration\n--application-id <value>\n--configuration-profile-id <value>\n--configuration-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-id <value>",
        "--configuration-profile-id <value>",
        "--configuration-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-id (string)\n\nThe application ID.\n\n--configuration-profile-id (string)\n\nThe configuration profile ID.\n\n--configuration-version (string)\n\nThe version of the configuration to validate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nUse AWS AppConfig, a capability of AWS Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, AWS Lambda, containers, mobile applications, or IoT devices.\n\nTo prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or a Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.\n\nDuring a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version.\n\nAppConfig supports multiple use cases. Here are some examples.\n\nApplication tuning : Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.\n\nFeature toggle : Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement.\n\nAllow list : Use AppConfig to allow premium subscribers to access paid content.\n\nOperational issues : Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.\n\nThis reference is intended to be used with the AWS AppConfig User Guide ."
}