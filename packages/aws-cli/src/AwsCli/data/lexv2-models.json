{
  "service_name": "lexv2-models",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/index.html",
  "service_commands": [
    {
      "command_name": "build-bot-locale",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/build-bot-locale.html",
      "command_description": "Description\n\nBuilds a bot, its intents, and its slot types into a specific locale. A bot can be built into multiple locales. At runtime the locale is used to choose a specific build of the bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  build-bot-locale\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to build. The identifier is returned in the response from the operation.\n\n--bot-version (string)\n\nThe version of the bot to build. This can only be the draft version of the bot.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the specified bot.\n\nbotVersion -> (string)\n\nThe version of the bot that was built. This is only the draft version of the bot.\n\nlocaleId -> (string)\n\nThe language and locale specified of where the bot can be used.\n\nbotLocaleStatus -> (string)\n\nThe bot’s build status. When the status is ReadyExpressTesting you can test the bot using the utterances defined for the intents and slot types. When the status is Built , the bot is ready for use and can be tested using any utterance.\n\nlastBuildSubmittedDateTime -> (timestamp)\n\nA timestamp indicating the date and time that the bot was last built for this locale."
    },
    {
      "command_name": "create-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-bot.html",
      "command_description": "Description\n\nCreates an Amazon Lex conversational bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bot\n--bot-name <value>\n[--description <value>]\n--role-arn <value>\n--data-privacy <value>\n--idle-session-ttl-in-seconds <value>\n[--bot-tags <value>]\n[--test-bot-alias-tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-name <value>",
        "[--description <value>]",
        "--role-arn <value>",
        "--data-privacy <value>",
        "--idle-session-ttl-in-seconds <value>",
        "[--bot-tags <value>]",
        "[--test-bot-alias-tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-name (string)\n\nThe name of the bot. The bot name must be unique in the account that creates the bot.\n\n--description (string)\n\nA description of the bot. It appears in lists to help you identify a particular bot.\n\n--role-arn (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n\n--data-privacy (structure)\n\nProvides information on additional privacy protections Amazon Lex should use with the bot’s data.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nShorthand Syntax:\n\nchildDirected=boolean\n\n\nJSON Syntax:\n\n{\n  \"childDirected\": true|false\n}\n\n\n--idle-session-ttl-in-seconds (integer)\n\nThe time, in seconds, that Amazon Lex should keep information about a user’s conversation with the bot.\n\nA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\n\n--bot-tags (map)\n\nA list of tags to add to the bot. You can only add tags when you create a bot. You can’t use the UpdateBot operation to update tags. To update tags, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--test-bot-alias-tags (map)\n\nA list of tags to add to the test alias for a bot. You can only add tags when you create a bot. You can’t use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nA unique identifier for a particular bot. You use this to identify the bot when you call other Amazon Lex API operations.\n\nbotName -> (string)\n\nThe name specified for the bot.\n\ndescription -> (string)\n\nThe description specified for the bot.\n\nroleArn -> (string)\n\nThe IAM role specified for the bot.\n\ndataPrivacy -> (structure)\n\nThe data privacy settings specified for the bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe session idle time specified for the bot.\n\nbotStatus -> (string)\n\nShows the current status of the bot. The bot is first in the Creating status. Once the bot is read for use, it changes to the Available status. After the bot is created, you can use the Draft version of the bot.\n\ncreationDateTime -> (timestamp)\n\nA timestamp indicating the date and time that the bot was created.\n\nbotTags -> (map)\n\nA list of tags associated with the bot.\n\nkey -> (string)\n\nvalue -> (string)\n\ntestBotAliasTags -> (map)\n\nA list of tags associated with the test alias for the bot.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-bot-alias.html",
      "command_description": "Description\n\nCreates an alias for the specified version of a bot. Use an alias to enable you to change the version of a bot without updating applications that use the bot.\n\nFor example, you can create an alias called “PROD” that your applications use to call the Amazon Lex bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bot-alias\n--bot-alias-name <value>\n[--description <value>]\n[--bot-version <value>]\n[--bot-alias-locale-settings <value>]\n[--conversation-log-settings <value>]\n[--sentiment-analysis-settings <value>]\n--bot-id <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-alias-name <value>",
        "[--description <value>]",
        "[--bot-version <value>]",
        "[--bot-alias-locale-settings <value>]",
        "[--conversation-log-settings <value>]",
        "[--sentiment-analysis-settings <value>]",
        "--bot-id <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-alias-name (string)\n\nThe alias to create. The name must be unique for the bot.\n\n--description (string)\n\nA description of the alias. Use this description to help identify the alias.\n\n--bot-version (string)\n\nThe version of the bot that this alias points to. You can use the operation to change the bot version associated with the alias.\n\n--bot-alias-locale-settings (map)\n\nMaps configuration information to a specific locale. You can use this parameter to specify a specific Lambda function to run different functions in different locales.\n\nkey -> (string)\n\nvalue -> (structure)\n\nSpecifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot’s locale.\n\nenabled -> (boolean)\n\nDetermines whether the locale is enabled for the bot. If the value is false , the locale isn’t available for use.\n\ncodeHookSpecification -> (structure)\n\nSpecifies the Lambda function that should be used in the locale.\n\nlambdaCodeHook -> (structure)\n\nSpecifies a Lambda function that verifies requests to a bot or fulfills the user’s request to a bot.\n\nlambdaARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\ncodeHookInterfaceVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\nShorthand Syntax:\n\nKeyName1=enabled=boolean,codeHookSpecification={lambdaCodeHook={lambdaARN=string,codeHookInterfaceVersion=string}},KeyName2=enabled=boolean,codeHookSpecification={lambdaCodeHook={lambdaARN=string,codeHookInterfaceVersion=string}}\n\n\nJSON Syntax:\n\n{\"string\": {\n      \"enabled\": true|false,\n      \"codeHookSpecification\": {\n        \"lambdaCodeHook\": {\n          \"lambdaARN\": \"string\",\n          \"codeHookInterfaceVersion\": \"string\"\n        }\n      }\n    }\n  ...}\n\n\n--conversation-log-settings (structure)\n\nSpecifies whether Amazon Lex logs text and audio for a conversation with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch Logs. Audio logs store audio input in Amazon S3.\n\ntextLogSettings -> (list)\n\nThe Amazon CloudWatch Logs settings for logging text and metadata.\n\n(structure)\n\nDefines settings to enable text conversation logs.\n\nenabled -> (boolean)\n\nDetermines whether conversation logs should be stored for an alias.\n\ndestination -> (structure)\n\nDefines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\ncloudWatch -> (structure)\n\nDefines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n\ncloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n\nlogPrefix -> (string)\n\nThe prefix of the log stream name within the log group that you specified\n\naudioLogSettings -> (list)\n\nThe Amazon S3 settings for logging audio to an S3 bucket.\n\n(structure)\n\nSettings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\nenabled -> (boolean)\n\nDetermines whether audio logging in enabled for the bot.\n\ndestination -> (structure)\n\nThe location of audio log files collected when conversation logging is enabled for a bot.\n\ns3Bucket -> (structure)\n\nThe Amazon S3 bucket where the audio log files are stored. The IAM role specified in the roleArn parameter of the CreateBot operation must have permission to write to this bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\nlogPrefix -> (string)\n\nThe S3 prefix to assign to audio log files.\n\nJSON Syntax:\n\n{\n  \"textLogSettings\": [\n    {\n      \"enabled\": true|false,\n      \"destination\": {\n        \"cloudWatch\": {\n          \"cloudWatchLogGroupArn\": \"string\",\n          \"logPrefix\": \"string\"\n        }\n      }\n    }\n    ...\n  ],\n  \"audioLogSettings\": [\n    {\n      \"enabled\": true|false,\n      \"destination\": {\n        \"s3Bucket\": {\n          \"kmsKeyArn\": \"string\",\n          \"s3BucketArn\": \"string\",\n          \"logPrefix\": \"string\"\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--sentiment-analysis-settings (structure)\n\nDetermines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\ndetectSentiment -> (boolean)\n\nSets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n\nShorthand Syntax:\n\ndetectSentiment=boolean\n\n\nJSON Syntax:\n\n{\n  \"detectSentiment\": true|false\n}\n\n\n--bot-id (string)\n\nThe unique identifier of the bot that the alias applies to.\n\n--tags (map)\n\nA list of tags to add to the bot alias. You can only add tags when you create an alias, you can’t use the UpdateBotAlias operation to update the tags on a bot alias. To update tags, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotAliasId -> (string)\n\nThe unique identifier of the bot alias.\n\nbotAliasName -> (string)\n\nThe name specified for the bot alias.\n\ndescription -> (string)\n\nThe description specified for the bot alias.\n\nbotVersion -> (string)\n\nThe version of the bot associated with this alias.\n\nbotAliasLocaleSettings -> (map)\n\nConfiguration information for a specific locale.\n\nkey -> (string)\n\nvalue -> (structure)\n\nSpecifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot’s locale.\n\nenabled -> (boolean)\n\nDetermines whether the locale is enabled for the bot. If the value is false , the locale isn’t available for use.\n\ncodeHookSpecification -> (structure)\n\nSpecifies the Lambda function that should be used in the locale.\n\nlambdaCodeHook -> (structure)\n\nSpecifies a Lambda function that verifies requests to a bot or fulfills the user’s request to a bot.\n\nlambdaARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\ncodeHookInterfaceVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\nconversationLogSettings -> (structure)\n\nThe conversation log settings specified for the alias.\n\ntextLogSettings -> (list)\n\nThe Amazon CloudWatch Logs settings for logging text and metadata.\n\n(structure)\n\nDefines settings to enable text conversation logs.\n\nenabled -> (boolean)\n\nDetermines whether conversation logs should be stored for an alias.\n\ndestination -> (structure)\n\nDefines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\ncloudWatch -> (structure)\n\nDefines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n\ncloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n\nlogPrefix -> (string)\n\nThe prefix of the log stream name within the log group that you specified\n\naudioLogSettings -> (list)\n\nThe Amazon S3 settings for logging audio to an S3 bucket.\n\n(structure)\n\nSettings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\nenabled -> (boolean)\n\nDetermines whether audio logging in enabled for the bot.\n\ndestination -> (structure)\n\nThe location of audio log files collected when conversation logging is enabled for a bot.\n\ns3Bucket -> (structure)\n\nThe Amazon S3 bucket where the audio log files are stored. The IAM role specified in the roleArn parameter of the CreateBot operation must have permission to write to this bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\nlogPrefix -> (string)\n\nThe S3 prefix to assign to audio log files.\n\nsentimentAnalysisSettings -> (structure)\n\nDetermines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\ndetectSentiment -> (boolean)\n\nSets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n\nbotAliasStatus -> (string)\n\nThe current status of the alias. The alias is first put into the Creating state. When the alias is ready to be used, it is put into the Available state. You can use the DescribeBotAlias operation to get the current state of an alias.\n\nbotId -> (string)\n\nThe unique identifier of the bot that this alias applies to.\n\ncreationDateTime -> (timestamp)\n\nA Unix timestamp indicating the date and time that the bot alias was created.\n\ntags -> (map)\n\nA list of tags associated with the bot alias.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "create-bot-locale",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-bot-locale.html",
      "command_description": "Description\n\nCreates a locale in the bot. The locale contains the intents and slot types that the bot uses in conversations with users in the specified language and locale. You must add a locale to a bot before you can add intents and slot types to the bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bot-locale\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--description <value>]\n--nlu-intent-confidence-threshold <value>\n[--voice-settings <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--description <value>]",
        "--nlu-intent-confidence-threshold <value>",
        "[--voice-settings <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to create the locale for.\n\n--bot-version (string)\n\nThe version of the bot to create the locale for. This can only be the draft version of the bot.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages .\n\n--description (string)\n\nA description of the bot locale. Use this to help identify the bot locale in lists.\n\n--nlu-intent-confidence-threshold (double)\n\nDetermines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n\nFor example, suppose a bot is configured with the confidence threshold of 0.80 and the AMAZON.FallbackIntent . Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the RecognizeText operation would be:\n\nAMAZON.FallbackIntent\n\nIntentA\n\nIntentB\n\nIntentC\n\n--voice-settings (structure)\n\nThe Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nShorthand Syntax:\n\nvoiceId=string\n\n\nJSON Syntax:\n\n{\n  \"voiceId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe specified bot identifier.\n\nbotVersion -> (string)\n\nThe specified bot version.\n\nlocaleName -> (string)\n\nThe specified locale name.\n\nlocaleId -> (string)\n\nThe specified locale identifier.\n\ndescription -> (string)\n\nThe specified description of the bot locale.\n\nnluIntentConfidenceThreshold -> (double)\n\nThe specified confidence threshold for inserting the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents.\n\nvoiceSettings -> (structure)\n\nThe Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nbotLocaleStatus -> (string)\n\nThe status of the bot.\n\nWhen the status is Creating the bot locale is being configured. When the status is Building Amazon Lex is building the bot for testing and use.\n\nIf the status of the bot is ReadyExpressTesting , you can test the bot using the exact utterances specified in the bots’ intents. When the bot is ready for full testing or to run, the status is Built .\n\nIf there was a problem with building the bot, the status is Failed . If the bot was saved but not built, the status is NotBuilt .\n\ncreationDateTime -> (timestamp)\n\nA timestamp specifying the date and time that the bot locale was created."
    },
    {
      "command_name": "create-bot-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-bot-version.html",
      "command_description": "Description\n\nCreates a new version of the bot based on the DRAFT version. If the DRAFT version of this resource hasn’t changed since you created the last version, Amazon Lex doesn’t create a new version, it returns the last created version.\n\nWhen you create the first version of a bot, Amazon Lex sets the version to 1. Subsequent versions increment by 1.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-bot-version\n--bot-id <value>\n[--description <value>]\n--bot-version-locale-specification <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--description <value>]",
        "--bot-version-locale-specification <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to create the version for.\n\n--description (string)\n\nA description of the version. Use the description to help identify the version in lists.\n\n--bot-version-locale-specification (map)\n\nSpecifies the locales that Amazon Lex adds to this version. You can choose the Draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe version of a bot used for a bot locale.\n\nsourceBotVersion -> (string)\n\nThe version of a bot used for a bot locale.\n\nShorthand Syntax:\n\nKeyName1=sourceBotVersion=string,KeyName2=sourceBotVersion=string\n\n\nJSON Syntax:\n\n{\"string\": {\n      \"sourceBotVersion\": \"string\"\n    }\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe bot identifier specified in the request.\n\ndescription -> (string)\n\nThe description of the version specified in the request.\n\nbotVersion -> (string)\n\nThe version number assigned to the version.\n\nbotVersionLocaleSpecification -> (map)\n\nThe source versions used for each locale in the new version.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe version of a bot used for a bot locale.\n\nsourceBotVersion -> (string)\n\nThe version of a bot used for a bot locale.\n\nbotStatus -> (string)\n\nWhen you send a request to create or update a bot, Amazon Lex sets the status response element to Creating . After Amazon Lex builds the bot, it sets status to Available . If Amazon Lex can’t build the bot, it sets status to Failed .\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the version was created."
    },
    {
      "command_name": "create-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-export.html",
      "command_description": "Description\n\nCreates a zip archive containing the contents of a bot or a bot locale. The archive contains a directory structure that contains JSON files that define the bot.\n\nYou can create an archive that contains the complete definition of a bot, or you can specify that the archive contain only the definition of a single bot locale.\n\nFor more information about exporting bots, and about the structure of the export archive, see Importing and exporting bots\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-export\n--resource-specification <value>\n--file-format <value>\n[--file-password <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-specification <value>",
        "--file-format <value>",
        "[--file-password <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-specification (structure)\n\nSpecifies the type of resource to export, either a bot or a bot locale. You can only specify one type of resource to export.\n\nbotExportSpecification -> (structure)\n\nParameters for exporting a bot.\n\nbotId -> (string)\n\nThe identifier of the bot assigned by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported. This will be either DRAFT or the version number.\n\nbotLocaleExportSpecification -> (structure)\n\nParameters for exporting a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to create the locale for.\n\nbotVersion -> (string)\n\nThe version of the bot to export.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale to export. The string must match one of the locales in the bot.\n\nShorthand Syntax:\n\nbotExportSpecification={botId=string,botVersion=string},botLocaleExportSpecification={botId=string,botVersion=string,localeId=string}\n\n\nJSON Syntax:\n\n{\n  \"botExportSpecification\": {\n    \"botId\": \"string\",\n    \"botVersion\": \"string\"\n  },\n  \"botLocaleExportSpecification\": {\n    \"botId\": \"string\",\n    \"botVersion\": \"string\",\n    \"localeId\": \"string\"\n  }\n}\n\n\n--file-format (string)\n\nThe file format of the bot or bot locale definition files.\n\nPossible values:\n\nLexJson\n\n--file-password (string)\n\nAn password to use to encrypt the exported archive. Using a password is optional, but you should encrypt the archive to protect the data in transit between Amazon Lex and your local computer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nAn identifier for a specific request to create an export.\n\nresourceSpecification -> (structure)\n\nA description of the type of resource that was exported, either a bot or a bot locale.\n\nbotExportSpecification -> (structure)\n\nParameters for exporting a bot.\n\nbotId -> (string)\n\nThe identifier of the bot assigned by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported. This will be either DRAFT or the version number.\n\nbotLocaleExportSpecification -> (structure)\n\nParameters for exporting a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to create the locale for.\n\nbotVersion -> (string)\n\nThe version of the bot to export.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale to export. The string must match one of the locales in the bot.\n\nfileFormat -> (string)\n\nThe file format used for the bot or bot locale definition files.\n\nexportStatus -> (string)\n\nThe status of the export. When the status is Completed , you can use the operation to get the pre-signed S3 URL link to your exported bot or bot locale.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the request to export a bot was created."
    },
    {
      "command_name": "create-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-intent.html",
      "command_description": "Description\n\nCreates an intent.\n\nTo define the interaction between the user and your bot, you define one or more intents. For example, for a pizza ordering bot you would create an OrderPizza intent.\n\nWhen you create an intent, you must provide a name. You can optionally provide the following:\n\nSample utterances. For example, “I want to order a pizza” and “Can I order a pizza.” You can’t provide utterances for built-in intents.\n\nInformation to be gathered. You specify slots for the information that you bot requests from the user. You can specify standard slot types, such as date and time, or custom slot types for your application.\n\nHow the intent is fulfilled. You can provide a Lambda function or configure the intent to return the intent information to your client application. If you use a Lambda function, Amazon Lex invokes the function when all of the intent information is available.\n\nA confirmation prompt to send to the user to confirm an intent. For example, “Shall I order your pizza?”\n\nA conclusion statement to send to the user after the intent is fulfilled. For example, “I ordered your pizza.”\n\nA follow-up prompt that asks the user for additional activity. For example, “Do you want a drink with your pizza?”\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-intent\n--intent-name <value>\n[--description <value>]\n[--parent-intent-signature <value>]\n[--sample-utterances <value>]\n[--dialog-code-hook <value>]\n[--fulfillment-code-hook <value>]\n[--intent-confirmation-setting <value>]\n[--intent-closing-setting <value>]\n[--input-contexts <value>]\n[--output-contexts <value>]\n[--kendra-configuration <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--intent-name <value>",
        "[--description <value>]",
        "[--parent-intent-signature <value>]",
        "[--sample-utterances <value>]",
        "[--dialog-code-hook <value>]",
        "[--fulfillment-code-hook <value>]",
        "[--intent-confirmation-setting <value>]",
        "[--intent-closing-setting <value>]",
        "[--input-contexts <value>]",
        "[--output-contexts <value>]",
        "[--kendra-configuration <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--intent-name (string)\n\nThe name of the intent. Intent names must be unique in the locale that contains the intent and cannot match the name of any built-in intent.\n\n--description (string)\n\nA description of the intent. Use the description to help identify the intent in lists.\n\n--parent-intent-signature (string)\n\nA unique identifier for the built-in intent to base this intent on.\n\n--sample-utterances (list)\n\nAn array of strings that a user might say to signal the intent. For example, “I want a pizza”, or “I want a {PizzaSize} pizza”.\n\nIn an utterance, slot names are enclosed in curly braces (“{“, “}”) to indicate where they should be displayed in the utterance shown to the user..\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nShorthand Syntax:\n\nutterance=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"utterance\": \"string\"\n  }\n  ...\n]\n\n\n--dialog-code-hook (structure)\n\nSpecifies that Amazon Lex invokes the alias Lambda function for each user input. You can invoke this Lambda function to personalize user interaction.\n\nFor example, suppose that your bot determines that the user’s name is John. You Lambda function might retrieve John’s information from a backend database and prepopulate some of the values. For example, if you find that John is gluten intolerant, you might set the corresponding intent slot, glutenIntolerant to true . You might find John’s phone number and set the corresponding session attribute.\n\nenabled -> (boolean)\n\nEnables the dialog code hook so that it processes user requests.\n\nShorthand Syntax:\n\nenabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false\n}\n\n\n--fulfillment-code-hook (structure)\n\nSpecifies that Amazon Lex invokes the alias Lambda function when the intent is ready for fulfillment. You can invoke this function to complete the bot’s transaction with the user.\n\nFor example, in a pizza ordering bot, the Lambda function can look up the closest pizza restaurant to the customer’s location and then place an order on the customer’s behalf.\n\nenabled -> (boolean)\n\nIndicates whether a Lambda function should be invoked to fulfill a specific intent.\n\npostFulfillmentStatusSpecification -> (structure)\n\nProvides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.\n\nsuccessResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfailureResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ntimeoutResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfulfillmentUpdatesSpecification -> (structure)\n\nProvides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.\n\nactive -> (boolean)\n\nDetermines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\nIf the active field is set to true, the startResponse , updateResponse , and timeoutInSeconds fields are required.\n\nstartResponse -> (structure)\n\nProvides configuration information for the message sent to users when the fulfillment Lambda functions starts running.\n\ndelayInSeconds -> (integer)\n\nThe delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn’t played.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt the start message while it is playing.\n\nupdateResponse -> (structure)\n\nProvides configuration information for messages sent periodically to the user while the fulfillment Lambda function is running.\n\nfrequencyInSeconds -> (integer)\n\nThe frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt an update message while it is playing.\n\ntimeoutInSeconds -> (integer)\n\nThe length of time that the fulfillment Lambda function should run before it times out.\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"postFulfillmentStatusSpecification\": {\n    \"successResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"failureResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"timeoutResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    }\n  },\n  \"fulfillmentUpdatesSpecification\": {\n    \"active\": true|false,\n    \"startResponse\": {\n      \"delayInSeconds\": integer,\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"updateResponse\": {\n      \"frequencyInSeconds\": integer,\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"timeoutInSeconds\": integer\n  }\n}\n\n\n--intent-confirmation-setting (structure)\n\nProvides prompts that Amazon Lex sends to the user to confirm the completion of an intent. If the user answers “no,” the settings contain a statement that is sent to the user to end the intent.\n\npromptSpecification -> (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\ndeclinationResponse -> (structure)\n\nWhen the user answers “no” to the question defined in promptSpecification , Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether the intent’s confirmation is sent to the user. When this field is false, confirmation and declination responses aren’t sent. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"promptSpecification\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"maxRetries\": integer,\n    \"allowInterrupt\": true|false\n  },\n  \"declinationResponse\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"allowInterrupt\": true|false\n  },\n  \"active\": true|false\n}\n\n\n--intent-closing-setting (structure)\n\nSets the response that Amazon Lex sends to the user when the intent is closed.\n\nclosingResponse -> (structure)\n\nThe response that Amazon Lex sends to the user when the intent is complete.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether an intent’s closing response is used. When this field is false, the closing response isn’t sent to the user. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"closingResponse\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"allowInterrupt\": true|false\n  },\n  \"active\": true|false\n}\n\n\n--input-contexts (list)\n\nA list of contexts that must be active for this intent to be considered by Amazon Lex.\n\nWhen an intent has an input context list, Amazon Lex only considers using the intent in an interaction with the user when the specified contexts are included in the active context list for the session. If the contexts are not active, then Amazon Lex will not use the intent.\n\nA context can be automatically activated using the outputContexts property or it can be set at runtime.\n\nFor example, if there are two intents with different input contexts that respond to the same utterances, only the intent with the active context will respond.\n\nAn intent may have up to 5 input contexts. If an intent has multiple input contexts, all of the contexts must be active to consider the intent.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\nShorthand Syntax:\n\nname=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\"\n  }\n  ...\n]\n\n\n--output-contexts (list)\n\nA lists of contexts that the intent activates when it is fulfilled.\n\nYou can use an output context to indicate the intents that Amazon Lex should consider for the next turn of the conversation with a customer.\n\nWhen you use the outputContextsList property, all of the contexts specified in the list are activated when the intent is fulfilled. You can set up to 10 output contexts. You can also set the number of conversation turns that the context should be active, or the length of time that the context should be active.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nShorthand Syntax:\n\nname=string,timeToLiveInSeconds=integer,turnsToLive=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"timeToLiveInSeconds\": integer,\n    \"turnsToLive\": integer\n  }\n  ...\n]\n\n\n--kendra-configuration (structure)\n\nConfiguration information required to use the AMAZON.KendraSearchIntent intent to connect to an Amazon Kendra index. The AMAZON.KendraSearchIntent intent is called when Amazon Lex can’t determine another intent to invoke.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n\nqueryFilterStringEnabled -> (boolean)\n\nDetermines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nShorthand Syntax:\n\nkendraIndex=string,queryFilterStringEnabled=boolean,queryFilterString=string\n\n\nJSON Syntax:\n\n{\n  \"kendraIndex\": \"string\",\n  \"queryFilterStringEnabled\": true|false,\n  \"queryFilterString\": \"string\"\n}\n\n\n--bot-id (string)\n\nThe identifier of the bot associated with this intent.\n\n--bot-version (string)\n\nThe identifier of the version of the bot associated with this intent.\n\n--locale-id (string)\n\nThe identifier of the language and locale where this intent is used. All of the bots, slot types, and slots used by the intent must have the same locale. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintentId -> (string)\n\nA unique identifier for the intent.\n\nintentName -> (string)\n\nThe name specified for the intent.\n\ndescription -> (string)\n\nThe description specified for the intent.\n\nparentIntentSignature -> (string)\n\nThe signature of the parent intent specified for the intent.\n\nsampleUtterances -> (list)\n\nThe sample utterances specified for the intent.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\ndialogCodeHook -> (structure)\n\nThe dialog Lambda function specified for the intent.\n\nenabled -> (boolean)\n\nEnables the dialog code hook so that it processes user requests.\n\nfulfillmentCodeHook -> (structure)\n\nThe fulfillment Lambda function specified for the intent.\n\nenabled -> (boolean)\n\nIndicates whether a Lambda function should be invoked to fulfill a specific intent.\n\npostFulfillmentStatusSpecification -> (structure)\n\nProvides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.\n\nsuccessResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfailureResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ntimeoutResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfulfillmentUpdatesSpecification -> (structure)\n\nProvides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.\n\nactive -> (boolean)\n\nDetermines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\nIf the active field is set to true, the startResponse , updateResponse , and timeoutInSeconds fields are required.\n\nstartResponse -> (structure)\n\nProvides configuration information for the message sent to users when the fulfillment Lambda functions starts running.\n\ndelayInSeconds -> (integer)\n\nThe delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn’t played.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt the start message while it is playing.\n\nupdateResponse -> (structure)\n\nProvides configuration information for messages sent periodically to the user while the fulfillment Lambda function is running.\n\nfrequencyInSeconds -> (integer)\n\nThe frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt an update message while it is playing.\n\ntimeoutInSeconds -> (integer)\n\nThe length of time that the fulfillment Lambda function should run before it times out.\n\nintentConfirmationSetting -> (structure)\n\nThe confirmation setting specified for the intent.\n\npromptSpecification -> (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\ndeclinationResponse -> (structure)\n\nWhen the user answers “no” to the question defined in promptSpecification , Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether the intent’s confirmation is sent to the user. When this field is false, confirmation and declination responses aren’t sent. If the active field isn’t specified, the default is true.\n\nintentClosingSetting -> (structure)\n\nThe closing setting specified for the intent.\n\nclosingResponse -> (structure)\n\nThe response that Amazon Lex sends to the user when the intent is complete.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether an intent’s closing response is used. When this field is false, the closing response isn’t sent to the user. If the active field isn’t specified, the default is true.\n\ninputContexts -> (list)\n\nThe list of input contexts specified for the intent.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nThe list of output contexts specified for the intent.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nkendraConfiguration -> (structure)\n\nConfiguration for searching a Amazon Kendra index specified for the intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n\nqueryFilterStringEnabled -> (boolean)\n\nDetermines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nbotId -> (string)\n\nThe identifier of the bot associated with the intent.\n\nbotVersion -> (string)\n\nThe identifier of the version of the bot associated with the intent.\n\nlocaleId -> (string)\n\nThe locale that the intent is specified to use.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the intent was created."
    },
    {
      "command_name": "create-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-resource-policy.html",
      "command_description": "Description\n\nCreates a new resource policy with the specified policy statements.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resource-policy\n--resource-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\n--policy (string)\n\nA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see IAM JSON policy reference .\n\nIf the policy isn’t valid, Amazon Lex returns a validation exception.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was attached to.\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "create-resource-policy-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-resource-policy-statement.html",
      "command_description": "Description\n\nAdds a new resource policy statement to a bot or bot alias. If a resource policy exists, the statement is added to the current resource policy. If a policy doesn’t exist, a new policy is created.\n\nYou can’t create a resource policy statement that allows cross-account access.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resource-policy-statement\n--resource-arn <value>\n--statement-id <value>\n--effect <value>\n--principal <value>\n--action <value>\n[--condition <value>]\n[--expected-revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--statement-id <value>",
        "--effect <value>",
        "--principal <value>",
        "--action <value>",
        "[--condition <value>]",
        "[--expected-revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\n--statement-id (string)\n\nThe name of the statement. The ID is the same as the Sid IAM property. The statement name must be unique within the policy. For more information, see IAM JSON policy elements: Sid .\n\n--effect (string)\n\nDetermines whether the statement allows or denies access to the resource.\n\nPossible values:\n\nAllow\n\nDeny\n\n--principal (list)\n\nAn IAM principal, such as an IAM users, IAM roles, or AWS services that is allowed or denied access to a resource. For more information, see AWS JSON policy elements: Principal .\n\n(structure)\n\nThe IAM principal that you allowing or denying access to an Amazon Lex action. You must provide a service or an arn , but not both in the same statement. For more information, see AWS JSON policy elements: Principal .\n\nservice -> (string)\n\nThe name of the AWS service that should allowed or denied access to an Amazon Lex action.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the principal.\n\nShorthand Syntax:\n\nservice=string,arn=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"service\": \"string\",\n    \"arn\": \"string\"\n  }\n  ...\n]\n\n\n--action (list)\n\nThe Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see Actions, resources, and condition keys for Amazon Lex V2 .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--condition (map)\n\nSpecifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.\n\nFor more information, see IAM JSON policy elements: Condition .\n\nkey -> (string)\n\nvalue -> (map)\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=KeyName1=string,KeyName2=string,KeyName2=KeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": {\"string\": \"string\"\n      ...}\n  ...}\n\n\n--expected-revision-id (string)\n\nThe identifier of the revision of the policy to edit. If this revision ID doesn’t match the current revision ID, Amazon Lex throws an exception.\n\nIf you don’t specify a revision, Amazon Lex overwrites the contents of the policy with the new values.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "create-slot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-slot.html",
      "command_description": "Description\n\nCreates a slot in an intent. A slot is a variable needed to fulfill an intent. For example, an OrderPizza intent might need slots for size, crust, and number of pizzas. For each slot, you define one or more utterances that Amazon Lex uses to elicit a response from the user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-slot\n--slot-name <value>\n[--description <value>]\n--slot-type-id <value>\n--value-elicitation-setting <value>\n[--obfuscation-setting <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n--intent-id <value>\n[--multiple-values-setting <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-name <value>",
        "[--description <value>]",
        "--slot-type-id <value>",
        "--value-elicitation-setting <value>",
        "[--obfuscation-setting <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "--intent-id <value>",
        "[--multiple-values-setting <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-name (string)\n\nThe name of the slot. Slot names must be unique within the bot that contains the slot.\n\n--description (string)\n\nA description of the slot. Use this to help identify the slot in lists.\n\n--slot-type-id (string)\n\nThe unique identifier for the slot type associated with this slot. The slot type determines the values that can be entered into the slot.\n\n--value-elicitation-setting (structure)\n\nSpecifies prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.\n\ndefaultValueSpecification -> (structure)\n\nA list of default values for a slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nA list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n\n(structure)\n\nSpecifies the default value to use when a user doesn’t provide a value for a slot.\n\ndefaultValue -> (string)\n\nThe default value to use when a user doesn’t provide a value for a slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\npromptSpecification -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nwaitAndContinueSpecification -> (structure)\n\nSpecifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\nwaitingResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ncontinueResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nstillWaitingResponse -> (structure)\n\nA response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\nmessageGroups -> (list)\n\nOne or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nfrequencyInSeconds -> (integer)\n\nHow often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.\n\ntimeoutInSeconds -> (integer)\n\nIf Amazon Lex waits longer than this length of time for a response, it will stop sending messages.\n\nallowInterrupt -> (boolean)\n\nIndicates that the user can interrupt the response by speaking while the message is being played.\n\nactive -> (boolean)\n\nSpecifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren’t used. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"defaultValueSpecification\": {\n    \"defaultValueList\": [\n      {\n        \"defaultValue\": \"string\"\n      }\n      ...\n    ]\n  },\n  \"slotConstraint\": \"Required\"|\"Optional\",\n  \"promptSpecification\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"maxRetries\": integer,\n    \"allowInterrupt\": true|false\n  },\n  \"sampleUtterances\": [\n    {\n      \"utterance\": \"string\"\n    }\n    ...\n  ],\n  \"waitAndContinueSpecification\": {\n    \"waitingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"continueResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"stillWaitingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"frequencyInSeconds\": integer,\n      \"timeoutInSeconds\": integer,\n      \"allowInterrupt\": true|false\n    },\n    \"active\": true|false\n  }\n}\n\n\n--obfuscation-setting (structure)\n\nDetermines how slot values are used in Amazon CloudWatch logs. If the value of the obfuscationSetting parameter is DefaultObfuscation , slot values are obfuscated in the log output. If the value is None , the actual value is present in the log output.\n\nThe default is to obfuscate values in the CloudWatch logs.\n\nobfuscationSettingType -> (string)\n\nValue that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\nShorthand Syntax:\n\nobfuscationSettingType=string\n\n\nJSON Syntax:\n\n{\n  \"obfuscationSettingType\": \"None\"|\"DefaultObfuscation\"\n}\n\n\n--bot-id (string)\n\nThe identifier of the bot associated with the slot.\n\n--bot-version (string)\n\nThe version of the bot associated with the slot.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the slot will be used in. The string must match one of the supported locales. All of the bots, intents, slot types used by the slot must have the same locale. For more information, see Supported languages .\n\n--intent-id (string)\n\nThe identifier of the intent that contains the slot.\n\n--multiple-values-setting (structure)\n\nIndicates whether the slot returns multiple values in one response. Multi-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the multipleValuesSetting is not set, the default value is false .\n\nallowMultipleValues -> (boolean)\n\nIndicates whether a slot can return multiple values. When true , the slot may return more than one value in a response. When false , the slot returns only a single value.\n\nMulti-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the allowMutlipleValues is not set, the default value is false .\n\nShorthand Syntax:\n\nallowMultipleValues=boolean\n\n\nJSON Syntax:\n\n{\n  \"allowMultipleValues\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotId -> (string)\n\nThe unique identifier associated with the slot. Use this to identify the slot when you update or delete it.\n\nslotName -> (string)\n\nThe name specified for the slot.\n\ndescription -> (string)\n\nThe description associated with the slot.\n\nslotTypeId -> (string)\n\nThe unique identifier of the slot type associated with this slot.\n\nvalueElicitationSetting -> (structure)\n\nThe value elicitation settings specified for the slot.\n\ndefaultValueSpecification -> (structure)\n\nA list of default values for a slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nA list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n\n(structure)\n\nSpecifies the default value to use when a user doesn’t provide a value for a slot.\n\ndefaultValue -> (string)\n\nThe default value to use when a user doesn’t provide a value for a slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\npromptSpecification -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nwaitAndContinueSpecification -> (structure)\n\nSpecifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\nwaitingResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ncontinueResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nstillWaitingResponse -> (structure)\n\nA response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\nmessageGroups -> (list)\n\nOne or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nfrequencyInSeconds -> (integer)\n\nHow often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.\n\ntimeoutInSeconds -> (integer)\n\nIf Amazon Lex waits longer than this length of time for a response, it will stop sending messages.\n\nallowInterrupt -> (boolean)\n\nIndicates that the user can interrupt the response by speaking while the message is being played.\n\nactive -> (boolean)\n\nSpecifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren’t used. If the active field isn’t specified, the default is true.\n\nobfuscationSetting -> (structure)\n\nIndicates whether the slot is configured to obfuscate values in Amazon CloudWatch logs.\n\nobfuscationSettingType -> (string)\n\nValue that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\nbotId -> (string)\n\nThe unique identifier of the bot associated with the slot.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the slot.\n\nlocaleId -> (string)\n\nThe language and local specified for the slot.\n\nintentId -> (string)\n\nThe unique identifier of the intent associated with the slot.\n\ncreationDateTime -> (timestamp)\n\nThe timestamp of the date and time that the slot was created.\n\nmultipleValuesSetting -> (structure)\n\nIndicates whether the slot returns multiple values in one response.\n\nallowMultipleValues -> (boolean)\n\nIndicates whether a slot can return multiple values. When true , the slot may return more than one value in a response. When false , the slot returns only a single value.\n\nMulti-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the allowMutlipleValues is not set, the default value is false ."
    },
    {
      "command_name": "create-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-slot-type.html",
      "command_description": "Description\n\nCreates a custom slot type\n\nTo create a custom slot type, specify a name for the slot type and a set of enumeration values, the values that a slot of this type can assume.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-slot-type\n--slot-type-name <value>\n[--description <value>]\n[--slot-type-values <value>]\n--value-selection-setting <value>\n[--parent-slot-type-signature <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-type-name <value>",
        "[--description <value>]",
        "[--slot-type-values <value>]",
        "--value-selection-setting <value>",
        "[--parent-slot-type-signature <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-type-name (string)\n\nThe name for the slot. A slot type name must be unique within the account.\n\n--description (string)\n\nA description of the slot type. Use the description to help identify the slot type in lists.\n\n--slot-type-values (list)\n\nA list of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.\n\n(structure)\n\nEach slot type can have a set of values. Each SlotTypeValue represents a value that the slot type can take.\n\nsampleValue -> (structure)\n\nThe value of the slot type entry.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type entry.\n\n(structure)\n\nDefines one of the values for a slot type.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nShorthand Syntax:\n\nsampleValue={value=string},synonyms=[{value=string},{value=string}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sampleValue\": {\n      \"value\": \"string\"\n    },\n    \"synonyms\": [\n      {\n        \"value\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--value-selection-setting (structure)\n\nDetermines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null.\n\nIf you don’t specify the valueSelectionSetting parameter, the default is OriginalValue .\n\nresolutionStrategy -> (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy, the default is OriginalValue.\n\nregexFilter -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nShorthand Syntax:\n\nresolutionStrategy=string,regexFilter={pattern=string}\n\n\nJSON Syntax:\n\n{\n  \"resolutionStrategy\": \"OriginalValue\"|\"TopResolution\",\n  \"regexFilter\": {\n    \"pattern\": \"string\"\n  }\n}\n\n\n--parent-slot-type-signature (string)\n\nThe built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type.\n\nOnly AMAZON.AlphaNumeric is supported.\n\n--bot-id (string)\n\nThe identifier of the bot associated with this slot type.\n\n--bot-version (string)\n\nThe identifier of the bot version associated with this slot type.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the slot type will be used in. The string must match one of the supported locales. All of the bots, intents, and slots used by the slot type must have the same locale. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypeId -> (string)\n\nThe unique identifier assigned to the slot type. Use this to identify the slot type in the UpdateSlotType and DeleteSlotType operations.\n\nslotTypeName -> (string)\n\nThe name specified for the slot type.\n\ndescription -> (string)\n\nThe description specified for the slot type.\n\nslotTypeValues -> (list)\n\nThe list of values that the slot type can assume.\n\n(structure)\n\nEach slot type can have a set of values. Each SlotTypeValue represents a value that the slot type can take.\n\nsampleValue -> (structure)\n\nThe value of the slot type entry.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type entry.\n\n(structure)\n\nDefines one of the values for a slot type.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nvalueSelectionSetting -> (structure)\n\nThe strategy that Amazon Lex uses to select a value from the list of possible values.\n\nresolutionStrategy -> (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy, the default is OriginalValue.\n\nregexFilter -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nparentSlotTypeSignature -> (string)\n\nThe signature of the base slot type specified for the slot type.\n\nbotId -> (string)\n\nThe identifier for the bot associated with the slot type.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the slot type.\n\nlocaleId -> (string)\n\nThe specified language and local specified for the slot type.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot type was created."
    },
    {
      "command_name": "create-upload-url",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/create-upload-url.html",
      "command_description": "Description\n\nGets a pre-signed S3 write URL that you use to upload the zip archive when importing a bot or a bot locale.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-upload-url\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimportId -> (string)\n\nAn identifier for a unique import job. Use it when you call the operation.\n\nuploadUrl -> (string)\n\nA pre-signed S3 write URL. Upload the zip archive file that contains the definition of your bot or bot locale."
    },
    {
      "command_name": "delete-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-bot.html",
      "command_description": "Description\n\nDeletes all versions of a bot, including the Draft version. To delete a specific version, use the DeleteBotVersion operation.\n\nWhen you delete a bot, all of the resources contained in the bot are also deleted. Deleting a bot removes all locales, intents, slot, and slot types defined for the bot.\n\nIf a bot has an alias, the DeleteBot operation returns a ResourceInUseException exception. If you want to delete the bot and the alias, set the skipResourceInUseCheck parameter to true .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot\n--bot-id <value>\n[--skip-resource-in-use-check | --no-skip-resource-in-use-check]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--skip-resource-in-use-check | --no-skip-resource-in-use-check]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to delete.\n\n--skip-resource-in-use-check | --no-skip-resource-in-use-check (boolean)\n\nWhen true , Amazon Lex doesn’t check to see if another resource, such as an alias, is using the bot before it is deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe unique identifier of the bot that Amazon Lex is deleting.\n\nbotStatus -> (string)\n\nThe current status of the bot. The status is Deleting while the bot and its associated resources are being deleted."
    },
    {
      "command_name": "delete-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-bot-alias.html",
      "command_description": "Description\n\nDeletes the specified bot alias.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-alias\n--bot-alias-id <value>\n--bot-id <value>\n[--skip-resource-in-use-check | --no-skip-resource-in-use-check]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-alias-id <value>",
        "--bot-id <value>",
        "[--skip-resource-in-use-check | --no-skip-resource-in-use-check]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-alias-id (string)\n\nThe unique identifier of the bot alias to delete.\n\n--bot-id (string)\n\nThe unique identifier of the bot associated with the alias to delete.\n\n--skip-resource-in-use-check | --no-skip-resource-in-use-check (boolean)\n\nWhen this parameter is true, Amazon Lex doesn’t check to see if any other resource is using the alias before it is deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotAliasId -> (string)\n\nThe unique identifier of the bot alias to delete.\n\nbotId -> (string)\n\nThe unique identifier of the bot that contains the alias to delete.\n\nbotAliasStatus -> (string)\n\nThe current status of the alias. The status is Deleting while the alias is in the process of being deleted. Once the alias is deleted, it will no longer appear in the list of aliases returned by the ListBotAliases operation."
    },
    {
      "command_name": "delete-bot-locale",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-bot-locale.html",
      "command_description": "Description\n\nRemoves a locale from a bot.\n\nWhen you delete a locale, all intents, slots, and slot types defined for the locale are also deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-locale\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the locale.\n\n--bot-version (string)\n\nThe version of the bot that contains the locale.\n\n--locale-id (string)\n\nThe identifier of the language and locale that will be deleted. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contained the deleted locale.\n\nbotVersion -> (string)\n\nThe version of the bot that contained the deleted locale.\n\nlocaleId -> (string)\n\nThe language and locale of the deleted locale.\n\nbotLocaleStatus -> (string)\n\nThe status of deleting the bot locale. The locale first enters the Deleting status. Once the locale is deleted it no longer appears in the list of locales for the bot."
    },
    {
      "command_name": "delete-bot-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-bot-version.html",
      "command_description": "Description\n\nDeletes a specific version of a bot. To delete all version of a bot, use the DeleteBot operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-bot-version\n--bot-id <value>\n--bot-version <value>\n[--skip-resource-in-use-check | --no-skip-resource-in-use-check]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "[--skip-resource-in-use-check | --no-skip-resource-in-use-check]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot that contains the version.\n\n--bot-version (string)\n\nThe version of the bot to delete.\n\n--skip-resource-in-use-check | --no-skip-resource-in-use-check (boolean)\n\nBy default, the DeleteBotVersion operations throws a ResourceInUseException exception if you try to delete a bot version that has an alias pointing at it. Set the skipResourceInUseCheck parameter to true to skip this check and remove the version even if an alias points to it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that is being deleted.\n\nbotVersion -> (string)\n\nThe version of the bot that is being deleted.\n\nbotStatus -> (string)\n\nThe current status of the bot."
    },
    {
      "command_name": "delete-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-export.html",
      "command_description": "Description\n\nRemoves a previous export and the associated files stored in an S3 bucket.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-export\n--export-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--export-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-id (string)\n\nThe unique identifier of the export to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nThe unique identifier of the deleted export.\n\nexportStatus -> (string)\n\nThe current status of the deletion. When the deletion is complete, the export will no longer be returned by the operation and calls to the with the export identifier will fail."
    },
    {
      "command_name": "delete-import",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-import.html",
      "command_description": "Description\n\nRemoves a previous import and the associated file stored in an S3 bucket.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-import\n--import-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--import-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--import-id (string)\n\nThe unique identifier of the import to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimportId -> (string)\n\nThe unique identifier of the deleted import.\n\nimportStatus -> (string)\n\nThe current status of the deletion. When the deletion is complete, the import will no longer be returned by the operation and calls to the with the import identifier will fail."
    },
    {
      "command_name": "delete-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-intent.html",
      "command_description": "Description\n\nRemoves the specified intent.\n\nDeleting an intent also deletes the slots associated with the intent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-intent\n--intent-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--intent-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--intent-id (string)\n\nThe unique identifier of the intent to delete.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the intent.\n\n--bot-version (string)\n\nThe version of the bot associated with the intent.\n\n--locale-id (string)\n\nThe identifier of the language and locale where the bot will be deleted. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-resource-policy.html",
      "command_description": "Description\n\nRemoves an existing policy from a bot or bot alias. If the resource doesn’t have a policy attached, Amazon Lex returns an exception.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy\n--resource-arn <value>\n[--expected-revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--expected-revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that has the resource policy attached.\n\n--expected-revision-id (string)\n\nThe identifier of the revision to edit. If this ID doesn’t match the current revision number, Amazon Lex returns an exception\n\nIf you don’t specify a revision ID, Amazon Lex will delete the current policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was deleted from.\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "delete-resource-policy-statement",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-resource-policy-statement.html",
      "command_description": "Description\n\nDeletes a policy statement from a resource policy. If you delete the last statement from a policy, the policy is deleted. If you specify a statement ID that doesn’t exist in the policy, or if the bot or bot alias doesn’t have a policy attached, Amazon Lex returns an exception.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-policy-statement\n--resource-arn <value>\n--statement-id <value>\n[--expected-revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--statement-id <value>",
        "[--expected-revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\n--statement-id (string)\n\nThe name of the statement (SID) to delete from the policy.\n\n--expected-revision-id (string)\n\nThe identifier of the revision of the policy to delete the statement from. If this revision ID doesn’t match the current revision ID, Amazon Lex throws an exception.\n\nIf you don’t specify a revision, Amazon Lex removes the current contents of the statement.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy statement was removed from.\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "delete-slot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-slot.html",
      "command_description": "Description\n\nDeletes the specified slot from an intent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-slot\n--slot-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n--intent-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "--intent-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-id (string)\n\nThe identifier of the slot to delete.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the slot to delete.\n\n--bot-version (string)\n\nThe version of the bot associated with the slot to delete.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the slot will be deleted from. The string must match one of the supported locales. For more information, see Supported languages .\n\n--intent-id (string)\n\nThe identifier of the intent associated with the slot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-slot-type.html",
      "command_description": "Description\n\nDeletes a slot type from a bot locale.\n\nIf a slot is using the slot type, Amazon Lex throws a ResourceInUseException exception. To avoid the exception, set the skipResourceInUseCheck parameter to true .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-slot-type\n--slot-type-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--skip-resource-in-use-check | --no-skip-resource-in-use-check]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-type-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--skip-resource-in-use-check | --no-skip-resource-in-use-check]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-type-id (string)\n\nThe identifier of the slot type to delete.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the slot type.\n\n--bot-version (string)\n\nThe version of the bot associated with the slot type.\n\n--locale-id (string)\n\nThe identifier of the language and locale that the slot type will be deleted from. The string must match one of the supported locales. For more information, see Supported languages .\n\n--skip-resource-in-use-check | --no-skip-resource-in-use-check (boolean)\n\nBy default, the DeleteSlotType operations throws a ResourceInUseException exception if you try to delete a slot type used by a slot. Set the skipResourceInUseCheck parameter to true to skip this check and remove the slot type even if a slot uses it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-utterances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/delete-utterances.html",
      "command_description": "Description\n\nDeletes stored utterances.\n\nAmazon Lex stores the utterances that users send to your bot. Utterances are stored for 15 days for use with the operation, and then stored indefinitely for use in improving the ability of your bot to respond to user input..\n\nUse the DeleteUtterances operation to manually delete utterances for a specific session. When you use the DeleteUtterances operation, utterances stored for improving your bot’s ability to respond to user input are deleted immediately. Utterances stored for use with the ListAggregatedUtterances operation are deleted after 15 days.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-utterances\n--bot-id <value>\n[--locale-id <value>]\n[--session-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--locale-id <value>]",
        "[--session-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the utterances.\n\n--locale-id (string)\n\nThe identifier of the language and locale where the utterances were collected. The string must match one of the supported locales. For more information, see Supported languages .\n\n--session-id (string)\n\nThe unique identifier of the session with the user. The ID is returned in the response from the and operations.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-bot.html",
      "command_description": "Description\n\nProvides metadata information about a bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-bot\n--bot-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe unique identifier of the bot.\n\nbotName -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nThe description of the bot.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n\ndataPrivacy -> (structure)\n\nSettings for managing data privacy of the bot and its conversations with users.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe maximum time in seconds that Amazon Lex retains the data gathered in a conversation.\n\nbotStatus -> (string)\n\nThe current status of the bot. When the status is Available the bot is ready to be used in conversations with users.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was last updated."
    },
    {
      "command_name": "describe-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-bot-alias.html",
      "command_description": "Description\n\nGet information about a specific bot alias.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-bot-alias\n--bot-alias-id <value>\n--bot-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-alias-id <value>",
        "--bot-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-alias-id (string)\n\nThe identifier of the bot alias to describe.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the bot alias to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotAliasId -> (string)\n\nThe identifier of the bot alias.\n\nbotAliasName -> (string)\n\nThe name of the bot alias.\n\ndescription -> (string)\n\nThe description of the bot alias.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the bot alias.\n\nbotAliasLocaleSettings -> (map)\n\nThe locale settings that are unique to the alias.\n\nkey -> (string)\n\nvalue -> (structure)\n\nSpecifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot’s locale.\n\nenabled -> (boolean)\n\nDetermines whether the locale is enabled for the bot. If the value is false , the locale isn’t available for use.\n\ncodeHookSpecification -> (structure)\n\nSpecifies the Lambda function that should be used in the locale.\n\nlambdaCodeHook -> (structure)\n\nSpecifies a Lambda function that verifies requests to a bot or fulfills the user’s request to a bot.\n\nlambdaARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\ncodeHookInterfaceVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\nconversationLogSettings -> (structure)\n\nSpecifics of how Amazon Lex logs text and audio conversations with the bot associated with the alias.\n\ntextLogSettings -> (list)\n\nThe Amazon CloudWatch Logs settings for logging text and metadata.\n\n(structure)\n\nDefines settings to enable text conversation logs.\n\nenabled -> (boolean)\n\nDetermines whether conversation logs should be stored for an alias.\n\ndestination -> (structure)\n\nDefines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\ncloudWatch -> (structure)\n\nDefines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n\ncloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n\nlogPrefix -> (string)\n\nThe prefix of the log stream name within the log group that you specified\n\naudioLogSettings -> (list)\n\nThe Amazon S3 settings for logging audio to an S3 bucket.\n\n(structure)\n\nSettings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\nenabled -> (boolean)\n\nDetermines whether audio logging in enabled for the bot.\n\ndestination -> (structure)\n\nThe location of audio log files collected when conversation logging is enabled for a bot.\n\ns3Bucket -> (structure)\n\nThe Amazon S3 bucket where the audio log files are stored. The IAM role specified in the roleArn parameter of the CreateBot operation must have permission to write to this bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\nlogPrefix -> (string)\n\nThe S3 prefix to assign to audio log files.\n\nsentimentAnalysisSettings -> (structure)\n\nDetermines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\ndetectSentiment -> (boolean)\n\nSets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n\nbotAliasHistoryEvents -> (list)\n\nA list of events that affect a bot alias. For example, an event is recorded when the version that the alias points to changes.\n\n(structure)\n\nProvides a record of an event that affects a bot alias. For example, when the version of a bot that the alias points to changes.\n\nbotVersion -> (string)\n\nThe version of the bot that was used in the event.\n\nstartDate -> (timestamp)\n\nThe date and time that the event started.\n\nendDate -> (timestamp)\n\nThe date and time that the event ended.\n\nbotAliasStatus -> (string)\n\nThe current status of the alias. When the alias is Available , the alias is ready for use with your bot.\n\nbotId -> (string)\n\nThe identifier of the bot associated with the bot alias.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the alias was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the alias was last updated."
    },
    {
      "command_name": "describe-bot-locale",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-bot-locale.html",
      "command_description": "Description\n\nDescribes the settings that a bot has for a specific locale.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-bot-locale\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot associated with the locale.\n\n--bot-version (string)\n\nThe identifier of the version of the bot associated with the locale.\n\n--locale-id (string)\n\nThe unique identifier of the locale to describe. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot associated with the locale.\n\nbotVersion -> (string)\n\nThe identifier of the version of the bot associated with the locale.\n\nlocaleId -> (string)\n\nThe unique identifier of the described locale.\n\nlocaleName -> (string)\n\nThe name of the locale.\n\ndescription -> (string)\n\nThe description of the locale.\n\nnluIntentConfidenceThreshold -> (double)\n\nThe confidence threshold where Amazon Lex inserts the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents in the list of possible intents for an utterance.\n\nvoiceSettings -> (structure)\n\nThe Amazon Polly voice Amazon Lex uses for voice interaction with the user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nintentsCount -> (integer)\n\nThe number of intents defined for the locale.\n\nslotTypesCount -> (integer)\n\nThe number of slot types defined for the locale.\n\nbotLocaleStatus -> (string)\n\nThe status of the bot. If the status is Failed , the reasons for the failure are listed in the failureReasons field.\n\nfailureReasons -> (list)\n\nif botLocaleStatus is Failed , Amazon Lex explains why it failed to build the bot.\n\n(string)\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the locale was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the locale was last updated.\n\nlastBuildSubmittedDateTime -> (timestamp)\n\nThe date and time that the locale was last submitted for building.\n\nbotLocaleHistoryEvents -> (list)\n\nHistory of changes, such as when a locale is used in an alias, that have taken place for the locale.\n\n(structure)\n\nProvides information about an event that occurred affecting the bot locale.\n\nevent -> (string)\n\nA description of the event that occurred.\n\neventDate -> (timestamp)\n\nA timestamp of the date and time that the event occurred."
    },
    {
      "command_name": "describe-bot-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-bot-version.html",
      "command_description": "Description\n\nProvides metadata about a version of a bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-bot-version\n--bot-id <value>\n--bot-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot containing the version to return metadata for.\n\n--bot-version (string)\n\nThe version of the bot to return metadata for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the version.\n\nbotName -> (string)\n\nThe name of the bot that contains the version.\n\nbotVersion -> (string)\n\nThe version of the bot to describe.\n\ndescription -> (string)\n\nThe description specified for the bot.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permission to access the bot version.\n\ndataPrivacy -> (structure)\n\nData privacy settings for the bot version.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe number of seconds that a session with the bot remains active before it is discarded by Amazon Lex.\n\nbotStatus -> (string)\n\nThe current status of the bot. When the status is Available , the bot version is ready for use.\n\nfailureReasons -> (list)\n\nIf the botStatus is Failed , this contains a list of reasons that the version couldn’t be built.\n\n(string)\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot version was created."
    },
    {
      "command_name": "describe-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-export.html",
      "command_description": "Description\n\nGets information about a specific export.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-export\n--export-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--export-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-id (string)\n\nThe unique identifier of the export to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nThe unique identifier of the described export.\n\nresourceSpecification -> (structure)\n\nThe bot, bot ID, and optional locale ID of the exported bot or bot locale.\n\nbotExportSpecification -> (structure)\n\nParameters for exporting a bot.\n\nbotId -> (string)\n\nThe identifier of the bot assigned by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported. This will be either DRAFT or the version number.\n\nbotLocaleExportSpecification -> (structure)\n\nParameters for exporting a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to create the locale for.\n\nbotVersion -> (string)\n\nThe version of the bot to export.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale to export. The string must match one of the locales in the bot.\n\nfileFormat -> (string)\n\nThe file format used in the files that describe the bot or bot locale.\n\nexportStatus -> (string)\n\nThe status of the export. When the status is Complete the export archive file is available for download.\n\nfailureReasons -> (list)\n\nIf the exportStatus is failed, contains one or more reasons why the export could not be completed.\n\n(string)\n\ndownloadUrl -> (string)\n\nA pre-signed S3 URL that points to the bot or bot locale archive. The URL is only available for 5 minutes after calling the DescribeExport operation.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the export was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe last date and time that the export was updated."
    },
    {
      "command_name": "describe-import",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-import.html",
      "command_description": "Description\n\nGets information about a specific import.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-import\n--import-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--import-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--import-id (string)\n\nThe unique identifier of the import to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimportId -> (string)\n\nThe unique identifier of the described import.\n\nresourceSpecification -> (structure)\n\nThe specifications of the imported bot or bot locale.\n\nbotImportSpecification -> (structure)\n\nParameters for importing a bot.\n\nbotName -> (string)\n\nThe name that Amazon Lex should use for the bot.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to build and run the bot.\n\ndataPrivacy -> (structure)\n\nBy default, data stored by Amazon Lex is encrypted. The DataPrivacy structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe time, in seconds, that Amazon Lex should keep information about a user’s conversation with the bot.\n\nA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\n\nbotTags -> (map)\n\nA list of tags to add to the bot. You can only add tags when you import a bot. You can’t use the UpdateBot operation to update tags. To update tags, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\ntestBotAliasTags -> (map)\n\nA list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can’t use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nbotLocaleImportSpecification -> (structure)\n\nParameters for importing a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to import the locale to.\n\nbotVersion -> (string)\n\nThe version of the bot to import the locale to. This can only be the DRAFT version of the bot.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages .\n\nnluIntentConfidenceThreshold -> (double)\n\nDetermines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n\nFor example, suppose a bot is configured with the confidence threshold of 0.80 and the AMAZON.FallbackIntent . Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\n\nAMAZON.FallbackIntent\n\nIntentA\n\nIntentB\n\nIntentC\n\nvoiceSettings -> (structure)\n\nDefines settings for using an Amazon Polly voice to communicate with a user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nimportedResourceId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the resource created by the import.\n\nimportedResourceName -> (string)\n\nThe name of the imported resource.\n\nmergeStrategy -> (string)\n\nThe strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is FailOnConflict existing resources are not overwritten and the import fails.\n\nimportStatus -> (string)\n\nThe status of the import process. When the status is Completed the resource is imported and ready for use.\n\nfailureReasons -> (list)\n\nIf the importStatus field is Failed , this provides one or more reasons for the failure.\n\n(string)\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the import was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the import was last updated."
    },
    {
      "command_name": "describe-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-intent.html",
      "command_description": "Description\n\nReturns metadata about an intent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-intent\n--intent-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--intent-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--intent-id (string)\n\nThe identifier of the intent to describe.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the intent.\n\n--bot-version (string)\n\nThe version of the bot associated with the intent.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the intent to describe. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintentId -> (string)\n\nThe unique identifier assigned to the intent when it was created.\n\nintentName -> (string)\n\nThe name specified for the intent.\n\ndescription -> (string)\n\nThe description of the intent.\n\nparentIntentSignature -> (string)\n\nThe identifier of the built-in intent that this intent is derived from, if any.\n\nsampleUtterances -> (list)\n\nUser utterances that trigger this intent.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\ndialogCodeHook -> (structure)\n\nThe Lambda function called during each turn of a conversation with the intent.\n\nenabled -> (boolean)\n\nEnables the dialog code hook so that it processes user requests.\n\nfulfillmentCodeHook -> (structure)\n\nThe Lambda function called when the intent is complete and ready for fulfillment.\n\nenabled -> (boolean)\n\nIndicates whether a Lambda function should be invoked to fulfill a specific intent.\n\npostFulfillmentStatusSpecification -> (structure)\n\nProvides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.\n\nsuccessResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfailureResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ntimeoutResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfulfillmentUpdatesSpecification -> (structure)\n\nProvides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.\n\nactive -> (boolean)\n\nDetermines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\nIf the active field is set to true, the startResponse , updateResponse , and timeoutInSeconds fields are required.\n\nstartResponse -> (structure)\n\nProvides configuration information for the message sent to users when the fulfillment Lambda functions starts running.\n\ndelayInSeconds -> (integer)\n\nThe delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn’t played.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt the start message while it is playing.\n\nupdateResponse -> (structure)\n\nProvides configuration information for messages sent periodically to the user while the fulfillment Lambda function is running.\n\nfrequencyInSeconds -> (integer)\n\nThe frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt an update message while it is playing.\n\ntimeoutInSeconds -> (integer)\n\nThe length of time that the fulfillment Lambda function should run before it times out.\n\nslotPriorities -> (list)\n\nThe list that determines the priority that slots should be elicited from the user.\n\n(structure)\n\nSets the priority that Amazon Lex should use when eliciting slot values from a user.\n\npriority -> (integer)\n\nThe priority that a slot should be elicited.\n\nslotId -> (string)\n\nThe unique identifier of the slot.\n\nintentConfirmationSetting -> (structure)\n\nPrompts that Amazon Lex sends to the user to confirm completion of an intent.\n\npromptSpecification -> (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\ndeclinationResponse -> (structure)\n\nWhen the user answers “no” to the question defined in promptSpecification , Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether the intent’s confirmation is sent to the user. When this field is false, confirmation and declination responses aren’t sent. If the active field isn’t specified, the default is true.\n\nintentClosingSetting -> (structure)\n\nThe response that Amazon Lex sends to when the intent is closed.\n\nclosingResponse -> (structure)\n\nThe response that Amazon Lex sends to the user when the intent is complete.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether an intent’s closing response is used. When this field is false, the closing response isn’t sent to the user. If the active field isn’t specified, the default is true.\n\ninputContexts -> (list)\n\nA list of contexts that must be active for the intent to be considered for sending to the user.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nA list of contexts that are activated when the intent is fulfilled.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nkendraConfiguration -> (structure)\n\nConfiguration information required to use the AMAZON.KendraSearchIntent intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n\nqueryFilterStringEnabled -> (boolean)\n\nDetermines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nbotId -> (string)\n\nThe identifier of the bot associated with the intent.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the intent.\n\nlocaleId -> (string)\n\nThe language and locale specified for the intent.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the intent was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the intent was last updated."
    },
    {
      "command_name": "describe-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-resource-policy.html",
      "command_description": "Description\n\nGets the resource policy and policy revision for a bot or bot alias.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-resource-policy\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\npolicy -> (string)\n\nThe JSON structure that contains the resource policy. For more information about the contents of a JSON policy document, see IAM JSON policy reference .\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "describe-slot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-slot.html",
      "command_description": "Description\n\nGets metadata information about a slot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-slot\n--slot-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n--intent-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "--intent-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-id (string)\n\nThe unique identifier for the slot.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the slot.\n\n--bot-version (string)\n\nThe version of the bot associated with the slot.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the slot to describe. The string must match one of the supported locales. For more information, see Supported languages .\n\n--intent-id (string)\n\nThe identifier of the intent that contains the slot.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotId -> (string)\n\nThe unique identifier generated for the slot.\n\nslotName -> (string)\n\nThe name specified for the slot.\n\ndescription -> (string)\n\nThe description specified for the slot.\n\nslotTypeId -> (string)\n\nThe identifier of the slot type that determines the values entered into the slot.\n\nvalueElicitationSetting -> (structure)\n\nPrompts that Amazon Lex uses to elicit a value for the slot.\n\ndefaultValueSpecification -> (structure)\n\nA list of default values for a slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nA list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n\n(structure)\n\nSpecifies the default value to use when a user doesn’t provide a value for a slot.\n\ndefaultValue -> (string)\n\nThe default value to use when a user doesn’t provide a value for a slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\npromptSpecification -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nwaitAndContinueSpecification -> (structure)\n\nSpecifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\nwaitingResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ncontinueResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nstillWaitingResponse -> (structure)\n\nA response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\nmessageGroups -> (list)\n\nOne or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nfrequencyInSeconds -> (integer)\n\nHow often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.\n\ntimeoutInSeconds -> (integer)\n\nIf Amazon Lex waits longer than this length of time for a response, it will stop sending messages.\n\nallowInterrupt -> (boolean)\n\nIndicates that the user can interrupt the response by speaking while the message is being played.\n\nactive -> (boolean)\n\nSpecifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren’t used. If the active field isn’t specified, the default is true.\n\nobfuscationSetting -> (structure)\n\nWhether slot values are shown in Amazon CloudWatch logs. If the value is None , the actual value of the slot is shown in logs.\n\nobfuscationSettingType -> (string)\n\nValue that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\nbotId -> (string)\n\nThe identifier of the bot associated with the slot.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the slot.\n\nlocaleId -> (string)\n\nThe language and locale specified for the slot.\n\nintentId -> (string)\n\nThe identifier of the intent associated with the slot.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot was last updated.\n\nmultipleValuesSetting -> (structure)\n\nIndicates whether the slot accepts multiple values in a single utterance.\n\nIf the multipleValuesSetting is not set, the default value is false .\n\nallowMultipleValues -> (boolean)\n\nIndicates whether a slot can return multiple values. When true , the slot may return more than one value in a response. When false , the slot returns only a single value.\n\nMulti-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the allowMutlipleValues is not set, the default value is false ."
    },
    {
      "command_name": "describe-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/describe-slot-type.html",
      "command_description": "Description\n\nGets metadata information about a slot type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-slot-type\n--slot-type-id <value>\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-type-id <value>",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-type-id (string)\n\nThe identifier of the slot type.\n\n--bot-id (string)\n\nThe identifier of the bot associated with the slot type.\n\n--bot-version (string)\n\nThe version of the bot associated with the slot type.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the slot type to describe. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypeId -> (string)\n\nThe unique identifier for the slot type.\n\nslotTypeName -> (string)\n\nThe name specified for the slot type.\n\ndescription -> (string)\n\nThe description specified for the slot type.\n\nslotTypeValues -> (list)\n\nThe values that the slot type can take. Includes any synonyms for the slot type values.\n\n(structure)\n\nEach slot type can have a set of values. Each SlotTypeValue represents a value that the slot type can take.\n\nsampleValue -> (structure)\n\nThe value of the slot type entry.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type entry.\n\n(structure)\n\nDefines one of the values for a slot type.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nvalueSelectionSetting -> (structure)\n\nThe strategy that Amazon Lex uses to choose a value from a list of possible values.\n\nresolutionStrategy -> (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy, the default is OriginalValue.\n\nregexFilter -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nparentSlotTypeSignature -> (string)\n\nThe built in slot type used as a parent to this slot type.\n\nbotId -> (string)\n\nThe identifier of the bot associated with the slot type.\n\nbotVersion -> (string)\n\nThe version of the bot associated with the slot type.\n\nlocaleId -> (string)\n\nThe language and locale specified for the slot type.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot type was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot type was last updated."
    },
    {
      "command_name": "list-aggregated-utterances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-aggregated-utterances.html",
      "command_description": "Description\n\nProvides a list of utterances that users have sent to the bot.\n\nUtterances are aggregated by the text of the utterance. For example, all instances where customers used the phrase “I want to order pizza” are aggregated into the same line in the response.\n\nYou can see both detected utterances and missed utterances. A detected utterance is where the bot properly recognized the utterance and activated the associated intent. A missed utterance was not recognized by the bot and didn’t activate an intent.\n\nUtterances can be aggregated for a bot alias or for a bot version, but not both at the same time.\n\nUtterances statistics are not generated under the following conditions:\n\nThe childDirected field was set to true when the bot was created.\n\nYou are using slot obfuscation with one or more slots.\n\nYou opted out of participating in improving Amazon Lex.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-aggregated-utterances\n--bot-id <value>\n[--bot-alias-id <value>]\n[--bot-version <value>]\n--locale-id <value>\n--aggregation-duration <value>\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--bot-alias-id <value>]",
        "[--bot-version <value>]",
        "--locale-id <value>",
        "--aggregation-duration <value>",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot associated with this request.\n\n--bot-alias-id (string)\n\nThe identifier of the bot alias associated with this request. If you specify the bot alias, you can’t specify the bot version.\n\n--bot-version (string)\n\nThe identifier of the bot version associated with this request. If you specify the bot version, you can’t specify the bot alias.\n\n--locale-id (string)\n\nThe identifier of the language and locale where the utterances were collected. For more information, see Supported languages .\n\n--aggregation-duration (structure)\n\nThe time window for aggregating the utterance information. You can specify a time between one hour and two weeks.\n\nrelativeAggregationDuration -> (structure)\n\nThe desired time window for aggregating utterances.\n\ntimeDimension -> (string)\n\nThe type of time period that the timeValue field represents.\n\ntimeValue -> (integer)\n\nThe period of the time window to gather statistics for. The valid value depends on the setting of the timeDimension field.\n\nHours - 1/3/6/12/24\n\nDays - 3\n\nWeeks - 1/2\n\nShorthand Syntax:\n\nrelativeAggregationDuration={timeDimension=string,timeValue=integer}\n\n\nJSON Syntax:\n\n{\n  \"relativeAggregationDuration\": {\n    \"timeDimension\": \"Hours\"|\"Days\"|\"Weeks\",\n    \"timeValue\": integer\n  }\n}\n\n\n--sort-by (structure)\n\nSpecifies sorting parameters for the list of utterances. You can sort by the hit count, the missed count, or the number of distinct sessions the utterance appeared in.\n\nattribute -> (string)\n\nThe utterance attribute to sort by.\n\norder -> (string)\n\nSpecifies whether to sort the aggregated utterances in ascending or descending order.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"HitCount\"|\"MissedCount\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the utterances in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n\n(structure)\n\nFilters responses returned by the ListAggregatedUtterances operation.\n\nname -> (string)\n\nThe name of the field to filter the utterance list.\n\nvalues -> (list)\n\nThe value to use for filtering the list of bots.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListAggregatedUtterances operation should return only utterances that equal the specified value. Specify CO when the ListAggregatedUtterances operation should return utterances that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"Utterance\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of utterances to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned. If you don’t specify the maxResults parameter, 1,000 results are returned.\n\n--next-token (string)\n\nIf the response from the ListAggregatedUtterances operation contains more results that specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the utterances.\n\nbotAliasId -> (string)\n\nThe identifier of the bot alias that contains the utterances. If you specified the bot version, the bot alias ID isn’t returned.\n\nbotVersion -> (string)\n\nThe identifier of the bot version that contains the utterances. If you specified the bot alias, the bot version isn’t returned.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale that the utterances are in.\n\naggregationDuration -> (structure)\n\nThe time period used to aggregate the utterance data.\n\nrelativeAggregationDuration -> (structure)\n\nThe desired time window for aggregating utterances.\n\ntimeDimension -> (string)\n\nThe type of time period that the timeValue field represents.\n\ntimeValue -> (integer)\n\nThe period of the time window to gather statistics for. The valid value depends on the setting of the timeDimension field.\n\nHours - 1/3/6/12/24\n\nDays - 3\n\nWeeks - 1/2\n\naggregationWindowStartTime -> (timestamp)\n\nThe date and time that the aggregation window begins. Only data collected after this time is returned in the results.\n\naggregationWindowEndTime -> (timestamp)\n\nThe date and time that the aggregation window ends. Only data collected between the start time and the end time are returned in the results.\n\naggregationLastRefreshedDateTime -> (timestamp)\n\nThe last date and time that the aggregated data was collected. The time period depends on the length of the aggregation window.\n\nHours - for 1 hour time window, every half hour; otherwise every hour.\n\nDays - every 6 hours\n\nWeeks - for a one week time window, every 12 hours; otherwise, every day\n\naggregatedUtterancesSummaries -> (list)\n\nSummaries of the aggregated utterance data. Each response contains information about the number of times that the utterance was seen during the time period, whether it was detected or missed, and when it was seen during the time period.\n\n(structure)\n\nProvides summary information for aggregated utterances. The ListAggregatedUtterances operations combines all instances of the same utterance into a single aggregated summary.\n\nutterance -> (string)\n\nThe text of the utterance. If the utterance was used with the RecognizeUtterance operation, the text is the transcription of the audio utterance.\n\nhitCount -> (integer)\n\nThe number of times that the utterance was detected by Amazon Lex during the time period. When an utterance is detected, it activates an intent or a slot.\n\nmissedCount -> (integer)\n\nThe number of times that the utterance was missed by Amazon Lex An utterance is missed when it doesn’t activate an intent or slot.\n\nutteranceFirstRecordedInAggregationDuration -> (timestamp)\n\nThe date and time that the utterance was first recorded in the time window for aggregation. An utterance may have been sent to Amazon Lex before that time, but only utterances within the time window are counted.\n\nutteranceLastRecordedInAggregationDuration -> (timestamp)\n\nThe last date and time that an utterance was recorded in the time window for aggregation. An utterance may be sent to Amazon Lex after that time, but only utterances within the time window are counted.\n\ncontainsDataFromDeletedResources -> (boolean)\n\nAggregated utterance data may contain utterances from versions of your bot that have since been deleted. When the aggregated contains this kind of data, this field is set to true.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListAggregatedUtterances operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListAggregatedUtterances operation request to get the next page of results."
    },
    {
      "command_name": "list-bot-aliases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-bot-aliases.html",
      "command_description": "Description\n\nGets a list of aliases for the specified bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-bot-aliases\n--bot-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to list aliases for.\n\n--max-results (integer)\n\nThe maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListBotAliases operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotAliasSummaries -> (list)\n\nSummary information for the bot aliases that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more aliases available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nSummary information about bot aliases returned from the ListBotAliases operation.\n\nbotAliasId -> (string)\n\nThe unique identifier assigned to the bot alias. You can use this ID to get detailed information about the alias using the DescribeBotAlias operation.\n\nbotAliasName -> (string)\n\nThe name of the bot alias.\n\ndescription -> (string)\n\nThe description of the bot alias.\n\nbotVersion -> (string)\n\nThe version of the bot that the bot alias references.\n\nbotAliasStatus -> (string)\n\nThe current state of the bot alias. If the status is Available , the alias is ready for use.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot alias was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot alias was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBotAliases operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBotAliases operation request to get the next page of results.\n\nbotId -> (string)\n\nThe identifier of the bot associated with the aliases."
    },
    {
      "command_name": "list-bot-locales",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-bot-locales.html",
      "command_description": "Description\n\nGets a list of locales for the specified bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-bot-locales\n--bot-id <value>\n--bot-version <value>\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to list locales for.\n\n--bot-version (string)\n\nThe version of the bot to list locales for.\n\n--sort-by (structure)\n\nSpecifies sorting parameters for the list of locales. You can sort by locale name in ascending or descending order.\n\nattribute -> (string)\n\nThe bot locale attribute to sort by.\n\norder -> (string)\n\nSpecifies whether to sort the bot locales in ascending or descending order.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"BotLocaleName\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification for a filter used to limit the response to only those locales that match the filter specification. You can only specify one filter and one value to filter on.\n\n(structure)\n\nFilters responses returned by the ListBotLocales operation.\n\nname -> (string)\n\nThe name of the field to filter the list of bots.\n\nvalues -> (list)\n\nThe value to use for filtering the list of bots.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListBotLocales operation should return only aliases that equal the specified value. Specify CO when the ListBotLocales operation should return aliases that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"BotLocaleName\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of aliases to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListBotLocales operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token as the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot to list locales for.\n\nbotVersion -> (string)\n\nThe version of the bot.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBotLocales operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBotLocales operation request to get the next page of results.\n\nbotLocaleSummaries -> (list)\n\nSummary information for the locales that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more locales available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nSummary information about bot locales returned by the ListBotLocales operation.\n\nlocaleId -> (string)\n\nThe language and locale of the bot locale.\n\nlocaleName -> (string)\n\nThe name of the bot locale.\n\ndescription -> (string)\n\nThe description of the bot locale.\n\nbotLocaleStatus -> (string)\n\nThe current status of the bot locale. When the status is Built the locale is ready for use.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot locale was last updated.\n\nlastBuildSubmittedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot locale was last built."
    },
    {
      "command_name": "list-bot-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-bot-versions.html",
      "command_description": "Description\n\nGets information about all of the versions of a bot.\n\nThe ListBotVersions operation returns a summary of each version of a bot. For example, if a bot has three numbered versions, the ListBotVersions operation returns for summaries, one for each numbered version and one for the DRAFT version.\n\nThe ListBotVersions operation always returns at least one version, the DRAFT version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-bot-versions\n--bot-id <value>\n[--sort-by <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot to list versions for.\n\n--sort-by (structure)\n\nSpecifies sorting parameters for the list of versions. You can specify that the list be sorted by version name in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of versions.\n\norder -> (string)\n\nThe order to sort the list. You can specify ascending or descending order.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"BotVersion\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--max-results (integer)\n\nThe maximum number of versions to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response to the ListBotVersion operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot to list versions for.\n\nbotVersionSummaries -> (list)\n\nSummary information for the bot versions that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more versions available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nSummary information about a bot version returned by the ListBotVersions operation.\n\nbotName -> (string)\n\nThe name of the bot associated with the version.\n\nbotVersion -> (string)\n\nThe numeric version of the bot, or DRAFT to indicate that this is the version of the bot that can be updated..\n\ndescription -> (string)\n\nThe description of the version.\n\nbotStatus -> (string)\n\nThe status of the bot. When the status is available, the version of the bot is ready for use.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the version was created.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBotVersions operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBotAliases operation request to get the next page of results."
    },
    {
      "command_name": "list-bots",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-bots.html",
      "command_description": "Description\n\nGets a list of available bots.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-bots\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--sort-by (structure)\n\nSpecifies sorting parameters for the list of bots. You can specify that the list be sorted by bot name in ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of bots.\n\norder -> (string)\n\nThe order to sort the list. You can choose ascending or descending.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"BotName\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n\n(structure)\n\nFilters the responses returned by the ListBots operation.\n\nname -> (string)\n\nThe name of the field to filter the list of bots.\n\nvalues -> (list)\n\nThe value to use for filtering the list of bots.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListBots operation should return only aliases that equal the specified value. Specify CO when the ListBots operation should return aliases that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"BotName\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of bots to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListBots operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotSummaries -> (list)\n\nSummary information for the bots that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more bots available, the nextToken field contains a token to the next page of results.\n\n(structure)\n\nSummary information about a bot returned by the ListBots operation.\n\nbotId -> (string)\n\nThe unique identifier assigned to the bot. Use this ID to get detailed information about the bot with the DescribeBot operation.\n\nbotName -> (string)\n\nThe name of the bot.\n\ndescription -> (string)\n\nThe description of the bot.\n\nbotStatus -> (string)\n\nThe current status of the bot. When the status is Available the bot is ready for use.\n\nlatestBotVersion -> (string)\n\nThe latest numerical version in use for the bot.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the bot was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBots operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBots operation request to get the next page of results."
    },
    {
      "command_name": "list-built-in-intents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-built-in-intents.html",
      "command_description": "Description\n\nGets a list of built-in intents provided by Amazon Lex that you can use in your bot.\n\nTo use a built-in intent as a the base for your own intent, include the built-in intent signature in the parentIntentSignature parameter when you call the CreateIntent operation. For more information, see CreateIntent .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-built-in-intents\n--locale-id <value>\n[--sort-by <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--locale-id <value>",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--locale-id (string)\n\nThe identifier of the language and locale of the intents to list. The string must match one of the supported locales. For more information, see Supported languages .\n\n--sort-by (structure)\n\nSpecifies sorting parameters for the list of built-in intents. You can specify that the list be sorted by the built-in intent signature in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of built-in intents.\n\norder -> (string)\n\nThe order to sort the list. You can specify ascending or descending order.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"IntentSignature\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--max-results (integer)\n\nThe maximum number of built-in intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListBuiltInIntents operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuiltInIntentSummaries -> (list)\n\nSummary information for the built-in intents that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more intents available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nProvides summary information about a built-in intent for the ListBuiltInIntents operation.\n\nintentSignature -> (string)\n\nThe signature of the built-in intent. Use this to specify the parent intent of a derived intent.\n\ndescription -> (string)\n\nThe description of the intent.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBuiltInIntents operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBotAliases operation request to get the next page of results.\n\nlocaleId -> (string)\n\nThe language and locale of the intents in the list."
    },
    {
      "command_name": "list-built-in-slot-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-built-in-slot-types.html",
      "command_description": "Description\n\nGets a list of built-in slot types that meet the specified criteria.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-built-in-slot-types\n--locale-id <value>\n[--sort-by <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--locale-id <value>",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--locale-id (string)\n\nThe identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see Supported languages .\n\n--sort-by (structure)\n\nDetermines the sort order for the response from the ListBuiltInSlotTypes operation. You can choose to sort by the slot type signature in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of built-in intents.\n\norder -> (string)\n\nThe order to sort the list. You can choose ascending or descending.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"SlotTypeSignature\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--max-results (integer)\n\nThe maximum number of built-in slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListBuiltInSlotTypes operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbuiltInSlotTypeSummaries -> (list)\n\nSummary information for the built-in slot types that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more slot types available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nProvides summary information about a built-in slot type for the ListBuiltInSlotTypes operation.\n\nslotTypeSignature -> (string)\n\nThe signature of the built-in slot type. Use this to specify the parent slot type of a derived slot type.\n\ndescription -> (string)\n\nThe description of the built-in slot type.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListBuiltInSlotTypes operation. If the nextToken field is present, you send the contents as the nextToken parameter of a LIstBuiltInSlotTypes operation request to get the next page of results.\n\nlocaleId -> (string)\n\nThe language and locale of the slot types in the list."
    },
    {
      "command_name": "list-exports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-exports.html",
      "command_description": "Description\n\nLists the exports for a bot or bot locale. Exports are kept in the list for 7 days.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-exports\n[--bot-id <value>]\n[--bot-version <value>]\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--bot-id <value>]",
        "[--bot-version <value>]",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier that Amazon Lex assigned to the bot.\n\n--bot-version (string)\n\nThe version of the bot to list exports for.\n\n--sort-by (structure)\n\nDetermines the field that the list of exports is sorted by. You can sort by the LastUpdatedDateTime field in ascending or descending order.\n\nattribute -> (string)\n\nThe export field to use for sorting.\n\norder -> (string)\n\nThe order to sort the list.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"LastUpdatedDateTime\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the exports in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n\n(structure)\n\nFilters the response form the operation\n\nname -> (string)\n\nThe name of the field to use for filtering.\n\nvalues -> (list)\n\nThe values to use to filter the response.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListExports operation should return only resource types that equal the specified value. Specify CO when the ListExports operation should return resource types that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"ExportResourceType\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of exports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListExports operation contains more results that specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe unique identifier assigned to the bot by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported.\n\nexportSummaries -> (list)\n\nSummary information for the exports that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter. If there are more exports available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nProvides summary information about an export in an export list.\n\nexportId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the export.\n\nresourceSpecification -> (structure)\n\nInformation about the bot or bot locale that was exported.\n\nbotExportSpecification -> (structure)\n\nParameters for exporting a bot.\n\nbotId -> (string)\n\nThe identifier of the bot assigned by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported. This will be either DRAFT or the version number.\n\nbotLocaleExportSpecification -> (structure)\n\nParameters for exporting a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to create the locale for.\n\nbotVersion -> (string)\n\nThe version of the bot to export.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale to export. The string must match one of the locales in the bot.\n\nfileFormat -> (string)\n\nThe file format used in the export files.\n\nexportStatus -> (string)\n\nThe status of the export. When the status is Completed the export is ready to download.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the export was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the export was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListExports operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListExports operation request to get the next page of results."
    },
    {
      "command_name": "list-imports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-imports.html",
      "command_description": "Description\n\nLists the imports for a bot or bot locale. Imports are kept in the list for 7 days.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-imports\n[--bot-id <value>]\n[--bot-version <value>]\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--bot-id <value>]",
        "[--bot-version <value>]",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier that Amazon Lex assigned to the bot.\n\n--bot-version (string)\n\nThe version of the bot to list imports for.\n\n--sort-by (structure)\n\nDetermines the field that the list of imports is sorted by. You can sort by the LastUpdatedDateTime field in ascending or descending order.\n\nattribute -> (string)\n\nThe export field to use for sorting.\n\norder -> (string)\n\nThe order to sort the list.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"LastUpdatedDateTime\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.\n\n(structure)\n\nFilters the response from the operation.\n\nname -> (string)\n\nThe name of the field to use for filtering.\n\nvalues -> (list)\n\nThe values to use to filter the response.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListImports operation should return only resource types that equal the specified value. Specify CO when the ListImports operation should return resource types that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"ImportResourceType\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of imports to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListImports operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe unique identifier assigned by Amazon Lex to the bot.\n\nbotVersion -> (string)\n\nThe version of the bot that was imported. It will always be DRAFT .\n\nimportSummaries -> (list)\n\nSummary information for the imports that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter. If there are more imports available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nProvides summary information about an import in an import list.\n\nimportId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the import.\n\nimportedResourceId -> (string)\n\nThe unique identifier that Amazon Lex assigned to the imported resource.\n\nimportedResourceName -> (string)\n\nThe name that you gave the imported resource.\n\nimportStatus -> (string)\n\nThe status of the resource. When the status is Completed the resource is ready to build.\n\nmergeStrategy -> (string)\n\nThe strategy used to merge existing bot or bot locale definitions with the imported definition.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the import was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the import was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListImports operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListImports operation request to get the next page of results."
    },
    {
      "command_name": "list-intents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-intents.html",
      "command_description": "Description\n\nGet a list of intents that meet the specified criteria.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-intents\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the intent.\n\n--bot-version (string)\n\nThe version of the bot that contains the intent.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the intents to list. The string must match one of the supported locales. For more information, see Supported languages .\n\n--sort-by (structure)\n\nDetermines the sort order for the response from the ListIntents operation. You can choose to sort by the intent name or last updated date in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of intents.\n\norder -> (string)\n\nThe order to sort the list. You can choose ascending or descending.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"IntentName\"|\"LastUpdatedDateTime\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the intents in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n\n(structure)\n\nFilters the response from the ListIntents operation.\n\nname -> (string)\n\nThe name of the field to use for the filter.\n\nvalues -> (list)\n\nThe value to use for the filter.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListIntents operation should return only aliases that equal the specified value. Specify CO when the ListIntents operation should return aliases that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"IntentName\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of intents to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListIntents operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the intent.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the intent.\n\nlocaleId -> (string)\n\nThe language and locale of the intents in the list.\n\nintentSummaries -> (list)\n\nSummary information for the intents that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more intents available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nSummary information about an intent returned by the ListIntents operation.\n\nintentId -> (string)\n\nThe unique identifier assigned to the intent. Use this ID to get detailed information about the intent with the DescribeIntent operation.\n\nintentName -> (string)\n\nThe name of the intent.\n\ndescription -> (string)\n\nThe description of the intent.\n\nparentIntentSignature -> (string)\n\nIf this intent is derived from a built-in intent, the name of the parent intent.\n\ninputContexts -> (list)\n\nThe input contexts that must be active for this intent to be considered for recognition.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nThe output contexts that are activated when this intent is fulfilled.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe timestamp of the date and time that the intent was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListIntents operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListIntents operation request to get the next page of results."
    },
    {
      "command_name": "list-slot-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-slot-types.html",
      "command_description": "Description\n\nGets a list of slot types that match the specified criteria.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-slot-types\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the slot types.\n\n--bot-version (string)\n\nThe version of the bot that contains the slot type.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see Supported languages .\n\n--sort-by (structure)\n\nDetermines the sort order for the response from the ListSlotTypes operation. You can choose to sort by the slot type name or last updated date in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list of slot types.\n\norder -> (string)\n\nThe order to sort the list. You can say ascending or descending.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"SlotTypeName\"|\"LastUpdatedDateTime\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n\n(structure)\n\nFilters the response from the ListSlotTypes operation.\n\nname -> (string)\n\nThe name of the field to use for filtering.\n\nvalues -> (list)\n\nThe value to use to filter the response.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListSlotTypes operation should return only aliases that equal the specified value. Specify CO when the ListSlotTypes operation should return aliases that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"SlotTypeName\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListSlotTypes operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the slot types.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the slot types.\n\nlocaleId -> (string)\n\nThe language and local of the slot types in the list.\n\nslotTypeSummaries -> (list)\n\nSummary information for the slot types that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more slot types available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nProvides summary information about a slot type.\n\nslotTypeId -> (string)\n\nThe unique identifier assigned to the slot type.\n\nslotTypeName -> (string)\n\nThe name of the slot type.\n\ndescription -> (string)\n\nThe description of the slot type.\n\nparentSlotTypeSignature -> (string)\n\nIf the slot type is derived from a built-on slot type, the name of the parent slot type.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot type was last updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListSlotTypes operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListSlotTypes operation request to get the next page of results."
    },
    {
      "command_name": "list-slots",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-slots.html",
      "command_description": "Description\n\nGets a list of slots that match the specified criteria.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-slots\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n--intent-id <value>\n[--sort-by <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "--intent-id <value>",
        "[--sort-by <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe identifier of the bot that contains the slot.\n\n--bot-version (string)\n\nThe version of the bot that contains the slot.\n\n--locale-id (string)\n\nThe identifier of the language and locale of the slots to list. The string must match one of the supported locales. For more information, see Supported languages .\n\n--intent-id (string)\n\nThe unique identifier of the intent that contains the slot.\n\n--sort-by (structure)\n\nDetermines the sort order for the response from the ListSlots operation. You can choose to sort by the slot name or last updated date in either ascending or descending order.\n\nattribute -> (string)\n\nThe attribute to use to sort the list.\n\norder -> (string)\n\nThe order to sort the list. You can choose ascending or descending.\n\nShorthand Syntax:\n\nattribute=string,order=string\n\n\nJSON Syntax:\n\n{\n  \"attribute\": \"SlotName\"|\"LastUpdatedDateTime\",\n  \"order\": \"Ascending\"|\"Descending\"\n}\n\n\n--filters (list)\n\nProvides the specification of a filter used to limit the slots in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.\n\n(structure)\n\nFilters the response from the ListSlots operation.\n\nname -> (string)\n\nThe name of the field to use for filtering.\n\nvalues -> (list)\n\nThe value to use to filter the response.\n\n(string)\n\noperator -> (string)\n\nThe operator to use for the filter. Specify EQ when the ListSlots operation should return only aliases that equal the specified value. Specify CO when the ListSlots operation should return aliases that contain the specified value.\n\nShorthand Syntax:\n\nname=string,values=string,string,operator=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"SlotName\",\n    \"values\": [\"string\", ...],\n    \"operator\": \"CO\"|\"EQ\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of slots to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.\n\n--next-token (string)\n\nIf the response from the ListSlots operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the slots.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the slots.\n\nlocaleId -> (string)\n\nThe language and locale of the slots in the list.\n\nintentId -> (string)\n\nThe identifier of the intent that contains the slots.\n\nslotSummaries -> (list)\n\nSummary information for the slots that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more slots available, the nextToken field contains a token to get the next page of results.\n\n(structure)\n\nSummary information about a slot, a value that the bot elicits from the user.\n\nslotId -> (string)\n\nThe unique identifier of the slot.\n\nslotName -> (string)\n\nThe name given to the slot.\n\ndescription -> (string)\n\nThe description of the slot.\n\nslotConstraint -> (string)\n\nWhether the slot is required or optional. An intent is complete when all required slots are filled.\n\nslotTypeId -> (string)\n\nThe unique identifier for the slot type that defines the values for the slot.\n\nvalueElicitationPromptSpecification -> (structure)\n\nPrompts that are sent to the user to elicit a value for the slot.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe timestamp of the last date and time that the slot was updated.\n\nnextToken -> (string)\n\nA token that indicates whether there are more results to return in a response to the ListSlots operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListSlots operation request to get the next page of results."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/list-tags-for-resource.html",
      "command_description": "Description\n\nGets a list of tags associated with a resource. Only bots, bot aliases, and bot channels can have tags associated with them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to get a list of tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe tags associated with a resource.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "start-import",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/start-import.html",
      "command_description": "Description\n\nStarts importing a bot or bot locale from a zip archive that you uploaded to an S3 bucket.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-import\n--import-id <value>\n--resource-specification <value>\n--merge-strategy <value>\n[--file-password <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--import-id <value>",
        "--resource-specification <value>",
        "--merge-strategy <value>",
        "[--file-password <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--import-id (string)\n\nThe unique identifier for the import. It is included in the response from the operation.\n\n--resource-specification (structure)\n\nParameters for creating the bot or bot locale.\n\nbotImportSpecification -> (structure)\n\nParameters for importing a bot.\n\nbotName -> (string)\n\nThe name that Amazon Lex should use for the bot.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to build and run the bot.\n\ndataPrivacy -> (structure)\n\nBy default, data stored by Amazon Lex is encrypted. The DataPrivacy structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe time, in seconds, that Amazon Lex should keep information about a user’s conversation with the bot.\n\nA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\n\nbotTags -> (map)\n\nA list of tags to add to the bot. You can only add tags when you import a bot. You can’t use the UpdateBot operation to update tags. To update tags, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\ntestBotAliasTags -> (map)\n\nA list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can’t use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nbotLocaleImportSpecification -> (structure)\n\nParameters for importing a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to import the locale to.\n\nbotVersion -> (string)\n\nThe version of the bot to import the locale to. This can only be the DRAFT version of the bot.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages .\n\nnluIntentConfidenceThreshold -> (double)\n\nDetermines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n\nFor example, suppose a bot is configured with the confidence threshold of 0.80 and the AMAZON.FallbackIntent . Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\n\nAMAZON.FallbackIntent\n\nIntentA\n\nIntentB\n\nIntentC\n\nvoiceSettings -> (structure)\n\nDefines settings for using an Amazon Polly voice to communicate with a user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nShorthand Syntax:\n\nbotImportSpecification={botName=string,roleArn=string,dataPrivacy={childDirected=boolean},idleSessionTTLInSeconds=integer,botTags={KeyName1=string,KeyName2=string},testBotAliasTags={KeyName1=string,KeyName2=string}},botLocaleImportSpecification={botId=string,botVersion=string,localeId=string,nluIntentConfidenceThreshold=double,voiceSettings={voiceId=string}}\n\n\nJSON Syntax:\n\n{\n  \"botImportSpecification\": {\n    \"botName\": \"string\",\n    \"roleArn\": \"string\",\n    \"dataPrivacy\": {\n      \"childDirected\": true|false\n    },\n    \"idleSessionTTLInSeconds\": integer,\n    \"botTags\": {\"string\": \"string\"\n      ...},\n    \"testBotAliasTags\": {\"string\": \"string\"\n      ...}\n  },\n  \"botLocaleImportSpecification\": {\n    \"botId\": \"string\",\n    \"botVersion\": \"string\",\n    \"localeId\": \"string\",\n    \"nluIntentConfidenceThreshold\": double,\n    \"voiceSettings\": {\n      \"voiceId\": \"string\"\n    }\n  }\n}\n\n\n--merge-strategy (string)\n\nThe strategy to use when there is a name conflict between the imported resource and an existing resource. When the merge strategy is FailOnConflict existing resources are not overwritten and the import fails.\n\nPossible values:\n\nOverwrite\n\nFailOnConflict\n\n--file-password (string)\n\nThe password used to encrypt the zip archive that contains the bot or bot locale definition. You should always encrypt the zip archive to protect it during transit between your site and Amazon Lex.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nimportId -> (string)\n\nA unique identifier for the import.\n\nresourceSpecification -> (structure)\n\nThe parameters used when importing the bot or bot locale.\n\nbotImportSpecification -> (structure)\n\nParameters for importing a bot.\n\nbotName -> (string)\n\nThe name that Amazon Lex should use for the bot.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used to build and run the bot.\n\ndataPrivacy -> (structure)\n\nBy default, data stored by Amazon Lex is encrypted. The DataPrivacy structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe time, in seconds, that Amazon Lex should keep information about a user’s conversation with the bot.\n\nA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\n\nbotTags -> (map)\n\nA list of tags to add to the bot. You can only add tags when you import a bot. You can’t use the UpdateBot operation to update tags. To update tags, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\ntestBotAliasTags -> (map)\n\nA list of tags to add to the test alias for a bot. You can only add tags when you import a bot. You can’t use the UpdateAlias operation to update tags. To update tags on the test alias, use the TagResource operation.\n\nkey -> (string)\n\nvalue -> (string)\n\nbotLocaleImportSpecification -> (structure)\n\nParameters for importing a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to import the locale to.\n\nbotVersion -> (string)\n\nThe version of the bot to import the locale to. This can only be the DRAFT version of the bot.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages .\n\nnluIntentConfidenceThreshold -> (double)\n\nDetermines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent , AMAZON.KendraSearchIntent , or both when returning alternative intents. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n\nFor example, suppose a bot is configured with the confidence threshold of 0.80 and the AMAZON.FallbackIntent . Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the PostText operation would be:\n\nAMAZON.FallbackIntent\n\nIntentA\n\nIntentB\n\nIntentC\n\nvoiceSettings -> (structure)\n\nDefines settings for using an Amazon Polly voice to communicate with a user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nmergeStrategy -> (string)\n\nThe strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is FailOnConflict existing resources are not overwritten and the import fails.\n\nimportStatus -> (string)\n\nThe current status of the import. When the status is Complete the bot or bot alias is ready to use.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the import request was created."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/tag-resource.html",
      "command_description": "Description\n\nAdds the specified tags to the specified resource. If a tag key already exists, the existing value is replaced with the new value.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot, bot alias, or bot channel to tag.\n\n--tags (map)\n\nA list of tag keys to add to the resource. If a tag key already exists, the existing value is replaced with the new value.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a bot, bot alias, or bot channel.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to remove the tags from.\n\n--tag-keys (list)\n\nA list of tag keys to remove from the resource. If a tag key does not exist on the resource, it is ignored.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-bot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-bot.html",
      "command_description": "Description\n\nUpdates the configuration of an existing bot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-bot\n--bot-id <value>\n--bot-name <value>\n[--description <value>]\n--role-arn <value>\n--data-privacy <value>\n--idle-session-ttl-in-seconds <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-name <value>",
        "[--description <value>]",
        "--role-arn <value>",
        "--data-privacy <value>",
        "--idle-session-ttl-in-seconds <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot to update. This identifier is returned by the CreateBot operation.\n\n--bot-name (string)\n\nThe new name of the bot. The name must be unique in the account that creates the bot.\n\n--description (string)\n\nA description of the bot.\n\n--role-arn (string)\n\nThe Amazon Resource Name (ARN) of an IAM role that has permissions to access the bot.\n\n--data-privacy (structure)\n\nProvides information on additional privacy protections Amazon Lex should use with the bot’s data.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nShorthand Syntax:\n\nchildDirected=boolean\n\n\nJSON Syntax:\n\n{\n  \"childDirected\": true|false\n}\n\n\n--idle-session-ttl-in-seconds (integer)\n\nThe time, in seconds, that Amazon Lex should keep information about a user’s conversation with the bot.\n\nA user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.\n\nYou can specify between 60 (1 minute) and 86,400 (24 hours) seconds.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe unique identifier of the bot that was updated.\n\nbotName -> (string)\n\nThe name of the bot after the update.\n\ndescription -> (string)\n\nThe description of the bot after the update.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used by the bot after the update.\n\ndataPrivacy -> (structure)\n\nThe data privacy settings for the bot after the update.\n\nchildDirected -> (boolean)\n\nFor each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children’s Online Privacy Protection Act (COPPA) by specifying true or false in the childDirected field. By specifying true in the childDirected field, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying false in the childDirected field, you confirm that your use of Amazon Lex is not related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the childDirected field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the Amazon Lex FAQ .\n\nidleSessionTTLInSeconds -> (integer)\n\nThe session timeout, in seconds, for the bot after the update.\n\nbotStatus -> (string)\n\nShows the current status of the bot. The bot is first in the Creating status. Once the bot is read for use, it changes to the Available status. After the bot is created, you can use the DRAFT version of the bot.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was last updated."
    },
    {
      "command_name": "update-bot-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-bot-alias.html",
      "command_description": "Description\n\nUpdates the configuration of an existing bot alias.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-bot-alias\n--bot-alias-id <value>\n--bot-alias-name <value>\n[--description <value>]\n[--bot-version <value>]\n[--bot-alias-locale-settings <value>]\n[--conversation-log-settings <value>]\n[--sentiment-analysis-settings <value>]\n--bot-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-alias-id <value>",
        "--bot-alias-name <value>",
        "[--description <value>]",
        "[--bot-version <value>]",
        "[--bot-alias-locale-settings <value>]",
        "[--conversation-log-settings <value>]",
        "[--sentiment-analysis-settings <value>]",
        "--bot-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-alias-id (string)\n\nThe unique identifier of the bot alias.\n\n--bot-alias-name (string)\n\nThe new name to assign to the bot alias.\n\n--description (string)\n\nThe new description to assign to the bot alias.\n\n--bot-version (string)\n\nThe new bot version to assign to the bot alias.\n\n--bot-alias-locale-settings (map)\n\nThe new Lambda functions to use in each locale for the bot alias.\n\nkey -> (string)\n\nvalue -> (structure)\n\nSpecifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot’s locale.\n\nenabled -> (boolean)\n\nDetermines whether the locale is enabled for the bot. If the value is false , the locale isn’t available for use.\n\ncodeHookSpecification -> (structure)\n\nSpecifies the Lambda function that should be used in the locale.\n\nlambdaCodeHook -> (structure)\n\nSpecifies a Lambda function that verifies requests to a bot or fulfills the user’s request to a bot.\n\nlambdaARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\ncodeHookInterfaceVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\nShorthand Syntax:\n\nKeyName1=enabled=boolean,codeHookSpecification={lambdaCodeHook={lambdaARN=string,codeHookInterfaceVersion=string}},KeyName2=enabled=boolean,codeHookSpecification={lambdaCodeHook={lambdaARN=string,codeHookInterfaceVersion=string}}\n\n\nJSON Syntax:\n\n{\"string\": {\n      \"enabled\": true|false,\n      \"codeHookSpecification\": {\n        \"lambdaCodeHook\": {\n          \"lambdaARN\": \"string\",\n          \"codeHookInterfaceVersion\": \"string\"\n        }\n      }\n    }\n  ...}\n\n\n--conversation-log-settings (structure)\n\nThe new settings for storing conversation logs in Amazon CloudWatch Logs and Amazon S3 buckets.\n\ntextLogSettings -> (list)\n\nThe Amazon CloudWatch Logs settings for logging text and metadata.\n\n(structure)\n\nDefines settings to enable text conversation logs.\n\nenabled -> (boolean)\n\nDetermines whether conversation logs should be stored for an alias.\n\ndestination -> (structure)\n\nDefines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\ncloudWatch -> (structure)\n\nDefines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n\ncloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n\nlogPrefix -> (string)\n\nThe prefix of the log stream name within the log group that you specified\n\naudioLogSettings -> (list)\n\nThe Amazon S3 settings for logging audio to an S3 bucket.\n\n(structure)\n\nSettings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\nenabled -> (boolean)\n\nDetermines whether audio logging in enabled for the bot.\n\ndestination -> (structure)\n\nThe location of audio log files collected when conversation logging is enabled for a bot.\n\ns3Bucket -> (structure)\n\nThe Amazon S3 bucket where the audio log files are stored. The IAM role specified in the roleArn parameter of the CreateBot operation must have permission to write to this bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\nlogPrefix -> (string)\n\nThe S3 prefix to assign to audio log files.\n\nJSON Syntax:\n\n{\n  \"textLogSettings\": [\n    {\n      \"enabled\": true|false,\n      \"destination\": {\n        \"cloudWatch\": {\n          \"cloudWatchLogGroupArn\": \"string\",\n          \"logPrefix\": \"string\"\n        }\n      }\n    }\n    ...\n  ],\n  \"audioLogSettings\": [\n    {\n      \"enabled\": true|false,\n      \"destination\": {\n        \"s3Bucket\": {\n          \"kmsKeyArn\": \"string\",\n          \"s3BucketArn\": \"string\",\n          \"logPrefix\": \"string\"\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--sentiment-analysis-settings (structure)\n\nDetermines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\ndetectSentiment -> (boolean)\n\nSets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n\nShorthand Syntax:\n\ndetectSentiment=boolean\n\n\nJSON Syntax:\n\n{\n  \"detectSentiment\": true|false\n}\n\n\n--bot-id (string)\n\nThe identifier of the bot with the updated alias.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotAliasId -> (string)\n\nThe identifier of the updated bot alias.\n\nbotAliasName -> (string)\n\nThe updated name of the bot alias.\n\ndescription -> (string)\n\nThe updated description of the bot alias.\n\nbotVersion -> (string)\n\nThe updated version of the bot that the alias points to.\n\nbotAliasLocaleSettings -> (map)\n\nThe updated Lambda functions to use in each locale for the bot alias.\n\nkey -> (string)\n\nvalue -> (structure)\n\nSpecifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot’s locale.\n\nenabled -> (boolean)\n\nDetermines whether the locale is enabled for the bot. If the value is false , the locale isn’t available for use.\n\ncodeHookSpecification -> (structure)\n\nSpecifies the Lambda function that should be used in the locale.\n\nlambdaCodeHook -> (structure)\n\nSpecifies a Lambda function that verifies requests to a bot or fulfills the user’s request to a bot.\n\nlambdaARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Lambda function.\n\ncodeHookInterfaceVersion -> (string)\n\nThe version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\nconversationLogSettings -> (structure)\n\nThe updated settings for storing conversation logs in Amazon CloudWatch Logs and Amazon S3 buckets.\n\ntextLogSettings -> (list)\n\nThe Amazon CloudWatch Logs settings for logging text and metadata.\n\n(structure)\n\nDefines settings to enable text conversation logs.\n\nenabled -> (boolean)\n\nDetermines whether conversation logs should be stored for an alias.\n\ndestination -> (structure)\n\nDefines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\ncloudWatch -> (structure)\n\nDefines the Amazon CloudWatch Logs log group where text and metadata logs are delivered.\n\ncloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the log group where text and metadata logs are delivered.\n\nlogPrefix -> (string)\n\nThe prefix of the log stream name within the log group that you specified\n\naudioLogSettings -> (list)\n\nThe Amazon S3 settings for logging audio to an S3 bucket.\n\n(structure)\n\nSettings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\nenabled -> (boolean)\n\nDetermines whether audio logging in enabled for the bot.\n\ndestination -> (structure)\n\nThe location of audio log files collected when conversation logging is enabled for a bot.\n\ns3Bucket -> (structure)\n\nThe Amazon S3 bucket where the audio log files are stored. The IAM role specified in the roleArn parameter of the CreateBot operation must have permission to write to this bucket.\n\nkmsKeyArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\ns3BucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\nlogPrefix -> (string)\n\nThe S3 prefix to assign to audio log files.\n\nsentimentAnalysisSettings -> (structure)\n\nDetermines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\ndetectSentiment -> (boolean)\n\nSets whether Amazon Lex uses Amazon Comprehend to detect the sentiment of user utterances.\n\nbotAliasStatus -> (string)\n\nThe current status of the bot alias. When the status is Available the alias is ready for use.\n\nbotId -> (string)\n\nThe identifier of the bot with the updated alias.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the bot was last updated."
    },
    {
      "command_name": "update-bot-locale",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-bot-locale.html",
      "command_description": "Description\n\nUpdates the settings that a bot has for a specific locale.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-bot-locale\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--description <value>]\n--nlu-intent-confidence-threshold <value>\n[--voice-settings <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--description <value>]",
        "--nlu-intent-confidence-threshold <value>",
        "[--voice-settings <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the locale.\n\n--bot-version (string)\n\nThe version of the bot that contains the locale to be updated. The version can only be the DRAFT version.\n\n--locale-id (string)\n\nThe identifier of the language and locale to update. The string must match one of the supported locales. For more information, see Supported languages .\n\n--description (string)\n\nThe new description of the locale.\n\n--nlu-intent-confidence-threshold (double)\n\nThe new confidence threshold where Amazon Lex inserts the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents in the list of possible intents for an utterance.\n\n--voice-settings (structure)\n\nThe new Amazon Polly voice Amazon Lex should use for voice interaction with the user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nShorthand Syntax:\n\nvoiceId=string\n\n\nJSON Syntax:\n\n{\n  \"voiceId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nbotId -> (string)\n\nThe identifier of the bot that contains the updated locale.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the updated locale.\n\nlocaleId -> (string)\n\nThe language and locale of the updated bot locale.\n\nlocaleName -> (string)\n\nThe updated locale name for the locale.\n\ndescription -> (string)\n\nThe updated description of the locale.\n\nnluIntentConfidenceThreshold -> (double)\n\nThe updated confidence threshold for inserting the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents in the list of possible intents for an utterance.\n\nvoiceSettings -> (structure)\n\nThe updated Amazon Polly voice to use for voice interaction with the user.\n\nvoiceId -> (string)\n\nThe identifier of the Amazon Polly voice to use.\n\nbotLocaleStatus -> (string)\n\nThe current status of the locale. When the bot status is Built the locale is ready for use.\n\nfailureReasons -> (list)\n\nIf the botLocaleStatus is Failed , the failureReasons field lists the errors that occurred while building the bot.\n\n(string)\n\ncreationDateTime -> (timestamp)\n\nA timestamp of the date and time that the locale was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the locale was last updated."
    },
    {
      "command_name": "update-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-export.html",
      "command_description": "Description\n\nUpdates the password used to protect an export zip archive.\n\nThe password is not required. If you don’t supply a password, Amazon Lex generates a zip file that is not protected by a password. This is the archive that is available at the pre-signed S3 URL provided by the operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-export\n--export-id <value>\n[--file-password <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--export-id <value>",
        "[--file-password <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-id (string)\n\nThe unique identifier Amazon Lex assigned to the export.\n\n--file-password (string)\n\nThe new password to use to encrypt the export zip archive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nThe unique identifier Amazon Lex assigned to the export.\n\nresourceSpecification -> (structure)\n\nA description of the type of resource that was exported, either a bot or a bot locale.\n\nbotExportSpecification -> (structure)\n\nParameters for exporting a bot.\n\nbotId -> (string)\n\nThe identifier of the bot assigned by Amazon Lex.\n\nbotVersion -> (string)\n\nThe version of the bot that was exported. This will be either DRAFT or the version number.\n\nbotLocaleExportSpecification -> (structure)\n\nParameters for exporting a bot locale.\n\nbotId -> (string)\n\nThe identifier of the bot to create the locale for.\n\nbotVersion -> (string)\n\nThe version of the bot to export.\n\nlocaleId -> (string)\n\nThe identifier of the language and locale to export. The string must match one of the locales in the bot.\n\nfileFormat -> (string)\n\nThe file format used for the files that define the resource.\n\nexportStatus -> (string)\n\nThe status of the export. When the status is Completed the export archive is available for download.\n\ncreationDateTime -> (timestamp)\n\nThe date and time that the export was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe date and time that the export was last updated."
    },
    {
      "command_name": "update-intent",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-intent.html",
      "command_description": "Description\n\nUpdates the settings for an intent.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-intent\n--intent-id <value>\n--intent-name <value>\n[--description <value>]\n[--parent-intent-signature <value>]\n[--sample-utterances <value>]\n[--dialog-code-hook <value>]\n[--fulfillment-code-hook <value>]\n[--slot-priorities <value>]\n[--intent-confirmation-setting <value>]\n[--intent-closing-setting <value>]\n[--input-contexts <value>]\n[--output-contexts <value>]\n[--kendra-configuration <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--intent-id <value>",
        "--intent-name <value>",
        "[--description <value>]",
        "[--parent-intent-signature <value>]",
        "[--sample-utterances <value>]",
        "[--dialog-code-hook <value>]",
        "[--fulfillment-code-hook <value>]",
        "[--slot-priorities <value>]",
        "[--intent-confirmation-setting <value>]",
        "[--intent-closing-setting <value>]",
        "[--input-contexts <value>]",
        "[--output-contexts <value>]",
        "[--kendra-configuration <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--intent-id (string)\n\nThe unique identifier of the intent to update.\n\n--intent-name (string)\n\nThe new name for the intent.\n\n--description (string)\n\nThe new description of the intent.\n\n--parent-intent-signature (string)\n\nThe signature of the new built-in intent to use as the parent of this intent.\n\n--sample-utterances (list)\n\nNew utterances used to invoke the intent.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nShorthand Syntax:\n\nutterance=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"utterance\": \"string\"\n  }\n  ...\n]\n\n\n--dialog-code-hook (structure)\n\nThe new Lambda function to use between each turn of the conversation with the bot.\n\nenabled -> (boolean)\n\nEnables the dialog code hook so that it processes user requests.\n\nShorthand Syntax:\n\nenabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false\n}\n\n\n--fulfillment-code-hook (structure)\n\nThe new Lambda function to call when all of the intents required slots are provided and the intent is ready for fulfillment.\n\nenabled -> (boolean)\n\nIndicates whether a Lambda function should be invoked to fulfill a specific intent.\n\npostFulfillmentStatusSpecification -> (structure)\n\nProvides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.\n\nsuccessResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfailureResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ntimeoutResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfulfillmentUpdatesSpecification -> (structure)\n\nProvides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.\n\nactive -> (boolean)\n\nDetermines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\nIf the active field is set to true, the startResponse , updateResponse , and timeoutInSeconds fields are required.\n\nstartResponse -> (structure)\n\nProvides configuration information for the message sent to users when the fulfillment Lambda functions starts running.\n\ndelayInSeconds -> (integer)\n\nThe delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn’t played.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt the start message while it is playing.\n\nupdateResponse -> (structure)\n\nProvides configuration information for messages sent periodically to the user while the fulfillment Lambda function is running.\n\nfrequencyInSeconds -> (integer)\n\nThe frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt an update message while it is playing.\n\ntimeoutInSeconds -> (integer)\n\nThe length of time that the fulfillment Lambda function should run before it times out.\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false,\n  \"postFulfillmentStatusSpecification\": {\n    \"successResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"failureResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"timeoutResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    }\n  },\n  \"fulfillmentUpdatesSpecification\": {\n    \"active\": true|false,\n    \"startResponse\": {\n      \"delayInSeconds\": integer,\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"updateResponse\": {\n      \"frequencyInSeconds\": integer,\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"timeoutInSeconds\": integer\n  }\n}\n\n\n--slot-priorities (list)\n\nA new list of slots and their priorities that are contained by the intent.\n\n(structure)\n\nSets the priority that Amazon Lex should use when eliciting slot values from a user.\n\npriority -> (integer)\n\nThe priority that a slot should be elicited.\n\nslotId -> (string)\n\nThe unique identifier of the slot.\n\nShorthand Syntax:\n\npriority=integer,slotId=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"priority\": integer,\n    \"slotId\": \"string\"\n  }\n  ...\n]\n\n\n--intent-confirmation-setting (structure)\n\nNew prompts that Amazon Lex sends to the user to confirm the completion of an intent.\n\npromptSpecification -> (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\ndeclinationResponse -> (structure)\n\nWhen the user answers “no” to the question defined in promptSpecification , Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether the intent’s confirmation is sent to the user. When this field is false, confirmation and declination responses aren’t sent. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"promptSpecification\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"maxRetries\": integer,\n    \"allowInterrupt\": true|false\n  },\n  \"declinationResponse\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"allowInterrupt\": true|false\n  },\n  \"active\": true|false\n}\n\n\n--intent-closing-setting (structure)\n\nThe new response that Amazon Lex sends the user when the intent is closed.\n\nclosingResponse -> (structure)\n\nThe response that Amazon Lex sends to the user when the intent is complete.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether an intent’s closing response is used. When this field is false, the closing response isn’t sent to the user. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"closingResponse\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"allowInterrupt\": true|false\n  },\n  \"active\": true|false\n}\n\n\n--input-contexts (list)\n\nA new list of contexts that must be active in order for Amazon Lex to consider the intent.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\nShorthand Syntax:\n\nname=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\"\n  }\n  ...\n]\n\n\n--output-contexts (list)\n\nA new list of contexts that Amazon Lex activates when the intent is fulfilled.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nShorthand Syntax:\n\nname=string,timeToLiveInSeconds=integer,turnsToLive=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"timeToLiveInSeconds\": integer,\n    \"turnsToLive\": integer\n  }\n  ...\n]\n\n\n--kendra-configuration (structure)\n\nNew configuration settings for connecting to an Amazon Kendra index.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n\nqueryFilterStringEnabled -> (boolean)\n\nDetermines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nShorthand Syntax:\n\nkendraIndex=string,queryFilterStringEnabled=boolean,queryFilterString=string\n\n\nJSON Syntax:\n\n{\n  \"kendraIndex\": \"string\",\n  \"queryFilterStringEnabled\": true|false,\n  \"queryFilterString\": \"string\"\n}\n\n\n--bot-id (string)\n\nThe identifier of the bot that contains the intent.\n\n--bot-version (string)\n\nThe version of the bot that contains the intent. Must be DRAFT .\n\n--locale-id (string)\n\nThe identifier of the language and locale where this intent is used. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nintentId -> (string)\n\nThe identifier of the intent that was updated.\n\nintentName -> (string)\n\nThe updated name of the intent.\n\ndescription -> (string)\n\nThe updated description of the intent.\n\nparentIntentSignature -> (string)\n\nThe updated built-in intent that is the parent of this intent.\n\nsampleUtterances -> (list)\n\nThe updated list of sample utterances for the intent.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\ndialogCodeHook -> (structure)\n\nThe updated Lambda function called during each turn of the conversation with the user.\n\nenabled -> (boolean)\n\nEnables the dialog code hook so that it processes user requests.\n\nfulfillmentCodeHook -> (structure)\n\nThe updated Lambda function called when the intent is ready for fulfillment.\n\nenabled -> (boolean)\n\nIndicates whether a Lambda function should be invoked to fulfill a specific intent.\n\npostFulfillmentStatusSpecification -> (structure)\n\nProvides settings for messages sent to the user for after the Lambda fulfillment function completes. Post-fulfillment messages can be sent for both streaming and non-streaming conversations.\n\nsuccessResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfailureResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ntimeoutResponse -> (structure)\n\nSpecifies a list of message groups that Amazon Lex uses to respond the user input.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nfulfillmentUpdatesSpecification -> (structure)\n\nProvides settings for update messages sent to the user for long-running Lambda fulfillment functions. Fulfillment updates can be used only with streaming conversations.\n\nactive -> (boolean)\n\nDetermines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\nIf the active field is set to true, the startResponse , updateResponse , and timeoutInSeconds fields are required.\n\nstartResponse -> (structure)\n\nProvides configuration information for the message sent to users when the fulfillment Lambda functions starts running.\n\ndelayInSeconds -> (integer)\n\nThe delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn’t played.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain start messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt the start message while it is playing.\n\nupdateResponse -> (structure)\n\nProvides configuration information for messages sent periodically to the user while the fulfillment Lambda function is running.\n\nfrequencyInSeconds -> (integer)\n\nThe frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\nmessageGroups -> (list)\n\nOne to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nDetermines whether the user can interrupt an update message while it is playing.\n\ntimeoutInSeconds -> (integer)\n\nThe length of time that the fulfillment Lambda function should run before it times out.\n\nslotPriorities -> (list)\n\nThe updated list of slots and their priorities that are elicited from the user for the intent.\n\n(structure)\n\nSets the priority that Amazon Lex should use when eliciting slot values from a user.\n\npriority -> (integer)\n\nThe priority that a slot should be elicited.\n\nslotId -> (string)\n\nThe unique identifier of the slot.\n\nintentConfirmationSetting -> (structure)\n\nThe updated prompts that Amazon Lex sends to the user to confirm the completion of an intent.\n\npromptSpecification -> (structure)\n\nPrompts the user to confirm the intent. This question should have a yes or no answer.\n\nAmazon Lex uses this prompt to ensure that the user acknowledges that the intent is ready for fulfillment. For example, with the OrderPizza intent, you might want to confirm that the order is correct before placing it. For other intents, such as intents that simply respond to user questions, you might not need to ask the user for confirmation before providing the information.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\ndeclinationResponse -> (structure)\n\nWhen the user answers “no” to the question defined in promptSpecification , Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether the intent’s confirmation is sent to the user. When this field is false, confirmation and declination responses aren’t sent. If the active field isn’t specified, the default is true.\n\nintentClosingSetting -> (structure)\n\nThe updated response that Amazon Lex sends the user when the intent is closed.\n\nclosingResponse -> (structure)\n\nThe response that Amazon Lex sends to the user when the intent is complete.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nactive -> (boolean)\n\nSpecifies whether an intent’s closing response is used. When this field is false, the closing response isn’t sent to the user. If the active field isn’t specified, the default is true.\n\ninputContexts -> (list)\n\nThe updated list of contexts that must be active for the intent to be considered by Amazon Lex.\n\n(structure)\n\nThe name of a context that must be active for an intent to be selected by Amazon Lex.\n\nname -> (string)\n\nThe name of the context.\n\noutputContexts -> (list)\n\nThe updated list of contexts that Amazon Lex activates when the intent is fulfilled.\n\n(structure)\n\nDescribes a session context that is activated when an intent is fulfilled.\n\nname -> (string)\n\nThe name of the output context.\n\ntimeToLiveInSeconds -> (integer)\n\nThe amount of time, in seconds, that the output context should remain active. The time is figured from the first time the context is sent to the user.\n\nturnsToLive -> (integer)\n\nThe number of conversation turns that the output context should remain active. The number of turns is counted from the first time that the context is sent to the user.\n\nkendraConfiguration -> (structure)\n\nThe updated configuration for connecting to an Amazon Kendra index with the AMAZON.KendraSearchIntent intent.\n\nkendraIndex -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search. The index must be in the same account and Region as the Amazon Lex bot.\n\nqueryFilterStringEnabled -> (boolean)\n\nDetermines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\nqueryFilterString -> (string)\n\nA query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query. The filter is in the format defined by Amazon Kendra. For more information, see Filtering queries .\n\nbotId -> (string)\n\nThe identifier of the bot that contains the intent.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the intent. Will always be DRAFT .\n\nlocaleId -> (string)\n\nThe updated language and locale of the intent.\n\ncreationDateTime -> (timestamp)\n\nA timestamp of when the intent was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the last time that the intent was modified."
    },
    {
      "command_name": "update-resource-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-resource-policy.html",
      "command_description": "Description\n\nReplaces the existing resource policy for a bot or bot alias with a new one. If the policy doesn’t exist, Amazon Lex returns an exception.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resource-policy\n--resource-arn <value>\n--policy <value>\n[--expected-revision-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--policy <value>",
        "[--expected-revision-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\n--policy (string)\n\nA resource policy to add to the resource. The policy is a JSON structure that contains one or more statements that define the policy. The policy must follow the IAM syntax. For more information about the contents of a JSON policy document, see IAM JSON policy reference .\n\nIf the policy isn’t valid, Amazon Lex returns a validation exception.\n\n--expected-revision-id (string)\n\nThe identifier of the revision of the policy to update. If this revision ID doesn’t match the current revision ID, Amazon Lex throws an exception.\n\nIf you don’t specify a revision, Amazon Lex overwrites the contents of the policy with the new values.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nresourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.\n\nrevisionId -> (string)\n\nThe current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
    },
    {
      "command_name": "update-slot",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-slot.html",
      "command_description": "Description\n\nUpdates the settings for a slot.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-slot\n--slot-id <value>\n--slot-name <value>\n[--description <value>]\n--slot-type-id <value>\n--value-elicitation-setting <value>\n[--obfuscation-setting <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n--intent-id <value>\n[--multiple-values-setting <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-id <value>",
        "--slot-name <value>",
        "[--description <value>]",
        "--slot-type-id <value>",
        "--value-elicitation-setting <value>",
        "[--obfuscation-setting <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "--intent-id <value>",
        "[--multiple-values-setting <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-id (string)\n\nThe unique identifier for the slot to update.\n\n--slot-name (string)\n\nThe new name for the slot.\n\n--description (string)\n\nThe new description for the slot.\n\n--slot-type-id (string)\n\nThe unique identifier of the new slot type to associate with this slot.\n\n--value-elicitation-setting (structure)\n\nA new set of prompts that Amazon Lex sends to the user to elicit a response the provides a value for the slot.\n\ndefaultValueSpecification -> (structure)\n\nA list of default values for a slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nA list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n\n(structure)\n\nSpecifies the default value to use when a user doesn’t provide a value for a slot.\n\ndefaultValue -> (string)\n\nThe default value to use when a user doesn’t provide a value for a slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\npromptSpecification -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nwaitAndContinueSpecification -> (structure)\n\nSpecifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\nwaitingResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ncontinueResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nstillWaitingResponse -> (structure)\n\nA response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\nmessageGroups -> (list)\n\nOne or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nfrequencyInSeconds -> (integer)\n\nHow often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.\n\ntimeoutInSeconds -> (integer)\n\nIf Amazon Lex waits longer than this length of time for a response, it will stop sending messages.\n\nallowInterrupt -> (boolean)\n\nIndicates that the user can interrupt the response by speaking while the message is being played.\n\nactive -> (boolean)\n\nSpecifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren’t used. If the active field isn’t specified, the default is true.\n\nJSON Syntax:\n\n{\n  \"defaultValueSpecification\": {\n    \"defaultValueList\": [\n      {\n        \"defaultValue\": \"string\"\n      }\n      ...\n    ]\n  },\n  \"slotConstraint\": \"Required\"|\"Optional\",\n  \"promptSpecification\": {\n    \"messageGroups\": [\n      {\n        \"message\": {\n          \"plainTextMessage\": {\n            \"value\": \"string\"\n          },\n          \"customPayload\": {\n            \"value\": \"string\"\n          },\n          \"ssmlMessage\": {\n            \"value\": \"string\"\n          },\n          \"imageResponseCard\": {\n            \"title\": \"string\",\n            \"subtitle\": \"string\",\n            \"imageUrl\": \"string\",\n            \"buttons\": [\n              {\n                \"text\": \"string\",\n                \"value\": \"string\"\n              }\n              ...\n            ]\n          }\n        },\n        \"variations\": [\n          {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          }\n          ...\n        ]\n      }\n      ...\n    ],\n    \"maxRetries\": integer,\n    \"allowInterrupt\": true|false\n  },\n  \"sampleUtterances\": [\n    {\n      \"utterance\": \"string\"\n    }\n    ...\n  ],\n  \"waitAndContinueSpecification\": {\n    \"waitingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"continueResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"allowInterrupt\": true|false\n    },\n    \"stillWaitingResponse\": {\n      \"messageGroups\": [\n        {\n          \"message\": {\n            \"plainTextMessage\": {\n              \"value\": \"string\"\n            },\n            \"customPayload\": {\n              \"value\": \"string\"\n            },\n            \"ssmlMessage\": {\n              \"value\": \"string\"\n            },\n            \"imageResponseCard\": {\n              \"title\": \"string\",\n              \"subtitle\": \"string\",\n              \"imageUrl\": \"string\",\n              \"buttons\": [\n                {\n                  \"text\": \"string\",\n                  \"value\": \"string\"\n                }\n                ...\n              ]\n            }\n          },\n          \"variations\": [\n            {\n              \"plainTextMessage\": {\n                \"value\": \"string\"\n              },\n              \"customPayload\": {\n                \"value\": \"string\"\n              },\n              \"ssmlMessage\": {\n                \"value\": \"string\"\n              },\n              \"imageResponseCard\": {\n                \"title\": \"string\",\n                \"subtitle\": \"string\",\n                \"imageUrl\": \"string\",\n                \"buttons\": [\n                  {\n                    \"text\": \"string\",\n                    \"value\": \"string\"\n                  }\n                  ...\n                ]\n              }\n            }\n            ...\n          ]\n        }\n        ...\n      ],\n      \"frequencyInSeconds\": integer,\n      \"timeoutInSeconds\": integer,\n      \"allowInterrupt\": true|false\n    },\n    \"active\": true|false\n  }\n}\n\n\n--obfuscation-setting (structure)\n\nNew settings that determine how slot values are formatted in Amazon CloudWatch logs.\n\nobfuscationSettingType -> (string)\n\nValue that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\nShorthand Syntax:\n\nobfuscationSettingType=string\n\n\nJSON Syntax:\n\n{\n  \"obfuscationSettingType\": \"None\"|\"DefaultObfuscation\"\n}\n\n\n--bot-id (string)\n\nThe unique identifier of the bot that contains the slot.\n\n--bot-version (string)\n\nThe version of the bot that contains the slot. Must always be DRAFT .\n\n--locale-id (string)\n\nThe identifier of the language and locale that contains the slot. The string must match one of the supported locales. For more information, see Supported languages .\n\n--intent-id (string)\n\nThe identifier of the intent that contains the slot.\n\n--multiple-values-setting (structure)\n\nDetermines whether the slot accepts multiple values in one response. Multiple value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the multipleValuesSetting is not set, the default value is false .\n\nallowMultipleValues -> (boolean)\n\nIndicates whether a slot can return multiple values. When true , the slot may return more than one value in a response. When false , the slot returns only a single value.\n\nMulti-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the allowMutlipleValues is not set, the default value is false .\n\nShorthand Syntax:\n\nallowMultipleValues=boolean\n\n\nJSON Syntax:\n\n{\n  \"allowMultipleValues\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotId -> (string)\n\nThe unique identifier of the slot that was updated.\n\nslotName -> (string)\n\nThe updated name of the slot.\n\ndescription -> (string)\n\nThe updated description of the bot.\n\nslotTypeId -> (string)\n\nThe updated identifier of the slot type that provides values for the slot.\n\nvalueElicitationSetting -> (structure)\n\nThe updated prompts that Amazon Lex sends to the user to elicit a response that provides a value for the slot.\n\ndefaultValueSpecification -> (structure)\n\nA list of default values for a slot. Default values are used when Amazon Lex hasn’t determined a value for a slot. You can specify default values from context variables, session attributes, and defined values.\n\ndefaultValueList -> (list)\n\nA list of default values. Amazon Lex chooses the default value to use in the order that they are presented in the list.\n\n(structure)\n\nSpecifies the default value to use when a user doesn’t provide a value for a slot.\n\ndefaultValue -> (string)\n\nThe default value to use when a user doesn’t provide a value for a slot.\n\nslotConstraint -> (string)\n\nSpecifies whether the slot is required or optional.\n\npromptSpecification -> (structure)\n\nThe prompt that Amazon Lex uses to elicit the slot value from the user.\n\nmessageGroups -> (list)\n\nA collection of messages that Amazon Lex can send to the user. Amazon Lex chooses the actual message to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nmaxRetries -> (integer)\n\nThe maximum number of times the bot tries to elicit a response from the user using this prompt.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech prompt from the bot.\n\nsampleUtterances -> (list)\n\nIf you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.\n\n(structure)\n\nA sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\nutterance -> (string)\n\nThe sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents.\n\nwaitAndContinueSpecification -> (structure)\n\nSpecifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\nwaitingResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\ncontinueResponse -> (structure)\n\nThe response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\nmessageGroups -> (list)\n\nA collection of responses that Amazon Lex can send to the user. Amazon Lex chooses the actual response to send at runtime.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nallowInterrupt -> (boolean)\n\nIndicates whether the user can interrupt a speech response from Amazon Lex.\n\nstillWaitingResponse -> (structure)\n\nA response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\nmessageGroups -> (list)\n\nOne or more message groups, each containing one or more messages, that define the prompts that Amazon Lex sends to the user.\n\n(structure)\n\nProvides one or more messages that Amazon Lex should send to the user.\n\nmessage -> (structure)\n\nThe primary message that Amazon Lex should send to the user.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nvariations -> (list)\n\nMessage variations to send to the user. When variations are defined, Amazon Lex chooses the primary message or one of the variations to send to the user.\n\n(structure)\n\nThe object that provides message text and it’s type.\n\nplainTextMessage -> (structure)\n\nA message in plain text format.\n\nvalue -> (string)\n\nThe message to send to the user.\n\ncustomPayload -> (structure)\n\nA message in a custom format defined by the client application.\n\nvalue -> (string)\n\nThe string that is sent to your application.\n\nssmlMessage -> (structure)\n\nA message in Speech Synthesis Markup Language (SSML).\n\nvalue -> (string)\n\nThe SSML text that defines the prompt.\n\nimageResponseCard -> (structure)\n\nA message that defines a response card that the client application can show to the user.\n\ntitle -> (string)\n\nThe title to display on the response card. The format of the title is determined by the platform displaying the response card.\n\nsubtitle -> (string)\n\nThe subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n\nimageUrl -> (string)\n\nThe URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n\nbuttons -> (list)\n\nA list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n\n(structure)\n\nDescribes a button to use on a response card used to gather slot values from a user.\n\ntext -> (string)\n\nThe text that appears on the button. Use this to tell the user what value is returned when they choose this button.\n\nvalue -> (string)\n\nThe value returned to Amazon Lex when the user chooses this button. This must be one of the slot values configured for the slot.\n\nfrequencyInSeconds -> (integer)\n\nHow often a message should be sent to the user. Minimum of 1 second, maximum of 5 minutes.\n\ntimeoutInSeconds -> (integer)\n\nIf Amazon Lex waits longer than this length of time for a response, it will stop sending messages.\n\nallowInterrupt -> (boolean)\n\nIndicates that the user can interrupt the response by speaking while the message is being played.\n\nactive -> (boolean)\n\nSpecifies whether the bot will wait for a user to respond. When this field is false, wait and continue responses for a slot aren’t used. If the active field isn’t specified, the default is true.\n\nobfuscationSetting -> (structure)\n\nThe updated setting that determines whether the slot value is obfuscated in the Amazon CloudWatch logs.\n\nobfuscationSettingType -> (string)\n\nValue that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\nbotId -> (string)\n\nThe identifier of the bot that contains the slot.\n\nbotVersion -> (string)\n\nThe identifier of the slot version that contains the slot. Will always be DRAFT .\n\nlocaleId -> (string)\n\nThe locale that contains the slot.\n\nintentId -> (string)\n\nThe intent that contains the slot.\n\ncreationDateTime -> (timestamp)\n\nThe timestamp of the date and time that the slot was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nThe timestamp of the date and time that the slot was last updated.\n\nmultipleValuesSetting -> (structure)\n\nIndicates whether the slot accepts multiple values in one response.\n\nallowMultipleValues -> (boolean)\n\nIndicates whether a slot can return multiple values. When true , the slot may return more than one value in a response. When false , the slot returns only a single value.\n\nMulti-value slots are only available in the en-US locale. If you set this value to true in any other locale, Amazon Lex throws a ValidationException .\n\nIf the allowMutlipleValues is not set, the default value is false ."
    },
    {
      "command_name": "update-slot-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/update-slot-type.html",
      "command_description": "Description\n\nUpdates the configuration of an existing slot type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-slot-type\n--slot-type-id <value>\n--slot-type-name <value>\n[--description <value>]\n[--slot-type-values <value>]\n--value-selection-setting <value>\n[--parent-slot-type-signature <value>]\n--bot-id <value>\n--bot-version <value>\n--locale-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--slot-type-id <value>",
        "--slot-type-name <value>",
        "[--description <value>]",
        "[--slot-type-values <value>]",
        "--value-selection-setting <value>",
        "[--parent-slot-type-signature <value>]",
        "--bot-id <value>",
        "--bot-version <value>",
        "--locale-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--slot-type-id (string)\n\nThe unique identifier of the slot type to update.\n\n--slot-type-name (string)\n\nThe new name of the slot type.\n\n--description (string)\n\nThe new description of the slot type.\n\n--slot-type-values (list)\n\nA new list of values and their optional synonyms that define the values that the slot type can take.\n\n(structure)\n\nEach slot type can have a set of values. Each SlotTypeValue represents a value that the slot type can take.\n\nsampleValue -> (structure)\n\nThe value of the slot type entry.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type entry.\n\n(structure)\n\nDefines one of the values for a slot type.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nShorthand Syntax:\n\nsampleValue={value=string},synonyms=[{value=string},{value=string}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"sampleValue\": {\n      \"value\": \"string\"\n    },\n    \"synonyms\": [\n      {\n        \"value\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--value-selection-setting (structure)\n\nThe strategy that Amazon Lex should use when deciding on a value from the list of slot type values.\n\nresolutionStrategy -> (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy, the default is OriginalValue.\n\nregexFilter -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nShorthand Syntax:\n\nresolutionStrategy=string,regexFilter={pattern=string}\n\n\nJSON Syntax:\n\n{\n  \"resolutionStrategy\": \"OriginalValue\"|\"TopResolution\",\n  \"regexFilter\": {\n    \"pattern\": \"string\"\n  }\n}\n\n\n--parent-slot-type-signature (string)\n\nThe new built-in slot type that should be used as the parent of this slot type.\n\n--bot-id (string)\n\nThe identifier of the bot that contains the slot type.\n\n--bot-version (string)\n\nThe version of the bot that contains the slot type. Must be DRAFT .\n\n--locale-id (string)\n\nThe identifier of the language and locale that contains the slot type. The string must match one of the supported locales. For more information, see Supported languages .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nslotTypeId -> (string)\n\nThe unique identifier of the updated slot type.\n\nslotTypeName -> (string)\n\nThe updated name of the slot type.\n\ndescription -> (string)\n\nThe updated description of the slot type.\n\nslotTypeValues -> (list)\n\nThe updated values that the slot type provides.\n\n(structure)\n\nEach slot type can have a set of values. Each SlotTypeValue represents a value that the slot type can take.\n\nsampleValue -> (structure)\n\nThe value of the slot type entry.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nsynonyms -> (list)\n\nAdditional values related to the slot type entry.\n\n(structure)\n\nDefines one of the values for a slot type.\n\nvalue -> (string)\n\nThe value that can be used for a slot type.\n\nvalueSelectionSetting -> (structure)\n\nThe updated strategy that Amazon Lex uses to determine which value to select from the slot type.\n\nresolutionStrategy -> (string)\n\nDetermines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:\n\nOriginalValue - Returns the value entered by the user, if the user value is similar to the slot value.\n\nTopResolution - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.\n\nIf you don’t specify the valueSelectionStrategy, the default is OriginalValue.\n\nregexFilter -> (structure)\n\nA regular expression used to validate the value of a slot.\n\npattern -> (string)\n\nA regular expression used to validate the value of a slot.\n\nUse a standard regular expression. Amazon Lex supports the following characters in the regular expression:\n\nA-Z, a-z\n\n0-9\n\nUnicode characters (“u<Unicode>”)\n\nRepresent Unicode characters with four digits, for example “u0041” or “u005A”.\n\nThe following regular expression operators are not supported:\n\nInfinite repeaters: *, +, or {x,} with no upper bound.\n\nWild card (.)\n\nparentSlotTypeSignature -> (string)\n\nThe updated signature of the built-in slot type that is the parent of this slot type.\n\nbotId -> (string)\n\nThe identifier of the bot that contains the slot type.\n\nbotVersion -> (string)\n\nThe version of the bot that contains the slot type. This is always DRAFT .\n\nlocaleId -> (string)\n\nThe language and locale of the updated slot type.\n\ncreationDateTime -> (timestamp)\n\nThe timestamp of the date and time that the slot type was created.\n\nlastUpdatedDateTime -> (timestamp)\n\nA timestamp of the date and time that the slot type was last updated."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lexv2-models/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description"
}