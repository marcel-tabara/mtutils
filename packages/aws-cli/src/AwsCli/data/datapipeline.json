{
  "service_name": "datapipeline",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/index.html",
  "service_commands": [
    {
      "command_name": "activate-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/activate-pipeline.html",
      "command_description": "Description\n\nValidates the specified pipeline and starts processing pipeline tasks. If the pipeline does not pass validation, activation fails.\n\nIf you need to pause the pipeline to investigate an issue with a component, such as a data source or script, call DeactivatePipeline .\n\nTo activate a finished pipeline, modify the end date for the pipeline and then activate it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  activate-pipeline\n--pipeline-id <value>\n[--parameter-values <value>]\n[--start-timestamp <value>]\n[--parameter-values-uri <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--parameter-values <value>]",
        "[--start-timestamp <value>]",
        "[--parameter-values-uri <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--parameter-values (string) The JSON parameter values. You can specify these as key-value pairs in the key=value format. Multiple parameters are separated by a space. For list type parameter values you can use the same key name and specify each value as a key value pair. e.g. arrayValue=value1 arrayValue=value2\n\n--start-timestamp (timestamp)\n\nThe date and time to resume the pipeline. By default, the pipeline resumes from the last completed execution.\n\n--parameter-values-uri (string) The JSON parameter values. If the parameter values are in a file you can use the file://syntax to specify a filename. You can optionally provide these in pipeline definition as well. Parameter values provided on command line would replace the one in definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo activate a pipeline\n\nThis example activates the specified pipeline:\n\naws datapipeline activate-pipeline --pipeline-id df-00627471SOVYZEXAMPLE\n\n\nTo activate the pipeline at a specific date and time, use the following command:\n\naws datapipeline activate-pipeline --pipeline-id df-00627471SOVYZEXAMPLE --start-timestamp 2015-04-07T00:00:00Z\n"
    },
    {
      "command_name": "add-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/add-tags.html",
      "command_description": "Description\n\nAdds or modifies tags for the specified pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  add-tags\n--pipeline-id <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--tags (list)\n\nThe tags to add, as key/value pairs.\n\n(structure)\n\nTags are key/value pairs defined by a user and associated with a pipeline to control access. AWS Data Pipeline allows you to associate ten tags per pipeline. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nkey -> (string)\n\nThe key name of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nvalue -> (string)\n\nThe optional value portion of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to a pipeline\n\nThis example adds the specified tag to the specified pipeline:\n\naws datapipeline add-tags --pipeline-id df-00627471SOVYZEXAMPLE --tags key=environment,value=production key=owner,value=sales\n\n\nTo view the tags, use the describe-pipelines command. For example, the tags added in the example command appear as follows in the output for describe-pipelines:\n\n{\n    ...\n        \"tags\": [\n            {\n                \"value\": \"production\",\n                \"key\": \"environment\"\n            },\n            {\n                \"value\": \"sales\",\n                \"key\": \"owner\"\n            }\n        ]\n    ...\n}\n"
    },
    {
      "command_name": "create-default-roles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/create-default-roles.html",
      "command_description": "Description\n\nCreates the default IAM role DataPipelineDefaultRole and DataPipelineDefaultResourceRole which are used while creating an EMR cluster. If the roles do not exist, create-default-roles will automatically create them and set their policies. If these roles are already created create-default-roles will not update their policies.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\ncreate-default-roles\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters."
    },
    {
      "command_name": "create-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/create-pipeline.html",
      "command_description": "Description\n\nCreates a new, empty pipeline. Use PutPipelineDefinition to populate the pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-pipeline\n--name <value>\n--unique-id <value>\n[--description <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--unique-id <value>",
        "[--description <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name for the pipeline. You can use the same name for multiple pipelines associated with your AWS account, because AWS Data Pipeline assigns each pipeline a unique pipeline identifier.\n\n--unique-id (string)\n\nA unique identifier. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline. You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this parameter to ensure idempotency during repeated calls to CreatePipeline . For example, if the first call to CreatePipeline does not succeed, you can pass in the same unique identifier and pipeline name combination on a subsequent call to CreatePipeline . CreatePipeline ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline is not created. Instead, you’ll receive the pipeline identifier from the previous attempt. The uniqueness of the name and unique identifier combination is scoped to the AWS account or IAM user credentials.\n\n--description (string)\n\nThe description for the pipeline.\n\n--tags (list)\n\nA list of tags to associate with the pipeline at creation. Tags let you control access to pipelines. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\n(structure)\n\nTags are key/value pairs defined by a user and associated with a pipeline to control access. AWS Data Pipeline allows you to associate ten tags per pipeline. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nkey -> (string)\n\nThe key name of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nvalue -> (string)\n\nThe optional value portion of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineId -> (string)\n\nThe ID that AWS Data Pipeline assigns the newly created pipeline. For example, df-06372391ZG65EXAMPLE .",
      "command_examples": "Examples\n\nTo create a pipeline\n\nThis example creates a pipeline:\n\naws datapipeline create-pipeline --name my-pipeline --unique-id my-pipeline-token\n\n\nThe following is example output:\n\n{\n    \"pipelineId\": \"df-00627471SOVYZEXAMPLE\"\n}\n"
    },
    {
      "command_name": "deactivate-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/deactivate-pipeline.html",
      "command_description": "Description\n\nDeactivates the specified running pipeline. The pipeline is set to the DEACTIVATING state until the deactivation process completes.\n\nTo resume a deactivated pipeline, use ActivatePipeline . By default, the pipeline resumes from the last completed execution. Optionally, you can specify the date and time to resume the pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deactivate-pipeline\n--pipeline-id <value>\n[--cancel-active | --no-cancel-active]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--cancel-active | --no-cancel-active]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--cancel-active | --no-cancel-active (boolean)\n\nIndicates whether to cancel any running objects. The default is true, which sets the state of any running objects to CANCELED . If this value is false, the pipeline is deactivated after all running objects finish.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deactivate a pipeline\n\nThis example deactivates the specified pipeline:\n\naws datapipeline deactivate-pipeline --pipeline-id df-00627471SOVYZEXAMPLE\n\n\nTo deactivate the pipeline only after all running activities finish, use the following command:\n\naws datapipeline deactivate-pipeline --pipeline-id df-00627471SOVYZEXAMPLE --no-cancel-active\n"
    },
    {
      "command_name": "delete-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/delete-pipeline.html",
      "command_description": "Description\n\nDeletes a pipeline, its pipeline definition, and its run history. AWS Data Pipeline attempts to cancel instances associated with the pipeline that are currently being processed by task runners.\n\nDeleting a pipeline cannot be undone. You cannot query or restore a deleted pipeline. To temporarily pause a pipeline instead of deleting it, call SetStatus with the status set to PAUSE on individual components. Components that are paused by SetStatus can be resumed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-pipeline\n--pipeline-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a pipeline\n\nThis example deletes the specified pipeline:\n\naws datapipeline delete-pipeline --pipeline-id df-00627471SOVYZEXAMPLE\n"
    },
    {
      "command_name": "describe-objects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/describe-objects.html",
      "command_description": "Description\n\nGets the object definitions for a set of objects associated with the pipeline. Object definitions are composed of a set of fields that define the properties of the object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-objects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: pipelineObjects",
      "command_synopsis": "Synopsis\n  describe-objects\n--pipeline-id <value>\n--object-ids <value>\n[--evaluate-expressions | --no-evaluate-expressions]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--object-ids <value>",
        "[--evaluate-expressions | --no-evaluate-expressions]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline that contains the object definitions.\n\n--object-ids (list)\n\nThe IDs of the pipeline objects that contain the definitions to be described. You can pass as many as 25 identifiers in a single call to DescribeObjects .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--evaluate-expressions | --no-evaluate-expressions (boolean)\n\nIndicates whether any expressions in the object should be evaluated when the object descriptions are returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineObjects -> (list)\n\nAn array of object definitions.\n\n(structure)\n\nContains information about a pipeline object. This can be a logical, physical, or physical attempt pipeline object. The complete set of components of a pipeline defines the pipeline.\n\nid -> (string)\n\nThe ID of the object.\n\nname -> (string)\n\nThe name of the object.\n\nfields -> (list)\n\nKey-value pairs that define the properties of the object.\n\n(structure)\n\nA key-value pair that describes a property of a pipeline object. The value is specified as either a string value (StringValue ) or a reference to another object (RefValue ) but not as both.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nrefValue -> (string)\n\nThe field value, expressed as the identifier of another object.\n\nmarker -> (string)\n\nThe starting point for the next page of results. To view the next page of results, call DescribeObjects again with this marker value. If the value is null, there are no more results.\n\nhasMoreResults -> (boolean)\n\nIndicates whether there are more results to return."
    },
    {
      "command_name": "describe-pipelines",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/describe-pipelines.html",
      "command_description": "Description\n\nRetrieves metadata about one or more pipelines. The information retrieved includes the name of the pipeline, the pipeline identifier, its current state, and the user account that owns the pipeline. Using account credentials, you can retrieve metadata about pipelines that you or your IAM users have created. If you are using an IAM user account, you can retrieve metadata about only those pipelines for which you have read permissions.\n\nTo retrieve the full pipeline definition instead of metadata about the pipeline, call GetPipelineDefinition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-pipelines\n--pipeline-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-ids (list)\n\nThe IDs of the pipelines to describe. You can pass as many as 25 identifiers in a single call. To obtain pipeline IDs, call ListPipelines .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineDescriptionList -> (list)\n\nAn array of descriptions for the specified pipelines.\n\n(structure)\n\nContains pipeline metadata.\n\npipelineId -> (string)\n\nThe pipeline identifier that was assigned by AWS Data Pipeline. This is a string of the form df-297EG78HU43EEXAMPLE .\n\nname -> (string)\n\nThe name of the pipeline.\n\nfields -> (list)\n\nA list of read-only fields that contain metadata about the pipeline: @userId, @accountId, and @pipelineState.\n\n(structure)\n\nA key-value pair that describes a property of a pipeline object. The value is specified as either a string value (StringValue ) or a reference to another object (RefValue ) but not as both.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nrefValue -> (string)\n\nThe field value, expressed as the identifier of another object.\n\ndescription -> (string)\n\nDescription of the pipeline.\n\ntags -> (list)\n\nA list of tags to associated with a pipeline. Tags let you control access to pipelines. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\n(structure)\n\nTags are key/value pairs defined by a user and associated with a pipeline to control access. AWS Data Pipeline allows you to associate ten tags per pipeline. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nkey -> (string)\n\nThe key name of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .\n\nvalue -> (string)\n\nThe optional value portion of a tag defined by a user. For more information, see Controlling User Access to Pipelines in the AWS Data Pipeline Developer Guide .",
      "command_examples": "Examples\n\nTo describe your pipelines\n\nThis example describes the specified pipeline:\n\naws datapipeline describe-pipelines --pipeline-ids df-00627471SOVYZEXAMPLE\n\n\nThe following is example output:\n\n{\n  \"pipelineDescriptionList\": [\n      {\n          \"fields\": [\n              {\n                  \"stringValue\": \"PENDING\",\n                  \"key\": \"@pipelineState\"\n              },\n              {\n                  \"stringValue\": \"my-pipeline\",\n                  \"key\": \"name\"\n              },\n              {\n                  \"stringValue\": \"2015-04-07T16:05:58\",\n                  \"key\": \"@creationTime\"\n              },\n              {\n                  \"stringValue\": \"df-00627471SOVYZEXAMPLE\",\n                  \"key\": \"@id\"\n              },\n              {\n                  \"stringValue\": \"123456789012\",\n                  \"key\": \"pipelineCreator\"\n              },\n              {\n                  \"stringValue\": \"PIPELINE\",\n                  \"key\": \"@sphere\"\n              },\n              {\n                  \"stringValue\": \"123456789012\",\n                  \"key\": \"@userId\"\n              },\n              {\n                  \"stringValue\": \"123456789012\",\n                  \"key\": \"@accountId\"\n              },\n              {\n                  \"stringValue\": \"my-pipeline-token\",\n                  \"key\": \"uniqueId\"\n              }\n          ],\n          \"pipelineId\": \"df-00627471SOVYZEXAMPLE\",\n          \"name\": \"my-pipeline\",\n          \"tags\": []\n      }\n  ]\n}\n"
    },
    {
      "command_name": "evaluate-expression",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/evaluate-expression.html",
      "command_description": "Description\n\nTask runners call EvaluateExpression to evaluate a string in the context of the specified object. For example, a task runner can evaluate SQL queries stored in Amazon S3.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  evaluate-expression\n--pipeline-id <value>\n--object-id <value>\n--expression <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--object-id <value>",
        "--expression <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--object-id (string)\n\nThe ID of the object.\n\n--expression (string)\n\nThe expression to evaluate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nevaluatedExpression -> (string)\n\nThe evaluated expression."
    },
    {
      "command_name": "get-pipeline-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/get-pipeline-definition.html",
      "command_description": "Description\n\nGets the definition of the specified pipeline. You can call GetPipelineDefinition to retrieve the pipeline definition that you provided using PutPipelineDefinition .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-pipeline-definition\n--pipeline-id <value>\n[--pipeline-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--pipeline-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--pipeline-version (string)\n\nThe version of the pipeline definition to retrieve. Set this parameter to latest (default) to use the last definition saved to the pipeline or active to use the last definition that was activated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nThe output of this command is the pipeline definition, which is documented in the Pipeline Definition File Syntax",
      "command_examples": "Examples\n\nTo get a pipeline definition\n\nThis example gets the pipeline definition for the specified pipeline:\n\naws datapipeline get-pipeline-definition --pipeline-id df-00627471SOVYZEXAMPLE\n\n\nThe following is example output:\n\n{\n  \"parameters\": [\n      {\n          \"type\": \"AWS::S3::ObjectKey\",\n          \"id\": \"myS3OutputLoc\",\n          \"description\": \"S3 output folder\"\n      },\n      {\n          \"default\": \"s3://us-east-1.elasticmapreduce.samples/pig-apache-logs/data\",\n          \"type\": \"AWS::S3::ObjectKey\",\n          \"id\": \"myS3InputLoc\",\n          \"description\": \"S3 input folder\"\n      },\n      {\n          \"default\": \"grep -rc \\\"GET\\\" ${INPUT1_STAGING_DIR}/* > ${OUTPUT1_STAGING_DIR}/output.txt\",\n          \"type\": \"String\",\n          \"id\": \"myShellCmd\",\n          \"description\": \"Shell command to run\"\n      }\n  ],\n  \"objects\": [\n      {\n          \"type\": \"Ec2Resource\",\n          \"terminateAfter\": \"20 Minutes\",\n          \"instanceType\": \"t1.micro\",\n          \"id\": \"EC2ResourceObj\",\n          \"name\": \"EC2ResourceObj\"\n      },\n      {\n          \"name\": \"Default\",\n          \"failureAndRerunMode\": \"CASCADE\",\n          \"resourceRole\": \"DataPipelineDefaultResourceRole\",\n          \"schedule\": {\n              \"ref\": \"DefaultSchedule\"\n          },\n          \"role\": \"DataPipelineDefaultRole\",\n          \"scheduleType\": \"cron\",\n          \"id\": \"Default\"\n      },\n      {\n          \"directoryPath\": \"#{myS3OutputLoc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}\",\n          \"type\": \"S3DataNode\",\n          \"id\": \"S3OutputLocation\",\n          \"name\": \"S3OutputLocation\"\n      },\n      {\n          \"directoryPath\": \"#{myS3InputLoc}\",\n          \"type\": \"S3DataNode\",\n          \"id\": \"S3InputLocation\",\n          \"name\": \"S3InputLocation\"\n      },\n      {\n          \"startAt\": \"FIRST_ACTIVATION_DATE_TIME\",\n          \"name\": \"Every 15 minutes\",\n          \"period\": \"15 minutes\",\n          \"occurrences\": \"4\",\n          \"type\": \"Schedule\",\n          \"id\": \"DefaultSchedule\"\n      },\n      {\n          \"name\": \"ShellCommandActivityObj\",\n          \"command\": \"#{myShellCmd}\",\n          \"output\": {\n              \"ref\": \"S3OutputLocation\"\n          },\n          \"input\": {\n              \"ref\": \"S3InputLocation\"\n          },\n          \"stage\": \"true\",\n          \"type\": \"ShellCommandActivity\",\n          \"id\": \"ShellCommandActivityObj\",\n          \"runsOn\": {\n              \"ref\": \"EC2ResourceObj\"\n          }\n      }\n  ],\n  \"values\": {\n      \"myS3OutputLoc\": \"s3://my-s3-bucket/\",\n      \"myS3InputLoc\": \"s3://us-east-1.elasticmapreduce.samples/pig-apache-logs/data\",\n      \"myShellCmd\": \"grep -rc \\\"GET\\\" ${INPUT1_STAGING_DIR}/* > ${OUTPUT1_STAGING_DIR}/output.txt\"\n  }\n}\n"
    },
    {
      "command_name": "list-pipelines",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/list-pipelines.html",
      "command_description": "Description\n\nLists the pipeline identifiers for all active pipelines that you have permission to access.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-pipelines is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: pipelineIdList",
      "command_synopsis": "Synopsis\n  list-pipelines\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineIdList -> (list)\n\nThe pipeline identifiers. If you require additional information about the pipelines, you can use these identifiers to call DescribePipelines and GetPipelineDefinition .\n\n(structure)\n\nContains the name and identifier of a pipeline.\n\nid -> (string)\n\nThe ID of the pipeline that was assigned by AWS Data Pipeline. This is a string of the form df-297EG78HU43EEXAMPLE .\n\nname -> (string)\n\nThe name of the pipeline.\n\nmarker -> (string)\n\nThe starting point for the next page of results. To view the next page of results, call ListPipelinesOutput again with this marker value. If the value is null, there are no more results.\n\nhasMoreResults -> (boolean)\n\nIndicates whether there are more results that can be obtained by a subsequent call.",
      "command_examples": "Examples\n\nTo list your pipelines\n\nThis example lists your pipelines:\n\naws datapipeline list-pipelines\n\n\nThe following is example output:\n\n{\n  \"pipelineIdList\": [\n      {\n          \"id\": \"df-00627471SOVYZEXAMPLE\",\n          \"name\": \"my-pipeline\"\n      },\n      {\n          \"id\": \"df-09028963KNVMREXAMPLE\",\n          \"name\": \"ImportDDB\"\n      },\n      {\n          \"id\": \"df-0870198233ZYVEXAMPLE\",\n          \"name\": \"CrossRegionDDB\"\n      },\n      {\n          \"id\": \"df-00189603TB4MZEXAMPLE\",\n          \"name\": \"CopyRedshift\"\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-runs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/list-runs.html",
      "command_description": "Description\n\nLists the times the specified pipeline has run. You can optionally filter the complete list of results to include only the runs you are interested in.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-runs\n--pipeline-id <value>\n[--status <value>]\n[--start-interval <value>]\n[--schedule-interval <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--status <value>]",
        "[--start-interval <value>]",
        "[--schedule-interval <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string) The identifier of the pipeline.\n\n--status (string) Filters the list to include only runs in the specified statuses. The valid statuses are as follows: waiting, pending, cancelled, running, finished, failed, waiting_for_runner, and waiting_on_dependencies.\n\n--start-interval (string) Filters the list to include only runs that started within the specified interval.\n\n--schedule-interval (string) Filters the list to include only runs that are scheduled to start within the specified interval.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nExample 1: To list your pipeline runs\n\nThe following list-runs example lists the runs for the specified pipeline.\n\naws datapipeline list-runs --pipeline-id df-00627471SOVYZEXAMPLE\n\n\nOutput:\n\n    Name                       Scheduled Start        Status                     ID                                              Started                Ended\n    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1.  EC2ResourceObj             2015-04-12T17:33:02    CREATING                   @EC2ResourceObj_2015-04-12T17:33:02             2015-04-12T17:33:10\n2.  S3InputLocation            2015-04-12T17:33:02    FINISHED                   @S3InputLocation_2015-04-12T17:33:02            2015-04-12T17:33:09    2015-04-12T17:33:09\n3.  S3OutputLocation           2015-04-12T17:33:02    WAITING_ON_DEPENDENCIES    @S3OutputLocation_2015-04-12T17:33:02           2015-04-12T17:33:09\n4.  ShellCommandActivityObj    2015-04-12T17:33:02    WAITING_FOR_RUNNER         @ShellCommandActivityObj_2015-04-12T17:33:02    2015-04-12T17:33:09\n\n\nExample 2: To list the pipeline runs between the specified dates\n\nThe following list-runs example uses the --start-interval to specify the dates to include in the output.\n\naws datapipeline list-runs --pipeline-id df-01434553B58A2SHZUKO5 --start-interval 2017-10-07T00:00:00,2017-10-08T00:00:00\n"
    },
    {
      "command_name": "poll-for-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/poll-for-task.html",
      "command_description": "Description\n\nTask runners call PollForTask to receive a task to perform from AWS Data Pipeline. The task runner specifies which tasks it can perform by setting a value for the workerGroup parameter. The task returned can come from any of the pipelines that match the workerGroup value passed in by the task runner and that was launched using the IAM user credentials specified by the task runner.\n\nIf tasks are ready in the work queue, PollForTask returns a response immediately. If no tasks are available in the queue, PollForTask uses long-polling and holds on to a poll connection for up to a 90 seconds, during which time the first newly scheduled task is handed to the task runner. To accomodate this, set the socket timeout in your task runner to 90 seconds. The task runner should not call PollForTask again on the same workerGroup until it receives a response, and this can take up to 90 seconds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  poll-for-task\n--worker-group <value>\n[--hostname <value>]\n[--instance-identity <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--worker-group <value>",
        "[--hostname <value>]",
        "[--instance-identity <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--worker-group (string)\n\nThe type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for workerGroup in the call to PollForTask . There are no wildcard values permitted in workerGroup ; the string must be an exact, case-sensitive, match.\n\n--hostname (string)\n\nThe public DNS name of the calling task runner.\n\n--instance-identity (structure)\n\nIdentity information for the EC2 instance that is hosting the task runner. You can get this value from the instance using http://169.254.169.254/latest/meta-data/instance-id . For more information, see Instance Metadata in the Amazon Elastic Compute Cloud User Guide. Passing in this value proves that your task runner is running on an EC2 instance, and ensures the proper AWS Data Pipeline service charges are applied to your pipeline.\n\ndocument -> (string)\n\nA description of an EC2 instance that is generated when the instance is launched and exposed to the instance via the instance metadata service in the form of a JSON representation of an object.\n\nsignature -> (string)\n\nA signature which can be used to verify the accuracy and authenticity of the information provided in the instance identity document.\n\nShorthand Syntax:\n\ndocument=string,signature=string\n\n\nJSON Syntax:\n\n{\n  \"document\": \"string\",\n  \"signature\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntaskObject -> (structure)\n\nThe information needed to complete the task that is being assigned to the task runner. One of the fields returned in this object is taskId , which contains an identifier for the task being assigned. The calling task runner uses taskId in subsequent calls to ReportTaskProgress and SetTaskStatus .\n\ntaskId -> (string)\n\nAn internal identifier for the task. This ID is passed to the SetTaskStatus and ReportTaskProgress actions.\n\npipelineId -> (string)\n\nThe ID of the pipeline that provided the task.\n\nattemptId -> (string)\n\nThe ID of the pipeline task attempt object. AWS Data Pipeline uses this value to track how many times a task is attempted.\n\nobjects -> (map)\n\nConnection information for the location where the task runner will publish the output of the task.\n\nkey -> (string)\n\nvalue -> (structure)\n\nContains information about a pipeline object. This can be a logical, physical, or physical attempt pipeline object. The complete set of components of a pipeline defines the pipeline.\n\nid -> (string)\n\nThe ID of the object.\n\nname -> (string)\n\nThe name of the object.\n\nfields -> (list)\n\nKey-value pairs that define the properties of the object.\n\n(structure)\n\nA key-value pair that describes a property of a pipeline object. The value is specified as either a string value (StringValue ) or a reference to another object (RefValue ) but not as both.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nrefValue -> (string)\n\nThe field value, expressed as the identifier of another object."
    },
    {
      "command_name": "put-pipeline-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/put-pipeline-definition.html",
      "command_description": "Description\n\nAdds tasks, schedules, and preconditions to the specified pipeline. You can use PutPipelineDefinition to populate a new pipeline.\n\nPutPipelineDefinition also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline.\n\nAn object is missing a name or identifier field.\n\nA string or reference field is empty.\n\nThe number of objects in the pipeline exceeds the maximum allowed objects.\n\nThe pipeline is in a FINISHED state.\n\nPipeline object definitions are passed to the PutPipelineDefinition action and returned by the GetPipelineDefinition action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-pipeline-definition\n--pipeline-id <value>\n[--parameter-objects <value>]\n[--parameter-values <value>]\n--pipeline-definition <value>\n[--parameter-values-uri <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "[--parameter-objects <value>]",
        "[--parameter-values <value>]",
        "--pipeline-definition <value>",
        "[--parameter-values-uri <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--parameter-objects (string) The JSON parameter objects. If the parameter objects are in a file you can use the file://syntax to specify a filename. You can optionally provide these in pipeline definition as well. Parameter objects provided on command line would replace the one in definition.\n\n--parameter-values (string) The JSON parameter values. You can specify these as key-value pairs in the key=value format. Multiple parameters are separated by a space. For list type parameter values you can use the same key name and specify each value as a key value pair. e.g. arrayValue=value1 arrayValue=value2\n\n--pipeline-definition (string) The JSON pipeline definition. If the pipeline definition is in a file you can use the file://syntax to specify a filename.\n\n--parameter-values-uri (string) The JSON parameter values. If the parameter values are in a file you can use the file://syntax to specify a filename. You can optionally provide these in pipeline definition as well. Parameter values provided on command line would replace the one in definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvalidationErrors -> (list)\n\nThe validation errors that are associated with the objects defined in pipelineObjects .\n\n(structure)\n\nDefines a validation error. Validation errors prevent pipeline activation. The set of validation errors that can be returned are defined by AWS Data Pipeline.\n\nid -> (string)\n\nThe identifier of the object that contains the validation error.\n\nerrors -> (list)\n\nA description of the validation error.\n\n(string)\n\nvalidationWarnings -> (list)\n\nThe validation warnings that are associated with the objects defined in pipelineObjects .\n\n(structure)\n\nDefines a validation warning. Validation warnings do not prevent pipeline activation. The set of validation warnings that can be returned are defined by AWS Data Pipeline.\n\nid -> (string)\n\nThe identifier of the object that contains the validation warning.\n\nwarnings -> (list)\n\nA description of the validation warning.\n\n(string)\n\nerrored -> (boolean)\n\nIndicates whether there were validation errors, and the pipeline definition is stored but cannot be activated until you correct the pipeline and call PutPipelineDefinition to commit the corrected pipeline.",
      "command_examples": "Examples\n\nTo upload a pipeline definition\n\nThis example uploads the specified pipeline definition to the specified pipeline:\n\naws datapipeline put-pipeline-definition --pipeline-id df-00627471SOVYZEXAMPLE --pipeline-definition file://my-pipeline-definition.json\n\n\nThe following is example output:\n\n{\n  \"validationErrors\": [],\n  \"errored\": false,\n  \"validationWarnings\": []\n}\n"
    },
    {
      "command_name": "query-objects",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/query-objects.html",
      "command_description": "Description\n\nQueries the specified pipeline for the names of objects that match the specified set of conditions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nquery-objects is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ids",
      "command_synopsis": "Synopsis\n  query-objects\n--pipeline-id <value>\n--sphere <value>\n[--objects-query <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--sphere <value>",
        "[--objects-query <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--sphere (string)\n\nIndicates whether the query applies to components or instances. The possible values are: COMPONENT , INSTANCE , and ATTEMPT .\n\n--objects-query (structure)\n\nThe query that defines the objects to be returned. The Query object can contain a maximum of ten selectors. The conditions in the query are limited to top-level String fields in the object. These filters can be applied to components, instances, and attempts.\n\nselectors -> (list)\n\nList of selectors that define the query. An object must satisfy all of the selectors to match the query.\n\n(structure)\n\nA comparision that is used to determine whether a query should return this object.\n\nfieldName -> (string)\n\nThe name of the field that the operator will be applied to. The field name is the “key” portion of the field definition in the pipeline definition syntax that is used by the AWS Data Pipeline API. If the field is not set on the object, the condition fails.\n\noperator -> (structure)\n\nContains a logical operation for comparing the value of a field with a specified value.\n\ntype -> (string)\n\nThe logical operation to be performed: equal (EQ ), equal reference (REF_EQ ), less than or equal (LE ), greater than or equal (GE ), or between (BETWEEN ). Equal reference (REF_EQ ) can be used only with reference fields. The other comparison types can be used only with String fields. The comparison types you can use apply only to certain object fields, as detailed below.\n\nThe comparison operators EQ and REF_EQ act on the following fields:\n\nname\n\n@sphere\n\nparent\n\n@componentParent\n\n@instanceParent\n\n@status\n\n@scheduledStartTime\n\n@scheduledEndTime\n\n@actualStartTime\n\n@actualEndTime\n\nThe comparison operators GE , LE , and BETWEEN act on the following fields:\n\n@scheduledStartTime\n\n@scheduledEndTime\n\n@actualStartTime\n\n@actualEndTime\n\nNote that fields beginning with the at sign (@) are read-only and set by the web service. When you name fields, you should choose names containing only alpha-numeric values, as symbols may be reserved by AWS Data Pipeline. User-defined fields that you add to a pipeline should prefix their name with the string “my”.\n\nvalues -> (list)\n\nThe value that the actual field value will be compared with.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"selectors\": [\n    {\n      \"fieldName\": \"string\",\n      \"operator\": {\n        \"type\": \"EQ\"|\"REF_EQ\"|\"LE\"|\"GE\"|\"BETWEEN\",\n        \"values\": [\"string\", ...]\n      }\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nids -> (list)\n\nThe identifiers that match the query selectors.\n\n(string)\n\nmarker -> (string)\n\nThe starting point for the next page of results. To view the next page of results, call QueryObjects again with this marker value. If the value is null, there are no more results.\n\nhasMoreResults -> (boolean)\n\nIndicates whether there are more results that can be obtained by a subsequent call."
    },
    {
      "command_name": "remove-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/remove-tags.html",
      "command_description": "Description\n\nRemoves existing tags from the specified pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-tags\n--pipeline-id <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--tag-keys (list)\n\nThe keys of the tags to remove.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a pipeline\n\nThis example removes the specified tag from the specified pipeline:\n\naws datapipeline remove-tags --pipeline-id df-00627471SOVYZEXAMPLE --tag-keys environment\n"
    },
    {
      "command_name": "report-task-progress",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/report-task-progress.html",
      "command_description": "Description\n\nTask runners call ReportTaskProgress when assigned a task to acknowledge that it has the task. If the web service does not receive this acknowledgement within 2 minutes, it assigns the task in a subsequent PollForTask call. After this initial acknowledgement, the task runner only needs to report progress every 15 minutes to maintain its ownership of the task. You can change this reporting time from 15 minutes by specifying a reportProgressTimeout field in your pipeline.\n\nIf a task runner does not report its status after 5 minutes, AWS Data Pipeline assumes that the task runner is unable to process the task and reassigns the task in a subsequent response to PollForTask . Task runners should call ReportTaskProgress every 60 seconds.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  report-task-progress\n--task-id <value>\n[--fields <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-id <value>",
        "[--fields <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-id (string)\n\nThe ID of the task assigned to the task runner. This value is provided in the response for PollForTask .\n\n--fields (list)\n\nKey-value pairs that define the properties of the ReportTaskProgressInput object.\n\n(structure)\n\nA key-value pair that describes a property of a pipeline object. The value is specified as either a string value (StringValue ) or a reference to another object (RefValue ) but not as both.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nrefValue -> (string)\n\nThe field value, expressed as the identifier of another object.\n\nShorthand Syntax:\n\nkey=string,stringValue=string,refValue=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"stringValue\": \"string\",\n    \"refValue\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ncanceled -> (boolean)\n\nIf true, the calling task runner should cancel processing of the task. The task runner does not need to call SetTaskStatus for canceled tasks."
    },
    {
      "command_name": "report-task-runner-heartbeat",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/report-task-runner-heartbeat.html",
      "command_description": "Description\n\nTask runners call ReportTaskRunnerHeartbeat every 15 minutes to indicate that they are operational. If the AWS Data Pipeline Task Runner is launched on a resource managed by AWS Data Pipeline, the web service can use this call to detect when the task runner application has failed and restart a new instance.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  report-task-runner-heartbeat\n--taskrunner-id <value>\n[--worker-group <value>]\n[--hostname <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--taskrunner-id <value>",
        "[--worker-group <value>]",
        "[--hostname <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--taskrunner-id (string)\n\nThe ID of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.\n\n--worker-group (string)\n\nThe type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created. You can only specify a single value for workerGroup . There are no wildcard values permitted in workerGroup ; the string must be an exact, case-sensitive, match.\n\n--hostname (string)\n\nThe public DNS name of the task runner.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nterminate -> (boolean)\n\nIndicates whether the calling task runner should terminate."
    },
    {
      "command_name": "set-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/set-status.html",
      "command_description": "Description\n\nRequests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline. This update might not occur immediately, but is eventually consistent. The status that can be set depends on the type of object (for example, DataNode or Activity). You cannot perform this operation on FINISHED pipelines and attempting to do so returns InvalidRequestException .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-status\n--pipeline-id <value>\n--object-ids <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--object-ids <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline that contains the objects.\n\n--object-ids (list)\n\nThe IDs of the objects. The corresponding objects can be either physical or components, but not a mix of both types.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--status (string)\n\nThe status to be set on all the objects specified in objectIds . For components, use PAUSE or RESUME . For instances, use TRY_CANCEL , RERUN , or MARK_FINISHED .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "set-task-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/set-task-status.html",
      "command_description": "Description\n\nTask runners call SetTaskStatus to notify AWS Data Pipeline that a task is completed and provide information about the final status. A task runner makes this call regardless of whether the task was sucessful. A task runner does not need to call SetTaskStatus for tasks that are canceled by the web service during a call to ReportTaskProgress .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-task-status\n--task-id <value>\n--task-status <value>\n[--error-id <value>]\n[--error-message <value>]\n[--error-stack-trace <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-id <value>",
        "--task-status <value>",
        "[--error-id <value>]",
        "[--error-message <value>]",
        "[--error-stack-trace <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-id (string)\n\nThe ID of the task assigned to the task runner. This value is provided in the response for PollForTask .\n\n--task-status (string)\n\nIf FINISHED , the task successfully completed. If FAILED , the task ended unsuccessfully. Preconditions use false.\n\nPossible values:\n\nFINISHED\n\nFAILED\n\nFALSE\n\n--error-id (string)\n\nIf an error occurred during the task, this value specifies the error code. This value is set on the physical attempt object. It is used to display error information to the user. It should not start with string “Service_” which is reserved by the system.\n\n--error-message (string)\n\nIf an error occurred during the task, this value specifies a text description of the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\n\n--error-stack-trace (string)\n\nIf an error occurred during the task, this value specifies the stack trace associated with the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "validate-pipeline-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/datapipeline/validate-pipeline-definition.html",
      "command_description": "Description\n\nValidates the specified pipeline definition to ensure that it is well formed and can be run without error.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  validate-pipeline-definition\n--pipeline-id <value>\n--pipeline-objects <value>\n[--parameter-objects <value>]\n[--parameter-values <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-id <value>",
        "--pipeline-objects <value>",
        "[--parameter-objects <value>]",
        "[--parameter-values <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-id (string)\n\nThe ID of the pipeline.\n\n--pipeline-objects (list)\n\nThe objects that define the pipeline changes to validate against the pipeline.\n\n(structure)\n\nContains information about a pipeline object. This can be a logical, physical, or physical attempt pipeline object. The complete set of components of a pipeline defines the pipeline.\n\nid -> (string)\n\nThe ID of the object.\n\nname -> (string)\n\nThe name of the object.\n\nfields -> (list)\n\nKey-value pairs that define the properties of the object.\n\n(structure)\n\nA key-value pair that describes a property of a pipeline object. The value is specified as either a string value (StringValue ) or a reference to another object (RefValue ) but not as both.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nrefValue -> (string)\n\nThe field value, expressed as the identifier of another object.\n\nShorthand Syntax:\n\nid=string,name=string,fields=[{key=string,stringValue=string,refValue=string},{key=string,stringValue=string,refValue=string}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"fields\": [\n      {\n        \"key\": \"string\",\n        \"stringValue\": \"string\",\n        \"refValue\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--parameter-objects (list)\n\nThe parameter objects used with the pipeline.\n\n(structure)\n\nContains information about a parameter object.\n\nid -> (string)\n\nThe ID of the parameter object.\n\nattributes -> (list)\n\nThe attributes of the parameter object.\n\n(structure)\n\nThe attributes allowed or specified with a parameter object.\n\nkey -> (string)\n\nThe field identifier.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nShorthand Syntax:\n\nid=string,attributes=[{key=string,stringValue=string},{key=string,stringValue=string}] ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"id\": \"string\",\n    \"attributes\": [\n      {\n        \"key\": \"string\",\n        \"stringValue\": \"string\"\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--parameter-values (list)\n\nThe parameter values used with the pipeline.\n\n(structure)\n\nA value or list of parameter values.\n\nid -> (string)\n\nThe ID of the parameter value.\n\nstringValue -> (string)\n\nThe field value, expressed as a String.\n\nShorthand Syntax:\n\nid=string,stringValue=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"id\": \"string\",\n    \"stringValue\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nvalidationErrors -> (list)\n\nAny validation errors that were found.\n\n(structure)\n\nDefines a validation error. Validation errors prevent pipeline activation. The set of validation errors that can be returned are defined by AWS Data Pipeline.\n\nid -> (string)\n\nThe identifier of the object that contains the validation error.\n\nerrors -> (list)\n\nA description of the validation error.\n\n(string)\n\nvalidationWarnings -> (list)\n\nAny validation warnings that were found.\n\n(structure)\n\nDefines a validation warning. Validation warnings do not prevent pipeline activation. The set of validation warnings that can be returned are defined by AWS Data Pipeline.\n\nid -> (string)\n\nThe identifier of the object that contains the validation warning.\n\nwarnings -> (list)\n\nA description of the validation warning.\n\n(string)\n\nerrored -> (boolean)\n\nIndicates whether there were validation errors."
    }
  ],
  "service_description": "Description\n\nAWS Data Pipeline configures and manages a data-driven workflow called a pipeline. AWS Data Pipeline handles the details of scheduling and ensuring that data dependencies are met so that your application can focus on processing the data.\n\nAWS Data Pipeline provides a JAR implementation of a task runner called AWS Data Pipeline Task Runner. AWS Data Pipeline Task Runner provides logic for common data management scenarios, such as performing database queries and running data analysis using Amazon Elastic MapReduce (Amazon EMR). You can use AWS Data Pipeline Task Runner as your task runner, or you can write your own task runner to provide custom data management.\n\nAWS Data Pipeline implements two main sets of functionality. Use the first set to create a pipeline and define data sources, schedules, dependencies, and the transforms to be performed on the data. Use the second set in your task runner application to receive the next task ready for processing. The logic for performing the task, such as querying the data, running data analysis, or converting the data from one format to another, is contained within the task runner. The task runner performs the task assigned to it by the web service, reporting progress to the web service as it does so. When the task is done, the task runner reports the final success or failure of the task to the web service."
}