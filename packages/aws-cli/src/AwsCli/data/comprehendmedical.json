{
  "service_name": "comprehendmedical",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/index.html",
  "service_commands": [
    {
      "command_name": "describe-entities-detection-v2-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/describe-entities-detection-v2-job.html",
      "command_description": "Description\n\nGets the properties associated with a medical entities detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-entities-detection-v2-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend Medical generated for the job. The StartEntitiesDetectionV2Job operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobProperties -> (structure)\n\nAn object that contains the properties associated with a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nTo describe an entities detection job\n\nThe following describe-entities-detection-v2-job example displays the properties associated with an asynchronous entity detection job.\n\naws comprehendmedical describe-entities-detection-v2-job \\\n    --job-id \"ab9887877365fe70299089371c043b96\"\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobProperties\": {\n        \"JobId\": \"ab9887877365fe70299089371c043b96\",\n        \"JobStatus\": \"COMPLETED\",\n        \"SubmitTime\": \"2020-03-18T21:20:15.614000+00:00\",\n        \"EndTime\": \"2020-03-18T21:27:07.350000+00:00\",\n        \"ExpirationTime\": \"2020-07-16T21:20:15+00:00\",\n        \"InputDataConfig\": {\n            \"S3Bucket\": \"comp-med-input\",\n            \"S3Key\": \"\"\n        },\n        \"OutputDataConfig\": {\n            \"S3Bucket\": \"comp-med-output\",\n            \"S3Key\": \"867139942017-EntitiesDetection-ab9887877365fe70299089371c043b96/\"\n        },\n        \"LanguageCode\": \"en\",\n        \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n        \"ModelVersion\": \"DetectEntitiesModelV20190930\"\n    }\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "describe-icd10-cm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/describe-icd10-cm-inference-job.html",
      "command_description": "Description\n\nGets the properties associated with an InferICD10CM job. Use this operation to get the status of an inference job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-icd10-cm-inference-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend Medical generated for the job. The StartICD10CMInferenceJob operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobProperties -> (structure)\n\nAn object that contains the properties associated with a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nTo describe an ICD-10-CM inference job\n\nThe following describe-icd10-cm-inference-job example describes the properties of the requested inference job with the specified job-id.\n\naws comprehendmedical describe-icd10-cm-inference-job \\\n    --job-id \"5780034166536cdb52ffa3295a1b00a7\"\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobProperties\": {\n        \"JobId\": \"5780034166536cdb52ffa3295a1b00a7\",\n        \"JobStatus\": \"COMPLETED\",\n        \"SubmitTime\": \"2020-05-18T21:20:15.614000+00:00\",\n        \"EndTime\": \"2020-05-18T21:27:07.350000+00:00\",\n        \"ExpirationTime\": \"2020-09-16T21:20:15+00:00\",\n        \"InputDataConfig\": {\n            \"S3Bucket\": \"comp-med-input\",\n            \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n        },\n        \"OutputDataConfig\": {\n            \"S3Bucket\": \"comp-med-output\",\n            \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n        },\n        \"LanguageCode\": \"en\",\n        \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n        \"ModelVersion\":  \"0.1.0\"\n    }\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "describe-phi-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/describe-phi-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a protected health information (PHI) detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-phi-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend Medical generated for the job. The StartPHIDetectionJob operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobProperties -> (structure)\n\nAn object that contains the properties associated with a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nTo describe a PHI detection job\n\nThe following describe-phi-detection-job example displays the properties associated with an asynchronous protected health information (PHI) detection job.\n\naws comprehendmedical describe-phi-detection-job \\\n    --job-id \"4750034166536cdb52ffa3295a1b00a3\"\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobProperties\": {\n        \"JobId\": \"4750034166536cdb52ffa3295a1b00a3\",\n        \"JobStatus\": \"COMPLETED\",\n        \"SubmitTime\": \"2020-03-19T20:38:37.594000+00:00\",\n        \"EndTime\": \"2020-03-19T20:45:07.894000+00:00\",\n        \"ExpirationTime\": \"2020-07-17T20:38:37+00:00\",\n        \"InputDataConfig\": {\n            \"S3Bucket\": \"comp-med-input\",\n            \"S3Key\": \"\"\n        },\n        \"OutputDataConfig\": {\n            \"S3Bucket\": \"comp-med-output\",\n            \"S3Key\": \"867139942017-PHIDetection-4750034166536cdb52ffa3295a1b00a3/\"\n        },\n        \"LanguageCode\": \"en\",\n        \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n        \"ModelVersion\": \"PHIModelV20190903\"\n    }\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "describe-rx-norm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/describe-rx-norm-inference-job.html",
      "command_description": "Description\n\nGets the properties associated with an InferRxNorm job. Use this operation to get the status of an inference job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-rx-norm-inference-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend Medical generated for the job. The StartRxNormInferenceJob operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobProperties -> (structure)\n\nAn object that contains the properties associated with a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nTo describe an RxNorm inference job\n\nThe following describe-rx-norm-inference-job example describes the properties of the requested inference job with the specified job-id.\n\naws comprehendmedical describe-rx-norm-inference-job \\\n    --job-id \"eg8199877365fc70299089371c043b96\"\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobProperties\": {\n        \"JobId\": \"g8199877365fc70299089371c043b96\",\n        \"JobStatus\": \"COMPLETED\",\n        \"SubmitTime\": \"2020-05-18T21:20:15.614000+00:00\",\n        \"EndTime\": \"2020-05-18T21:27:07.350000+00:00\",\n        \"ExpirationTime\": \"2020-09-16T21:20:15+00:00\",\n        \"InputDataConfig\": {\n            \"S3Bucket\": \"comp-med-input\",\n            \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n        },\n        \"OutputDataConfig\": {\n            \"S3Bucket\": \"comp-med-output\",\n            \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n        },\n        \"LanguageCode\": \"en\",\n        \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n        \"ModelVersion\": \"0.0.0\"\n    }\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "detect-entities-v2",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/detect-entities-v2.html",
      "command_description": "Description\n\nInspects the clinical text for a variety of medical entities and returns specific information about them such as entity category, location, and confidence score on that information. Amazon Comprehend Medical only detects medical entities in English language texts.\n\nThe DetectEntitiesV2 operation replaces the DetectEntities operation. This new action uses a different model for determining the entities in your medical text and changes the way that some entities are returned in the output. You should use the DetectEntitiesV2 operation in all new applications.\n\nThe DetectEntitiesV2 operation returns the Acuity and Direction entities as attributes instead of types.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-entities-v2\n--text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 string containing the clinical content being examined for entities. Each string must contain fewer than 20,000 bytes of characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nThe collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence in the detection and analysis. Attributes and traits of the entity are also returned.\n\n(structure)\n\nProvides information about an extracted medical entity.\n\nId -> (integer)\n\nThe numeric identifier for the entity. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity ends. The offset returns the UTF-8 code point in the string.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detection.\n\nText -> (string)\n\nThe segment of input text extracted as this entity.\n\nCategory -> (string)\n\nThe category of the entity.\n\nType -> (string)\n\nDescribes the specific type of entity with category of entities.\n\nTraits -> (list)\n\nContextual information for the entity.\n\n(structure)\n\nProvides contextual information about the extracted entity.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of this trait.\n\nAttributes -> (list)\n\nThe extracted attributes that relate to this entity.\n\n(structure)\n\nAn extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the dosage of a medication taken. It contains information about the attribute such as id, begin and end offset within the input text, and the segment of the input text.\n\nType -> (string)\n\nThe type of attribute.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as an attribute.\n\nRelationshipScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that this attribute is correctly related to this entity.\n\nRelationshipType -> (string)\n\nThe type of relationship between the entity and attribute. Type for the relationship is OVERLAP , indicating that the entity occurred at the same time as the Date_Expression .\n\nId -> (integer)\n\nThe numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string.\n\nText -> (string)\n\nThe segment of input text extracted as this attribute.\n\nCategory -> (string)\n\nThe category of attribute.\n\nTraits -> (list)\n\nContextual information for this attribute.\n\n(structure)\n\nProvides contextual information about the extracted entity.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of this trait.\n\nUnmappedAttributes -> (list)\n\nAttributes extracted from the input text that couldn’t be related to an entity.\n\n(structure)\n\nAn attribute that we extracted, but were unable to relate to an entity.\n\nType -> (string)\n\nThe type of the attribute, could be one of the following values: “MEDICATION”, “MEDICAL_CONDITION”, “ANATOMY”, “TEST_AND_TREATMENT_PROCEDURE” or “PROTECTED_HEALTH_INFORMATION”.\n\nAttribute -> (structure)\n\nThe specific attribute that has been extracted but not mapped to an entity.\n\nType -> (string)\n\nThe type of attribute.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as an attribute.\n\nRelationshipScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that this attribute is correctly related to this entity.\n\nRelationshipType -> (string)\n\nThe type of relationship between the entity and attribute. Type for the relationship is OVERLAP , indicating that the entity occurred at the same time as the Date_Expression .\n\nId -> (integer)\n\nThe numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string.\n\nText -> (string)\n\nThe segment of input text extracted as this attribute.\n\nCategory -> (string)\n\nThe category of attribute.\n\nTraits -> (list)\n\nContextual information for this attribute.\n\n(structure)\n\nProvides contextual information about the extracted entity.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of this trait.\n\nPaginationToken -> (string)\n\nIf the result to the DetectEntitiesV2 operation was truncated, include the PaginationToken to fetch the next page of entities.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nExample 1: To detect entities directly from text\n\nThe following detect-entities-v2 example shows the detected entities and labels them according to type, directly from input text.\n\naws comprehendmedical detect-entities-v2 \\\n    --text \"Sleeping trouble on present dosage of Clonidine. Severe rash on face and leg, slightly itchy.\"\n\n\nOutput:\n\n{\n    \"Id\": 0,\n    \"BeginOffset\": 38,\n    \"EndOffset\": 47,\n    \"Score\": 0.9942955374717712,\n    \"Text\": \"Clonidine\",\n    \"Category\": \"MEDICATION\",\n    \"Type\": \"GENERIC_NAME\",\n    \"Traits\": []\n},\n\n\nFor more information, see Detect Entities Version 2 in the Amazon Comprehend Medical Developer Guide.\n\nExample 2: To detect entities from a file path\n\nThe following detect-entities-v2 example shows the detected entities and labels them according to type from a file path.\n\naws comprehendmedical detect-entities-v2 \\\n    --text file://medical_entities.txt\n\n\nContents of medical_entities.txt:\n\n{\n    \"Sleeping trouble on present dosage of Clonidine. Severe rash on face and leg, slightly itchy.\"\n}\n\n\nOutput:\n\n{\n    \"Id\": 0,\n    \"BeginOffset\": 38,\n    \"EndOffset\": 47,\n    \"Score\": 0.9942955374717712,\n    \"Text\": \"Clonidine\",\n    \"Category\": \"MEDICATION\",\n    \"Type\": \"GENERIC_NAME\",\n    \"Traits\": []\n},\n\n\nFor more information, see Detect Entities Version 2 in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "detect-phi",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/detect-phi.html",
      "command_description": "Description\n\nInspects the clinical text for protected health information (PHI) entities and returns the entity category, location, and confidence score for each entity. Amazon Comprehend Medical only detects entities in English language texts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-phi\n--text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string containing the clinical content being examined for PHI entities. Each string must contain fewer than 20,000 bytes of characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nThe collection of PHI entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Amazon Comprehend Medical has in its detection.\n\n(structure)\n\nProvides information about an extracted medical entity.\n\nId -> (integer)\n\nThe numeric identifier for the entity. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity ends. The offset returns the UTF-8 code point in the string.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detection.\n\nText -> (string)\n\nThe segment of input text extracted as this entity.\n\nCategory -> (string)\n\nThe category of the entity.\n\nType -> (string)\n\nDescribes the specific type of entity with category of entities.\n\nTraits -> (list)\n\nContextual information for the entity.\n\n(structure)\n\nProvides contextual information about the extracted entity.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of this trait.\n\nAttributes -> (list)\n\nThe extracted attributes that relate to this entity.\n\n(structure)\n\nAn extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the dosage of a medication taken. It contains information about the attribute such as id, begin and end offset within the input text, and the segment of the input text.\n\nType -> (string)\n\nThe type of attribute.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as an attribute.\n\nRelationshipScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that this attribute is correctly related to this entity.\n\nRelationshipType -> (string)\n\nThe type of relationship between the entity and attribute. Type for the relationship is OVERLAP , indicating that the entity occurred at the same time as the Date_Expression .\n\nId -> (integer)\n\nThe numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string.\n\nText -> (string)\n\nThe segment of input text extracted as this attribute.\n\nCategory -> (string)\n\nThe category of attribute.\n\nTraits -> (list)\n\nContextual information for this attribute.\n\n(structure)\n\nProvides contextual information about the extracted entity.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of this trait.\n\nPaginationToken -> (string)\n\nIf the result of the previous request to DetectPHI was truncated, include the PaginationToken to fetch the next page of PHI entities.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nExample 1: To detect protected health information (PHI) directly from text\n\nThe following detect-phi example displays the detected protected health information (PHI) entities directly from input text.\n\naws comprehendmedical detect-phi \\\n    --text \"Patient Carlos Salazar presented with rash on his upper extremities and dry cough. He lives at 100 Main Street, Anytown, USA where he works from his home as a carpenter.\"\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"BeginOffset\": 8,\n            \"EndOffset\": 21,\n            \"Score\": 0.9914507269859314,\n            \"Text\": \"Carlos Salazar\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"NAME\",\n            \"Traits\": []\n        },\n        {\n            \"Id\": 1,\n            \"BeginOffset\": 94,\n            \"EndOffset\": 109,\n            \"Score\": 0.871849775314331,\n            \"Text\": \"100 Main Street, Anytown, USA\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"ADDRESS\",\n            \"Traits\": []\n        },\n        {\n            \"Id\": 2,\n            \"BeginOffset\": 145,\n            \"EndOffset\": 154,\n            \"Score\": 0.8302185535430908,\n            \"Text\": \"carpenter\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"PROFESSION\",\n            \"Traits\": []\n        }\n    ],\n    \"ModelVersion\": \"0.0.0\"\n}\n\n\nFor more information, see Detect PHI in the Amazon Comprehend Medical Developer Guide.\n\nExample 2: To detect protect health information (PHI) directly from a file path\n\nThe following detect-phi example shows the detected protected health information (PHI) entities from a file path.\n\naws comprehendmedical detect-phi \\\n    --text file://phi.txt\n\n\nContents of phi.txt:\n\n\"Patient Carlos Salazar presented with a rash on his upper extremities and a dry cough. He lives at 100 Main Street, Anytown, USA, where he works from his home as a carpenter.\"\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"BeginOffset\": 8,\n            \"EndOffset\": 21,\n            \"Score\": 0.9914507269859314,\n            \"Text\": \"Carlos Salazar\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"NAME\",\n            \"Traits\": []\n        },\n        {\n            \"Id\": 1,\n            \"BeginOffset\": 94,\n            \"EndOffset\": 109,\n            \"Score\": 0.871849775314331,\n            \"Text\": \"100 Main Street, Anytown, USA\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"ADDRESS\",\n            \"Traits\": []\n        },\n        {\n            \"Id\": 2,\n            \"BeginOffset\": 145,\n            \"EndOffset\": 154,\n            \"Score\": 0.8302185535430908,\n            \"Text\": \"carpenter\",\n            \"Category\": \"PROTECTED_HEALTH_INFORMATION\",\n            \"Type\": \"PROFESSION\",\n            \"Traits\": []\n        }\n    ],\n    \"ModelVersion\": \"0.0.0\"\n}\n\n\nFor more information, see Detect PHI in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "infer-icd10-cm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/infer-icd10-cm.html",
      "command_description": "Description\n\nInferICD10CM detects medical conditions as entities listed in a patient record and links those entities to normalized concept identifiers in the ICD-10-CM knowledge base from the Centers for Disease Control. Amazon Comprehend Medical only detects medical entities in English language texts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  infer-icd10-cm\n--text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nThe input text used for analysis. The input for InferICD10CM is a string from 1 to 10000 characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nThe medical conditions detected in the text linked to ICD-10-CM concepts. If the action is successful, the service sends back an HTTP 200 response, as well as the entities detected.\n\n(structure)\n\nThe collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Amazon Comprehend Medical has in the detection and analysis. Attributes and traits of the entity are also returned.\n\nId -> (integer)\n\nThe numeric identifier for the entity. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nText -> (string)\n\nThe segment of input text that is matched to the detected entity.\n\nCategory -> (string)\n\nThe category of the entity. InferICD10CM detects entities in the MEDICAL_CONDITION category.\n\nType -> (string)\n\nDescribes the specific type of entity with category of entities. InferICD10CM detects entities of the type DX_NAME and TIME_EXPRESSION .\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detection.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity ends. The offset returns the UTF-8 code point in the string.\n\nAttributes -> (list)\n\nThe detected attributes that relate to the entity. An extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the nature of a medical condition.\n\n(structure)\n\nThe detected attributes that relate to an entity. This includes an extracted segment of the text that is an attribute of an entity, or otherwise related to an entity. InferICD10CM detects the following attributes: Direction , System, Organ or Site , and Acuity .\n\nType -> (string)\n\nThe type of attribute. InferICD10CM detects entities of the type DX_NAME .\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as an attribute.\n\nRelationshipScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that this attribute is correctly related to this entity.\n\nId -> (integer)\n\nThe numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string.\n\nText -> (string)\n\nThe segment of input text which contains the detected attribute.\n\nTraits -> (list)\n\nThe contextual information for the attribute. The traits recognized by InferICD10CM are DIAGNOSIS , SIGN , SYMPTOM , and NEGATION .\n\n(structure)\n\nContextual information for the entity. The traits recognized by InferICD10CM are DIAGNOSIS , SIGN , SYMPTOM , and NEGATION .\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as a trait.\n\nCategory -> (string)\n\nThe category of attribute. Can be either of DX_NAME or TIME_EXPRESSION .\n\nRelationshipType -> (string)\n\nThe type of relationship between the entity and attribute. Type for the relationship can be either of OVERLAP or SYSTEM_ORGAN_SITE .\n\nTraits -> (list)\n\nProvides Contextual information for the entity. The traits recognized by InferICD10CM are DIAGNOSIS , SIGN , SYMPTOM , and NEGATION.\n\n(structure)\n\nContextual information for the entity. The traits recognized by InferICD10CM are DIAGNOSIS , SIGN , SYMPTOM , and NEGATION .\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the segment of text is correctly recognized as a trait.\n\nICD10CMConcepts -> (list)\n\nThe ICD-10-CM concepts that the entity could refer to, along with a score indicating the likelihood of the match.\n\n(structure)\n\nThe ICD-10-CM concepts that the entity could refer to, along with a score indicating the likelihood of the match.\n\nDescription -> (string)\n\nThe long description of the ICD-10-CM code in the ontology.\n\nCode -> (string)\n\nThe ICD-10-CM code that identifies the concept found in the knowledge base from the Centers for Disease Control.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the entity is accurately linked to an ICD-10-CM concept.\n\nPaginationToken -> (string)\n\nIf the result of the previous request to InferICD10CM was truncated, include the PaginationToken to fetch the next page of medical condition entities.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents, in the format n .*n* .*n* You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nExample 1: To detect medical condition entities and link to the ICD-10-CM Ontology directly from text\n\nThe following infer-icd10-cm example labels the detected medical condition entities and links those entities with codes in the 2019 edition of the International Classification of Diseases Clinical Modification (ICD-10-CM).\n\naws comprehendmedical infer-icd10-cm \\\n    --text \"The patient complains of abdominal pain, has a long-standing history of diabetes treated with Micronase daily.\"\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"Text\": \"abdominal pain\",\n            \"Category\": \"MEDICAL_CONDITION\",\n            \"Type\": \"DX_NAME\",\n            \"Score\": 0.9475538730621338,\n            \"BeginOffset\": 28,\n            \"EndOffset\": 42,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"SYMPTOM\",\n                    \"Score\": 0.6724207401275635\n                }\n            ],\n            \"ICD10CMConcepts\": [\n                {\n                    \"Description\": \"Unspecified abdominal pain\",\n                    \"Code\": \"R10.9\",\n                    \"Score\": 0.6904221177101135\n                },\n                {\n                    \"Description\": \"Epigastric pain\",\n                    \"Code\": \"R10.13\",\n                    \"Score\": 0.1364113688468933\n                },\n                {\n                    \"Description\": \"Generalized abdominal pain\",\n                    \"Code\": \"R10.84\",\n                    \"Score\": 0.12508003413677216\n                },\n                {\n                    \"Description\": \"Left lower quadrant pain\",\n                    \"Code\": \"R10.32\",\n                    \"Score\": 0.10063883662223816\n                },\n                {\n                    \"Description\": \"Lower abdominal pain, unspecified\",\n                    \"Code\": \"R10.30\",\n                    \"Score\": 0.09933677315711975\n                }\n            ]\n        },\n        {\n            \"Id\": 1,\n            \"Text\": \"diabetes\",\n            \"Category\": \"MEDICAL_CONDITION\",\n            \"Type\": \"DX_NAME\",\n            \"Score\": 0.9899052977561951,\n            \"BeginOffset\": 75,\n            \"EndOffset\": 83,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"DIAGNOSIS\",\n                    \"Score\": 0.9258432388305664\n                }\n            ],\n            \"ICD10CMConcepts\": [\n                {\n                    \"Description\": \"Type 2 diabetes mellitus without complications\",\n                    \"Code\": \"E11.9\",\n                    \"Score\": 0.7158446311950684\n                },\n                {\n                    \"Description\": \"Family history of diabetes mellitus\",\n                    \"Code\": \"Z83.3\",\n                    \"Score\": 0.5704703330993652\n                },\n                {\n                    \"Description\": \"Family history of other endocrine, nutritional and metabolic diseases\",\n                    \"Code\": \"Z83.49\",\n                    \"Score\": 0.19856023788452148\n                },\n                {\n                    \"Description\": \"Type 1 diabetes mellitus with ketoacidosis without coma\",\n                    \"Code\": \"E10.10\",\n                    \"Score\": 0.13285516202449799\n                },\n                {\n                    \"Description\": \"Type 2 diabetes mellitus with hyperglycemia\",\n                    \"Code\": \"E11.65\",\n                    \"Score\": 0.0993388369679451\n                }\n            ]\n        }\n    ],\n    \"ModelVersion\": \"0.1.0\"\n}\n\n\nFor more information, see Infer ICD10-CM in the Amazon Comprehend Medical Developer Guide.\n\nExample 2: To detect medical condition entities and link to the ICD-10-CM Ontology from a file pathway\n\nThe following infer-icd-10-cm example labels the detected medical condition entities and links those entities with codes in the 2019 edition of the International Classification of Diseases Clinical Modification (ICD-10-CM).\n\naws comprehendmedical infer-icd10-cm \\\n    --text file://icd10cm.txt\n\n\nContents of icd10cm.txt:\n\n{\n    \"The patient complains of abdominal pain, has a long-standing history of diabetes treated with Micronase daily.\"\n}\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"Text\": \"abdominal pain\",\n            \"Category\": \"MEDICAL_CONDITION\",\n            \"Type\": \"DX_NAME\",\n            \"Score\": 0.9475538730621338,\n            \"BeginOffset\": 28,\n            \"EndOffset\": 42,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"SYMPTOM\",\n                    \"Score\": 0.6724207401275635\n                }\n            ],\n            \"ICD10CMConcepts\": [\n                {\n                    \"Description\": \"Unspecified abdominal pain\",\n                    \"Code\": \"R10.9\",\n                    \"Score\": 0.6904221177101135\n                },\n                {\n                    \"Description\": \"Epigastric pain\",\n                    \"Code\": \"R10.13\",\n                    \"Score\": 0.1364113688468933\n                },\n                {\n                    \"Description\": \"Generalized abdominal pain\",\n                    \"Code\": \"R10.84\",\n                    \"Score\": 0.12508003413677216\n                },\n                {\n                    \"Description\": \"Left lower quadrant pain\",\n                    \"Code\": \"R10.32\",\n                    \"Score\": 0.10063883662223816\n                },\n                {\n                    \"Description\": \"Lower abdominal pain, unspecified\",\n                    \"Code\": \"R10.30\",\n                    \"Score\": 0.09933677315711975\n                }\n            ]\n        },\n        {\n            \"Id\": 1,\n            \"Text\": \"diabetes\",\n            \"Category\": \"MEDICAL_CONDITION\",\n            \"Type\": \"DX_NAME\",\n            \"Score\": 0.9899052977561951,\n            \"BeginOffset\": 75,\n            \"EndOffset\": 83,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"DIAGNOSIS\",\n                    \"Score\": 0.9258432388305664\n                }\n            ],\n            \"ICD10CMConcepts\": [\n                {\n                    \"Description\": \"Type 2 diabetes mellitus without complications\",\n                    \"Code\": \"E11.9\",\n                    \"Score\": 0.7158446311950684\n                },\n                {\n                    \"Description\": \"Family history of diabetes mellitus\",\n                    \"Code\": \"Z83.3\",\n                    \"Score\": 0.5704703330993652\n                },\n                {\n                    \"Description\": \"Family history of other endocrine, nutritional and metabolic diseases\",\n                    \"Code\": \"Z83.49\",\n                    \"Score\": 0.19856023788452148\n                },\n                {\n                    \"Description\": \"Type 1 diabetes mellitus with ketoacidosis without coma\",\n                    \"Code\": \"E10.10\",\n                    \"Score\": 0.13285516202449799\n                },\n                {\n                    \"Description\": \"Type 2 diabetes mellitus with hyperglycemia\",\n                    \"Code\": \"E11.65\",\n                    \"Score\": 0.0993388369679451\n                }\n            ]\n        }\n    ],\n    \"ModelVersion\": \"0.1.0\"\n}\n\n\nFor more information, see Infer-ICD10-CM in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "infer-rx-norm",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/infer-rx-norm.html",
      "command_description": "Description\n\nInferRxNorm detects medications as entities listed in a patient record and links to the normalized concept identifiers in the RxNorm database from the National Library of Medicine. Amazon Comprehend Medical only detects medical entities in English language texts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  infer-rx-norm\n--text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nThe input text used for analysis. The input for InferRxNorm is a string from 1 to 10000 characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nThe medication entities detected in the text linked to RxNorm concepts. If the action is successful, the service sends back an HTTP 200 response, as well as the entities detected.\n\n(structure)\n\nThe collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Amazon Comprehend Medical has in the detection and analysis. Attributes and traits of the entity are also returned.\n\nId -> (integer)\n\nThe numeric identifier for the entity. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nText -> (string)\n\nThe segment of input text extracted from which the entity was detected.\n\nCategory -> (string)\n\nThe category of the entity. The recognized categories are GENERIC or BRAND_NAME .\n\nType -> (string)\n\nDescribes the specific type of entity. For InferRxNorm, the recognized entity type is MEDICATION .\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detected entity.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the entity ends. The offset returns the UTF-8 code point in the string.\n\nAttributes -> (list)\n\nThe extracted attributes that relate to the entity. The attributes recognized by InferRxNorm are DOSAGE , DURATION , FORM , FREQUENCY , RATE , ROUTE_OR_MODE , and STRENGTH .\n\n(structure)\n\nThe extracted attributes that relate to this entity. The attributes recognized by InferRxNorm are DOSAGE , DURATION , FORM , FREQUENCY , RATE , ROUTE_OR_MODE .\n\nType -> (string)\n\nThe type of attribute. The types of attributes recognized by InferRxNorm are BRAND_NAME and GENERIC_NAME .\n\nScore -> (float)\n\nThe level of confidence that Comprehend Medical has that the segment of text is correctly recognized as an attribute.\n\nRelationshipScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the attribute is accurately linked to an entity.\n\nId -> (integer)\n\nThe numeric identifier for this attribute. This is a monotonically increasing id unique within this response rather than a global unique identifier.\n\nBeginOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute begins. The offset returns the UTF-8 code point in the string.\n\nEndOffset -> (integer)\n\nThe 0-based character offset in the input text that shows where the attribute ends. The offset returns the UTF-8 code point in the string.\n\nText -> (string)\n\nThe segment of input text which corresponds to the detected attribute.\n\nTraits -> (list)\n\nContextual information for the attribute. InferRxNorm recognizes the trait NEGATION for attributes, i.e. that the patient is not taking a specific dose or form of a medication.\n\n(structure)\n\nThe contextual information for the entity. InferRxNorm recognizes the trait NEGATION , which is any indication that the patient is not taking a medication.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detected trait.\n\nTraits -> (list)\n\nContextual information for the entity.\n\n(structure)\n\nThe contextual information for the entity. InferRxNorm recognizes the trait NEGATION , which is any indication that the patient is not taking a medication.\n\nName -> (string)\n\nProvides a name or contextual description about the trait.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has in the accuracy of the detected trait.\n\nRxNormConcepts -> (list)\n\nThe RxNorm concepts that the entity could refer to, along with a score indicating the likelihood of the match.\n\n(structure)\n\nThe RxNorm concept that the entity could refer to, along with a score indicating the likelihood of the match.\n\nDescription -> (string)\n\nThe description of the RxNorm concept.\n\nCode -> (string)\n\nRxNorm concept ID, also known as the RxCUI.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend Medical has that the entity is accurately linked to the reported RxNorm concept.\n\nPaginationToken -> (string)\n\nIf the result of the previous request to InferRxNorm was truncated, include the PaginationToken to fetch the next page of medication entities.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents, in the format n .*n* .*n* You can use this information to track the model used for a particular batch of documents.",
      "command_examples": "Examples\n\nExample 1: To detect medication entities and link to RxNorm directly from text\n\nThe following infer-rx-norm example shows and labels the detected medication entities and links those entities to concept identifiers (RxCUI) from the National Library of Medicine RxNorm database.\n\naws comprehendmedical infer-rx-norm \\\n    --text \"Patient reports taking Levothyroxine 125 micrograms p.o. once daily, but denies taking Synthroid.\"\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"Text\": \"Levothyroxine\",\n            \"Category\": \"MEDICATION\",\n            \"Type\": \"GENERIC_NAME\",\n            \"Score\": 0.9996285438537598,\n            \"BeginOffset\": 23,\n            \"EndOffset\": 36,\n            \"Attributes\": [\n                {\n                    \"Type\": \"DOSAGE\",\n                    \"Score\": 0.9892290830612183,\n                    \"RelationshipScore\": 0.9997978806495667,\n                    \"Id\": 1,\n                    \"BeginOffset\": 37,\n                    \"EndOffset\": 51,\n                    \"Text\": \"125 micrograms\",\n                    \"Traits\": []\n                },\n                {\n                    \"Type\": \"ROUTE_OR_MODE\",\n                    \"Score\": 0.9988924860954285,\n                    \"RelationshipScore\": 0.998291552066803,\n                    \"Id\": 2,\n                    \"BeginOffset\": 52,\n                    \"EndOffset\": 56,\n                    \"Text\": \"p.o.\",\n                    \"Traits\": []\n                },\n                {\n                    \"Type\": \"FREQUENCY\",\n                    \"Score\": 0.9953463673591614,\n                    \"RelationshipScore\": 0.9999889135360718,\n                    \"Id\": 3,\n                    \"BeginOffset\": 57,\n                    \"EndOffset\": 67,\n                    \"Text\": \"once daily\",\n                    \"Traits\": []\n                }\n            ],\n            \"Traits\": [],\n            \"RxNormConcepts\": [\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet\",\n                    \"Code\": \"966224\",\n                    \"Score\": 0.9912070631980896\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Capsule\",\n                    \"Code\": \"966405\",\n                    \"Score\": 0.8698278665542603\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966191\",\n                    \"Score\": 0.7448257803916931\n                },\n                {\n                    \"Description\": \"levothyroxine\",\n                    \"Code\": \"10582\",\n                    \"Score\": 0.7050482630729675\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Levoxyl]\",\n                    \"Code\": \"966190\",\n                    \"Score\": 0.6921631693840027\n                }\n            ]\n        },\n        {\n            \"Id\": 4,\n            \"Text\": \"Synthroid\",\n            \"Category\": \"MEDICATION\",\n            \"Type\": \"BRAND_NAME\",\n            \"Score\": 0.9946461319923401,\n            \"BeginOffset\": 86,\n            \"EndOffset\": 95,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"NEGATION\",\n                    \"Score\": 0.5167351961135864\n                }\n            ],\n            \"RxNormConcepts\": [\n                {\n                    \"Description\": \"Synthroid\",\n                    \"Code\": \"224920\",\n                    \"Score\": 0.9462039470672607\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.088 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966282\",\n                    \"Score\": 0.8309829235076904\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966191\",\n                    \"Score\": 0.4945160448551178\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.05 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966247\",\n                    \"Score\": 0.3674522042274475\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.025 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966158\",\n                    \"Score\": 0.2588822841644287\n                }\n            ]\n        }\n    ],\n    \"ModelVersion\": \"0.0.0\"\n}\n\n\nFor more information, see Infer RxNorm in the Amazon Comprehend Medical Developer Guide.\n\nExample 2: To detect medication entities and link to RxNorm from a file path.\n\nThe following infer-rx-norm example shows and labels the detected medication entities and links those entities to concept identifiers (RxCUI) from the National Library of Medicine RxNorm database.\n\naws comprehendmedical infer-rx-norm \\\n    --text file://rxnorm.txt\n\n\nContents of rxnorm.txt:\n\n{\n    \"Patient reports taking Levothyroxine 125 micrograms p.o. once daily, but denies taking Synthroid.\"\n}\n\n\nOutput:\n\n{\n    \"Entities\": [\n        {\n            \"Id\": 0,\n            \"Text\": \"Levothyroxine\",\n            \"Category\": \"MEDICATION\",\n            \"Type\": \"GENERIC_NAME\",\n            \"Score\": 0.9996285438537598,\n            \"BeginOffset\": 23,\n            \"EndOffset\": 36,\n            \"Attributes\": [\n                {\n                    \"Type\": \"DOSAGE\",\n                    \"Score\": 0.9892290830612183,\n                    \"RelationshipScore\": 0.9997978806495667,\n                    \"Id\": 1,\n                    \"BeginOffset\": 37,\n                    \"EndOffset\": 51,\n                    \"Text\": \"125 micrograms\",\n                    \"Traits\": []\n                },\n                {\n                    \"Type\": \"ROUTE_OR_MODE\",\n                    \"Score\": 0.9988924860954285,\n                    \"RelationshipScore\": 0.998291552066803,\n                    \"Id\": 2,\n                    \"BeginOffset\": 52,\n                    \"EndOffset\": 56,\n                    \"Text\": \"p.o.\",\n                    \"Traits\": []\n                },\n                {\n                    \"Type\": \"FREQUENCY\",\n                    \"Score\": 0.9953463673591614,\n                    \"RelationshipScore\": 0.9999889135360718,\n                    \"Id\": 3,\n                    \"BeginOffset\": 57,\n                    \"EndOffset\": 67,\n                    \"Text\": \"once daily\",\n                    \"Traits\": []\n                }\n            ],\n            \"Traits\": [],\n            \"RxNormConcepts\": [\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet\",\n                    \"Code\": \"966224\",\n                    \"Score\": 0.9912070631980896\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Capsule\",\n                    \"Code\": \"966405\",\n                    \"Score\": 0.8698278665542603\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966191\",\n                    \"Score\": 0.7448257803916931\n                },\n                {\n                    \"Description\": \"levothyroxine\",\n                    \"Code\": \"10582\",\n                    \"Score\": 0.7050482630729675\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Levoxyl]\",\n                    \"Code\": \"966190\",\n                    \"Score\": 0.6921631693840027\n                }\n            ]\n        },\n        {\n            \"Id\": 4,\n            \"Text\": \"Synthroid\",\n            \"Category\": \"MEDICATION\",\n            \"Type\": \"BRAND_NAME\",\n            \"Score\": 0.9946461319923401,\n            \"BeginOffset\": 86,\n            \"EndOffset\": 95,\n            \"Attributes\": [],\n            \"Traits\": [\n                {\n                    \"Name\": \"NEGATION\",\n                    \"Score\": 0.5167351961135864\n                }\n            ],\n            \"RxNormConcepts\": [\n                {\n                    \"Description\": \"Synthroid\",\n                    \"Code\": \"224920\",\n                    \"Score\": 0.9462039470672607\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.088 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966282\",\n                    \"Score\": 0.8309829235076904\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.125 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966191\",\n                    \"Score\": 0.4945160448551178\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.05 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966247\",\n                    \"Score\": 0.3674522042274475\n                },\n                {\n                    \"Description\": \"Levothyroxine Sodium 0.025 MG Oral Tablet [Synthroid]\",\n                    \"Code\": \"966158\",\n                    \"Score\": 0.2588822841644287\n                }\n            ]\n        }\n    ],\n    \"ModelVersion\": \"0.0.0\"\n}\n\n\nFor more information, see Infer RxNorm in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "list-entities-detection-v2-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/list-entities-detection-v2-jobs.html",
      "command_description": "Description\n\nGets a list of medical entity detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-entities-detection-v2-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"PARTIAL_SUCCESS\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobPropertiesList -> (list)\n\nA list containing the properties of each job returned.\n\n(structure)\n\nProvides information about a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return.",
      "command_examples": "Examples\n\nTo list entities detection jobs\n\nThe following list-entities-detection-v2-jobs example lists current asynchronous detection jobs.\n\naws comprehendmedical list-entities-detection-v2-jobs\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobPropertiesList\": [\n        {\n            \"JobId\": \"ab9887877365fe70299089371c043b96\",\n            \"JobStatus\": \"COMPLETED\",\n            \"SubmitTime\": \"2020-03-19T20:38:37.594000+00:00\",\n            \"EndTime\": \"2020-03-19T20:45:07.894000+00:00\",\n            \"ExpirationTime\": \"2020-07-17T20:38:37+00:00\",\n            \"InputDataConfig\": {\n                \"S3Bucket\": \"comp-med-input\",\n                \"S3Key\": \"\"\n            },\n            \"OutputDataConfig\": {\n                \"S3Bucket\": \"comp-med-output\",\n                \"S3Key\": \"867139942017-EntitiesDetection-ab9887877365fe70299089371c043b96/\"\n            },\n            \"LanguageCode\": \"en\",\n            \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n            \"ModelVersion\": \"DetectEntitiesModelV20190930\"\n        }\n    ]\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "list-icd10-cm-inference-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/list-icd10-cm-inference-jobs.html",
      "command_description": "Description\n\nGets a list of InferICD10CM jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-icd10-cm-inference-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"PARTIAL_SUCCESS\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return.",
      "command_examples": "Examples\n\nTo list all current ICD-10-CM inference jobs\n\nThe following example shows how the list-icd10-cm-inference-jobs operation returns a list of current asynchronous ICD-10-CM batch inference jobs.\n\naws comprehendmedical list-icd10-cm-inference-jobs\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobPropertiesList\": [\n        {\n            \"JobId\": \"5780034166536cdb52ffa3295a1b00a7\",\n            \"JobStatus\": \"COMPLETED\",\n            \"SubmitTime\": \"2020-05-19T20:38:37.594000+00:00\",\n            \"EndTime\": \"2020-05-19T20:45:07.894000+00:00\",\n            \"ExpirationTime\": \"2020-09-17T20:38:37+00:00\",\n            \"InputDataConfig\": {\n                \"S3Bucket\": \"comp-med-input\",\n                \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n            },\n            \"OutputDataConfig\": {\n                \"S3Bucket\": \"comp-med-output\",\n                \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n            },\n            \"LanguageCode\": \"en\",\n            \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n            \"ModelVersion\":  \"0.1.0\"\n        }\n    ]\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "list-phi-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/list-phi-detection-jobs.html",
      "command_description": "Description\n\nGets a list of protected health information (PHI) detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-phi-detection-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"PARTIAL_SUCCESS\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobPropertiesList -> (list)\n\nA list containing the properties of each job returned.\n\n(structure)\n\nProvides information about a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return.",
      "command_examples": "Examples\n\nTo list protected health information (PHI) detection jobs\n\nThe following list-phi-detection-jobs example lists current protected health information (PHI) detection jobs\n\naws comprehendmedical list-phi-detection-jobs\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobPropertiesList\": [\n        {\n            \"JobId\": \"4750034166536cdb52ffa3295a1b00a3\",\n            \"JobStatus\": \"COMPLETED\",\n            \"SubmitTime\": \"2020-03-19T20:38:37.594000+00:00\",\n            \"EndTime\": \"2020-03-19T20:45:07.894000+00:00\",\n            \"ExpirationTime\": \"2020-07-17T20:38:37+00:00\",\n            \"InputDataConfig\": {\n                \"S3Bucket\": \"comp-med-input\",\n                \"S3Key\": \"\"\n            },\n            \"OutputDataConfig\": {\n                \"S3Bucket\": \"comp-med-output\",\n                \"S3Key\": \"867139942017-PHIDetection-4750034166536cdb52ffa3295a1b00a3/\"\n            },\n            \"LanguageCode\": \"en\",\n            \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n            \"ModelVersion\": \"PHIModelV20190903\"\n        }\n    ]\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "list-rx-norm-inference-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/list-rx-norm-inference-jobs.html",
      "command_description": "Description\n\nGets a list of InferRxNorm jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-rx-norm-inference-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs based on their names, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"PARTIAL_SUCCESS\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nIdentifies the next page of results to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nComprehendMedicalAsyncJobPropertiesList -> (list)\n\nThe maximum number of results to return in each page. The default is 100.\n\n(structure)\n\nProvides information about a detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the detection job.\n\nJobName -> (string)\n\nThe name that you assigned to the detection job.\n\nJobStatus -> (string)\n\nThe current status of the detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the detection job completed.\n\nExpirationTime -> (timestamp)\n\nThe date and time that job metadata is deleted from the server. Output files in your S3 bucket will not be deleted. After the metadata is deleted, the job will no longer appear in the results of the ListEntitiesDetectionV2Job or the ListPHIDetectionJobs operation.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the detection job.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend Medical read access to your input data.\n\nManifestFilePath -> (string)\n\nThe path to the file that describes the results of a batch job.\n\nKMSKey -> (string)\n\nThe AWS Key Management Service key, if any, used to encrypt the output files.\n\nModelVersion -> (string)\n\nThe version of the model used to analyze the documents. The version number looks like X.X.X. You can use this information to track the model used for a particular batch of documents.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return.",
      "command_examples": "Examples\n\nTo list all current Rx-Norm inference jobs\n\nThe following example shows how list-rx-norm-inference-jobs returns a list of current asynchronous Rx-Norm batch inference jobs.\n\naws comprehendmedical list-rx-norm-inference-jobs\n\n\nOutput:\n\n{\n    \"ComprehendMedicalAsyncJobPropertiesList\": [\n        {\n            \"JobId\": \"4980034166536cfb52gga3295a1b00a3\",\n            \"JobStatus\": \"COMPLETED\",\n            \"SubmitTime\": \"2020-05-19T20:38:37.594000+00:00\",\n            \"EndTime\": \"2020-05-19T20:45:07.894000+00:00\",\n            \"ExpirationTime\": \"2020-09-17T20:38:37+00:00\",\n            \"InputDataConfig\": {\n                \"S3Bucket\": \"comp-med-input\",\n                \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n            },\n            \"OutputDataConfig\": {\n                \"S3Bucket\": \"comp-med-output\",\n                \"S3Key\": \"AKIAIOSFODNN7EXAMPLE\"\n            },\n            \"LanguageCode\": \"en\",\n            \"DataAccessRoleArn\": \"arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole\",\n            \"ModelVersion\": \"0.0.0\"\n        }\n    ]\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "start-entities-detection-v2-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/start-entities-detection-v2-job.html",
      "command_description": "Description\n\nStarts an asynchronous medical entity detection job for a collection of documents. Use the DescribeEntitiesDetectionV2Job operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-entities-detection-v2-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--client-request-token <value>]\n[--kms-key <value>]\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--client-request-token <value>]",
        "[--kms-key <value>]",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend Medical read access to your input data. For more information, see Role-Based Permissions Required for Asynchronous Operations .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend Medical generates one.\n\n--kms-key (string)\n\nAn AWS Key Management Service key to encrypt your output files. If you do not specify a key, the files are written in plain text.\n\n--language-code (string)\n\nThe language of the input documents. All documents must be in the same language.\n\nPossible values:\n\nen\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the DescribeEntitiesDetectionV2Job operation.",
      "command_examples": "Examples\n\nTo start an entities detection job\n\nThe following start-entities-detection-v2-job example starts an asynchronous entity detection job.\n\naws comprehendmedical start-entities-detection-v2-job \\\n    --input-data-config \"S3Bucket=comp-med-input\" \\\n    --output-data-config \"S3Bucket=comp-med-output\" \\\n    --data-access-role-arn arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole \\\n    --language-code en\n\n\nOutput:\n\n{\n    \"JobId\": \"ab9887877365fe70299089371c043b96\"\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "start-icd10-cm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/start-icd10-cm-inference-job.html",
      "command_description": "Description\n\nStarts an asynchronous job to detect medical conditions and link them to the ICD-10-CM ontology. Use the DescribeICD10CMInferenceJob operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-icd10-cm-inference-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--client-request-token <value>]\n[--kms-key <value>]\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--client-request-token <value>]",
        "[--kms-key <value>]",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend Medical read access to your input data. For more information, see Role-Based Permissions Required for Asynchronous Operations .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend Medical generates one.\n\n--kms-key (string)\n\nAn AWS Key Management Service key to encrypt your output files. If you do not specify a key, the files are written in plain text.\n\n--language-code (string)\n\nThe language of the input documents. All documents must be in the same language.\n\nPossible values:\n\nen\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the StartICD10CMInferenceJob operation.",
      "command_examples": "Examples\n\nTo start an ICD-10-CM inference job\n\nThe following start-icd10-cm-inference-job example starts an ICD-10-CM inference batch analysis job.\n\naws comprehendmedical start-icd10-cm-inference-job \\\n    --input-data-config \"S3Bucket=comp-med-input\" \\\n    --output-data-config \"S3Bucket=comp-med-output\" \\\n    --data-access-role-arn arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole \\\n    --language-code en\n\n\nOutput:\n\n{\n    \"JobId\": \"ef7289877365fc70299089371c043b96\"\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "start-phi-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/start-phi-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous job to detect protected health information (PHI). Use the DescribePHIDetectionJob operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-phi-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--client-request-token <value>]\n[--kms-key <value>]\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--client-request-token <value>]",
        "[--kms-key <value>]",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend Medical read access to your input data. For more information, see Role-Based Permissions Required for Asynchronous Operations .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend Medical generates one.\n\n--kms-key (string)\n\nAn AWS Key Management Service key to encrypt your output files. If you do not specify a key, the files are written in plain text.\n\n--language-code (string)\n\nThe language of the input documents. All documents must be in the same language.\n\nPossible values:\n\nen\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the DescribePHIDetectionJob operation.",
      "command_examples": "Examples\n\nTo start a PHI detection job\n\nThe following start-phi-detection-job example starts an asynchronous PHI entity detection job.\n\naws comprehendmedical start-phi-detection-job \\\n    --input-data-config \"S3Bucket=comp-med-input\" \\\n    --output-data-config \"S3Bucket=comp-med-output\" \\\n    --data-access-role-arn arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole \\\n    --language-code en\n\n\nOutput:\n\n{\n    \"JobId\": \"ab9887877365fe70299089371c043b96\"\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "start-rx-norm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/start-rx-norm-inference-job.html",
      "command_description": "Description\n\nStarts an asynchronous job to detect medication entities and link them to the RxNorm ontology. Use the DescribeRxNormInferenceJob operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-rx-norm-inference-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--client-request-token <value>]\n[--kms-key <value>]\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--client-request-token <value>]",
        "[--kms-key <value>]",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Bucket -> (string)\n\nThe URI of the S3 bucket that contains the input data. The bucket must be in the same region as the API endpoint that you are calling.\n\nEach file in the document collection must be less than 40 KB. You can store a maximum of 30 GB in the bucket.\n\nS3Key -> (string)\n\nThe path to the input data files in the S3 bucket.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Bucket -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output.\n\nS3Key -> (string)\n\nThe path to the output data files in the S3 bucket. Amazon Comprehend Medical creates an output directory using the job ID so that the output from one job does not overwrite the output of another.\n\nShorthand Syntax:\n\nS3Bucket=string,S3Key=string\n\n\nJSON Syntax:\n\n{\n  \"S3Bucket\": \"string\",\n  \"S3Key\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend Medical read access to your input data. For more information, see Role-Based Permissions Required for Asynchronous Operations .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend Medical generates one.\n\n--kms-key (string)\n\nAn AWS Key Management Service key to encrypt your output files. If you do not specify a key, the files are written in plain text.\n\n--language-code (string)\n\nThe language of the input documents. All documents must be in the same language.\n\nPossible values:\n\nen\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the job.",
      "command_examples": "Examples\n\nTo start an RxNorm inference job\n\nThe following start-rx-norm-inference-job example starts an RxNorm inference batch analysis job.\n\naws comprehendmedical start-rx-norm-inference-job \\\n    --input-data-config \"S3Bucket=comp-med-input\" \\\n    --output-data-config \"S3Bucket=comp-med-output\" \\\n    --data-access-role-arn arn:aws:iam::867139942017:role/ComprehendMedicalBatchProcessingRole \\\n    --language-code en\n\n\nOutput:\n\n{\n    \"JobId\": \"eg8199877365fc70299089371c043b96\"\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "stop-entities-detection-v2-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/stop-entities-detection-v2-job.html",
      "command_description": "Description\n\nStops a medical entities detection job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-entities-detection-v2-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the medical entities job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the medical entities detection job that was stopped.",
      "command_examples": "Examples\n\nTo stop an entity detection job\n\nThe following stop-entities-detection-v2-job example stops an asynchronous entity detection job.\n\naws comprehendmedical stop-entities-detection-v2-job \\\n    --job-id \"ab9887877365fe70299089371c043b96\"\n\n\nOutput:\n\n{\n    \"JobId\": \"ab9887877365fe70299089371c043b96\"\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "stop-icd10-cm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/stop-icd10-cm-inference-job.html",
      "command_description": "Description\n\nStops an InferICD10CM inference job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-icd10-cm-inference-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of job, use this identifier with the DescribeICD10CMInferenceJob operation.",
      "command_examples": "Examples\n\nTo stop an ICD-10-CM inference job\n\nThe following stop-icd10-cm-inference-job example stops an ICD-10-CM inference batch analysis job.\n\naws comprehendmedical stop-icd10-cm-inference-job \\\n    --job-id \"4750034166536cdb52ffa3295a1b00a3\"\n\n\nOutput:\n\n{\n    \"JobId\": \"ef7289877365fc70299089371c043b96\",\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "stop-phi-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/stop-phi-detection-job.html",
      "command_description": "Description\n\nStops a protected health information (PHI) detection job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-phi-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the PHI detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the PHI detection job that was stopped.",
      "command_examples": "Examples\n\nTo stop a protected health information (PHI) detection job\n\nThe following stop-phi-detection-job example stops an asynchronous protected health information (PHI) detection job.\n\naws comprehendmedical stop-phi-detection-job \\\n    --job-id \"4750034166536cdb52ffa3295a1b00a3\"\n\n\nOutput:\n\n{\n    \"JobId\": \"ab9887877365fe70299089371c043b96\"\n}\n\n\nFor more information, see Batch APIs in the Amazon Comprehend Medical Developer Guide."
    },
    {
      "command_name": "stop-rx-norm-inference-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehendmedical/stop-rx-norm-inference-job.html",
      "command_description": "Description\n\nStops an InferRxNorm inference job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-rx-norm-inference-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of job, use this identifier with the DescribeRxNormInferenceJob operation.",
      "command_examples": "Examples\n\nTo stop an RxNorm inference job\n\nThe following stop-rx-norm-inference-job example stops an ICD-10-CM inference batch analysis job.\n\naws comprehendmedical stop-rx-norm-inference-job \\\n    --job-id \"eg8199877365fc70299089371c043b96\"\n\n\nOutput:\n\n{\n    \"JobId\": \"eg8199877365fc70299089371c043b96\",\n}\n\n\nFor more information, see Ontology linking batch analysis in the Amazon Comprehend Medical Developer Guide."
    }
  ],
  "service_description": "Description\n\nAmazon Comprehend Medical extracts structured information from unstructured clinical text. Use these actions to gain insight in your documents."
}