{
  "service_name": "translate",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/index.html",
  "service_commands": [
    {
      "command_name": "create-parallel-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/create-parallel-data.html",
      "command_description": "Description\n\nCreates a parallel data resource in Amazon Translate by importing an input file from Amazon S3. Parallel data files contain examples of source phrases and their translations from your translation memory. By adding parallel data, you can influence the style, tone, and word choice in your translation output.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-parallel-data\n--name <value>\n[--description <value>]\n--parallel-data-config <value>\n[--encryption-key <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--parallel-data-config <value>",
        "[--encryption-key <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nA custom name for the parallel data resource in Amazon Translate. You must assign a name that is unique in the account and region.\n\n--description (string)\n\nA custom description for the parallel data resource in Amazon Translate.\n\n--parallel-data-config (structure)\n\nSpecifies the format and S3 location of the parallel data input file.\n\nS3Uri -> (string)\n\nThe URI of the Amazon S3 folder that contains the parallel data input file. The folder must be in the same Region as the API endpoint you are calling.\n\nFormat -> (string)\n\nThe format of the parallel data input file.\n\nShorthand Syntax:\n\nS3Uri=string,Format=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"Format\": \"TSV\"|\"CSV\"|\"TMX\"\n}\n\n\n--encryption-key (structure)\n\nThe encryption key used to encrypt this object.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nShorthand Syntax:\n\nType=string,Id=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"KMS\",\n  \"Id\": \"string\"\n}\n\n\n--client-token (string)\n\nA unique identifier for the request. This token is automatically generated when you use Amazon Translate through an AWS SDK.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe custom name that you assigned to the parallel data resource.\n\nStatus -> (string)\n\nThe status of the parallel data resource. When the resource is ready for you to use, the status is ACTIVE ."
    },
    {
      "command_name": "delete-parallel-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/delete-parallel-data.html",
      "command_description": "Description\n\nDeletes a parallel data resource in Amazon Translate.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-parallel-data\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the parallel data resource that is being deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the parallel data resource that is being deleted.\n\nStatus -> (string)\n\nThe status of the parallel data deletion."
    },
    {
      "command_name": "delete-terminology",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/delete-terminology.html",
      "command_description": "Description\n\nA synchronous action that deletes a custom terminology.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-terminology\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the custom terminology being deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-text-translation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/describe-text-translation-job.html",
      "command_description": "Description\n\nGets the properties associated with an asycnhronous batch translation job including name, ID, status, source and target languages, input/output S3 buckets, and so on.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-text-translation-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Translate generated for the job. The StartTextTranslationJob operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTextTranslationJobProperties -> (structure)\n\nAn object that contains the properties associated with an asynchronous batch translation job.\n\nJobId -> (string)\n\nThe ID of the translation job.\n\nJobName -> (string)\n\nThe user-defined name of the translation job.\n\nJobStatus -> (string)\n\nThe status of the translation job.\n\nJobDetails -> (structure)\n\nThe number of documents successfully and unsuccessfully processed during the translation job.\n\nTranslatedDocumentsCount -> (integer)\n\nThe number of documents successfully processed during a translation job.\n\nDocumentsWithErrorsCount -> (integer)\n\nThe number of documents that could not be processed during a translation job.\n\nInputDocumentsCount -> (integer)\n\nThe number of documents used as input in a translation job.\n\nSourceLanguageCode -> (string)\n\nThe language code of the language of the source text. The language must be a language supported by Amazon Translate.\n\nTargetLanguageCodes -> (list)\n\nThe language code of the language of the target text. The language must be a language supported by Amazon Translate.\n\n(string)\n\nTerminologyNames -> (list)\n\nA list containing the names of the terminologies applied to a translation job. Only one terminology can be applied per StartTextTranslationJob request at this time.\n\n(string)\n\nParallelDataNames -> (list)\n\nA list containing the names of the parallel data resources applied to the translation job.\n\n(string)\n\nMessage -> (string)\n\nAn explanation of any errors that may have occured during the translation job.\n\nSubmittedTime -> (timestamp)\n\nThe time at which the translation job was submitted.\n\nEndTime -> (timestamp)\n\nThe time at which the translation job ended.\n\nInputDataConfig -> (structure)\n\nThe input configuration properties that were specified when the job was requested.\n\nS3Uri -> (string)\n\nThe URI of the AWS S3 folder that contains the input file. The folder must be in the same Region as the API endpoint you are calling.\n\nContentType -> (string)\n\nDescribes the format of the data that you submit to Amazon Translate as input. You can specify one of the following multipurpose internet mail extension (MIME) types:\n\ntext/html : The input data consists of one or more HTML files. Amazon Translate translates only the text that resides in the html element in each file.\n\ntext/plain : The input data consists of one or more unformatted text files. Amazon Translate translates every character in this type of input.\n\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document : The input data consists of one or more Word documents (.docx).\n\napplication/vnd.openxmlformats-officedocument.presentationml.presentation : The input data consists of one or more PowerPoint Presentation files (.pptx).\n\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet : The input data consists of one or more Excel Workbook files (.xlsx).\n\nWarning\n\nIf you structure your input data as HTML, ensure that you set this parameter to text/html . By doing so, you cut costs by limiting the translation to the contents of the html element in each file. Otherwise, if you set this parameter to text/plain , your costs will cover the translation of every character.\n\nOutputDataConfig -> (structure)\n\nThe output configuration properties that were specified when the job was requested.\n\nS3Uri -> (string)\n\nThe URI of the S3 folder that contains a translation job’s output file. The folder must be in the same Region as the API endpoint that you are calling.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role that granted Amazon Translate read access to the job’s input data."
    },
    {
      "command_name": "get-parallel-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/get-parallel-data.html",
      "command_description": "Description\n\nProvides information about a parallel data resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-parallel-data\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the parallel data resource that is being retrieved.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nParallelDataProperties -> (structure)\n\nThe properties of the parallel data resource that is being retrieved.\n\nName -> (string)\n\nThe custom name assigned to the parallel data resource.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the parallel data resource.\n\nDescription -> (string)\n\nThe description assigned to the parallel data resource.\n\nStatus -> (string)\n\nThe status of the parallel data resource. When the parallel data is ready for you to use, the status is ACTIVE .\n\nSourceLanguageCode -> (string)\n\nThe source language of the translations in the parallel data file.\n\nTargetLanguageCodes -> (list)\n\nThe language codes for the target languages available in the parallel data file. All possible target languages are returned as an array.\n\n(string)\n\nParallelDataConfig -> (structure)\n\nSpecifies the format and S3 location of the parallel data input file.\n\nS3Uri -> (string)\n\nThe URI of the Amazon S3 folder that contains the parallel data input file. The folder must be in the same Region as the API endpoint you are calling.\n\nFormat -> (string)\n\nThe format of the parallel data input file.\n\nMessage -> (string)\n\nAdditional information from Amazon Translate about the parallel data resource.\n\nImportedDataSize -> (long)\n\nThe number of UTF-8 characters that Amazon Translate imported from the parallel data input file. This number includes only the characters in your translation examples. It does not include characters that are used to format your file. For example, if you provided a Translation Memory Exchange (.tmx) file, this number does not include the tags.\n\nImportedRecordCount -> (long)\n\nThe number of records successfully imported from the parallel data input file.\n\nFailedRecordCount -> (long)\n\nThe number of records unsuccessfully imported from the parallel data input file.\n\nSkippedRecordCount -> (long)\n\nThe number of items in the input file that Amazon Translate skipped when you created or updated the parallel data resource. For example, Amazon Translate skips empty records, empty target texts, and empty lines.\n\nEncryptionKey -> (structure)\n\nThe encryption key used to encrypt this object.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nCreatedAt -> (timestamp)\n\nThe time at which the parallel data resource was created.\n\nLastUpdatedAt -> (timestamp)\n\nThe time at which the parallel data resource was last updated.\n\nLatestUpdateAttemptStatus -> (string)\n\nThe status of the most recent update attempt for the parallel data resource.\n\nLatestUpdateAttemptAt -> (timestamp)\n\nThe time that the most recent update was attempted.\n\nDataLocation -> (structure)\n\nThe location of the most recent parallel data input file that was successfully imported into Amazon Translate. The location is returned as a presigned URL that has a 30 minute expiration.\n\nRepositoryType -> (string)\n\nDescribes the repository that contains the parallel data input file.\n\nLocation -> (string)\n\nThe Amazon S3 location of the parallel data input file. The location is returned as a presigned URL to that has a 30 minute expiration.\n\nAuxiliaryDataLocation -> (structure)\n\nThe Amazon S3 location of a file that provides any errors or warnings that were produced by your input file. This file was created when Amazon Translate attempted to create a parallel data resource. The location is returned as a presigned URL to that has a 30 minute expiration.\n\nRepositoryType -> (string)\n\nDescribes the repository that contains the parallel data input file.\n\nLocation -> (string)\n\nThe Amazon S3 location of the parallel data input file. The location is returned as a presigned URL to that has a 30 minute expiration.\n\nLatestUpdateAttemptAuxiliaryDataLocation -> (structure)\n\nThe Amazon S3 location of a file that provides any errors or warnings that were produced by your input file. This file was created when Amazon Translate attempted to update a parallel data resource. The location is returned as a presigned URL to that has a 30 minute expiration.\n\nRepositoryType -> (string)\n\nDescribes the repository that contains the parallel data input file.\n\nLocation -> (string)\n\nThe Amazon S3 location of the parallel data input file. The location is returned as a presigned URL to that has a 30 minute expiration."
    },
    {
      "command_name": "get-terminology",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/get-terminology.html",
      "command_description": "Description\n\nRetrieves a custom terminology.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-terminology\n--name <value>\n--terminology-data-format <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--terminology-data-format <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the custom terminology being retrieved.\n\n--terminology-data-format (string)\n\nThe data format of the custom terminology being retrieved, either CSV or TMX.\n\nPossible values:\n\nCSV\n\nTMX\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTerminologyProperties -> (structure)\n\nThe properties of the custom terminology being retrieved.\n\nName -> (string)\n\nThe name of the custom terminology.\n\nDescription -> (string)\n\nThe description of the custom terminology properties.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the custom terminology.\n\nSourceLanguageCode -> (string)\n\nThe language code for the source text of the translation request for which the custom terminology is being used.\n\nTargetLanguageCodes -> (list)\n\nThe language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n\n(string)\n\nEncryptionKey -> (structure)\n\nThe encryption key for the custom terminology.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nSizeBytes -> (integer)\n\nThe size of the file used when importing a custom terminology.\n\nTermCount -> (integer)\n\nThe number of terms included in the custom terminology.\n\nCreatedAt -> (timestamp)\n\nThe time at which the custom terminology was created, based on the timestamp.\n\nLastUpdatedAt -> (timestamp)\n\nThe time at which the custom terminology was last update, based on the timestamp.\n\nTerminologyDataLocation -> (structure)\n\nThe data location of the custom terminology being retrieved. The custom terminology file is returned in a presigned url that has a 30 minute expiration.\n\nRepositoryType -> (string)\n\nThe repository type for the custom terminology data.\n\nLocation -> (string)\n\nThe location of the custom terminology data."
    },
    {
      "command_name": "import-terminology",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/import-terminology.html",
      "command_description": "Description\n\nCreates or updates a custom terminology, depending on whether or not one already exists for the given terminology name. Importing a terminology with the same name as an existing one will merge the terminologies based on the chosen merge strategy. Currently, the only supported merge strategy is OVERWRITE, and so the imported terminology will overwrite an existing terminology of the same name.\n\nIf you import a terminology that overwrites an existing one, the new terminology take up to 10 minutes to fully propagate and be available for use in a translation due to cache policies with the DataPlane service that performs the translations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-terminology\n--name <value>\n--merge-strategy <value>\n[--description <value>]\n[--terminology-data <value>]\n[--encryption-key <value>]\n--data-file <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--merge-strategy <value>",
        "[--description <value>]",
        "[--terminology-data <value>]",
        "[--encryption-key <value>]",
        "--data-file <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the custom terminology being imported.\n\n--merge-strategy (string)\n\nThe merge strategy of the custom terminology being imported. Currently, only the OVERWRITE merge strategy is supported. In this case, the imported terminology will overwrite an existing terminology of the same name.\n\nPossible values:\n\nOVERWRITE\n\n--description (string)\n\nThe description of the custom terminology being imported.\n\n--terminology-data (structure)\n\nThe terminology data for the custom terminology being imported.\n\nFormat -> (string)\n\nThe data format of the custom terminology. Either CSV or TMX.\n\nShorthand Syntax:\n\nFormat=string\n\n\nJSON Syntax:\n\n{\n  \"Format\": \"CSV\"|\"TMX\"\n}\n\n\n--encryption-key (structure)\n\nThe encryption key for the custom terminology being imported.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nShorthand Syntax:\n\nType=string,Id=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"KMS\",\n  \"Id\": \"string\"\n}\n\n\n--data-file (blob)\n\nThe path to the file of the code you are uploading. Example: fileb://data.csv\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTerminologyProperties -> (structure)\n\nThe properties of the custom terminology being imported.\n\nName -> (string)\n\nThe name of the custom terminology.\n\nDescription -> (string)\n\nThe description of the custom terminology properties.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the custom terminology.\n\nSourceLanguageCode -> (string)\n\nThe language code for the source text of the translation request for which the custom terminology is being used.\n\nTargetLanguageCodes -> (list)\n\nThe language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n\n(string)\n\nEncryptionKey -> (structure)\n\nThe encryption key for the custom terminology.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nSizeBytes -> (integer)\n\nThe size of the file used when importing a custom terminology.\n\nTermCount -> (integer)\n\nThe number of terms included in the custom terminology.\n\nCreatedAt -> (timestamp)\n\nThe time at which the custom terminology was created, based on the timestamp.\n\nLastUpdatedAt -> (timestamp)\n\nThe time at which the custom terminology was last update, based on the timestamp.",
      "command_examples": "Examples\n\nTo import a custom terminology from a file\n\nThe following import-terminology example creates a terminology called MyTestTerminology from the test-terminology.csv file:\n\naws translate import-terminology \\\n    --name MyTestTerminology \\\n    --description \"Creating a test terminology in AWS Translate\" \\\n    --merge-strategy OVERWRITE \\\n    --data-file fileb://test-terminology.csv \\\n    --terminology-data Format=CSV\n\n\nContents of test-terminology.csv:\n\nen,fr,es,zh Hello world!,Bonjour tout le monde!,Hola Mundo!,???? Amazon,Amazon,Amazon,Amazon\n\nOutput:\n\n{\n    \"TerminologyProperties\": {\n        \"SourceLanguageCode\": \"en\",\n        \"Name\": \"MyTestTerminology\",\n        \"TargetLanguageCodes\": [\n            \"fr\",\n            \"es\",\n            \"zh\"\n        ],\n        \"SizeBytes\": 97,\n        \"LastUpdatedAt\": 1571089500.851,\n        \"CreatedAt\": 1571089500.851,\n        \"TermCount\": 6,\n        \"Arn\": \"arn:aws:translate:us-west-2:123456789012:terminology/MyTestTerminology/LATEST\",\n        \"Description\": \"Creating a test terminology in AWS Translate\"\n    }\n}\n"
    },
    {
      "command_name": "list-parallel-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/list-parallel-data.html",
      "command_description": "Description\n\nProvides a list of your parallel data resources in Amazon Translate.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-parallel-data\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nA string that specifies the next page of results to return in a paginated response.\n\n--max-results (integer)\n\nThe maximum number of parallel data resources returned for each request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nParallelDataPropertiesList -> (list)\n\nThe properties of the parallel data resources returned by this request.\n\n(structure)\n\nThe properties of a parallel data resource.\n\nName -> (string)\n\nThe custom name assigned to the parallel data resource.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the parallel data resource.\n\nDescription -> (string)\n\nThe description assigned to the parallel data resource.\n\nStatus -> (string)\n\nThe status of the parallel data resource. When the parallel data is ready for you to use, the status is ACTIVE .\n\nSourceLanguageCode -> (string)\n\nThe source language of the translations in the parallel data file.\n\nTargetLanguageCodes -> (list)\n\nThe language codes for the target languages available in the parallel data file. All possible target languages are returned as an array.\n\n(string)\n\nParallelDataConfig -> (structure)\n\nSpecifies the format and S3 location of the parallel data input file.\n\nS3Uri -> (string)\n\nThe URI of the Amazon S3 folder that contains the parallel data input file. The folder must be in the same Region as the API endpoint you are calling.\n\nFormat -> (string)\n\nThe format of the parallel data input file.\n\nMessage -> (string)\n\nAdditional information from Amazon Translate about the parallel data resource.\n\nImportedDataSize -> (long)\n\nThe number of UTF-8 characters that Amazon Translate imported from the parallel data input file. This number includes only the characters in your translation examples. It does not include characters that are used to format your file. For example, if you provided a Translation Memory Exchange (.tmx) file, this number does not include the tags.\n\nImportedRecordCount -> (long)\n\nThe number of records successfully imported from the parallel data input file.\n\nFailedRecordCount -> (long)\n\nThe number of records unsuccessfully imported from the parallel data input file.\n\nSkippedRecordCount -> (long)\n\nThe number of items in the input file that Amazon Translate skipped when you created or updated the parallel data resource. For example, Amazon Translate skips empty records, empty target texts, and empty lines.\n\nEncryptionKey -> (structure)\n\nThe encryption key used to encrypt this object.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nCreatedAt -> (timestamp)\n\nThe time at which the parallel data resource was created.\n\nLastUpdatedAt -> (timestamp)\n\nThe time at which the parallel data resource was last updated.\n\nLatestUpdateAttemptStatus -> (string)\n\nThe status of the most recent update attempt for the parallel data resource.\n\nLatestUpdateAttemptAt -> (timestamp)\n\nThe time that the most recent update was attempted.\n\nNextToken -> (string)\n\nThe string to use in a subsequent request to get the next page of results in a paginated response. This value is null if there are no additional pages."
    },
    {
      "command_name": "list-terminologies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/list-terminologies.html",
      "command_description": "Description\n\nProvides a list of custom terminologies associated with your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-terminologies is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TerminologyPropertiesList",
      "command_synopsis": "Synopsis\n  list-terminologies\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTerminologyPropertiesList -> (list)\n\nThe properties list of the custom terminologies returned on the list request.\n\n(structure)\n\nThe properties of the custom terminology.\n\nName -> (string)\n\nThe name of the custom terminology.\n\nDescription -> (string)\n\nThe description of the custom terminology properties.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the custom terminology.\n\nSourceLanguageCode -> (string)\n\nThe language code for the source text of the translation request for which the custom terminology is being used.\n\nTargetLanguageCodes -> (list)\n\nThe language codes for the target languages available with the custom terminology file. All possible target languages are returned in array.\n\n(string)\n\nEncryptionKey -> (structure)\n\nThe encryption key for the custom terminology.\n\nType -> (string)\n\nThe type of encryption key used by Amazon Translate to encrypt custom terminologies.\n\nId -> (string)\n\nThe Amazon Resource Name (ARN) of the encryption key being used to encrypt the custom terminology.\n\nSizeBytes -> (integer)\n\nThe size of the file used when importing a custom terminology.\n\nTermCount -> (integer)\n\nThe number of terms included in the custom terminology.\n\nCreatedAt -> (timestamp)\n\nThe time at which the custom terminology was created, based on the timestamp.\n\nLastUpdatedAt -> (timestamp)\n\nThe time at which the custom terminology was last update, based on the timestamp.\n\nNextToken -> (string)\n\nIf the response to the ListTerminologies was truncated, the NextToken fetches the next group of custom terminologies."
    },
    {
      "command_name": "list-text-translation-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/list-text-translation-jobs.html",
      "command_description": "Description\n\nGets a list of the batch translation jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-text-translation-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nThe parameters that specify which batch translation jobs to retrieve. Filters include job name, job status, and submission time. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters the list of jobs by name.\n\nJobStatus -> (string)\n\nFilters the list of jobs based by job status.\n\nSubmittedBeforeTime -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing and returns only the jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmittedAfterTime -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing and returns only the jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmittedBeforeTime=timestamp,SubmittedAfterTime=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"COMPLETED_WITH_ERROR\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmittedBeforeTime\": timestamp,\n  \"SubmittedAfterTime\": timestamp\n}\n\n\n--next-token (string)\n\nThe token to request the next page of results.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page. The default value is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTextTranslationJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a translation job.\n\nJobId -> (string)\n\nThe ID of the translation job.\n\nJobName -> (string)\n\nThe user-defined name of the translation job.\n\nJobStatus -> (string)\n\nThe status of the translation job.\n\nJobDetails -> (structure)\n\nThe number of documents successfully and unsuccessfully processed during the translation job.\n\nTranslatedDocumentsCount -> (integer)\n\nThe number of documents successfully processed during a translation job.\n\nDocumentsWithErrorsCount -> (integer)\n\nThe number of documents that could not be processed during a translation job.\n\nInputDocumentsCount -> (integer)\n\nThe number of documents used as input in a translation job.\n\nSourceLanguageCode -> (string)\n\nThe language code of the language of the source text. The language must be a language supported by Amazon Translate.\n\nTargetLanguageCodes -> (list)\n\nThe language code of the language of the target text. The language must be a language supported by Amazon Translate.\n\n(string)\n\nTerminologyNames -> (list)\n\nA list containing the names of the terminologies applied to a translation job. Only one terminology can be applied per StartTextTranslationJob request at this time.\n\n(string)\n\nParallelDataNames -> (list)\n\nA list containing the names of the parallel data resources applied to the translation job.\n\n(string)\n\nMessage -> (string)\n\nAn explanation of any errors that may have occured during the translation job.\n\nSubmittedTime -> (timestamp)\n\nThe time at which the translation job was submitted.\n\nEndTime -> (timestamp)\n\nThe time at which the translation job ended.\n\nInputDataConfig -> (structure)\n\nThe input configuration properties that were specified when the job was requested.\n\nS3Uri -> (string)\n\nThe URI of the AWS S3 folder that contains the input file. The folder must be in the same Region as the API endpoint you are calling.\n\nContentType -> (string)\n\nDescribes the format of the data that you submit to Amazon Translate as input. You can specify one of the following multipurpose internet mail extension (MIME) types:\n\ntext/html : The input data consists of one or more HTML files. Amazon Translate translates only the text that resides in the html element in each file.\n\ntext/plain : The input data consists of one or more unformatted text files. Amazon Translate translates every character in this type of input.\n\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document : The input data consists of one or more Word documents (.docx).\n\napplication/vnd.openxmlformats-officedocument.presentationml.presentation : The input data consists of one or more PowerPoint Presentation files (.pptx).\n\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet : The input data consists of one or more Excel Workbook files (.xlsx).\n\nWarning\n\nIf you structure your input data as HTML, ensure that you set this parameter to text/html . By doing so, you cut costs by limiting the translation to the contents of the html element in each file. Otherwise, if you set this parameter to text/plain , your costs will cover the translation of every character.\n\nOutputDataConfig -> (structure)\n\nThe output configuration properties that were specified when the job was requested.\n\nS3Uri -> (string)\n\nThe URI of the S3 folder that contains a translation job’s output file. The folder must be in the same Region as the API endpoint that you are calling.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role that granted Amazon Translate read access to the job’s input data.\n\nNextToken -> (string)\n\nThe token to use to retreive the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "start-text-translation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/start-text-translation-job.html",
      "command_description": "Description\n\nStarts an asynchronous batch translation job. Batch translation jobs can be used to translate large volumes of text across multiple documents at once. For more information, see async .\n\nBatch translation jobs can be described with the DescribeTextTranslationJob operation, listed with the ListTextTranslationJobs operation, and stopped with the StopTextTranslationJob operation.\n\nNote\n\nAmazon Translate does not support batch translation of multiple source languages at once.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-text-translation-job\n[--job-name <value>]\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n--source-language-code <value>\n--target-language-codes <value>\n[--terminology-names <value>]\n[--parallel-data-names <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--job-name <value>]",
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "--source-language-code <value>",
        "--target-language-codes <value>",
        "[--terminology-names <value>]",
        "[--parallel-data-names <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the batch translation job to be performed.\n\n--input-data-config (structure)\n\nSpecifies the format and S3 location of the input documents for the translation job.\n\nS3Uri -> (string)\n\nThe URI of the AWS S3 folder that contains the input file. The folder must be in the same Region as the API endpoint you are calling.\n\nContentType -> (string)\n\nDescribes the format of the data that you submit to Amazon Translate as input. You can specify one of the following multipurpose internet mail extension (MIME) types:\n\ntext/html : The input data consists of one or more HTML files. Amazon Translate translates only the text that resides in the html element in each file.\n\ntext/plain : The input data consists of one or more unformatted text files. Amazon Translate translates every character in this type of input.\n\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document : The input data consists of one or more Word documents (.docx).\n\napplication/vnd.openxmlformats-officedocument.presentationml.presentation : The input data consists of one or more PowerPoint Presentation files (.pptx).\n\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet : The input data consists of one or more Excel Workbook files (.xlsx).\n\nWarning\n\nIf you structure your input data as HTML, ensure that you set this parameter to text/html . By doing so, you cut costs by limiting the translation to the contents of the html element in each file. Otherwise, if you set this parameter to text/plain , your costs will cover the translation of every character.\n\nShorthand Syntax:\n\nS3Uri=string,ContentType=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"ContentType\": \"string\"\n}\n\n\n--output-data-config (structure)\n\nSpecifies the S3 folder to which your job output will be saved.\n\nS3Uri -> (string)\n\nThe URI of the S3 folder that contains a translation job’s output file. The folder must be in the same Region as the API endpoint that you are calling.\n\nShorthand Syntax:\n\nS3Uri=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of an AWS Identity Access and Management (IAM) role that grants Amazon Translate read access to your input data. For more nformation, see identity-and-access-management .\n\n--source-language-code (string)\n\nThe language code of the input language. For a list of language codes, see what-is-languages .\n\nAmazon Translate does not automatically detect a source language during batch translation jobs.\n\n--target-language-codes (list)\n\nThe language code of the output language.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--terminology-names (list)\n\nThe name of the terminology to use in the batch translation job. For a list of available terminologies, use the ListTerminologies operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--parallel-data-names (list)\n\nThe names of the parallel data resources to use in the batch translation job. For a list of available parallel data resources, use the ListParallelData operation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--client-token (string)\n\nA unique identifier for the request. This token is auto-generated when using the Amazon Translate SDK.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this ID with the DescribeTextTranslationJob operation.\n\nJobStatus -> (string)\n\nThe status of the job. Possible values include:\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Translate is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nCOMPLETED_WITH_ERROR - The job was completed with errors. The errors can be analyzed in the job’s output.\n\nFAILED - The job did not complete. To get details, use the DescribeTextTranslationJob operation.\n\nSTOP_REQUESTED - The user who started the job has requested that it be stopped.\n\nSTOPPED - The job has been stopped."
    },
    {
      "command_name": "stop-text-translation-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/stop-text-translation-job.html",
      "command_description": "Description\n\nStops an asynchronous batch translation job that is in progress.\n\nIf the job’s state is IN_PROGRESS , the job will be marked for termination and put into the STOP_REQUESTED state. If the job completes before it can be stopped, it is put into the COMPLETED state. Otherwise, the job is put into the STOPPED state.\n\nAsynchronous batch translation jobs are started with the StartTextTranslationJob operation. You can use the DescribeTextTranslationJob or ListTextTranslationJobs operations to get a batch translation job’s JobId .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-text-translation-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe job ID of the job to be stopped.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe job ID of the stopped batch translation job.\n\nJobStatus -> (string)\n\nThe status of the designated job. Upon successful completion, the job’s status will be STOPPED ."
    },
    {
      "command_name": "translate-text",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/translate-text.html",
      "command_description": "Description\n\nTranslates input text from the source language to the target language. For a list of available languages and language codes, see what-is-languages .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  translate-text\n--text <value>\n[--terminology-names <value>]\n--source-language-code <value>\n--target-language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--terminology-names <value>]",
        "--source-language-code <value>",
        "--target-language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nThe text to translate. The text string can be a maximum of 5,000 bytes long. Depending on your character set, this may be fewer than 5,000 characters.\n\n--terminology-names (list)\n\nThe name of the terminology list file to be used in the TranslateText request. You can use 1 terminology list at most in a TranslateText request. Terminology lists can contain a maximum of 256 terms.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--source-language-code (string)\n\nThe language code for the language of the source text. The language must be a language supported by Amazon Translate. For a list of language codes, see what-is-languages .\n\nTo have Amazon Translate determine the source language of your text, you can specify auto in the SourceLanguageCode field. If you specify auto , Amazon Translate will call Amazon Comprehend to determine the source language.\n\n--target-language-code (string)\n\nThe language code requested for the language of the target text. The language must be a language supported by Amazon Translate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTranslatedText -> (string)\n\nThe translated text.\n\nSourceLanguageCode -> (string)\n\nThe language code for the language of the source text.\n\nTargetLanguageCode -> (string)\n\nThe language code for the language of the target text.\n\nAppliedTerminologies -> (list)\n\nThe names of the custom terminologies applied to the input text by Amazon Translate for the translated text response.\n\n(structure)\n\nThe custom terminology applied to the input text by Amazon Translate for the translated text response. This is optional in the response and will only be present if you specified terminology input in the request. Currently, only one terminology can be applied per TranslateText request.\n\nName -> (string)\n\nThe name of the custom terminology applied to the input text by Amazon Translate for the translated text response.\n\nTerms -> (list)\n\nThe specific terms of the custom terminology applied to the input text by Amazon Translate for the translated text response. A maximum of 250 terms will be returned, and the specific terms applied will be the first 250 terms in the source text.\n\n(structure)\n\nThe term being translated by the custom terminology.\n\nSourceText -> (string)\n\nThe source text of the term being translated by the custom terminology.\n\nTargetText -> (string)\n\nThe target text of the term being translated by the custom terminology."
    },
    {
      "command_name": "update-parallel-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/translate/update-parallel-data.html",
      "command_description": "Description\n\nUpdates a previously created parallel data resource by importing a new input file from Amazon S3.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-parallel-data\n--name <value>\n[--description <value>]\n--parallel-data-config <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--parallel-data-config <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the parallel data resource being updated.\n\n--description (string)\n\nA custom description for the parallel data resource in Amazon Translate.\n\n--parallel-data-config (structure)\n\nSpecifies the format and S3 location of the parallel data input file.\n\nS3Uri -> (string)\n\nThe URI of the Amazon S3 folder that contains the parallel data input file. The folder must be in the same Region as the API endpoint you are calling.\n\nFormat -> (string)\n\nThe format of the parallel data input file.\n\nShorthand Syntax:\n\nS3Uri=string,Format=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"Format\": \"TSV\"|\"CSV\"|\"TMX\"\n}\n\n\n--client-token (string)\n\nA unique identifier for the request. This token is automatically generated when you use Amazon Translate through an AWS SDK.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the parallel data resource being updated.\n\nStatus -> (string)\n\nThe status of the parallel data resource that you are attempting to update. Your update request is accepted only if this status is either ACTIVE or FAILED .\n\nLatestUpdateAttemptStatus -> (string)\n\nThe status of the parallel data update attempt. When the updated parallel data resource is ready for you to use, the status is ACTIVE .\n\nLatestUpdateAttemptAt -> (timestamp)\n\nThe time that the most recent update was attempted."
    }
  ],
  "service_description": "Description\n\nProvides translation between one source language and another of the same set of languages."
}