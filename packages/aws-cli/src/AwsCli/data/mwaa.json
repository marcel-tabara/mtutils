{
  "service_name": "mwaa",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/index.html",
  "service_commands": [
    {
      "command_name": "create-cli-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/create-cli-token.html",
      "command_description": "Description\n\nCreate a CLI token to use Airflow CLI.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cli-token\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nCreate a CLI token request for a MWAA environment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCliToken -> (string)\n\nCreate an Airflow CLI login token response for the provided JWT token.\n\nWebServerHostname -> (string)\n\nCreate an Airflow CLI login token response for the provided webserver hostname."
    },
    {
      "command_name": "create-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/create-environment.html",
      "command_description": "Description\n\nCreates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-environment\n[--airflow-configuration-options <value>]\n[--airflow-version <value>]\n--dag-s3-path <value>\n[--environment-class <value>]\n--execution-role-arn <value>\n[--kms-key <value>]\n[--logging-configuration <value>]\n[--max-workers <value>]\n[--min-workers <value>]\n--name <value>\n--network-configuration <value>\n[--plugins-s3-object-version <value>]\n[--plugins-s3-path <value>]\n[--requirements-s3-object-version <value>]\n[--requirements-s3-path <value>]\n[--schedulers <value>]\n--source-bucket-arn <value>\n[--tags <value>]\n[--webserver-access-mode <value>]\n[--weekly-maintenance-window-start <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--airflow-configuration-options <value>]",
        "[--airflow-version <value>]",
        "--dag-s3-path <value>",
        "[--environment-class <value>]",
        "--execution-role-arn <value>",
        "[--kms-key <value>]",
        "[--logging-configuration <value>]",
        "[--max-workers <value>]",
        "[--min-workers <value>]",
        "--name <value>",
        "--network-configuration <value>",
        "[--plugins-s3-object-version <value>]",
        "[--plugins-s3-path <value>]",
        "[--requirements-s3-object-version <value>]",
        "[--requirements-s3-path <value>]",
        "[--schedulers <value>]",
        "--source-bucket-arn <value>",
        "[--tags <value>]",
        "[--webserver-access-mode <value>]",
        "[--weekly-maintenance-window-start <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--airflow-configuration-options (map)\n\nA list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see Apache Airflow configuration options .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--airflow-version (string)\n\nThe Apache Airflow version for your environment. For example, v1.10.12 . If no value is specified, defaults to the latest version. Valid values: v1.10.12 .\n\n--dag-s3-path (string)\n\nThe relative path to the DAGs folder on your Amazon S3 bucket. For example, dags . To learn more, see Adding or updating DAGs .\n\n--environment-class (string)\n\nThe environment class type. Valid values: mw1.small , mw1.medium , mw1.large . To learn more, see Amazon MWAA environment class .\n\n--execution-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an AWS Identity and Access Management (IAM) role that grants MWAA permission to access AWS services and resources used by your environment. For example, arn:aws:iam::123456789:role/my-execution-role . To learn more, see Amazon MWAA Execution role .\n\n--kms-key (string)\n\nThe AWS Key Management Service (KMS) key to encrypt the data in your environment. You can use an AWS owned CMK, or a Customer managed CMK (advanced). To learn more, see Get started with Amazon Managed Workflows for Apache Airflow .\n\n--logging-configuration (structure)\n\nDefines the Apache Airflow logs to send to CloudWatch Logs: DagProcessingLogs , SchedulerLogs , TaskLogs , WebserverLogs , WorkerLogs .\n\nDagProcessingLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nSchedulerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nTaskLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWebserverLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWorkerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nShorthand Syntax:\n\nDagProcessingLogs={Enabled=boolean,LogLevel=string},SchedulerLogs={Enabled=boolean,LogLevel=string},TaskLogs={Enabled=boolean,LogLevel=string},WebserverLogs={Enabled=boolean,LogLevel=string},WorkerLogs={Enabled=boolean,LogLevel=string}\n\n\nJSON Syntax:\n\n{\n  \"DagProcessingLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"SchedulerLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"TaskLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"WebserverLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"WorkerLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  }\n}\n\n\n--max-workers (integer)\n\nThe maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. For example, 20 . When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in MinWorkers .\n\n--min-workers (integer)\n\nThe minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the MinWorkers field. For example, 2 .\n\n--name (string)\n\nThe name of the Amazon MWAA environment. For example, MyMWAAEnvironment .\n\n--network-configuration (structure)\n\nThe VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see About networking on Amazon MWAA .\n\nSecurityGroupIds -> (list)\n\nA list of 1 or more security group IDs. Accepts up to 5 security group IDs. A security group must be attached to the same VPC as the subnets. To learn more, see Security in your VPC on Amazon MWAA .\n\n(string)\n\nSubnetIds -> (list)\n\nA list of 2 subnet IDs. Required to create an environment. Must be private subnets in two different availability zones. A subnet must be attached to the same VPC as the security group.\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,SubnetIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"SubnetIds\": [\"string\", ...]\n}\n\n\n--plugins-s3-object-version (string)\n\nThe version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see How S3 Versioning works .\n\n--plugins-s3-path (string)\n\nThe relative path to the plugins.zip file on your Amazon S3 bucket. For example, plugins.zip . If specified, then the plugins.zip version is required. To learn more, see Installing custom plugins .\n\n--requirements-s3-object-version (string)\n\nThe version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see How S3 Versioning works .\n\n--requirements-s3-path (string)\n\nThe relative path to the requirements.txt file on your Amazon S3 bucket. For example, requirements.txt . If specified, then a file version is required. To learn more, see Installing Python dependencies .\n\n--schedulers (integer)\n\nThe number of Apache Airflow schedulers to run in your environment.\n\n--source-bucket-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, arn:aws:s3:::my-airflow-bucket-unique-name . To learn more, see Create an Amazon S3 bucket for Amazon MWAA .\n\n--tags (map)\n\nThe key-value tag pairs you want to associate to your environment. For example, \"Environment\": \"Staging\" . To learn more, see Tagging AWS resources .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--webserver-access-mode (string)\n\nThe Apache Airflow Web server access mode. To learn more, see Apache Airflow access modes .\n\nPossible values:\n\nPRIVATE_ONLY\n\nPUBLIC_ONLY\n\n--weekly-maintenance-window-start (string)\n\nThe day and time of the week to start weekly maintenance updates of your environment in the following format: DAY:HH:MM . For example: TUE:03:30 . You can specify a start time in 30 minute increments only. Supported input includes the following:\n\nMON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) returned in the response for the environment."
    },
    {
      "command_name": "create-web-login-token",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/create-web-login-token.html",
      "command_description": "Description\n\nCreate a JWT token to be used to login to Airflow Web UI with claims based Authentication.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-web-login-token\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nCreate an Airflow Web UI login token request for a MWAA environment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWebServerHostname -> (string)\n\nCreate an Airflow Web UI login token response for the provided webserver hostname.\n\nWebToken -> (string)\n\nCreate an Airflow Web UI login token response for the provided JWT token."
    },
    {
      "command_name": "delete-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/delete-environment.html",
      "command_description": "Description\n\nDeletes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-environment\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the Amazon MWAA environment. For example, MyMWAAEnvironment .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/get-environment.html",
      "command_description": "Description\n\nRetrieves the details of an Amazon Managed Workflows for Apache Airflow (MWAA) environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-environment\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the Amazon MWAA environment. For example, MyMWAAEnvironment .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEnvironment -> (structure)\n\nAn object containing all available details about the environment.\n\nAirflowConfigurationOptions -> (map)\n\nA list of key-value pairs containing the Apache Airflow configuration options attached to your environment. To learn more, see Apache Airflow configuration options .\n\nkey -> (string)\n\nvalue -> (string)\n\nAirflowVersion -> (string)\n\nThe Apache Airflow version on your environment. For example, v1.10.12 .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon MWAA environment.\n\nCreatedAt -> (timestamp)\n\nThe day and time the environment was created.\n\nDagS3Path -> (string)\n\nThe relative path to the DAGs folder on your Amazon S3 bucket. For example, dags . To learn more, see Adding or updating DAGs .\n\nEnvironmentClass -> (string)\n\nThe environment class type. Valid values: mw1.small , mw1.medium , mw1.large . To learn more, see Amazon MWAA environment class .\n\nExecutionRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, arn:aws:iam::123456789:role/my-execution-role . To learn more, see Amazon MWAA Execution role .\n\nKmsKey -> (string)\n\nThe Key Management Service (KMS) encryption key used to encrypt the data in your environment.\n\nLastUpdate -> (structure)\n\nThe status of the last update on the environment, and any errors that were encountered.\n\nCreatedAt -> (timestamp)\n\nThe day and time of the last update on the environment.\n\nError -> (structure)\n\nThe error that was encountered during the last update of the environment.\n\nErrorCode -> (string)\n\nThe error code that corresponds to the error with the last update.\n\nErrorMessage -> (string)\n\nThe error message that corresponds to the error code.\n\nStatus -> (string)\n\nThe status of the last update on the environment. Valid values: SUCCESS , PENDING , FAILED .\n\nLoggingConfiguration -> (structure)\n\nThe Apache Airflow logs being sent to CloudWatch Logs: DagProcessingLogs , SchedulerLogs , TaskLogs , WebserverLogs , WorkerLogs .\n\nDagProcessingLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nCloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. DagProcessingLogs ) is published. For example, arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:* .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nSchedulerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nCloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. DagProcessingLogs ) is published. For example, arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:* .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nTaskLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nCloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. DagProcessingLogs ) is published. For example, arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:* .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWebserverLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nCloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. DagProcessingLogs ) is published. For example, arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:* .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWorkerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nCloudWatchLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) for the CloudWatch Logs group where the Apache Airflow log type (e.g. DagProcessingLogs ) is published. For example, arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:* .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nMaxWorkers -> (integer)\n\nThe maximum number of workers that run in your environment. For example, 20 .\n\nMinWorkers -> (integer)\n\nThe minimum number of workers that run in your environment. For example, 2 .\n\nName -> (string)\n\nThe name of the Amazon MWAA environment. For example, MyMWAAEnvironment .\n\nNetworkConfiguration -> (structure)\n\nThe VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see About networking on Amazon MWAA .\n\nSecurityGroupIds -> (list)\n\nA list of 1 or more security group IDs. Accepts up to 5 security group IDs. A security group must be attached to the same VPC as the subnets. To learn more, see Security in your VPC on Amazon MWAA .\n\n(string)\n\nSubnetIds -> (list)\n\nA list of 2 subnet IDs. Required to create an environment. Must be private subnets in two different availability zones. A subnet must be attached to the same VPC as the security group.\n\n(string)\n\nPluginsS3ObjectVersion -> (string)\n\nThe version of the plugins.zip file on your Amazon S3 bucket. To learn more, see Installing custom plugins .\n\nPluginsS3Path -> (string)\n\nThe relative path to the plugins.zip file on your Amazon S3 bucket. For example, plugins.zip . To learn more, see Installing custom plugins .\n\nRequirementsS3ObjectVersion -> (string)\n\nThe version of the requirements.txt file on your Amazon S3 bucket. To learn more, see Installing Python dependencies .\n\nRequirementsS3Path -> (string)\n\nThe relative path to the requirements.txt file on your Amazon S3 bucket. For example, requirements.txt . To learn more, see Installing Python dependencies .\n\nSchedulers -> (integer)\n\nThe number of Apache Airflow schedulers that run in your Amazon MWAA environment.\n\nServiceRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) for the service-linked role of the environment. To learn more, see Amazon MWAA Service-linked role .\n\nSourceBucketArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, arn:aws:s3:::my-airflow-bucket-unique-name . To learn more, see Create an Amazon S3 bucket for Amazon MWAA .\n\nStatus -> (string)\n\nThe status of the Amazon MWAA environment. Valid values:\n\nCREATING - Indicates the request to create the environment is in progress.\n\nCREATE_FAILED - Indicates the request to create the environment failed, and the environment could not be created.\n\nAVAILABLE - Indicates the request was successful and the environment is ready to use.\n\nUPDATING - Indicates the request to update the environment is in progress.\n\nDELETING - Indicates the request to delete the environment is in progress.\n\nDELETED - Indicates the request to delete the environment is complete, and the environment has been deleted.\n\nUNAVAILABLE - Indicates the request failed, but the environment was unable to rollback and is not in a stable state.\n\nUPDATE_FAILED - Indicates the request to update the environment failed, and the environment has rolled back successfully and is ready to use.\n\nWe recommend reviewing our troubleshooting guide for a list of common errors and their solutions. To learn more, see Amazon MWAA troubleshooting .\n\nTags -> (map)\n\nThe key-value tag pairs associated to your environment. For example, \"Environment\": \"Staging\" . To learn more, see Tagging AWS resources .\n\nkey -> (string)\n\nvalue -> (string)\n\nWebserverAccessMode -> (string)\n\nThe Apache Airflow Web server access mode. To learn more, see Apache Airflow access modes .\n\nWebserverUrl -> (string)\n\nThe Apache Airflow Web server host name for the Amazon MWAA environment. To learn more, see Accessing the Apache Airflow UI .\n\nWeeklyMaintenanceWindowStart -> (string)\n\nThe day and time of the week that weekly maintenance updates are scheduled. For example: TUE:03:30 ."
    },
    {
      "command_name": "list-environments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/list-environments.html",
      "command_description": "Description\n\nLists the Amazon Managed Workflows for Apache Airflow (MWAA) environments.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-environments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Environments",
      "command_synopsis": "Synopsis\n  list-environments\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEnvironments -> (list)\n\nReturns the list of Amazon MWAA environments.\n\n(string)\n\nNextToken -> (string)\n\nRetrieves the next page of the results."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, \"Environment\": \"Staging\" .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nThe key-value tag pairs associated to your environment. To learn more, see Tagging AWS resources .\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "publish-metrics",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/publish-metrics.html",
      "command_description": "Description\n\nAn operation for publishing metrics from the customers to the Ops plane.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  publish-metrics\n--environment-name <value>\n--metric-data <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--environment-name <value>",
        "--metric-data <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--environment-name (string)\n\nPublishes environment metric data to Amazon CloudWatch.\n\n--metric-data (list)\n\nPublishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metrica.\n\n(structure)\n\nInternal only API.\n\nDimensions -> (list)\n\nInternal only API.\n\n(structure)\n\nInternal only API.\n\nName -> (string)\n\nInternal only API.\n\nValue -> (string)\n\nInternal only API.\n\nMetricName -> (string)\n\nInternal only API.\n\nStatisticValues -> (structure)\n\nInternal only API.\n\nMaximum -> (double)\n\nInternal only API.\n\nMinimum -> (double)\n\nInternal only API.\n\nSampleCount -> (integer)\n\nInternal only API.\n\nSum -> (double)\n\nInternal only API.\n\nTimestamp -> (timestamp)\n\nInternal only API.\n\nUnit -> (string)\n\nUnit\n\nValue -> (double)\n\nInternal only API.\n\nShorthand Syntax:\n\nDimensions=[{Name=string,Value=string},{Name=string,Value=string}],MetricName=string,StatisticValues={Maximum=double,Minimum=double,SampleCount=integer,Sum=double},Timestamp=timestamp,Unit=string,Value=double ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Dimensions\": [\n      {\n        \"Name\": \"string\",\n        \"Value\": \"string\"\n      }\n      ...\n    ],\n    \"MetricName\": \"string\",\n    \"StatisticValues\": {\n      \"Maximum\": double,\n      \"Minimum\": double,\n      \"SampleCount\": integer,\n      \"Sum\": double\n    },\n    \"Timestamp\": timestamp,\n    \"Unit\": \"Seconds\"|\"Microseconds\"|\"Milliseconds\"|\"Bytes\"|\"Kilobytes\"|\"Megabytes\"|\"Gigabytes\"|\"Terabytes\"|\"Bits\"|\"Kilobits\"|\"Megabits\"|\"Gigabits\"|\"Terabits\"|\"Percent\"|\"Count\"|\"Bytes/Second\"|\"Kilobytes/Second\"|\"Megabytes/Second\"|\"Gigabytes/Second\"|\"Terabytes/Second\"|\"Bits/Second\"|\"Kilobits/Second\"|\"Megabits/Second\"|\"Gigabits/Second\"|\"Terabits/Second\"|\"Count/Second\"|\"None\",\n    \"Value\": double\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/tag-resource.html",
      "command_description": "Description\n\nAssociates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment .\n\n--tags (map)\n\nThe key-value tag pairs you want to associate to your environment. For example, \"Environment\": \"Staging\" . To learn more, see Tagging AWS resources .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/untag-resource.html",
      "command_description": "Description\n\nRemoves key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, \"Environment\": \"Staging\" .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment .\n\n--tag-keys (list)\n\nThe key-value tag pair you want to remove. For example, \"Environment\": \"Staging\" .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-environment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mwaa/update-environment.html",
      "command_description": "Description\n\nUpdates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-environment\n[--airflow-configuration-options <value>]\n[--airflow-version <value>]\n[--dag-s3-path <value>]\n[--environment-class <value>]\n[--execution-role-arn <value>]\n[--logging-configuration <value>]\n[--max-workers <value>]\n[--min-workers <value>]\n--name <value>\n[--network-configuration <value>]\n[--plugins-s3-object-version <value>]\n[--plugins-s3-path <value>]\n[--requirements-s3-object-version <value>]\n[--requirements-s3-path <value>]\n[--schedulers <value>]\n[--source-bucket-arn <value>]\n[--webserver-access-mode <value>]\n[--weekly-maintenance-window-start <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--airflow-configuration-options <value>]",
        "[--airflow-version <value>]",
        "[--dag-s3-path <value>]",
        "[--environment-class <value>]",
        "[--execution-role-arn <value>]",
        "[--logging-configuration <value>]",
        "[--max-workers <value>]",
        "[--min-workers <value>]",
        "--name <value>",
        "[--network-configuration <value>]",
        "[--plugins-s3-object-version <value>]",
        "[--plugins-s3-path <value>]",
        "[--requirements-s3-object-version <value>]",
        "[--requirements-s3-path <value>]",
        "[--schedulers <value>]",
        "[--source-bucket-arn <value>]",
        "[--webserver-access-mode <value>]",
        "[--weekly-maintenance-window-start <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--airflow-configuration-options (map)\n\nA list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see Apache Airflow configuration options .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--airflow-version (string)\n\nThe Apache Airflow version for your environment. For example, v1.10.12 . If no value is specified, defaults to the latest version. Valid values: v1.10.12 .\n\n--dag-s3-path (string)\n\nThe relative path to the DAGs folder on your Amazon S3 bucket. For example, dags . To learn more, see Adding or updating DAGs .\n\n--environment-class (string)\n\nThe environment class type. Valid values: mw1.small , mw1.medium , mw1.large . To learn more, see Amazon MWAA environment class .\n\n--execution-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution role in IAM that allows MWAA to access AWS resources in your environment. For example, arn:aws:iam::123456789:role/my-execution-role . To learn more, see Amazon MWAA Execution role .\n\n--logging-configuration (structure)\n\nDefines the Apache Airflow logs to send to CloudWatch Logs: DagProcessingLogs , SchedulerLogs , TaskLogs , WebserverLogs , WorkerLogs .\n\nDagProcessingLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nSchedulerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nTaskLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWebserverLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nWorkerLogs -> (structure)\n\nDefines the type of logs to send for the Apache Airflow log type (e.g. DagProcessingLogs ). Valid values: CloudWatchLogGroupArn , Enabled , LogLevel .\n\nEnabled -> (boolean)\n\nIndicates whether to enable the Apache Airflow log type (e.g. DagProcessingLogs ) in CloudWatch Logs.\n\nLogLevel -> (string)\n\nDefines the Apache Airflow logs to send for the log type (e.g. DagProcessingLogs ) to CloudWatch Logs. Valid values: CRITICAL , ERROR , WARNING , INFO .\n\nShorthand Syntax:\n\nDagProcessingLogs={Enabled=boolean,LogLevel=string},SchedulerLogs={Enabled=boolean,LogLevel=string},TaskLogs={Enabled=boolean,LogLevel=string},WebserverLogs={Enabled=boolean,LogLevel=string},WorkerLogs={Enabled=boolean,LogLevel=string}\n\n\nJSON Syntax:\n\n{\n  \"DagProcessingLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"SchedulerLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"TaskLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"WebserverLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  },\n  \"WorkerLogs\": {\n    \"Enabled\": true|false,\n    \"LogLevel\": \"CRITICAL\"|\"ERROR\"|\"WARNING\"|\"INFO\"|\"DEBUG\"\n  }\n}\n\n\n--max-workers (integer)\n\nThe maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. For example, 20 . When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in MinWorkers .\n\n--min-workers (integer)\n\nThe minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the MaxWorkers field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the MinWorkers field. For example, 2 .\n\n--name (string)\n\nThe name of your Amazon MWAA environment. For example, MyMWAAEnvironment .\n\n--network-configuration (structure)\n\nThe VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see About networking on Amazon MWAA .\n\nSecurityGroupIds -> (list)\n\nA list of 1 or more security group IDs. Accepts up to 5 security group IDs. A security group must be attached to the same VPC as the subnets. To learn more, see Security in your VPC on Amazon MWAA .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--plugins-s3-object-version (string)\n\nThe version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see How S3 Versioning works .\n\n--plugins-s3-path (string)\n\nThe relative path to the plugins.zip file on your Amazon S3 bucket. For example, plugins.zip . If specified, then the plugins.zip version is required. To learn more, see Installing custom plugins .\n\n--requirements-s3-object-version (string)\n\nThe version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see How S3 Versioning works .\n\n--requirements-s3-path (string)\n\nThe relative path to the requirements.txt file on your Amazon S3 bucket. For example, requirements.txt . If specified, then a file version is required. To learn more, see Installing Python dependencies .\n\n--schedulers (integer)\n\nThe number of Apache Airflow schedulers to run in your Amazon MWAA environment.\n\n--source-bucket-arn (string)\n\nThe Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, arn:aws:s3:::my-airflow-bucket-unique-name . To learn more, see Create an Amazon S3 bucket for Amazon MWAA .\n\n--webserver-access-mode (string)\n\nThe Apache Airflow Web server access mode. To learn more, see Apache Airflow access modes .\n\nPossible values:\n\nPRIVATE_ONLY\n\nPUBLIC_ONLY\n\n--weekly-maintenance-window-start (string)\n\nThe day and time of the week to start weekly maintenance updates of your environment in the following format: DAY:HH:MM . For example: TUE:03:30 . You can specify a start time in 30 minute increments only. Supported input includes the following:\n\nMON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Amazon MWAA environment. For example, arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment ."
    }
  ],
  "service_description": "Description\n\nThis section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see What Is Amazon MWAA? ."
}