{
  "service_name": "transfer",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/index.html",
  "service_commands": [
    {
      "command_name": "create-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/create-access.html",
      "command_description": "Description\n\nUsed by administrators to choose which groups in the directory should have access to upload and download files over the enabled protocols using Amazon Web Services Transfer Family. For example, a Microsoft Active Directory might contain 50,000 users, but only a small fraction might need the ability to transfer files to the server. An administrator can use CreateAccess to limit the access to the correct set of users who need this ability.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-access\n[--home-directory <value>]\n[--home-directory-type <value>]\n[--home-directory-mappings <value>]\n[--policy <value>]\n[--posix-profile <value>]\n--role <value>\n--server-id <value>\n--external-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--home-directory <value>]",
        "[--home-directory-type <value>]",
        "[--home-directory-mappings <value>]",
        "[--policy <value>]",
        "[--posix-profile <value>]",
        "--role <value>",
        "--server-id <value>",
        "--external-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--home-directory (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\n--home-directory-type (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPossible values:\n\nPATH\n\nLOGICAL\n\n--home-directory-mappings (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nThe following is an Entry and Target pair example.\n\n[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nIn most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (“chroot “). To do this, you can set Entry to / and set Target to the HomeDirectory parameter value.\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nShorthand Syntax:\n\nEntry=string,Target=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Entry\": \"string\",\n    \"Target\": \"string\"\n  }\n  ...\n]\n\n\n--policy (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nNote\n\nThis only applies when the domain of ServerId is S3. EFS does not use session policies.\n\nFor session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the Policy argument.\n\nFor an example of a session policy, see Example session policy .\n\nFor more information, see AssumeRole in the Amazon Web Services Security Token Service API Reference .\n\n--posix-profile (structure)\n\nThe full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nShorthand Syntax:\n\nUid=long,Gid=long,SecondaryGids=long,long\n\n\nJSON Syntax:\n\n{\n  \"Uid\": long,\n  \"Gid\": long,\n  \"SecondaryGids\": [long, ...]\n}\n\n\n--role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance. This is the specific server that you added your user to.\n\n--external-id (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nThe ID of the server that the user is attached to.\n\nExternalId -> (string)\n\nThe external ID of the group whose users have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family."
    },
    {
      "command_name": "create-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/create-server.html",
      "command_description": "Description\n\nInstantiates an auto-scaling virtual server based on the selected file transfer protocol in Amazon Web Services. When you make updates to your file transfer protocol-enabled server or when you work with users, use the service-generated ServerId property that is assigned to the newly created server.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-server\n[--certificate <value>]\n[--domain <value>]\n[--endpoint-details <value>]\n[--endpoint-type <value>]\n[--host-key <value>]\n[--identity-provider-details <value>]\n[--identity-provider-type <value>]\n[--logging-role <value>]\n[--protocols <value>]\n[--security-policy-name <value>]\n[--tags <value>]\n[--workflow-details <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--certificate <value>]",
        "[--domain <value>]",
        "[--endpoint-details <value>]",
        "[--endpoint-type <value>]",
        "[--host-key <value>]",
        "[--identity-provider-details <value>]",
        "[--identity-provider-type <value>]",
        "[--logging-role <value>]",
        "[--protocols <value>]",
        "[--security-policy-name <value>]",
        "[--tags <value>]",
        "[--workflow-details <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--certificate (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Web Services Certificate Manager (ACM) certificate. Required when Protocols is set to FTPS .\n\nTo request a new public certificate, see Request a public certificate in the Amazon Web Services Certificate Manager User Guide .\n\nTo import an existing certificate into ACM, see Importing certificates into ACM in the Amazon Web Services Certificate Manager User Guide .\n\nTo request a private certificate to use FTPS through private IP addresses, see Request a private certificate in the Amazon Web Services Certificate Manager User Guide .\n\nCertificates with the following cryptographic algorithms and key sizes are supported:\n\n2048-bit RSA (RSA_2048)\n\n4096-bit RSA (RSA_4096)\n\nElliptic Prime Curve 256 bit (EC_prime256v1)\n\nElliptic Prime Curve 384 bit (EC_secp384r1)\n\nElliptic Prime Curve 521 bit (EC_secp521r1)\n\nNote\n\nThe certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address specified and information about the issuer.\n\n--domain (string)\n\nThe domain of the storage system that is used for file transfers. There are two domains available: Amazon Simple Storage Service (Amazon S3) and Amazon Elastic File System (Amazon EFS). The default value is S3.\n\nNote\n\nAfter the server is created, the domain cannot be changed.\n\nPossible values:\n\nS3\n\nEFS\n\n--endpoint-details (structure)\n\nThe virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC’s default security groups are automatically assigned to your endpoint.\n\nAddressAllocationIds -> (list)\n\nA list of address allocation IDs that are required to attach an Elastic IP address to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC and it is only valid in the UpdateServer API.\n\n(string)\n\nSubnetIds -> (list)\n\nA list of subnet IDs that are required to host your server endpoint in your VPC.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\n(string)\n\nVpcEndpointId -> (string)\n\nThe ID of the VPC endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC_ENDPOINT .\n\nFor more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.\n\nVpcId -> (string)\n\nThe VPC ID of the VPC in which a server’s endpoint will be hosted.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nSecurityGroupIds -> (list)\n\nA list of security groups IDs that are available to attach to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nYou can edit the SecurityGroupIds property in the UpdateServer API only if you are changing the EndpointType from PUBLIC or VPC_ENDPOINT to VPC . To change security groups associated with your server’s VPC endpoint after creation, use the Amazon EC2 ModifyVpcEndpoint API.\n\n(string)\n\nShorthand Syntax:\n\nAddressAllocationIds=string,string,SubnetIds=string,string,VpcEndpointId=string,VpcId=string,SecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"AddressAllocationIds\": [\"string\", ...],\n  \"SubnetIds\": [\"string\", ...],\n  \"VpcEndpointId\": \"string\",\n  \"VpcId\": \"string\",\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--endpoint-type (string)\n\nThe type of endpoint that you want your server to use. You can choose to make your server’s endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.\n\nNote\n\nAfter May 19, 2021, you won’t be able to create a server using EndpointType=VPC_ENDPOINT in your Amazon Web Services account if your account hasn’t already done so before May 19, 2021. If you have already created servers with EndpointType=VPC_ENDPOINT in your Amazon Web Services account on or before May 19, 2021, you will not be affected. After this date, use EndpointType =``VPC`` .\n\nFor more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.\n\nIt is recommended that you use VPC as the EndpointType . With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server’s endpoint and use VPC security groups to restrict traffic by the client’s public IP address. This is not possible with EndpointType set to VPC_ENDPOINT .\n\nPossible values:\n\nPUBLIC\n\nVPC\n\nVPC_ENDPOINT\n\n--host-key (string)\n\nThe RSA private key as generated by the ssh-keygen -N \"\" -m PEM -f my-new-server-key command.\n\nWarning\n\nIf you aren’t planning to migrate existing users from an existing SFTP-enabled server to a new server, don’t update the host key. Accidentally changing a server’s host key can be disruptive.\n\nFor more information, see Change the host key for your SFTP-enabled server in the Amazon Web Services Transfer Family User Guide .\n\n--identity-provider-details (structure)\n\nRequired when IdentityProviderType is set to AWS_DIRECTORY_SERVICE or API_GATEWAY . Accepts an array containing all of the information required to use a directory in AWS_DIRECTORY_SERVICE or invoke a customer-supplied authentication API, including the API Gateway URL. Not required when IdentityProviderType is set to SERVICE_MANAGED .\n\nUrl -> (string)\n\nProvides the location of the service endpoint used to authenticate users.\n\nInvocationRole -> (string)\n\nProvides the type of InvocationRole used to authenticate the user account.\n\nDirectoryId -> (string)\n\nThe identifier of the Amazon Web ServicesDirectory Service directory that you want to stop sharing.\n\nShorthand Syntax:\n\nUrl=string,InvocationRole=string,DirectoryId=string\n\n\nJSON Syntax:\n\n{\n  \"Url\": \"string\",\n  \"InvocationRole\": \"string\",\n  \"DirectoryId\": \"string\"\n}\n\n\n--identity-provider-type (string)\n\nSpecifies the mode of authentication for a server. The default value is SERVICE_MANAGED , which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.\n\nUse AWS_DIRECTORY_SERVICE to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the IdentityProviderDetails parameter.\n\nUse the API_GATEWAY value to integrate with an identity provider of your choosing. The API_GATEWAY setting requires you to provide an API Gateway endpoint URL to call for authentication using the IdentityProviderDetails parameter.\n\nPossible values:\n\nSERVICE_MANAGED\n\nAPI_GATEWAY\n\nAWS_DIRECTORY_SERVICE\n\n--logging-role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.\n\n--protocols (list)\n\nSpecifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server’s endpoint. The available protocols are:\n\nSFTP (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH\n\nFTPS (File Transfer Protocol Secure): File transfer with TLS encryption\n\nFTP (File Transfer Protocol): Unencrypted file transfer\n\nNote\n\nIf you select FTPS , you must choose a certificate stored in Amazon Web Services Certificate Manager (ACM) which is used to identify your server when clients connect to it over FTPS.\n\nIf Protocol includes either FTP or FTPS , then the EndpointType must be VPC and the IdentityProviderType must be AWS_DIRECTORY_SERVICE or API_GATEWAY .\n\nIf Protocol includes FTP , then AddressAllocationIds cannot be associated.\n\nIf Protocol is set only to SFTP , the EndpointType can be set to PUBLIC and the IdentityProviderType can be set to SERVICE_MANAGED .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  SFTP\n  FTP\n  FTPS\n\n\n--security-policy-name (string)\n\nSpecifies the name of the security policy that is attached to the server.\n\n--tags (list)\n\nKey-value pairs that can be used to group and search for servers.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--workflow-details (structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nOnUpload -> (list)\n\nA trigger that starts a workflow: the workflow begins to execute after a file is uploaded.\n\n(structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nExecutionRole -> (string)\n\nIncludes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources\n\nShorthand Syntax:\n\nOnUpload=[{WorkflowId=string,ExecutionRole=string},{WorkflowId=string,ExecutionRole=string}]\n\n\nJSON Syntax:\n\n{\n  \"OnUpload\": [\n    {\n      \"WorkflowId\": \"string\",\n      \"ExecutionRole\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nThe service-assigned ID of the server that is created."
    },
    {
      "command_name": "create-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/create-user.html",
      "command_description": "Description\n\nCreates a user and associates them with an existing file transfer protocol-enabled server. You can only create and associate users with servers that have the IdentityProviderType set to SERVICE_MANAGED . Using parameters for CreateUser , you can specify the user name, set the home directory, store the user’s public key, and assign the user’s Amazon Web Services Identity and Access Management (IAM) role. You can also optionally add a session policy, and assign metadata with tags that can be used to group and search for users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-user\n[--home-directory <value>]\n[--home-directory-type <value>]\n[--home-directory-mappings <value>]\n[--policy <value>]\n[--posix-profile <value>]\n--role <value>\n--server-id <value>\n[--ssh-public-key-body <value>]\n[--tags <value>]\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--home-directory <value>]",
        "[--home-directory-type <value>]",
        "[--home-directory-mappings <value>]",
        "[--policy <value>]",
        "[--posix-profile <value>]",
        "--role <value>",
        "--server-id <value>",
        "[--ssh-public-key-body <value>]",
        "[--tags <value>]",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--home-directory (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\n--home-directory-type (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPossible values:\n\nPATH\n\nLOGICAL\n\n--home-directory-mappings (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nThe following is an Entry and Target pair example.\n\n[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nIn most cases, you can use this value instead of the session policy to lock your user down to the designated home directory (“chroot “). To do this, you can set Entry to / and set Target to the HomeDirectory parameter value.\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nShorthand Syntax:\n\nEntry=string,Target=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Entry\": \"string\",\n    \"Target\": \"string\"\n  }\n  ...\n]\n\n\n--policy (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nNote\n\nThis only applies when the domain of ServerId is S3. EFS does not use session policies.\n\nFor session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the Policy argument.\n\nFor an example of a session policy, see Example session policy .\n\nFor more information, see AssumeRole in the Amazon Web Services Security Token Service API Reference .\n\n--posix-profile (structure)\n\nSpecifies the full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in Amazon EFS determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nShorthand Syntax:\n\nUid=long,Gid=long,SecondaryGids=long,long\n\n\nJSON Syntax:\n\n{\n  \"Uid\": long,\n  \"Gid\": long,\n  \"SecondaryGids\": [long, ...]\n}\n\n\n--role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance. This is the specific server that you added your user to.\n\n--ssh-public-key-body (string)\n\nThe public portion of the Secure Shell (SSH) key used to authenticate the user to the server.\n\n--tags (list)\n\nKey-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--user-name (string)\n\nA unique string that identifies a user and is associated with a ServerId . This user name must be a minimum of 3 and a maximum of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore ‘_’, hyphen ‘-‘, period ‘.’, and at sign ‘@’. The user name can’t start with a hyphen, period, or at sign.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nThe ID of the server that the user is attached to.\n\nUserName -> (string)\n\nA unique string that identifies a user account associated with a server."
    },
    {
      "command_name": "create-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/create-workflow.html",
      "command_description": "Description\n\nAllows you to create a workflow with specified steps and step details the workflow invokes after file transfer completes. After creating a workflow, you can associate the workflow created with any transfer servers by specifying the workflow-details field in CreateServer and UpdateServer operations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-workflow\n[--description <value>]\n--steps <value>\n[--on-exception-steps <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--description <value>]",
        "--steps <value>",
        "[--on-exception-steps <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--description (string)\n\nA textual description for the workflow.\n\n--steps (list)\n\nSpecifies the details for the steps that are in the specified workflow.\n\nThe TYPE specifies which of the following actions is being taken for this step.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nNote\n\nCurrently, copying and tagging are supported only on S3.\n\nFor file location, you specify either the S3 bucket and key, or the EFS filesystem ID and path.\n\n(structure)\n\nThe basic building block of a workflow.\n\nType -> (string)\n\nCurrently, the following step types are supported.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nCopyStepDetails -> (structure)\n\nDetails for a step that performs a file copy.\n\nConsists of the following values:\n\nA description\n\nAn S3 location for the destination of the file copy.\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nDestinationFileLocation -> (structure)\n\nSpecifies the location for the file being copied. Only applicable for the Copy type of workflow steps.\n\nS3FileLocation -> (structure)\n\nSpecifies the details for the S3 file being copied.\n\nBucket -> (string)\n\nSpecifies the S3 bucket for the customer input file.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nEfsFileLocation -> (structure)\n\nReserved for future use.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nOverwriteExisting -> (string)\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nCustomStepDetails -> (structure)\n\nDetails for a step that invokes a lambda function.\n\nConsists of the lambda function name, target, and timeout (in seconds).\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTarget -> (string)\n\nThe ARN for the lambda function that is being called.\n\nTimeoutSeconds -> (integer)\n\nTimeout, in seconds, for the step.\n\nDeleteStepDetails -> (structure)\n\nDetails for a step that deletes the file.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTagStepDetails -> (structure)\n\nDetails for a step that creates one or more tags.\n\nYou specify one or more tags: each tag contains a key/value pair.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTags -> (list)\n\nArray that contains from 1 to 10 key/value pairs.\n\n(structure)\n\nSpecifies the key-value pair that are assigned to a file during the execution of a Tagging step.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nThe value that corresponds to the key.\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"COPY\"|\"CUSTOM\"|\"TAG\"|\"DELETE\",\n    \"CopyStepDetails\": {\n      \"Name\": \"string\",\n      \"DestinationFileLocation\": {\n        \"S3FileLocation\": {\n          \"Bucket\": \"string\",\n          \"Key\": \"string\"\n        },\n        \"EfsFileLocation\": {\n          \"FileSystemId\": \"string\",\n          \"Path\": \"string\"\n        }\n      },\n      \"OverwriteExisting\": \"TRUE\"|\"FALSE\"\n    },\n    \"CustomStepDetails\": {\n      \"Name\": \"string\",\n      \"Target\": \"string\",\n      \"TimeoutSeconds\": integer\n    },\n    \"DeleteStepDetails\": {\n      \"Name\": \"string\"\n    },\n    \"TagStepDetails\": {\n      \"Name\": \"string\",\n      \"Tags\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--on-exception-steps (list)\n\nSpecifies the steps (actions) to take if errors are encountered during execution of the workflow.\n\nNote\n\nFor custom steps, the lambda function needs to send FAILURE to the call back API to kick off the exception steps. Additionally, if the lambda does not send SUCCESS before it times out, the exception steps are executed.\n\n(structure)\n\nThe basic building block of a workflow.\n\nType -> (string)\n\nCurrently, the following step types are supported.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nCopyStepDetails -> (structure)\n\nDetails for a step that performs a file copy.\n\nConsists of the following values:\n\nA description\n\nAn S3 location for the destination of the file copy.\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nDestinationFileLocation -> (structure)\n\nSpecifies the location for the file being copied. Only applicable for the Copy type of workflow steps.\n\nS3FileLocation -> (structure)\n\nSpecifies the details for the S3 file being copied.\n\nBucket -> (string)\n\nSpecifies the S3 bucket for the customer input file.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nEfsFileLocation -> (structure)\n\nReserved for future use.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nOverwriteExisting -> (string)\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nCustomStepDetails -> (structure)\n\nDetails for a step that invokes a lambda function.\n\nConsists of the lambda function name, target, and timeout (in seconds).\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTarget -> (string)\n\nThe ARN for the lambda function that is being called.\n\nTimeoutSeconds -> (integer)\n\nTimeout, in seconds, for the step.\n\nDeleteStepDetails -> (structure)\n\nDetails for a step that deletes the file.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTagStepDetails -> (structure)\n\nDetails for a step that creates one or more tags.\n\nYou specify one or more tags: each tag contains a key/value pair.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTags -> (list)\n\nArray that contains from 1 to 10 key/value pairs.\n\n(structure)\n\nSpecifies the key-value pair that are assigned to a file during the execution of a Tagging step.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nThe value that corresponds to the key.\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"COPY\"|\"CUSTOM\"|\"TAG\"|\"DELETE\",\n    \"CopyStepDetails\": {\n      \"Name\": \"string\",\n      \"DestinationFileLocation\": {\n        \"S3FileLocation\": {\n          \"Bucket\": \"string\",\n          \"Key\": \"string\"\n        },\n        \"EfsFileLocation\": {\n          \"FileSystemId\": \"string\",\n          \"Path\": \"string\"\n        }\n      },\n      \"OverwriteExisting\": \"TRUE\"|\"FALSE\"\n    },\n    \"CustomStepDetails\": {\n      \"Name\": \"string\",\n      \"Target\": \"string\",\n      \"TimeoutSeconds\": integer\n    },\n    \"DeleteStepDetails\": {\n      \"Name\": \"string\"\n    },\n    \"TagStepDetails\": {\n      \"Name\": \"string\",\n      \"Tags\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n  ...\n]\n\n\n--tags (list)\n\nKey-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow."
    },
    {
      "command_name": "delete-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/delete-access.html",
      "command_description": "Description\n\nAllows you to delete the access specified in the ServerID and ExternalID parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-access\n--server-id <value>\n--external-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--external-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that has this user assigned.\n\n--external-id (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/delete-server.html",
      "command_description": "Description\n\nDeletes the file transfer protocol-enabled server that you specify.\n\nNo response returns from this operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-server\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA unique system-assigned identifier for a server instance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/delete-ssh-public-key.html",
      "command_description": "Description\n\nDeletes a user’s Secure Shell (SSH) public key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-ssh-public-key\n--server-id <value>\n--ssh-public-key-id <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--ssh-public-key-id <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a file transfer protocol-enabled server instance that has the user assigned to it.\n\n--ssh-public-key-id (string)\n\nA unique identifier used to reference your user’s specific SSH key.\n\n--user-name (string)\n\nA unique string that identifies a user whose public key is being deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/delete-user.html",
      "command_description": "Description\n\nDeletes the user belonging to a file transfer protocol-enabled server you specify.\n\nNo response returns from this operation.\n\nNote\n\nWhen you delete a user from a server, the user’s information is lost.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user\n--server-id <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance that has the user assigned to it.\n\n--user-name (string)\n\nA unique string that identifies a user that is being deleted from a server.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/delete-workflow.html",
      "command_description": "Description\n\nDeletes the specified workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-workflow\n--workflow-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--workflow-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--workflow-id (string)\n\nA unique identifier for the workflow.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-access.html",
      "command_description": "Description\n\nDescribes the access that is assigned to the specific file transfer protocol-enabled server, as identified by its ServerId property and its ExternalID .\n\nThe response from this call returns the properties of the access that is associated with the ServerId value that was specified.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-access\n--server-id <value>\n--external-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--external-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that has this access assigned.\n\n--external-id (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server that has this access assigned.\n\nAccess -> (structure)\n\nThe external ID of the server that the access is attached to.\n\nHomeDirectory -> (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\nHomeDirectoryMappings -> (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nIn most cases, you can use this value instead of the session policy to lock down the associated access to the designated home directory (“chroot “). To do this, you can set Entry to ‘/’ and set Target to the HomeDirectory parameter value.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nHomeDirectoryType -> (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPolicy -> (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nPosixProfile -> (structure)\n\nThe full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\nExternalId -> (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-"
    },
    {
      "command_name": "describe-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-execution.html",
      "command_description": "Description\n\nYou can use DescribeExecution to check the details of the execution of the specified workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-execution\n--execution-id <value>\n--workflow-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--execution-id <value>",
        "--workflow-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--execution-id (string)\n\nA unique identifier for the execution of a workflow.\n\n--workflow-id (string)\n\nA unique identifier for the workflow.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nExecution -> (structure)\n\nThe structure that contains the details of the workflow’ execution.\n\nExecutionId -> (string)\n\nA unique identifier for the execution of a workflow.\n\nInitialFileLocation -> (structure)\n\nA structure that describes the Amazon S3 or EFS file location. This is the file location when the execution begins: if the file is being copied, this is the initial (as opposed to destination) file location.\n\nS3FileLocation -> (structure)\n\nSpecifies the S3 details for the file being used, such as bucket, Etag, and so forth.\n\nBucket -> (string)\n\nSpecifies the S3 bucket that contains the file being used.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nVersionId -> (string)\n\nSpecifies the file version.\n\nEtag -> (string)\n\nThe entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata.\n\nEfsFileLocation -> (structure)\n\nSpecifies the Amazon EFS ID and the path for the file being used.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nServiceMetadata -> (structure)\n\nA container object for the session details associated with a workflow.\n\nUserDetails -> (structure)\n\nThe Server ID (ServerId ), Session ID (SessionId ) and user (UserName ) make up the UserDetails .\n\nUserName -> (string)\n\nA unique string that identifies a user account associated with a server.\n\nServerId -> (string)\n\nThe system-assigned unique identifier for a Transfer server instance.\n\nSessionId -> (string)\n\nThe system-assigned unique identifier for a session that corresponds to the workflow.\n\nExecutionRole -> (string)\n\nThe IAM role associated with the execution.\n\nLoggingConfiguration -> (structure)\n\nThe IAM logging role associated with the execution.\n\nLoggingRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.\n\nLogGroupName -> (string)\n\nThe name of the CloudWatch logging group for the Amazon Web Services Transfer server to which this workflow belongs.\n\nPosixProfile -> (structure)\n\nThe full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nStatus -> (string)\n\nThe status is one of the execution. Can be in progress, completed, exception encountered, or handling the exception.\n\nResults -> (structure)\n\nA structure that describes the execution results. This includes a list of the steps along with the details of each step, error type and message (if any), and the OnExceptionSteps structure.\n\nSteps -> (list)\n\nSpecifies the details for the steps that are in the specified workflow.\n\n(structure)\n\nSpecifies the following details for the step: error (if any), outputs (if any), and the step type.\n\nStepType -> (string)\n\nOne of the available step types.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nOutputs -> (string)\n\nThe values for the key/value pair applied as a tag to the file. Only applicable if the step type is TAG .\n\nError -> (structure)\n\nSpecifies the details for an error, if it occurred during execution of the specified workfow step.\n\nType -> (string)\n\nSpecifies the error type: currently, the only valid value is PERMISSION_DENIED , which occurs if your policy does not contain the correct permissions to complete one or more of the steps in the workflow.\n\nMessage -> (string)\n\nSpecifies the descriptive message that corresponds to the ErrorType .\n\nOnExceptionSteps -> (list)\n\nSpecifies the steps (actions) to take if errors are encountered during execution of the workflow.\n\n(structure)\n\nSpecifies the following details for the step: error (if any), outputs (if any), and the step type.\n\nStepType -> (string)\n\nOne of the available step types.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nOutputs -> (string)\n\nThe values for the key/value pair applied as a tag to the file. Only applicable if the step type is TAG .\n\nError -> (structure)\n\nSpecifies the details for an error, if it occurred during execution of the specified workfow step.\n\nType -> (string)\n\nSpecifies the error type: currently, the only valid value is PERMISSION_DENIED , which occurs if your policy does not contain the correct permissions to complete one or more of the steps in the workflow.\n\nMessage -> (string)\n\nSpecifies the descriptive message that corresponds to the ErrorType ."
    },
    {
      "command_name": "describe-security-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-security-policy.html",
      "command_description": "Description\n\nDescribes the security policy that is attached to your file transfer protocol-enabled server. The response contains a description of the security policy’s properties. For more information about security policies, see Working with security policies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-security-policy\n--security-policy-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--security-policy-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--security-policy-name (string)\n\nSpecifies the name of the security policy that is attached to the server.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecurityPolicy -> (structure)\n\nAn array containing the properties of the security policy.\n\nFips -> (boolean)\n\nSpecifies whether this policy enables Federal Information Processing Standards (FIPS).\n\nSecurityPolicyName -> (string)\n\nSpecifies the name of the security policy that is attached to the server.\n\nSshCiphers -> (list)\n\nSpecifies the enabled Secure Shell (SSH) cipher encryption algorithms in the security policy that is attached to the server.\n\n(string)\n\nSshKexs -> (list)\n\nSpecifies the enabled SSH key exchange (KEX) encryption algorithms in the security policy that is attached to the server.\n\n(string)\n\nSshMacs -> (list)\n\nSpecifies the enabled SSH message authentication code (MAC) encryption algorithms in the security policy that is attached to the server.\n\n(string)\n\nTlsCiphers -> (list)\n\nSpecifies the enabled Transport Layer Security (TLS) cipher encryption algorithms in the security policy that is attached to the server.\n\n(string)"
    },
    {
      "command_name": "describe-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-server.html",
      "command_description": "Description\n\nDescribes a file transfer protocol-enabled server that you specify by passing the ServerId parameter.\n\nThe response contains a description of a server’s properties. When you set EndpointType to VPC, the response will contain the EndpointDetails .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-server\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServer -> (structure)\n\nAn array containing the properties of a server with the ServerID you specified.\n\nArn -> (string)\n\nSpecifies the unique Amazon Resource Name (ARN) of the server.\n\nCertificate -> (string)\n\nSpecifies the ARN of the Amazon Web ServicesCertificate Manager (ACM) certificate. Required when Protocols is set to FTPS .\n\nProtocolDetails -> (structure)\n\nThe protocol settings that are configured for your server.\n\nUse the PassiveIp parameter to indicate passive mode. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer.\n\nPassiveIp -> (string)\n\nIndicates passive mode, for FTP and FTPS protocols. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. For example:\n\n``aws transfer update-server –protocol-details PassiveIp=*0.0.0.0* ``\n\nReplace `` 0.0.0.0 `` in the example above with the actual IP address you want to use.\n\nNote\n\nIf you change the PassiveIp value, you must stop and then restart your Transfer server for the change to take effect. For details on using Passive IP (PASV) in a NAT environment, see Configuring your FTPS server behind a firewall or NAT with Amazon Web Services Transfer Family .\n\nDomain -> (string)\n\nSpecifies the domain of the storage system that is used for file transfers.\n\nEndpointDetails -> (structure)\n\nThe virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC’s default security groups are automatically assigned to your endpoint.\n\nAddressAllocationIds -> (list)\n\nA list of address allocation IDs that are required to attach an Elastic IP address to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC and it is only valid in the UpdateServer API.\n\n(string)\n\nSubnetIds -> (list)\n\nA list of subnet IDs that are required to host your server endpoint in your VPC.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\n(string)\n\nVpcEndpointId -> (string)\n\nThe ID of the VPC endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC_ENDPOINT .\n\nFor more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.\n\nVpcId -> (string)\n\nThe VPC ID of the VPC in which a server’s endpoint will be hosted.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nSecurityGroupIds -> (list)\n\nA list of security groups IDs that are available to attach to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nYou can edit the SecurityGroupIds property in the UpdateServer API only if you are changing the EndpointType from PUBLIC or VPC_ENDPOINT to VPC . To change security groups associated with your server’s VPC endpoint after creation, use the Amazon EC2 ModifyVpcEndpoint API.\n\n(string)\n\nEndpointType -> (string)\n\nDefines the type of endpoint that your server is connected to. If your server is connected to a VPC endpoint, your server isn’t accessible over the public internet.\n\nHostKeyFingerprint -> (string)\n\nSpecifies the Base64-encoded SHA256 fingerprint of the server’s host key. This value is equivalent to the output of the ssh-keygen -l -f my-new-server-key command.\n\nIdentityProviderDetails -> (structure)\n\nSpecifies information to call a customer-supplied authentication API. This field is not populated when the IdentityProviderType of a server is AWS_DIRECTORY_SERVICE or SERVICE_MANAGED .\n\nUrl -> (string)\n\nProvides the location of the service endpoint used to authenticate users.\n\nInvocationRole -> (string)\n\nProvides the type of InvocationRole used to authenticate the user account.\n\nDirectoryId -> (string)\n\nThe identifier of the Amazon Web ServicesDirectory Service directory that you want to stop sharing.\n\nIdentityProviderType -> (string)\n\nSpecifies the mode of authentication for a server. The default value is SERVICE_MANAGED , which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.\n\nUse AWS_DIRECTORY_SERVICE to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the IdentityProviderDetails parameter.\n\nUse the API_GATEWAY value to integrate with an identity provider of your choosing. The API_GATEWAY setting requires you to provide an API Gateway endpoint URL to call for authentication using the IdentityProviderDetails parameter.\n\nLoggingRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.\n\nProtocols -> (list)\n\nSpecifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server’s endpoint. The available protocols are:\n\nSFTP (Secure Shell (SSH) File Transfer Protocol): File transfer over SSH\n\nFTPS (File Transfer Protocol Secure): File transfer with TLS encryption\n\nFTP (File Transfer Protocol): Unencrypted file transfer\n\n(string)\n\nSecurityPolicyName -> (string)\n\nSpecifies the name of the security policy that is attached to the server.\n\nServerId -> (string)\n\nSpecifies the unique system-assigned identifier for a server that you instantiate.\n\nState -> (string)\n\nSpecifies the condition of a server for the server that was described. A value of ONLINE indicates that the server can accept jobs and transfer files. A State value of OFFLINE means that the server cannot perform file transfer operations.\n\nThe states of STARTING and STOPPING indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of START_FAILED or STOP_FAILED can indicate an error condition.\n\nTags -> (list)\n\nSpecifies the key-value pairs that you can use to search for and group servers that were assigned to the server that was described.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nUserCount -> (integer)\n\nSpecifies the number of users that are assigned to a server you specified with the ServerId .\n\nWorkflowDetails -> (structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nOnUpload -> (list)\n\nA trigger that starts a workflow: the workflow begins to execute after a file is uploaded.\n\n(structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nExecutionRole -> (string)\n\nIncludes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources"
    },
    {
      "command_name": "describe-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-user.html",
      "command_description": "Description\n\nDescribes the user assigned to the specific file transfer protocol-enabled server, as identified by its ServerId property.\n\nThe response from this call returns the properties of the user associated with the ServerId value that was specified.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-user\n--server-id <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that has this user assigned.\n\n--user-name (string)\n\nThe name of the user assigned to one or more servers. User names are part of the sign-in credentials to use the Amazon Web Services Transfer Family service and perform file transfer tasks.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server that has this user assigned.\n\nUser -> (structure)\n\nAn array containing the properties of the user account for the ServerID value that you specified.\n\nArn -> (string)\n\nSpecifies the unique Amazon Resource Name (ARN) for the user that was requested to be described.\n\nHomeDirectory -> (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\nHomeDirectoryMappings -> (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nIn most cases, you can use this value instead of the session policy to lock your user down to the designated home directory (“chroot “). To do this, you can set Entry to ‘/’ and set Target to the HomeDirectory parameter value.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nHomeDirectoryType -> (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPolicy -> (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nPosixProfile -> (structure)\n\nSpecifies the full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon Elastic File System (Amazon EFS) file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\nSshPublicKeys -> (list)\n\nSpecifies the public key portion of the Secure Shell (SSH) keys stored for the described user.\n\n(structure)\n\nProvides information about the public Secure Shell (SSH) key that is associated with a user account for the specific file transfer protocol-enabled server (as identified by ServerId ). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific server.\n\nDateImported -> (timestamp)\n\nSpecifies the date that the public key was added to the user account.\n\nSshPublicKeyBody -> (string)\n\nSpecifies the content of the SSH public key as specified by the PublicKeyId .\n\nSshPublicKeyId -> (string)\n\nSpecifies the SshPublicKeyId parameter contains the identifier of the public key.\n\nTags -> (list)\n\nSpecifies the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nUserName -> (string)\n\nSpecifies the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your server."
    },
    {
      "command_name": "describe-workflow",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/describe-workflow.html",
      "command_description": "Description\n\nDescribes the specified workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-workflow\n--workflow-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--workflow-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--workflow-id (string)\n\nA unique identifier for the workflow.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nWorkflow -> (structure)\n\nThe structure that contains the details of the workflow.\n\nArn -> (string)\n\nSpecifies the unique Amazon Resource Name (ARN) for the workflow.\n\nDescription -> (string)\n\nSpecifies the text description for the workflow.\n\nSteps -> (list)\n\nSpecifies the details for the steps that are in the specified workflow.\n\n(structure)\n\nThe basic building block of a workflow.\n\nType -> (string)\n\nCurrently, the following step types are supported.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nCopyStepDetails -> (structure)\n\nDetails for a step that performs a file copy.\n\nConsists of the following values:\n\nA description\n\nAn S3 location for the destination of the file copy.\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nDestinationFileLocation -> (structure)\n\nSpecifies the location for the file being copied. Only applicable for the Copy type of workflow steps.\n\nS3FileLocation -> (structure)\n\nSpecifies the details for the S3 file being copied.\n\nBucket -> (string)\n\nSpecifies the S3 bucket for the customer input file.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nEfsFileLocation -> (structure)\n\nReserved for future use.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nOverwriteExisting -> (string)\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nCustomStepDetails -> (structure)\n\nDetails for a step that invokes a lambda function.\n\nConsists of the lambda function name, target, and timeout (in seconds).\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTarget -> (string)\n\nThe ARN for the lambda function that is being called.\n\nTimeoutSeconds -> (integer)\n\nTimeout, in seconds, for the step.\n\nDeleteStepDetails -> (structure)\n\nDetails for a step that deletes the file.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTagStepDetails -> (structure)\n\nDetails for a step that creates one or more tags.\n\nYou specify one or more tags: each tag contains a key/value pair.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTags -> (list)\n\nArray that contains from 1 to 10 key/value pairs.\n\n(structure)\n\nSpecifies the key-value pair that are assigned to a file during the execution of a Tagging step.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nThe value that corresponds to the key.\n\nOnExceptionSteps -> (list)\n\nSpecifies the steps (actions) to take if errors are encountered during execution of the workflow.\n\n(structure)\n\nThe basic building block of a workflow.\n\nType -> (string)\n\nCurrently, the following step types are supported.\n\nCopy : copy the file to another location\n\nCustom : custom step with a lambda target\n\nDelete : delete the file\n\nTag : add a tag to the file\n\nCopyStepDetails -> (structure)\n\nDetails for a step that performs a file copy.\n\nConsists of the following values:\n\nA description\n\nAn S3 location for the destination of the file copy.\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nDestinationFileLocation -> (structure)\n\nSpecifies the location for the file being copied. Only applicable for the Copy type of workflow steps.\n\nS3FileLocation -> (structure)\n\nSpecifies the details for the S3 file being copied.\n\nBucket -> (string)\n\nSpecifies the S3 bucket for the customer input file.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nEfsFileLocation -> (structure)\n\nReserved for future use.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nOverwriteExisting -> (string)\n\nA flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE .\n\nCustomStepDetails -> (structure)\n\nDetails for a step that invokes a lambda function.\n\nConsists of the lambda function name, target, and timeout (in seconds).\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTarget -> (string)\n\nThe ARN for the lambda function that is being called.\n\nTimeoutSeconds -> (integer)\n\nTimeout, in seconds, for the step.\n\nDeleteStepDetails -> (structure)\n\nDetails for a step that deletes the file.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTagStepDetails -> (structure)\n\nDetails for a step that creates one or more tags.\n\nYou specify one or more tags: each tag contains a key/value pair.\n\nName -> (string)\n\nThe name of the step, used as an identifier.\n\nTags -> (list)\n\nArray that contains from 1 to 10 key/value pairs.\n\n(structure)\n\nSpecifies the key-value pair that are assigned to a file during the execution of a Tagging step.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nThe value that corresponds to the key.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nTags -> (list)\n\nKey-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create."
    },
    {
      "command_name": "import-ssh-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/import-ssh-public-key.html",
      "command_description": "Description\n\nAdds a Secure Shell (SSH) public key to a user account identified by a UserName value assigned to the specific file transfer protocol-enabled server, identified by ServerId .\n\nThe response returns the UserName value, the ServerId value, and the name of the SshPublicKeyId .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-ssh-public-key\n--server-id <value>\n--ssh-public-key-body <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "--ssh-public-key-body <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server.\n\n--ssh-public-key-body (string)\n\nThe public key portion of an SSH key pair.\n\n--user-name (string)\n\nThe name of the user account that is assigned to one or more servers.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server.\n\nSshPublicKeyId -> (string)\n\nThe name given to a public key by the system that was imported.\n\nUserName -> (string)\n\nA user name assigned to the ServerID value that you specified."
    },
    {
      "command_name": "list-accesses",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-accesses.html",
      "command_description": "Description\n\nLists the details for all the accesses you have on your server.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-accesses\n[--max-results <value>]\n[--next-token <value>]\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nSpecifies the maximum number of access SIDs to return.\n\n--next-token (string)\n\nWhen you can get additional results from the ListAccesses call, a NextToken parameter is returned in the output. You can then pass in a subsequent command to the NextToken parameter to continue listing additional accesses.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that has users assigned to it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you can get additional results from the ListAccesses call, a NextToken parameter is returned in the output. You can then pass in a subsequent command to the NextToken parameter to continue listing additional accesses.\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server that has users assigned to it.\n\nAccesses -> (list)\n\nReturns the accesses and their properties for the ServerId value that you specify.\n\n(structure)\n\nLists the properties for one or more specified associated accesses.\n\nHomeDirectory -> (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\nHomeDirectoryType -> (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\nExternalId -> (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-"
    },
    {
      "command_name": "list-executions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-executions.html",
      "command_description": "Description\n\nLists all executions for the specified workflow.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-executions\n[--max-results <value>]\n[--next-token <value>]\n--workflow-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "--workflow-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nSpecifies the aximum number of executions to return.\n\n--next-token (string)\n\nListExecutions returns the NextToken parameter in the output. You can then pass the NextToken parameter in a subsequent command to continue listing additional executions.\n\nThis is useful for pagination, for instance. If you have 100 executions for a workflow, you might only want to list first 10. If so, callthe API by specifing the max-results :\n\naws transfer list-executions --max-results 10\n\nThis returns details for the first 10 executions, as well as the pointer (NextToken ) to the eleventh execution. You can now call the API again, suppling the NextToken value you received:\n\naws transfer list-executions --max-results 10 --next-token $somePointerReturnedFromPreviousListResult\n\nThis call returns the next 10 executions, the 11th through the 20th. You can then repeat the call until the details for all 100 executions have been returned.\n\n--workflow-id (string)\n\nA unique identifier for the workflow.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nListExecutions returns the NextToken parameter in the output. You can then pass the NextToken parameter in a subsequent command to continue listing additional executions.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nExecutions -> (list)\n\nReturns the details for each execution.\n\nNextToken : returned from a call to several APIs, you can use pass it to a subsequent command to continue listing additional executions.\n\nStartTime : timestamp indicating when the execution began.\n\nExecutions : details of the execution, including the execution ID, initial file location, and Service metadata.\n\nStatus : one of the following values: IN_PROGRESS , COMPLETED , EXCEPTION , HANDLING_EXEPTION .\n\n(structure)\n\nReturns properties of the execution that is specified.\n\nExecutionId -> (string)\n\nA unique identifier for the execution of a workflow.\n\nInitialFileLocation -> (structure)\n\nA structure that describes the Amazon S3 or EFS file location. This is the file location when the execution begins: if the file is being copied, this is the initial (as opposed to destination) file location.\n\nS3FileLocation -> (structure)\n\nSpecifies the S3 details for the file being used, such as bucket, Etag, and so forth.\n\nBucket -> (string)\n\nSpecifies the S3 bucket that contains the file being used.\n\nKey -> (string)\n\nThe name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\nVersionId -> (string)\n\nSpecifies the file version.\n\nEtag -> (string)\n\nThe entity tag is a hash of the object. The ETag reflects changes only to the contents of an object, not its metadata.\n\nEfsFileLocation -> (structure)\n\nSpecifies the Amazon EFS ID and the path for the file being used.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nPath -> (string)\n\nThe pathname for the folder being used by a workflow.\n\nServiceMetadata -> (structure)\n\nA container object for the session details associated with a workflow.\n\nUserDetails -> (structure)\n\nThe Server ID (ServerId ), Session ID (SessionId ) and user (UserName ) make up the UserDetails .\n\nUserName -> (string)\n\nA unique string that identifies a user account associated with a server.\n\nServerId -> (string)\n\nThe system-assigned unique identifier for a Transfer server instance.\n\nSessionId -> (string)\n\nThe system-assigned unique identifier for a session that corresponds to the workflow.\n\nStatus -> (string)\n\nThe status is one of the execution. Can be in progress, completed, exception encountered, or handling the exception."
    },
    {
      "command_name": "list-security-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-security-policies.html",
      "command_description": "Description\n\nLists the security policies that are attached to your file transfer protocol-enabled servers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-security-policies\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nSpecifies the number of security policies to return as a response to the ListSecurityPolicies query.\n\n--next-token (string)\n\nWhen additional results are obtained from the ListSecurityPolicies command, a NextToken parameter is returned in the output. You can then pass the NextToken parameter in a subsequent command to continue listing additional security policies.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you can get additional results from the ListSecurityPolicies operation, a NextToken parameter is returned in the output. In a following command, you can pass in the NextToken parameter to continue listing security policies.\n\nSecurityPolicyNames -> (list)\n\nAn array of security policies that were listed.\n\n(string)"
    },
    {
      "command_name": "list-servers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-servers.html",
      "command_description": "Description\n\nLists the file transfer protocol-enabled servers that are associated with your Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-servers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Servers",
      "command_synopsis": "Synopsis\n  list-servers\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you can get additional results from the ListServers operation, a NextToken parameter is returned in the output. In a following command, you can pass in the NextToken parameter to continue listing additional servers.\n\nServers -> (list)\n\nAn array of servers that were listed.\n\n(structure)\n\nReturns properties of a file transfer protocol-enabled server that was specified.\n\nArn -> (string)\n\nSpecifies the unique Amazon Resource Name (ARN) for a server to be listed.\n\nDomain -> (string)\n\nSpecifies the domain of the storage system that is used for file transfers.\n\nIdentityProviderType -> (string)\n\nSpecifies the mode of authentication for a server. The default value is SERVICE_MANAGED , which allows you to store and access user credentials within the Amazon Web Services Transfer Family service.\n\nUse AWS_DIRECTORY_SERVICE to provide access to Active Directory groups in Amazon Web Services Managed Active Directory or Microsoft Active Directory in your on-premises environment or in Amazon Web Services using AD Connectors. This option also requires you to provide a Directory ID using the IdentityProviderDetails parameter.\n\nUse the API_GATEWAY value to integrate with an identity provider of your choosing. The API_GATEWAY setting requires you to provide an API Gateway endpoint URL to call for authentication using the IdentityProviderDetails parameter.\n\nEndpointType -> (string)\n\nSpecifies the type of VPC endpoint that your server is connected to. If your server is connected to a VPC endpoint, your server isn’t accessible over the public internet.\n\nLoggingRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.\n\nServerId -> (string)\n\nSpecifies the unique system assigned identifier for the servers that were listed.\n\nState -> (string)\n\nSpecifies the condition of a server for the server that was described. A value of ONLINE indicates that the server can accept jobs and transfer files. A State value of OFFLINE means that the server cannot perform file transfer operations.\n\nThe states of STARTING and STOPPING indicate that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of START_FAILED or STOP_FAILED can indicate an error condition.\n\nUserCount -> (integer)\n\nSpecifies the number of users that are assigned to a server you specified with the ServerId ."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-tags-for-resource.html",
      "command_description": "Description\n\nLists all of the tags associated with the Amazon Resource Name (ARN) that you specify. The resource can be a user, server, or role.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nRequests the tags associated with a particular Amazon Resource Name (ARN). An ARN is an identifier for a specific Amazon Web Services resource, such as a server, user, or role.\n\n--max-results (integer)\n\nSpecifies the number of tags to return as a response to the ListTagsForResource request.\n\n--next-token (string)\n\nWhen you request additional results from the ListTagsForResource operation, a NextToken parameter is returned in the input. You can then pass in a subsequent command to the NextToken parameter to continue listing additional tags.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN you specified to list the tags of.\n\nNextToken -> (string)\n\nWhen you can get additional results from the ListTagsForResource call, a NextToken parameter is returned in the output. You can then pass in a subsequent command to the NextToken parameter to continue listing additional tags.\n\nTags -> (list)\n\nKey-value pairs that are assigned to a resource, usually for the purpose of grouping and searching for items. Tags are metadata that you define.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create."
    },
    {
      "command_name": "list-users",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-users.html",
      "command_description": "Description\n\nLists the users for a file transfer protocol-enabled server that you specify by passing the ServerId parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-users\n[--max-results <value>]\n[--next-token <value>]\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nSpecifies the number of users to return as a response to the ListUsers request.\n\n--next-token (string)\n\nWhen you can get additional results from the ListUsers call, a NextToken parameter is returned in the output. You can then pass in a subsequent command to the NextToken parameter to continue listing additional users.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that has users assigned to it.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nWhen you can get additional results from the ListUsers call, a NextToken parameter is returned in the output. You can then pass in a subsequent command to the NextToken parameter to continue listing additional users.\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server that the users are assigned to.\n\nUsers -> (list)\n\nReturns the user accounts and their properties for the ServerId value that you specify.\n\n(structure)\n\nReturns properties of the user that you specify.\n\nArn -> (string)\n\nProvides the unique Amazon Resource Name (ARN) for the user that you want to learn about.\n\nHomeDirectory -> (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\nHomeDirectoryType -> (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nRole -> (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\nNote\n\nThe IAM role that controls your users’ access to your Amazon S3 bucket for servers with Domain=S3 , or your EFS file system for servers with Domain=EFS .\n\nThe policies attached to this role determine the level of access you want to provide your users when transferring files into and out of your S3 buckets or EFS file systems.\n\nSshPublicKeyCount -> (integer)\n\nSpecifies the number of SSH public keys stored for the user you specified.\n\nUserName -> (string)\n\nSpecifies the name of the user whose ARN was specified. User names are used for authentication purposes."
    },
    {
      "command_name": "list-workflows",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/list-workflows.html",
      "command_description": "Description\n\nLists all of your workflows.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-workflows\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nSpecifies the maximum number of workflows to return.\n\n--next-token (string)\n\nListWorkflows returns the NextToken parameter in the output. You can then pass the NextToken parameter in a subsequent command to continue listing additional workflows.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nListWorkflows returns the NextToken parameter in the output. You can then pass the NextToken parameter in a subsequent command to continue listing additional workflows.\n\nWorkflows -> (list)\n\nReturns the Arn , WorkflowId , and Description for each workflow.\n\n(structure)\n\nContains the ID, text description, and Amazon Resource Name (ARN) for the workflow.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nDescription -> (string)\n\nSpecifies the text description for the workflow.\n\nArn -> (string)\n\nSpecifies the unique Amazon Resource Name (ARN) for the workflow."
    },
    {
      "command_name": "send-workflow-step-state",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/send-workflow-step-state.html",
      "command_description": "Description\n\nSends a callback for asynchronous custom steps.\n\nThe ExecutionId , WorkflowId , and Token are passed to the target resource during execution of a custom step of a workflow. You must include those with their callback as well as providing a status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-workflow-step-state\n--workflow-id <value>\n--execution-id <value>\n--token <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--workflow-id <value>",
        "--execution-id <value>",
        "--token <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--workflow-id (string)\n\nA unique identifier for the workflow.\n\n--execution-id (string)\n\nA unique identifier for the execution of a workflow.\n\n--token (string)\n\nUsed to distinguish between multiple callbacks for multiple Lambda steps within the same execution.\n\n--status (string)\n\nIndicates whether the specified step succeeded or failed.\n\nPossible values:\n\nSUCCESS\n\nFAILURE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "start-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/start-server.html",
      "command_description": "Description\n\nChanges the state of a file transfer protocol-enabled server from OFFLINE to ONLINE . It has no impact on a server that is already ONLINE . An ONLINE server can accept and process file transfer jobs.\n\nThe state of STARTING indicates that the server is in an intermediate state, either not fully able to respond, or not fully online. The values of START_FAILED can indicate an error condition.\n\nNo response is returned from this call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-server\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that you start.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/stop-server.html",
      "command_description": "Description\n\nChanges the state of a file transfer protocol-enabled server from ONLINE to OFFLINE . An OFFLINE server cannot accept and process file transfer jobs. Information tied to your server, such as server and user properties, are not affected by stopping your server.\n\nNote\n\nStopping the server will not reduce or impact your file transfer protocol endpoint billing; you must delete the server to stop being billed.\n\nThe state of STOPPING indicates that the server is in an intermediate state, either not fully able to respond, or not fully offline. The values of STOP_FAILED can indicate an error condition.\n\nNo response is returned from this call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-server\n--server-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned unique identifier for a server that you stopped.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/tag-resource.html",
      "command_description": "Description\n\nAttaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.\n\nThere is no response returned from this call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nAn Amazon Resource Name (ARN) for a specific Amazon Web Services resource, such as a server, user, or role.\n\n--tags (list)\n\nKey-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to user accounts for any purpose.\n\n(structure)\n\nCreates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called Group and assign the values Research and Accounting to that group.\n\nKey -> (string)\n\nThe name assigned to the tag that you create.\n\nValue -> (string)\n\nContains one or more values that you assigned to the key name you create.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "test-identity-provider",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/test-identity-provider.html",
      "command_description": "Description\n\nIf the IdentityProviderType of a file transfer protocol-enabled server is AWS_DIRECTORY_SERVICE or API_Gateway , tests whether your identity provider is set up successfully. We highly recommend that you call this operation to test your authentication method as soon as you create your server. By doing so, you can troubleshoot issues with the identity provider integration to ensure that your users can successfully use the service.\n\nThe ServerId and UserName parameters are required. The ServerProtocol , SourceIp , and UserPassword are all optional.\n\nNote\n\nYou cannot use TestIdentityProvider if the IdentityProviderType of your server is SERVICE_MANAGED .\n\nIf you provide any incorrect values for any parameters, the Response field is empty.\n\nIf you provide a server ID for a server that uses service-managed users, you get an error: An error occurred (InvalidRequestException) when calling the TestIdentityProvider operation: s-*server-ID* not configured for external auth\n\nIf you enter a Server ID for the --server-id parameter that does not identify an actual Transfer server, you receive the following error: An error occurred (ResourceNotFoundException) when calling the TestIdentityProvider operation: Unknown server\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  test-identity-provider\n--server-id <value>\n[--server-protocol <value>]\n[--source-ip <value>]\n--user-name <value>\n[--user-password <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--server-id <value>",
        "[--server-protocol <value>]",
        "[--source-ip <value>]",
        "--user-name <value>",
        "[--user-password <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--server-id (string)\n\nA system-assigned identifier for a specific server. That server’s user authentication method is tested with a user name and password.\n\n--server-protocol (string)\n\nThe type of file transfer protocol to be tested.\n\nThe available protocols are:\n\nSecure Shell (SSH) File Transfer Protocol (SFTP)\n\nFile Transfer Protocol Secure (FTPS)\n\nFile Transfer Protocol (FTP)\n\nPossible values:\n\nSFTP\n\nFTP\n\nFTPS\n\n--source-ip (string)\n\nThe source IP address of the user account to be tested.\n\n--user-name (string)\n\nThe name of the user account to be tested.\n\n--user-password (string)\n\nThe password of the user account to be tested.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResponse -> (string)\n\nThe response that is returned from your API Gateway.\n\nStatusCode -> (integer)\n\nThe HTTP status code that is the response from your API Gateway.\n\nMessage -> (string)\n\nA message that indicates whether the test was successful or not.\n\nUrl -> (string)\n\nThe endpoint of the service used to authenticate a user."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/untag-resource.html",
      "command_description": "Description\n\nDetaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.\n\nNo response is returned from this call.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--arn (string)\n\nThe value of the resource that will have the tag removed. An Amazon Resource Name (ARN) is an identifier for a specific Amazon Web Services resource, such as a server, user, or role.\n\n--tag-keys (list)\n\nTagKeys are key-value pairs assigned to ARNs that can be used to group and search for resources by type. This metadata can be attached to resources for any purpose.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/update-access.html",
      "command_description": "Description\n\nAllows you to update parameters for the access specified in the ServerID and ExternalID parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-access\n[--home-directory <value>]\n[--home-directory-type <value>]\n[--home-directory-mappings <value>]\n[--policy <value>]\n[--posix-profile <value>]\n[--role <value>]\n--server-id <value>\n--external-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--home-directory <value>]",
        "[--home-directory-type <value>]",
        "[--home-directory-mappings <value>]",
        "[--policy <value>]",
        "[--posix-profile <value>]",
        "[--role <value>]",
        "--server-id <value>",
        "--external-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--home-directory (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\n--home-directory-type (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPossible values:\n\nPATH\n\nLOGICAL\n\n--home-directory-mappings (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nThe following is an Entry and Target pair example.\n\n[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nIn most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (“chroot “). To do this, you can set Entry to / and set Target to the HomeDirectory parameter value.\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nShorthand Syntax:\n\nEntry=string,Target=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Entry\": \"string\",\n    \"Target\": \"string\"\n  }\n  ...\n]\n\n\n--policy (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nNote\n\nThis only applies when the domain of ServerId is S3. EFS does not use session policies.\n\nFor session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the Policy argument.\n\nFor an example of a session policy, see Example session policy .\n\nFor more information, see AssumeRole in the Amazon Web ServicesSecurity Token Service API Reference .\n\n--posix-profile (structure)\n\nThe full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nShorthand Syntax:\n\nUid=long,Gid=long,SecondaryGids=long,long\n\n\nJSON Syntax:\n\n{\n  \"Uid\": long,\n  \"Gid\": long,\n  \"SecondaryGids\": [long, ...]\n}\n\n\n--role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance. This is the specific server that you added your user to.\n\n--external-id (string)\n\nA unique identifier that is required to identify specific groups within your directory. The users of the group that you associate have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web Services Transfer Family. If you know the group name, you can view the SID values by running the following command using Windows PowerShell.\n\nGet-ADGroup -Filter {samAccountName -like \"*YourGroupName* *\"} -Properties * | Select SamAccountName,ObjectSid\n\nIn that command, replace YourGroupName with the name of your Active Directory group.\n\nThe regex used to validate this parameter is a string of characters consisting of uppercase and lowercase alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nThe ID of the server that the user is attached to.\n\nExternalId -> (string)\n\nThe external ID of the group whose users have access to your Amazon S3 or Amazon EFS resources over the enabled protocols using Amazon Web ServicesTransfer Family."
    },
    {
      "command_name": "update-server",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/update-server.html",
      "command_description": "Description\n\nUpdates the file transfer protocol-enabled server’s properties after that server has been created.\n\nThe UpdateServer call returns the ServerId of the server you updated.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-server\n[--certificate <value>]\n[--protocol-details <value>]\n[--endpoint-details <value>]\n[--endpoint-type <value>]\n[--host-key <value>]\n[--identity-provider-details <value>]\n[--logging-role <value>]\n[--protocols <value>]\n[--security-policy-name <value>]\n--server-id <value>\n[--workflow-details <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--certificate <value>]",
        "[--protocol-details <value>]",
        "[--endpoint-details <value>]",
        "[--endpoint-type <value>]",
        "[--host-key <value>]",
        "[--identity-provider-details <value>]",
        "[--logging-role <value>]",
        "[--protocols <value>]",
        "[--security-policy-name <value>]",
        "--server-id <value>",
        "[--workflow-details <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--certificate (string)\n\nThe Amazon Resource Name (ARN) of the Amazon Web ServicesCertificate Manager (ACM) certificate. Required when Protocols is set to FTPS .\n\nTo request a new public certificate, see Request a public certificate in the Amazon Web ServicesCertificate Manager User Guide .\n\nTo import an existing certificate into ACM, see Importing certificates into ACM in the Amazon Web ServicesCertificate Manager User Guide .\n\nTo request a private certificate to use FTPS through private IP addresses, see Request a private certificate in the Amazon Web ServicesCertificate Manager User Guide .\n\nCertificates with the following cryptographic algorithms and key sizes are supported:\n\n2048-bit RSA (RSA_2048)\n\n4096-bit RSA (RSA_4096)\n\nElliptic Prime Curve 256 bit (EC_prime256v1)\n\nElliptic Prime Curve 384 bit (EC_secp384r1)\n\nElliptic Prime Curve 521 bit (EC_secp521r1)\n\nNote\n\nThe certificate must be a valid SSL/TLS X.509 version 3 certificate with FQDN or IP address specified and information about the issuer.\n\n--protocol-details (structure)\n\nThe protocol settings that are configured for your server.\n\nUse the PassiveIp parameter to indicate passive mode (for FTP and FTPS protocols). Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer.\n\nPassiveIp -> (string)\n\nIndicates passive mode, for FTP and FTPS protocols. Enter a single dotted-quad IPv4 address, such as the external IP address of a firewall, router, or load balancer. For example:\n\n``aws transfer update-server –protocol-details PassiveIp=*0.0.0.0* ``\n\nReplace `` 0.0.0.0 `` in the example above with the actual IP address you want to use.\n\nNote\n\nIf you change the PassiveIp value, you must stop and then restart your Transfer server for the change to take effect. For details on using Passive IP (PASV) in a NAT environment, see Configuring your FTPS server behind a firewall or NAT with Amazon Web Services Transfer Family .\n\nShorthand Syntax:\n\nPassiveIp=string\n\n\nJSON Syntax:\n\n{\n  \"PassiveIp\": \"string\"\n}\n\n\n--endpoint-details (structure)\n\nThe virtual private cloud (VPC) endpoint settings that are configured for your server. When you host your endpoint within your VPC, you can make it accessible only to resources within your VPC, or you can attach Elastic IP addresses and make it accessible to clients over the internet. Your VPC’s default security groups are automatically assigned to your endpoint.\n\nAddressAllocationIds -> (list)\n\nA list of address allocation IDs that are required to attach an Elastic IP address to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC and it is only valid in the UpdateServer API.\n\n(string)\n\nSubnetIds -> (list)\n\nA list of subnet IDs that are required to host your server endpoint in your VPC.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\n(string)\n\nVpcEndpointId -> (string)\n\nThe ID of the VPC endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC_ENDPOINT .\n\nFor more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.\n\nVpcId -> (string)\n\nThe VPC ID of the VPC in which a server’s endpoint will be hosted.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nSecurityGroupIds -> (list)\n\nA list of security groups IDs that are available to attach to your server’s endpoint.\n\nNote\n\nThis property can only be set when EndpointType is set to VPC .\n\nYou can edit the SecurityGroupIds property in the UpdateServer API only if you are changing the EndpointType from PUBLIC or VPC_ENDPOINT to VPC . To change security groups associated with your server’s VPC endpoint after creation, use the Amazon EC2 ModifyVpcEndpoint API.\n\n(string)\n\nShorthand Syntax:\n\nAddressAllocationIds=string,string,SubnetIds=string,string,VpcEndpointId=string,VpcId=string,SecurityGroupIds=string,string\n\n\nJSON Syntax:\n\n{\n  \"AddressAllocationIds\": [\"string\", ...],\n  \"SubnetIds\": [\"string\", ...],\n  \"VpcEndpointId\": \"string\",\n  \"VpcId\": \"string\",\n  \"SecurityGroupIds\": [\"string\", ...]\n}\n\n\n--endpoint-type (string)\n\nThe type of endpoint that you want your server to use. You can choose to make your server’s endpoint publicly accessible (PUBLIC) or host it inside your VPC. With an endpoint that is hosted in a VPC, you can restrict access to your server and resources only within your VPC or choose to make it internet facing by attaching Elastic IP addresses directly to it.\n\nNote\n\nAfter May 19, 2021, you won’t be able to create a server using EndpointType=VPC_ENDPOINT in your Amazon Web Servicesaccount if your account hasn’t already done so before May 19, 2021. If you have already created servers with EndpointType=VPC_ENDPOINT in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected. After this date, use EndpointType =``VPC`` .\n\nFor more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.\n\nIt is recommended that you use VPC as the EndpointType . With this endpoint type, you have the option to directly associate up to three Elastic IPv4 addresses (BYO IP included) with your server’s endpoint and use VPC security groups to restrict traffic by the client’s public IP address. This is not possible with EndpointType set to VPC_ENDPOINT .\n\nPossible values:\n\nPUBLIC\n\nVPC\n\nVPC_ENDPOINT\n\n--host-key (string)\n\nThe RSA private key as generated by ssh-keygen -N \"\" -m PEM -f my-new-server-key .\n\nWarning\n\nIf you aren’t planning to migrate existing users from an existing server to a new server, don’t update the host key. Accidentally changing a server’s host key can be disruptive.\n\nFor more information, see Change the host key for your SFTP-enabled server in the Amazon Web ServicesTransfer Family User Guide .\n\n--identity-provider-details (structure)\n\nAn array containing all of the information required to call a customer’s authentication API method.\n\nUrl -> (string)\n\nProvides the location of the service endpoint used to authenticate users.\n\nInvocationRole -> (string)\n\nProvides the type of InvocationRole used to authenticate the user account.\n\nDirectoryId -> (string)\n\nThe identifier of the Amazon Web ServicesDirectory Service directory that you want to stop sharing.\n\nShorthand Syntax:\n\nUrl=string,InvocationRole=string,DirectoryId=string\n\n\nJSON Syntax:\n\n{\n  \"Url\": \"string\",\n  \"InvocationRole\": \"string\",\n  \"DirectoryId\": \"string\"\n}\n\n\n--logging-role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) role that allows a server to turn on Amazon CloudWatch logging for Amazon S3 or Amazon EFS events. When set, user activity can be viewed in your CloudWatch logs.\n\n--protocols (list)\n\nSpecifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server’s endpoint. The available protocols are:\n\nSecure Shell (SSH) File Transfer Protocol (SFTP): File transfer over SSH\n\nFile Transfer Protocol Secure (FTPS): File transfer with TLS encryption\n\nFile Transfer Protocol (FTP): Unencrypted file transfer\n\nNote\n\nIf you select FTPS , you must choose a certificate stored in Amazon Web ServicesCertificate Manager (ACM) which will be used to identify your server when clients connect to it over FTPS.\n\nIf Protocol includes either FTP or FTPS , then the EndpointType must be VPC and the IdentityProviderType must be AWS_DIRECTORY_SERVICE or API_GATEWAY .\n\nIf Protocol includes FTP , then AddressAllocationIds cannot be associated.\n\nIf Protocol is set only to SFTP , the EndpointType can be set to PUBLIC and the IdentityProviderType can be set to SERVICE_MANAGED .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  SFTP\n  FTP\n  FTPS\n\n\n--security-policy-name (string)\n\nSpecifies the name of the security policy that is attached to the server.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance that the user account is assigned to.\n\n--workflow-details (structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nOnUpload -> (list)\n\nA trigger that starts a workflow: the workflow begins to execute after a file is uploaded.\n\n(structure)\n\nSpecifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.\n\nWorkflowId -> (string)\n\nA unique identifier for the workflow.\n\nExecutionRole -> (string)\n\nIncludes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources\n\nShorthand Syntax:\n\nOnUpload=[{WorkflowId=string,ExecutionRole=string},{WorkflowId=string,ExecutionRole=string}]\n\n\nJSON Syntax:\n\n{\n  \"OnUpload\": [\n    {\n      \"WorkflowId\": \"string\",\n      \"ExecutionRole\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server that the user account is assigned to."
    },
    {
      "command_name": "update-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/transfer/update-user.html",
      "command_description": "Description\n\nAssigns new properties to a user. Parameters you pass modify any or all of the following: the home directory, role, and policy for the UserName and ServerId you specify.\n\nThe response returns the ServerId and the UserName for the updated user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-user\n[--home-directory <value>]\n[--home-directory-type <value>]\n[--home-directory-mappings <value>]\n[--policy <value>]\n[--posix-profile <value>]\n[--role <value>]\n--server-id <value>\n--user-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--home-directory <value>]",
        "[--home-directory-type <value>]",
        "[--home-directory-mappings <value>]",
        "[--policy <value>]",
        "[--posix-profile <value>]",
        "[--role <value>]",
        "--server-id <value>",
        "--user-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--home-directory (string)\n\nThe landing directory (folder) for a user when they log in to the server using the client.\n\nA HomeDirectory example is /bucket_name/home/mydirectory .\n\n--home-directory-type (string)\n\nThe type of landing directory (folder) you want your users’ home directory to be when they log into the server. If you set it to PATH , the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL , you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.\n\nPossible values:\n\nPATH\n\nLOGICAL\n\n--home-directory-mappings (list)\n\nLogical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target . This value can only be set when HomeDirectoryType is set to LOGICAL .\n\nThe following is an Entry and Target pair example.\n\n[ { \"Entry\": \"/directory1\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nIn most cases, you can use this value instead of the session policy to lock down your user to the designated home directory (“chroot “). To do this, you can set Entry to ‘/’ and set Target to the HomeDirectory parameter value.\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\n(structure)\n\nRepresents an object that contains entries and targets for HomeDirectoryMappings .\n\nThe following is an Entry and Target pair example for chroot .\n\n[ { \"Entry:\": \"/\", \"Target\": \"/bucket_name/home/mydirectory\" } ]\n\nNote\n\nIf the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the s3api or efsapi call instead of s3 or efs so you can use the put-object operation. For example, you use the following: aws s3api put-object --bucket bucketname --key path/to/folder/ . Make sure that the end of the key name ends in a / for it to be considered a folder.\n\nEntry -> (string)\n\nRepresents an entry for HomeDirectoryMappings .\n\nTarget -> (string)\n\nRepresents the map target that is used in a HomeDirectorymapEntry .\n\nShorthand Syntax:\n\nEntry=string,Target=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Entry\": \"string\",\n    \"Target\": \"string\"\n  }\n  ...\n]\n\n\n--policy (string)\n\nA session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName} , ${Transfer:HomeDirectory} , and ${Transfer:HomeBucket} .\n\nNote\n\nThis only applies when the domain of ServerId is S3. EFS does not use session policies.\n\nFor session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the Policy argument.\n\nFor an example of a session policy, see Creating a session policy .\n\nFor more information, see AssumeRole in the Amazon Web Services Security Token Service API Reference .\n\n--posix-profile (structure)\n\nSpecifies the full POSIX identity, including user ID (Uid ), group ID (Gid ), and any secondary groups IDs (SecondaryGids ), that controls your users’ access to your Amazon Elastic File Systems (Amazon EFS). The POSIX permissions that are set on files and directories in your file system determines the level of access your users get when transferring files into and out of your Amazon EFS file systems.\n\nUid -> (long)\n\nThe POSIX user ID used for all EFS operations by this user.\n\nGid -> (long)\n\nThe POSIX group ID used for all EFS operations by this user.\n\nSecondaryGids -> (list)\n\nThe secondary POSIX group IDs used for all EFS operations by this user.\n\n(long)\n\nShorthand Syntax:\n\nUid=long,Gid=long,SecondaryGids=long,long\n\n\nJSON Syntax:\n\n{\n  \"Uid\": long,\n  \"Gid\": long,\n  \"SecondaryGids\": [long, ...]\n}\n\n\n--role (string)\n\nSpecifies the Amazon Resource Name (ARN) of the IAM role that controls your users’ access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users’ transfer requests.\n\n--server-id (string)\n\nA system-assigned unique identifier for a server instance that the user account is assigned to.\n\n--user-name (string)\n\nA unique string that identifies a user and is associated with a server as specified by the ServerId . This user name must be a minimum of 3 and a maximum of 100 characters long. The following are valid characters: a-z, A-Z, 0-9, underscore ‘_’, hyphen ‘-‘, period ‘.’, and at sign ‘@’. The user name can’t start with a hyphen, period, or at sign.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServerId -> (string)\n\nA system-assigned unique identifier for a server instance that the user account is assigned to.\n\nUserName -> (string)\n\nThe unique identifier for a user that is assigned to a server instance that was specified in the request."
    }
  ],
  "service_description": "Description\n\nAmazon Web Services Transfer Family is a fully managed service that enables the transfer of files over the File Transfer Protocol (FTP), File Transfer Protocol over SSL (FTPS), or Secure Shell (SSH) File Transfer Protocol (SFTP) directly into and out of Amazon Simple Storage Service (Amazon S3). Amazon Web Services helps you seamlessly migrate your file transfer workflows to Amazon Web Services Transfer Family by integrating with existing authentication systems, and providing DNS routing with Amazon Route 53 so nothing changes for your customers and partners, or their applications. With your data in Amazon S3, you can use it with Amazon Web Services services for processing, analytics, machine learning, and archiving. Getting started with Amazon Web Services Transfer Family is easy since there is no infrastructure to buy and set up."
}