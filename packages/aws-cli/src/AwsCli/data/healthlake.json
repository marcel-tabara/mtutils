{
  "service_name": "healthlake",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/index.html",
  "service_commands": [
    {
      "command_name": "create-fhir-datastore",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/create-fhir-datastore.html",
      "command_description": "Description\n\nCreates a Data Store that can ingest and export FHIR formatted data.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-fhir-datastore\n[--datastore-name <value>]\n--datastore-type-version <value>\n[--sse-configuration <value>]\n[--preload-data-config <value>]\n[--client-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--datastore-name <value>]",
        "--datastore-type-version <value>",
        "[--sse-configuration <value>]",
        "[--preload-data-config <value>]",
        "[--client-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-name (string)\n\nThe user generated name for the Data Store.\n\n--datastore-type-version (string)\n\nThe FHIR version of the Data Store. The only supported version is R4.\n\nPossible values:\n\nR4\n\n--sse-configuration (structure)\n\nThe server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store.\n\nKmsEncryptionConfig -> (structure)\n\nThe KMS encryption configuration used to provide details for data encryption.\n\nCmkType -> (string)\n\nThe type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.\n\nKmsKeyId -> (string)\n\nThe KMS encryption key id/alias used to encrypt the Data Store contents at rest.\n\nShorthand Syntax:\n\nKmsEncryptionConfig={CmkType=string,KmsKeyId=string}\n\n\nJSON Syntax:\n\n{\n  \"KmsEncryptionConfig\": {\n    \"CmkType\": \"CUSTOMER_MANAGED_KMS_KEY\"|\"AWS_OWNED_KMS_KEY\",\n    \"KmsKeyId\": \"string\"\n  }\n}\n\n\n--preload-data-config (structure)\n\nOptional parameter to preload data upon creation of the Data Store. Currently, the only supported preloaded data is synthetic data generated from Synthea.\n\nPreloadDataType -> (string)\n\nThe type of preloaded data. Only Synthea preloaded data is supported.\n\nShorthand Syntax:\n\nPreloadDataType=string\n\n\nJSON Syntax:\n\n{\n  \"PreloadDataType\": \"SYNTHEA\"\n}\n\n\n--client-token (string)\n\nOptional user provided token used for ensuring idempotency.\n\n--tags (list)\n\nResource tags that are applied to a Data Store when it is created.\n\n(structure)\n\nA tag is a label consisting of a user-defined key and value. The form for tags is {“Key”, “Value”}\n\nKey -> (string)\n\nThe key portion of a tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value portion of tag. Tag values are case sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatastoreId -> (string)\n\nThe AWS-generated Data Store id. This id is in the output from the initial Data Store creation call.\n\nDatastoreArn -> (string)\n\nThe datastore ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation call.\n\nDatastoreStatus -> (string)\n\nThe status of the FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.\n\nDatastoreEndpoint -> (string)\n\nThe AWS endpoint for the created Data Store. For preview, only US-east-1 endpoints are supported.",
      "command_examples": "Examples\n\nTo create a FHIR Data Store.\n\nThe following create-fhir-datastore example demonstrates how to create a new Data Store in Amazon HealthLake.\n\naws healthlake create-fhir-datastore \\\n    --region us-east-1 \\\n    --datastore-type-version R4 \\\n    --datastore-type-version R4 \\\n    --datastore-name \"FhirTestDatastore\"\n\n\nOutput:\n\n{\n    \"DatastoreEndpoint\": \"https://healthlake.us-east-1.amazonaws.com/datastore/(Datastore ID)/r4/\",\n    \"DatastoreArn\": \"arn:aws:healthlake:us-east-1:(AWS Account ID):datastore/(Datastore ID)\",\n    \"DatastoreStatus\": \"CREATING\",\n    \"DatastoreId\": \"(Datastore ID)\"\n}\n\n\nFor more information, see Creating and monitoring a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "delete-fhir-datastore",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/delete-fhir-datastore.html",
      "command_description": "Description\n\nDeletes a Data Store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-fhir-datastore\n[--datastore-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--datastore-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThe AWS-generated ID for the Data Store to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatastoreId -> (string)\n\nThe AWS-generated ID for the Data Store to be deleted.\n\nDatastoreArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.\n\nDatastoreStatus -> (string)\n\nThe status of the Data Store that the user has requested to be deleted.\n\nDatastoreEndpoint -> (string)\n\nThe AWS endpoint for the Data Store the user has requested to be deleted.",
      "command_examples": "Examples\n\nTo delete a FHIR Data Store\n\nThe following delete-fhir-datastore example demonstrates how to delete a Data Store and all of its contents in Amazon HealthLake.\n\naws healthlake delete-fhir-datastore \\\n    --datastore-id (Data Store ID) \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"DatastoreEndpoint\": \"https://healthlake.us-east-1.amazonaws.com/datastore/(Datastore ID)/r4/\",\n    \"DatastoreArn\": \"arn:aws:healthlake:us-east-1:(AWS Account ID):datastore/(Datastore ID)\",\n    \"DatastoreStatus\": \"DELETING\",\n    \"DatastoreId\": \"(Datastore ID)\"\n}\n\n\nFor more information, see Creating and monitoring a FHIR Data Store <https://docs.aws.amazon.com/healthlake/latest/devguide/working-with-FHIR-healthlake.html> in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "describe-fhir-datastore",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/describe-fhir-datastore.html",
      "command_description": "Description\n\nGets the properties associated with the FHIR Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-fhir-datastore\n[--datastore-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--datastore-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThe AWS-generated Data Store id. This is part of the ‘CreateFHIRDatastore’ output.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatastoreProperties -> (structure)\n\nAll properties associated with a Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.\n\nDatastoreId -> (string)\n\nThe AWS-generated ID number for the Data Store.\n\nDatastoreArn -> (string)\n\nThe Amazon Resource Name used in the creation of the Data Store.\n\nDatastoreName -> (string)\n\nThe user-generated name for the Data Store.\n\nDatastoreStatus -> (string)\n\nThe status of the Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, or ‘DELETED’.\n\nCreatedAt -> (timestamp)\n\nThe time that a Data Store was created.\n\nDatastoreTypeVersion -> (string)\n\nThe FHIR version. Only R4 version data is supported.\n\nDatastoreEndpoint -> (string)\n\nThe AWS endpoint for the Data Store. Each Data Store will have it’s own endpoint with Data Store ID in the endpoint URL.\n\nSseConfiguration -> (structure)\n\nThe server-side encryption key configuration for a customer provided encryption key (CMK).\n\nKmsEncryptionConfig -> (structure)\n\nThe KMS encryption configuration used to provide details for data encryption.\n\nCmkType -> (string)\n\nThe type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.\n\nKmsKeyId -> (string)\n\nThe KMS encryption key id/alias used to encrypt the Data Store contents at rest.\n\nPreloadDataConfig -> (structure)\n\nThe preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.\n\nPreloadDataType -> (string)\n\nThe type of preloaded data. Only Synthea preloaded data is supported.",
      "command_examples": "Examples\n\nTo describe a FHIR Data Store\n\nThe following describe-fhir-datastore example demonstrates how to find the properties of a Data Store in Amazon HealthLake.\n\naws healthlake describe-fhir-datastore \\\n    --datastore-id \"1f2f459836ac6c513ce899f9e4f66a59\" \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"DatastoreProperties\": {\n        \"PreloadDataConfig\": {\n            \"PreloadDataType\": \"SYNTHEA\"\n        },\n        \"DatastoreName\": \"FhirTestDatastore\",\n        \"DatastoreArn\": \"arn:aws:healthlake:us-east-1:(AWS Account ID):datastore/(Datastore ID)\",\n        \"DatastoreEndpoint\": \"https://healthlake.us-east-1.amazonaws.com/datastore/(Datastore ID)/r4/\",\n        \"DatastoreStatus\": \"CREATING\",\n        \"DatastoreTypeVersion\": \"R4\",\n        \"DatastoreId\": \"(Datastore ID)\"\n    }\n}\n\n\nFor more information, see Creating and monitoring a FHIR Data Stores in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "describe-fhir-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/describe-fhir-export-job.html",
      "command_description": "Description\n\nDisplays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-fhir-export-job\n--datastore-id <value>\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--datastore-id <value>",
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThe AWS generated ID for the Data Store from which files are being exported from for an export job.\n\n--job-id (string)\n\nThe AWS generated ID for an export job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nExportJobProperties -> (structure)\n\nDisplays the properties of the export job, including the ID, Arn, Name, and the status of the job.\n\nJobId -> (string)\n\nThe AWS generated ID for an export job.\n\nJobName -> (string)\n\nThe user generated name for an export job.\n\nJobStatus -> (string)\n\nThe status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.\n\nSubmitTime -> (timestamp)\n\nThe time an export job was initiated.\n\nEndTime -> (timestamp)\n\nThe time an export job completed.\n\nDatastoreId -> (string)\n\nThe AWS generated ID for the Data Store from which files are being exported for an export job.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name used during the initiation of the job.\n\nMessage -> (string)\n\nAn explanation of any errors that may have occurred during the export job.",
      "command_examples": "Examples\n\nTo describe a FHIR export job\n\nThe following describe-fhir-export-job example shows how to find the properties of a FHIR export job in Amazon HealthLake.\n\naws healthlake describe-fhir-export-job \\\n    --datastore-id (Datastore ID) \\\n    --job-id 9b9a51943afaedd0a8c0c26c49135a31\n\n\nOutput:\n\n{\n    \"ExportJobProperties\": {\n        \"DataAccessRoleArn\": \"arn:aws:iam::(AWS Account ID):role/(Role Name)\",\n        \"JobStatus\": \"IN_PROGRESS\",\n        \"JobId\": \"9009813e9d69ba7cf79bcb3468780f16\",\n        \"SubmitTime\": 1609175692.715,\n        \"OutputDataConfig\": {\n            \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/59593b2d0367ce252b5e66bf5fd6b574-FHIR_EXPORT-9009813e9d69ba7cf79bcb3468780f16/\"\n        },\n        \"DatastoreId\": \"(Datastore ID)\"\n    }\n}\n\n\nFor more information, see Exporting files from a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "describe-fhir-import-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/describe-fhir-import-job.html",
      "command_description": "Description\n\nDisplays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-fhir-import-job\n--datastore-id <value>\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--datastore-id <value>",
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThe AWS-generated ID of the Data Store.\n\n--job-id (string)\n\nThe AWS-generated job ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nImportJobProperties -> (structure)\n\nThe properties of the Import job request, including the ID, ARN, name, and the status of the job.\n\nJobId -> (string)\n\nThe AWS-generated id number for the Import job.\n\nJobName -> (string)\n\nThe user-generated name for an Import job.\n\nJobStatus -> (string)\n\nThe job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.\n\nSubmitTime -> (timestamp)\n\nThe time that the Import job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the Import job was completed.\n\nDatastoreId -> (string)\n\nThe datastore id used when the Import job was created.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that was supplied when the Import job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nJobOutputDataConfig -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.\n\nMessage -> (string)\n\nAn explanation of any errors that may have occurred during the FHIR import job.",
      "command_examples": "Examples\n\nTo describe a FHIR import job\n\nThe following describe-fhir-import-job example shows how to learn the properties of a FHIR import job using Amazon HealthLake.\n\naws healthlake describe-fhir-import-job \\\n    --datastore-id (Datastore ID) \\\n    --job-id c145fbb27b192af392f8ce6e7838e34f \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"ImportJobProperties\": {\n    \"InputDataConfig\": {\n        \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/\"\n        { \"arrayitem2\": 2 }\n    },\n    \"DataAccessRoleArn\": \"arn:aws:iam::(AWS Account ID):role/(Role Name)\",\n    \"JobStatus\": \"COMPLETED\",\n    \"JobId\": \"c145fbb27b192af392f8ce6e7838e34f\",\n    \"SubmitTime\": 1606272542.161,\n    \"EndTime\": 1606272609.497,\n    \"DatastoreId\": \"(Datastore ID)\"\n    }\n}\n\n\nFor more information, see Importing files to a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "list-fhir-datastores",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/list-fhir-datastores.html",
      "command_description": "Description\n\nLists all FHIR Data Stores that are in the user’s account, regardless of Data Store status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-fhir-datastores\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nLists all filters associated with a FHIR Data Store request.\n\nDatastoreName -> (string)\n\nAllows the user to filter Data Store results by name.\n\nDatastoreStatus -> (string)\n\nAllows the user to filter Data Store results by status.\n\nCreatedBefore -> (timestamp)\n\nA filter that allows the user to set cutoff dates for records. All Data Stores created before the specified date will be included in the results.\n\nCreatedAfter -> (timestamp)\n\nA filter that allows the user to set cutoff dates for records. All Data Stores created after the specified date will be included in the results.\n\nShorthand Syntax:\n\nDatastoreName=string,DatastoreStatus=string,CreatedBefore=timestamp,CreatedAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"DatastoreName\": \"string\",\n  \"DatastoreStatus\": \"CREATING\"|\"ACTIVE\"|\"DELETING\"|\"DELETED\",\n  \"CreatedBefore\": timestamp,\n  \"CreatedAfter\": timestamp\n}\n\n\n--next-token (string)\n\nFetches the next page of Data Stores when results are paginated.\n\n--max-results (integer)\n\nThe maximum number of Data Stores returned in a single page of a ListFHIRDatastoresRequest call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDatastorePropertiesList -> (list)\n\nAll properties associated with the listed Data Stores.\n\n(structure)\n\nDisplays the properties of the Data Store, including the ID, Arn, name, and the status of the Data Store.\n\nDatastoreId -> (string)\n\nThe AWS-generated ID number for the Data Store.\n\nDatastoreArn -> (string)\n\nThe Amazon Resource Name used in the creation of the Data Store.\n\nDatastoreName -> (string)\n\nThe user-generated name for the Data Store.\n\nDatastoreStatus -> (string)\n\nThe status of the Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, or ‘DELETED’.\n\nCreatedAt -> (timestamp)\n\nThe time that a Data Store was created.\n\nDatastoreTypeVersion -> (string)\n\nThe FHIR version. Only R4 version data is supported.\n\nDatastoreEndpoint -> (string)\n\nThe AWS endpoint for the Data Store. Each Data Store will have it’s own endpoint with Data Store ID in the endpoint URL.\n\nSseConfiguration -> (structure)\n\nThe server-side encryption key configuration for a customer provided encryption key (CMK).\n\nKmsEncryptionConfig -> (structure)\n\nThe KMS encryption configuration used to provide details for data encryption.\n\nCmkType -> (string)\n\nThe type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.\n\nKmsKeyId -> (string)\n\nThe KMS encryption key id/alias used to encrypt the Data Store contents at rest.\n\nPreloadDataConfig -> (structure)\n\nThe preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.\n\nPreloadDataType -> (string)\n\nThe type of preloaded data. Only Synthea preloaded data is supported.\n\nNextToken -> (string)\n\nPagination token that can be used to retrieve the next page of results.",
      "command_examples": "Examples\n\nTo list FHIR Data Stores\n\nThe following list-fhir-datastores example shows to how to use the command and how users can filter results based on Data Store status in Amazon HealthLake.\n\naws healthlake list-fhir-datastores \\\n    --region us-east-1 \\\n    --filter DatastoreStatus=ACTIVE\n\n\nOutput:\n\n{\n    \"DatastorePropertiesList\": [\n    {\n        \"PreloadDataConfig\": {\n            \"PreloadDataType\": \"SYNTHEA\"\n        },\n        \"DatastoreName\": \"FhirTestDatastore\",\n        \"DatastoreArn\": \"arn:aws:healthlake:us-east-1:<AWS Account ID>:datastore/<Datastore ID>\",\n        \"DatastoreEndpoint\": \"https://healthlake.us-east-1.amazonaws.com/datastore/<Datastore ID>/r4/\",\n        \"DatastoreStatus\": \"ACTIVE\",\n        \"DatastoreTypeVersion\": \"R4\",\n        \"CreatedAt\": 1605574003.209,\n        \"DatastoreId\": \"<Datastore ID>\"\n    },\n    {\n        \"DatastoreName\": \"Demo\",\n        \"DatastoreArn\": \"arn:aws:healthlake:us-east-1:<AWS Account ID>:datastore/<Datastore ID>\",\n        \"DatastoreEndpoint\": \"https://healthlake.us-east-1.amazonaws.com/datastore/<Datastore ID>/r4/\",\n        \"DatastoreStatus\": \"ACTIVE\",\n        \"DatastoreTypeVersion\": \"R4\",\n        \"CreatedAt\": 1603761064.881,\n        \"DatastoreId\": \"<Datastore ID>\"\n    }\n    ]\n}\n\n\nFor more information, see Creating and monitoring a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "list-fhir-export-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/list-fhir-export-jobs.html",
      "command_description": "Description\n\nLists all FHIR export jobs associated with an account and their statuses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-fhir-export-jobs\n--datastore-id <value>\n[--next-token <value>]\n[--max-results <value>]\n[--job-name <value>]\n[--job-status <value>]\n[--submitted-before <value>]\n[--submitted-after <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--datastore-id <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--job-name <value>]",
        "[--job-status <value>]",
        "[--submitted-before <value>]",
        "[--submitted-after <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThis parameter limits the response to the export job with the specified Data Store ID.\n\n--next-token (string)\n\nA pagination token used to identify the next page of results to return for a ListFHIRExportJobs query.\n\n--max-results (integer)\n\nThis parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user.\n\n--job-name (string)\n\nThis parameter limits the response to the export job with the specified job name.\n\n--job-status (string)\n\nThis parameter limits the response to the export jobs with the specified job status.\n\nPossible values:\n\nSUBMITTED\n\nIN_PROGRESS\n\nCOMPLETED_WITH_ERRORS\n\nCOMPLETED\n\nFAILED\n\n--submitted-before (timestamp)\n\nThis parameter limits the response to FHIR export jobs submitted before a user specified date.\n\n--submitted-after (timestamp)\n\nThis parameter limits the response to FHIR export jobs submitted after a user specified date.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nExportJobPropertiesList -> (list)\n\nThe properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job.\n\n(structure)\n\nThe properties of a FHIR export job, including the ID, ARN, name, and the status of the job.\n\nJobId -> (string)\n\nThe AWS generated ID for an export job.\n\nJobName -> (string)\n\nThe user generated name for an export job.\n\nJobStatus -> (string)\n\nThe status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.\n\nSubmitTime -> (timestamp)\n\nThe time an export job was initiated.\n\nEndTime -> (timestamp)\n\nThe time an export job completed.\n\nDatastoreId -> (string)\n\nThe AWS generated ID for the Data Store from which files are being exported for an export job.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name used during the initiation of the job.\n\nMessage -> (string)\n\nAn explanation of any errors that may have occurred during the export job.\n\nNextToken -> (string)\n\nA pagination token used to identify the next page of results to return for a ListFHIRExportJobs query.",
      "command_examples": "Examples\n\nTo list all FHIR export jobs\n\nThe following list-fhir-export-jobs example shows how to use the command to view a list of export jobs associated with an account.\n\naws healthlake list-fhir-export-jobs \\\n    --datastore-id (Datastore ID) \\\n    --submitted-before (DATE like 2024-10-13T19:00:00Z)\\\n    --submitted-after (DATE like 2020-10-13T19:00:00Z )\\\n    --job-name \"FHIR-EXPORT\" \\\n    --job-status SUBMITTED  \\\n    --max-results (Integer between 1 and 500)\n\n\nOutput:\n\n{\n    \"ExportJobProperties\": {\n        \"OutputDataConfig\": {\n            \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/\"\n                \"S3Configuration\": {\n                \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/\",\n                \"KmsKeyId\" : \"(KmsKey Id)\"\n        },\n    },\n    \"DataAccessRoleArn\": \"arn:aws:iam::(AWS Account ID):role/(Role Name)\",\n    \"JobStatus\": \"COMPLETED\",\n    \"JobId\": \"c145fbb27b192af392f8ce6e7838e34f\",\n    \"JobName\" \"FHIR-EXPORT\",\n    \"SubmitTime\": 1606272542.161,\n    \"EndTime\": 1606272609.497,\n    \"DatastoreId\": \"(Datastore ID)\"\n    }\n}\n\"NextToken\": String\n\n\nFor more information, see Exporting files from a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "list-fhir-import-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/list-fhir-import-jobs.html",
      "command_description": "Description\n\nLists all FHIR import jobs associated with an account and their statuses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-fhir-import-jobs\n--datastore-id <value>\n[--next-token <value>]\n[--max-results <value>]\n[--job-name <value>]\n[--job-status <value>]\n[--submitted-before <value>]\n[--submitted-after <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--datastore-id <value>",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--job-name <value>]",
        "[--job-status <value>]",
        "[--submitted-before <value>]",
        "[--submitted-after <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--datastore-id (string)\n\nThis parameter limits the response to the import job with the specified Data Store ID.\n\n--next-token (string)\n\nA pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.\n\n--max-results (integer)\n\nThis parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user.\n\n--job-name (string)\n\nThis parameter limits the response to the import job with the specified job name.\n\n--job-status (string)\n\nThis parameter limits the response to the import job with the specified job status.\n\nPossible values:\n\nSUBMITTED\n\nIN_PROGRESS\n\nCOMPLETED_WITH_ERRORS\n\nCOMPLETED\n\nFAILED\n\n--submitted-before (timestamp)\n\nThis parameter limits the response to FHIR import jobs submitted before a user specified date.\n\n--submitted-after (timestamp)\n\nThis parameter limits the response to FHIR import jobs submitted after a user specified date.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nImportJobPropertiesList -> (list)\n\nThe properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job.\n\n(structure)\n\nDisplays the properties of the import job, including the ID, Arn, Name, and the status of the Data Store.\n\nJobId -> (string)\n\nThe AWS-generated id number for the Import job.\n\nJobName -> (string)\n\nThe user-generated name for an Import job.\n\nJobStatus -> (string)\n\nThe job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.\n\nSubmitTime -> (timestamp)\n\nThe time that the Import job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the Import job was completed.\n\nDatastoreId -> (string)\n\nThe datastore id used when the Import job was created.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that was supplied when the Import job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nJobOutputDataConfig -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.\n\nMessage -> (string)\n\nAn explanation of any errors that may have occurred during the FHIR import job.\n\nNextToken -> (string)\n\nA pagination token used to identify the next page of results to return for a ListFHIRImportJobs query.",
      "command_examples": "Examples\n\nTo list all FHIR import jobs\n\nThe following list-fhir-import-jobs example shows how to use the command to view a list of all import jobs associated with an account.\n\naws healthlake list-fhir-import-jobs \\\n    --datastore-id (Datastore ID) \\\n    --submitted-before (DATE like 2024-10-13T19:00:00Z) \\\n    --submitted-after (DATE like 2020-10-13T19:00:00Z ) \\\n    --job-name \"FHIR-IMPORT\" \\\n    --job-status SUBMITTED  \\\n    -max-results (Integer between 1 and 500)\n\n\nOutput:\n\n{\n    \"ImportJobProperties\": {\n        \"OutputDataConfig\": {\n            \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/\",\n                \"S3Configuration\": {\n                    \"S3Uri\": \"s3://(Bucket Name)/(Prefix Name)/\",\n                    \"KmsKeyId\" : \"(KmsKey Id)\"\n    },\n    },\n        \"DataAccessRoleArn\": \"arn:aws:iam::(AWS Account ID):role/(Role Name)\",\n        \"JobStatus\": \"COMPLETED\",\n        \"JobId\": \"c145fbb27b192af392f8ce6e7838e34f\",\n        \"JobName\" \"FHIR-IMPORT\",\n        \"SubmitTime\": 1606272542.161,\n        \"EndTime\": 1606272609.497,\n        \"DatastoreId\": \"(Datastore ID)\"\n    }\n}\n\"NextToken\": String\n\n\nFor more information, see Importing files to FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns a list of all existing tags associated with a Data Store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name(ARN) of the Data Store for which tags are being added.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nReturns a list of tags associated with a Data Store.\n\n(structure)\n\nA tag is a label consisting of a user-defined key and value. The form for tags is {“Key”, “Value”}\n\nKey -> (string)\n\nThe key portion of a tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value portion of tag. Tag values are case sensitive.",
      "command_examples": "Examples\n\nTo list tags for a Data Store\n\nThe following list-tags-for-resource example lists the tags associated with the specified Data Store.:\n\naws healthlake list-tags-for-resource \\\n    --resource-arn \"arn:aws:healthlake:us-east-1:674914422125:datastore/fhir/0725c83f4307f263e16fd56b6d8ebdbe\" \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"key\": \"value\",\n        \"key1\": \"value1\"\n    }\n}\n\n\nFor more information, see Tagging resources in Amazon HealthLake in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "start-fhir-export-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/start-fhir-export-job.html",
      "command_description": "Description\n\nBegins a FHIR export job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-fhir-export-job\n[--job-name <value>]\n--output-data-config <value>\n--datastore-id <value>\n--data-access-role-arn <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--job-name <value>]",
        "--output-data-config <value>",
        "--datastore-id <value>",
        "--data-access-role-arn <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe user generated name for an export job.\n\n--output-data-config (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nShorthand Syntax:\n\nS3Configuration={S3Uri=string,KmsKeyId=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Configuration\": {\n    \"S3Uri\": \"string\",\n    \"KmsKeyId\": \"string\"\n  }\n}\n\n\n--datastore-id (string)\n\nThe AWS generated ID for the Data Store from which files are being exported for an export job.\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name used during the initiation of the job.\n\n--client-token (string)\n\nAn optional user provided token used for ensuring idempotency.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe AWS generated ID for an export job.\n\nJobStatus -> (string)\n\nThe status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.\n\nDatastoreId -> (string)\n\nThe AWS generated ID for the Data Store from which files are being exported for an export job.",
      "command_examples": "Examples\n\nTo start a FHIR export job\n\nThe following start-fhir-export-job example shows how to start a FHIR export job using Amazon HealthLake.\n\naws healthlake start-fhir-export-job \\\n    --output-data-config S3Uri=\"s3://(Bucket Name)/(Prefix Name)/\" \\\n    --datastore-id (Datastore ID) \\\n    --data-access-role-arn arn:aws:iam::(AWS Account ID):role/(Role Name)\n\n\nOutput:\n\n{\n    \"DatastoreId\": \"(Datastore ID)\",\n    \"JobStatus\": \"SUBMITTED\",\n    \"JobId\": \"9b9a51943afaedd0a8c0c26c49135a31\"\n}\n\n\nFor more information, see Exporting files from a FHIR Data Store in the Amazon HealthLake Developer Guide."
    },
    {
      "command_name": "start-fhir-import-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/start-fhir-import-job.html",
      "command_description": "Description\n\nBegins a FHIR Import job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-fhir-import-job\n[--job-name <value>]\n--input-data-config <value>\n--job-output-data-config <value>\n--datastore-id <value>\n--data-access-role-arn <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--job-name <value>]",
        "--input-data-config <value>",
        "--job-output-data-config <value>",
        "--datastore-id <value>",
        "--data-access-role-arn <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe name of the FHIR Import job in the StartFHIRImport job request.\n\n--input-data-config (structure)\n\nThe input properties of the FHIR Import job in the StartFHIRImport job request.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nShorthand Syntax:\n\nS3Uri=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\"\n}\n\n\n--job-output-data-config (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Configuration -> (structure)\n\nThe output data configuration that was supplied when the export job was created.\n\nS3Uri -> (string)\n\nThe S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake.\n\nKmsKeyId -> (string)\n\nThe KMS key ID used to access the S3 bucket.\n\nShorthand Syntax:\n\nS3Configuration={S3Uri=string,KmsKeyId=string}\n\n\nJSON Syntax:\n\n{\n  \"S3Configuration\": {\n    \"S3Uri\": \"string\",\n    \"KmsKeyId\": \"string\"\n  }\n}\n\n\n--datastore-id (string)\n\nThe AWS-generated Data Store ID.\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.\n\n--client-token (string)\n\nOptional user provided token used for ensuring idempotency.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe AWS-generated job ID.\n\nJobStatus -> (string)\n\nThe status of an import job.\n\nDatastoreId -> (string)\n\nThe AWS-generated Data Store ID.",
      "command_examples": "Examples\n\nTo start a FHIR import job\n\nThe following start-fhir-import-job example shows how to start a FHIR import job using Amazon HealthLake.\n\naws healthlake start-fhir-import-job \\\n    --input-data-config S3Uri=\"s3://(Bucket Name)/(Prefix Name)/\" \\\n    --datastore-id (Datastore ID) \\\n    --data-access-role-arn \"arn:aws:iam::(AWS Account ID):role/(Role Name)\" \\\n    --region us-east-1\n\n\nOutput:\n\n{\n    \"DatastoreId\": \"(Datastore ID)\",\n    \"JobStatus\": \"SUBMITTED\",\n    \"JobId\": \"c145fbb27b192af392f8ce6e7838e34f\"\n}\n\n\nFor more information, see `Importing files to a FHIR Data Store 'https://docs.aws.amazon.com/healthlake/latest/devguide/import-datastore.html`__ in the Amazon HeatlhLake Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/tag-resource.html",
      "command_description": "Description\n\nAdds a user specifed key and value tag to a Data Store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name(ARN)that gives Amazon HealthLake access to the Data Store which tags are being added to.\n\n--tags (list)\n\nThe user specified key and value pair tags being added to a Data Store.\n\n(structure)\n\nA tag is a label consisting of a user-defined key and value. The form for tags is {“Key”, “Value”}\n\nKey -> (string)\n\nThe key portion of a tag. Tag keys are case sensitive.\n\nValue -> (string)\n\nThe value portion of tag. Tag values are case sensitive.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add a tag to Data Store\n\nThe following tag-resource example shows how to add a tag to a Data Store.\n\naws healthlake tag-resource \\\n    --resource-arn \"arn:aws:healthlake:us-east-1:691207106566:datastore/fhir/0725c83f4307f263e16fd56b6d8ebdbe\" \\\n    --tags '[{\"Key\": \"key1\", \"Value\": \"value1\"}]' \\\n    --region us-east-1\n\n\nThis command produces no output.\n\nFor more information, see ‘Adding a tag to a Data Store <https://docs.aws.amazon.com/healthlake/latest/devguide/add-a-tag.html>’__ in the Amazon HealthLake Developer Guide.."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/healthlake/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a Data Store.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\n“The Amazon Resource Name(ARN) of the Data Store for which tags are being removed\n\n--tag-keys (list)\n\nThe keys for the tags to be removed from the Healthlake Data Store.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a Data Store.\n\nThe following untag-resource example shows how to remove tags from a Data Store.\n\naws healthlake untag-resource \\\n    --resource-arn \"arn:aws:healthlake:us-east-1:674914422125:datastore/fhir/b91723d65c6fdeb1d26543a49d2ed1fa\" \\\n    --tag-keys '[\"key1\"]' \\\n    --region us-east-1\n\n\nThis command produces no output.\n\nFor more information, see Removing tags from a Data Store in the Amazon HealthLake Developer Guide."
    }
  ],
  "service_description": "Description\n\nAmazon HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud."
}