{
  "service_name": "efs",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/index.html",
  "service_commands": [
    {
      "command_name": "create-access-point",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/create-access-point.html",
      "command_description": "Description\n\nCreates an EFS access point. An access point is an application-specific view into an EFS file system that applies an operating system user and group, and a file system path, to any file system request made through the access point. The operating system user and group override any identity information provided by the NFS client. The file system path is exposed as the access point’s root directory. Applications using the access point can only access data in its own directory and below. To learn more, see Mounting a file system using EFS access points .\n\nThis operation requires permissions for the elasticfilesystem:CreateAccessPoint action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-access-point\n[--client-token <value>]\n[--tags <value>]\n--file-system-id <value>\n[--posix-user <value>]\n[--root-directory <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-token <value>]",
        "[--tags <value>]",
        "--file-system-id <value>",
        "[--posix-user <value>]",
        "[--root-directory <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-token (string)\n\nA string of up to 64 ASCII characters that Amazon EFS uses to ensure idempotent creation.\n\n--tags (list)\n\nCreates tags associated with the access point. Each tag is a key-value pair, each key must be unique. For more information, see Tagging Amazon Web Services resources in the Amazon Web Services General Reference Guide .\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--file-system-id (string)\n\nThe ID of the EFS file system that the access point provides access to.\n\n--posix-user (structure)\n\nThe operating system user and group applied to all file system requests made using the access point.\n\nUid -> (long)\n\nThe POSIX user ID used for all file system operations using this access point.\n\nGid -> (long)\n\nThe POSIX group ID used for all file system operations using this access point.\n\nSecondaryGids -> (list)\n\nSecondary POSIX group IDs used for all file system operations using this access point.\n\n(long)\n\nShorthand Syntax:\n\nUid=long,Gid=long,SecondaryGids=long,long\n\n\nJSON Syntax:\n\n{\n  \"Uid\": long,\n  \"Gid\": long,\n  \"SecondaryGids\": [long, ...]\n}\n\n\n--root-directory (structure)\n\nSpecifies the directory on the Amazon EFS file system that the access point exposes as the root directory of your file system to NFS clients using the access point. The clients using the access point can only access the root directory and below. If the RootDirectory > Path specified does not exist, EFS creates it and applies the CreationInfo settings when a client connects to an access point. When specifying a RootDirectory , you need to provide the Path , and the CreationInfo .\n\nAmazon EFS creates a root directory only if you have provided the CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do not provide this information, Amazon EFS does not create the root directory. If the root directory does not exist, attempts to mount using the access point will fail.\n\nPath -> (string)\n\nSpecifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo .\n\nCreationInfo -> (structure)\n\n(Optional) Specifies the POSIX IDs and permissions to apply to the access point’s RootDirectory . If the RootDirectory > Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo , you must provide values for all properties.\n\nWarning\n\nIf you do not provide CreationInfo and the specified RootDirectory > Path does not exist, attempts to mount the file system using the access point will fail.\n\nOwnerUid -> (long)\n\nSpecifies the POSIX user ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nOwnerGid -> (long)\n\nSpecifies the POSIX group ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nPermissions -> (string)\n\nSpecifies the POSIX permissions to apply to the RootDirectory , in the format of an octal number representing the file’s mode bits.\n\nShorthand Syntax:\n\nPath=string,CreationInfo={OwnerUid=long,OwnerGid=long,Permissions=string}\n\n\nJSON Syntax:\n\n{\n  \"Path\": \"string\",\n  \"CreationInfo\": {\n    \"OwnerUid\": long,\n    \"OwnerGid\": long,\n    \"Permissions\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClientToken -> (string)\n\nThe opaque string specified in the request to ensure idempotent creation.\n\nName -> (string)\n\nThe name of the access point. This is the value of the Name tag.\n\nTags -> (list)\n\nThe tags associated with the access point, presented as an array of Tag objects.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nAccessPointId -> (string)\n\nThe ID of the access point, assigned by Amazon EFS.\n\nAccessPointArn -> (string)\n\nThe unique Amazon Resource Name (ARN) associated with the access point.\n\nFileSystemId -> (string)\n\nThe ID of the EFS file system that the access point applies to.\n\nPosixUser -> (structure)\n\nThe full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for all file operations by NFS clients using the access point.\n\nUid -> (long)\n\nThe POSIX user ID used for all file system operations using this access point.\n\nGid -> (long)\n\nThe POSIX group ID used for all file system operations using this access point.\n\nSecondaryGids -> (list)\n\nSecondary POSIX group IDs used for all file system operations using this access point.\n\n(long)\n\nRootDirectory -> (structure)\n\nThe directory on the Amazon EFS file system that the access point exposes as the root directory to NFS clients using the access point.\n\nPath -> (string)\n\nSpecifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo .\n\nCreationInfo -> (structure)\n\n(Optional) Specifies the POSIX IDs and permissions to apply to the access point’s RootDirectory . If the RootDirectory > Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo , you must provide values for all properties.\n\nWarning\n\nIf you do not provide CreationInfo and the specified RootDirectory > Path does not exist, attempts to mount the file system using the access point will fail.\n\nOwnerUid -> (long)\n\nSpecifies the POSIX user ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nOwnerGid -> (long)\n\nSpecifies the POSIX group ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nPermissions -> (string)\n\nSpecifies the POSIX permissions to apply to the RootDirectory , in the format of an octal number representing the file’s mode bits.\n\nOwnerId -> (string)\n\nIdentified the Amazon Web Services account that owns the access point resource.\n\nLifeCycleState -> (string)\n\nIdentifies the lifecycle phase of the access point."
    },
    {
      "command_name": "create-file-system",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/create-file-system.html",
      "command_description": "Description\n\nCreates a new, empty file system. The operation requires a creation token in the request that Amazon EFS uses to ensure idempotent creation (calling the operation with same creation token has no effect). If a file system does not currently exist that is owned by the caller’s Amazon Web Services account with the specified creation token, this operation does the following:\n\nCreates a new, empty file system. The file system will have an Amazon EFS assigned ID, and an initial lifecycle state creating .\n\nReturns with the description of the created file system.\n\nOtherwise, this operation returns a FileSystemAlreadyExists error with the ID of the existing file system.\n\nNote\n\nFor basic use cases, you can use a randomly generated UUID for the creation token.\n\nThe idempotent operation allows you to retry a CreateFileSystem call without risk of creating an extra file system. This can happen when an initial call fails in a way that leaves it uncertain whether or not a file system was actually created. An example might be that a transport level timeout occurred or your connection was reset. As long as you use the same creation token, if the initial call had succeeded in creating a file system, the client can learn of its existence from the FileSystemAlreadyExists error.\n\nFor more information, see Creating a file system in the Amazon EFS User Guide .\n\nNote\n\nThe CreateFileSystem call returns while the file system’s lifecycle state is still creating . You can check the file system creation status by calling the DescribeFileSystems operation, which among other things returns the file system state.\n\nThis operation accepts an optional PerformanceMode parameter that you choose for your file system. We recommend generalPurpose performance mode for most file systems. File systems using the maxIO performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can’t be changed after the file system has been created. For more information, see Amazon EFS performance modes .\n\nYou can set the throughput mode for the file system using the ThroughputMode parameter.\n\nAfter the file system is fully created, Amazon EFS sets its lifecycle state to available , at which point you can create one or more mount targets for the file system in your VPC. For more information, see CreateMountTarget . You mount your Amazon EFS file system on an EC2 instances in your VPC by using the mount target. For more information, see Amazon EFS: How it Works .\n\nThis operation requires permissions for the elasticfilesystem:CreateFileSystem action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-file-system\n[--creation-token <value>]\n[--performance-mode <value>]\n[--encrypted | --no-encrypted]\n[--kms-key-id <value>]\n[--throughput-mode <value>]\n[--provisioned-throughput-in-mibps <value>]\n[--availability-zone-name <value>]\n[--backup | --no-backup]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--creation-token <value>]",
        "[--performance-mode <value>]",
        "[--encrypted | --no-encrypted]",
        "[--kms-key-id <value>]",
        "[--throughput-mode <value>]",
        "[--provisioned-throughput-in-mibps <value>]",
        "[--availability-zone-name <value>]",
        "[--backup | --no-backup]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--creation-token (string)\n\nA string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.\n\n--performance-mode (string)\n\nThe performance mode of the file system. We recommend generalPurpose performance mode for most file systems. File systems using the maxIO performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can’t be changed after the file system has been created.\n\nNote\n\nThe maxIO mode is not supported on file systems using One Zone storage classes.\n\nPossible values:\n\ngeneralPurpose\n\nmaxIO\n\n--encrypted | --no-encrypted (boolean)\n\nA Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying CreateFileSystemRequest$KmsKeyId for an existing Key Management Service (KMS customer master key (CMK). If you don’t specify a CMK, then the default CMK for Amazon EFS, /aws/elasticfilesystem , is used to protect the encrypted file system.\n\n--kms-key-id (string)\n\nThe ID of the KMS CMK that you want to use to protect the encrypted file system. This parameter is only required if you want to use a non-default KMS key. If this parameter is not specified, the default CMK for Amazon EFS is used. This ID can be in one of the following formats:\n\nKey ID - A unique identifier of the key, for example 1234abcd-12ab-34cd-56ef-1234567890ab .\n\nARN - An Amazon Resource Name (ARN) for the key, for example arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab .\n\nKey alias - A previously created display name for a key, for example alias/projectKey1 .\n\nKey alias ARN - An ARN for a key alias, for example arn:aws:kms:us-west-2:444455556666:alias/projectKey1 .\n\nIf KmsKeyId is specified, the CreateFileSystemRequest$Encrypted parameter must be set to true.\n\nWarning\n\nEFS accepts only symmetric KMS keys. You cannot use asymmetric KMS keys with EFS file systems.\n\n--throughput-mode (string)\n\nSpecifies the throughput mode for the file system, either bursting or provisioned . If you set ThroughputMode to provisioned , you must also set a value for ProvisionedThroughputInMibps . After you create the file system, you can decrease your file system’s throughput in Provisioned Throughput mode or change between the throughput modes, as long as it’s been more than 24 hours since the last decrease or throughput mode change. For more information, see Specifying throughput with provisioned mode in the Amazon EFS User Guide .\n\nDefault is bursting .\n\nPossible values:\n\nbursting\n\nprovisioned\n\n--provisioned-throughput-in-mibps (double)\n\nThe throughput, measured in MiB/s, that you want to provision for a file system that you’re creating. Valid values are 1-1024. Required if ThroughputMode is set to provisioned . The upper limit for throughput is 1024 MiB/s. To increase this limit, contact Amazon Web Services Support. For more information, see Amazon EFS quotas that you can increase in the Amazon EFS User Guide .\n\n--availability-zone-name (string)\n\nUsed to create a file system that uses One Zone storage classes. It specifies the Amazon Web Services Availability Zone in which to create the file system. Use the format us-east-1a to specify the Availability Zone. For more information about One Zone storage classes, see Using EFS storage classes in the Amazon EFS User Guide .\n\nNote\n\nOne Zone storage classes are not available in all Availability Zones in Amazon Web Services Regions where Amazon EFS is available.\n\n--backup | --no-backup (boolean)\n\nSpecifies whether automatic backups are enabled on the file system that you are creating. Set the value to true to enable automatic backups. If you are creating a file system that uses One Zone storage classes, automatic backups are enabled by default. For more information, see Automatic backups in the Amazon EFS User Guide .\n\nDefault is false . However, if you specify an AvailabilityZoneName , the default is true .\n\nNote\n\nBackup is not available in all Amazon Web Services Regionswhere Amazon EFS is available.\n\n--tags (list)\n\nUse to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a \"Key\":\"Name\",\"Value\":\"{value}\" key-value pair. Each key must be unique. For more information, see Tagging Amazon Web Services resources in the Amazon Web Services General Reference Guide .\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOwnerId -> (string)\n\nThe Amazon Web Services account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.\n\nCreationToken -> (string)\n\nThe opaque string specified in the request.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nFileSystemArn -> (string)\n\nThe Amazon Resource Name (ARN) for the EFS file system, in the format arn:aws:elasticfilesystem:*region* :*account-id* :file-system/*file-system-id* `` . Example with sample data: ``arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567\n\nCreationTime -> (timestamp)\n\nThe time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).\n\nLifeCycleState -> (string)\n\nThe lifecycle phase of the file system.\n\nName -> (string)\n\nYou can add tags to a file system, including a Name tag. For more information, see CreateFileSystem . If the file system has a Name tag, Amazon EFS returns the value in this field.\n\nNumberOfMountTargets -> (integer)\n\nThe current number of mount targets that the file system has. For more information, see CreateMountTarget .\n\nSizeInBytes -> (structure)\n\nThe latest known metered size (in bytes) of data stored in the file system, in its Value field, and the time at which that size was determined in its Timestamp field. The Timestamp value is the integer number of seconds since 1970-01-01T00:00:00Z. The SizeInBytes value doesn’t represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, SizeInBytes represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time.\n\nValue -> (long)\n\nThe latest known metered size (in bytes) of data stored in the file system.\n\nTimestamp -> (timestamp)\n\nThe time at which the size of data, returned in the Value field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.\n\nValueInIA -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Infrequent Access storage class.\n\nValueInStandard -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Standard storage class.\n\nPerformanceMode -> (string)\n\nThe performance mode of the file system.\n\nEncrypted -> (boolean)\n\nA Boolean value that, if true, indicates that the file system is encrypted.\n\nKmsKeyId -> (string)\n\nThe ID of an Key Management Service customer master key (CMK) that was used to protect the encrypted file system.\n\nThroughputMode -> (string)\n\nDisplays the file system’s throughput mode. For more information, see Throughput modes in the Amazon EFS User Guide .\n\nProvisionedThroughputInMibps -> (double)\n\nThe amount of provisioned throughput, measured in MiB/s, for the file system. Valid for file systems using ThroughputMode set to provisioned .\n\nAvailabilityZoneName -> (string)\n\nDescribes the Amazon Web Services Availability Zone in which the file system is located, and is valid only for file systems using One Zone storage classes. For more information, see Using EFS storage classes in the Amazon EFS User Guide .\n\nAvailabilityZoneId -> (string)\n\nThe unique and consistent identifier of the Availability Zone in which the file system’s One Zone storage classes exist. For example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web Services Region, and it has the same location in every Amazon Web Services account.\n\nTags -> (list)\n\nThe tags associated with the file system, presented as an array of Tag objects.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.",
      "command_examples": "Examples\n\nTo create an encrypted file system\n\nThe following create-file-system example creates an encrypted file system using the default CMK. It also adds the tag Name=my-file-system.\n\naws efs create-file-system \\\n    --performance-mode generalPurpose \\\n    --throughput-mode bursting \\\n    --encrypted \\\n    --tags Key=Name,Value=my-file-system\n\n\nOutput:\n\n{\n    \"OwnerId\": \"123456789012\",\n    \"CreationToken\": \"console-d7f56c5f-e433-41ca-8307-9d9c0example\",\n    \"FileSystemId\": \"fs-c7a0456e\",\n    \"FileSystemArn\": \"arn:aws:elasticfilesystem:us-west-2:123456789012:file-system/fs-48499b4d\",\n    \"CreationTime\": 1595286880.0,\n    \"LifeCycleState\": \"creating\",\n    \"Name\": \"my-file-system\",\n    \"NumberOfMountTargets\": 0,\n    \"SizeInBytes\": {\n        \"Value\": 0,\n        \"ValueInIA\": 0,\n        \"ValueInStandard\": 0\n    },\n    \"PerformanceMode\": \"generalPurpose\",\n    \"Encrypted\": true,\n    \"KmsKeyId\": \"arn:aws:kms:us-west-2:123456789012:key/a59b3472-e62c-42e4-adcf-30d92example\",\n    \"ThroughputMode\": \"bursting\",\n    \"Tags\": [\n        {\n            \"Key\": \"Name\",\n            \"Value\": \"my-file-system\"\n        }\n    ]\n}\n\n\nFor more information, see Creating Amazon EFS file systems in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "create-mount-target",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/create-mount-target.html",
      "command_description": "Description\n\nCreates a mount target for a file system. You can then mount the file system on EC2 instances by using the mount target.\n\nYou can create one mount target in each Availability Zone in your VPC. All EC2 instances in a VPC within a given Availability Zone share a single mount target for a given file system. If you have multiple subnets in an Availability Zone, you create a mount target in one of the subnets. EC2 instances do not need to be in the same subnet as the mount target in order to access their file system.\n\nYou can create only one mount target for an EFS file system using One Zone storage classes. You must create that mount target in the same Availability Zone in which the file system is located. Use the AvailabilityZoneName and AvailabiltyZoneId properties in the DescribeFileSystems response object to get this information. Use the subnetId associated with the file system’s Availability Zone when creating the mount target.\n\nFor more information, see Amazon EFS: How it Works .\n\nTo create a mount target for a file system, the file system’s lifecycle state must be available . For more information, see DescribeFileSystems .\n\nIn the request, provide the following:\n\nThe file system ID for which you are creating the mount target.\n\nA subnet ID, which determines the following:\n\nThe VPC in which Amazon EFS creates the mount target\n\nThe Availability Zone in which Amazon EFS creates the mount target\n\nThe IP address range from which Amazon EFS selects the IP address of the mount target (if you don’t specify an IP address in the request)\n\nAfter creating the mount target, Amazon EFS returns a response that includes, a MountTargetId and an IpAddress . You use this IP address when mounting the file system in an EC2 instance. You can also use the mount target’s DNS name when mounting the file system. The EC2 instance on which you mount the file system by using the mount target can resolve the mount target’s DNS name to its IP address. For more information, see How it Works: Implementation Overview .\n\nNote that you can create mount targets for a file system in only one VPC, and there can be only one mount target per Availability Zone. That is, if the file system already has one or more mount targets created for it, the subnet specified in the request to add another mount target must meet the following requirements:\n\nMust belong to the same VPC as the subnets of the existing mount targets\n\nMust not be in the same Availability Zone as any of the subnets of the existing mount targets\n\nIf the request satisfies the requirements, Amazon EFS does the following:\n\nCreates a new mount target in the specified subnet.\n\nAlso creates a new network interface in the subnet as follows:\n\nIf the request provides an IpAddress , Amazon EFS assigns that IP address to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the Amazon EC2 CreateNetworkInterface call does when a request does not specify a primary private IP address).\n\nIf the request provides SecurityGroups , this network interface is associated with those security groups. Otherwise, it belongs to the default security group for the subnet’s VPC.\n\nAssigns the description Mount target *fsmt-id* for file system *fs-id* `` where `` *fsmt-id* `` is the mount target ID, and `` *fs-id* `` is the ``FileSystemId .\n\nSets the requesterManaged property of the network interface to true , and the requesterId value to EFS .\n\nEach Amazon EFS mount target has one corresponding requester-managed EC2 network interface. After the network interface is created, Amazon EFS sets the NetworkInterfaceId field in the mount target’s description to the network interface ID, and the IpAddress field to its address. If network interface creation fails, the entire CreateMountTarget operation fails.\n\nNote\n\nThe CreateMountTarget call returns only after creating the network interface, but while the mount target state is still creating , you can check the mount target creation status by calling the DescribeMountTargets operation, which among other things returns the mount target state.\n\nWe recommend that you create a mount target in each of the Availability Zones. There are cost considerations for using a file system in an Availability Zone through a mount target created in another Availability Zone. For more information, see Amazon EFS . In addition, by always using a mount target local to the instance’s Availability Zone, you eliminate a partial failure scenario. If the Availability Zone in which your mount target is created goes down, then you can’t access your file system through that mount target.\n\nThis operation requires permissions for the following action on the file system:\n\nelasticfilesystem:CreateMountTarget\n\nThis operation also requires permissions for the following Amazon EC2 actions:\n\nec2:DescribeSubnets\n\nec2:DescribeNetworkInterfaces\n\nec2:CreateNetworkInterface\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-mount-target\n--file-system-id <value>\n--subnet-id <value>\n[--ip-address <value>]\n[--security-groups <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "--subnet-id <value>",
        "[--ip-address <value>]",
        "[--security-groups <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the file system for which to create the mount target.\n\n--subnet-id (string)\n\nThe ID of the subnet to add the mount target in. For file systems that use One Zone storage classes, use the subnet that is associated with the file system’s Availability Zone.\n\n--ip-address (string)\n\nValid IPv4 address within the address range of the specified subnet.\n\n--security-groups (list)\n\nUp to five VPC security group IDs, of the form sg-xxxxxxxx . These must be for the same VPC as subnet specified.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOwnerId -> (string)\n\nAmazon Web Services account ID that owns the resource.\n\nMountTargetId -> (string)\n\nSystem-assigned mount target ID.\n\nFileSystemId -> (string)\n\nThe ID of the file system for which the mount target is intended.\n\nSubnetId -> (string)\n\nThe ID of the mount target’s subnet.\n\nLifeCycleState -> (string)\n\nLifecycle state of the mount target.\n\nIpAddress -> (string)\n\nAddress at which the file system can be mounted by using the mount target.\n\nNetworkInterfaceId -> (string)\n\nThe ID of the network interface that Amazon EFS created when it created the mount target.\n\nAvailabilityZoneId -> (string)\n\nThe unique and consistent identifier of the Availability Zone that the mount target resides in. For example, use1-az1 is an AZ ID for the us-east-1 Region and it has the same location in every Amazon Web Services account.\n\nAvailabilityZoneName -> (string)\n\nThe name of the Availability Zone in which the mount target is located. Availability Zones are independently mapped to names for each Amazon Web Services account. For example, the Availability Zone us-east-1a for your Amazon Web Services account might not be the same location as us-east-1a for another Amazon Web Services account.\n\nVpcId -> (string)\n\nThe virtual private cloud (VPC) ID that the mount target is configured in.",
      "command_examples": "Examples\n\nTo create a mount target\n\nThe following create-mount-target example creates a mount target for the specified file system.\n\naws efs create-mount-target \\\n    --file-system-id fs-c7a0456e \\\n    --subnet-id subnet-02bf4c428bexample \\\n    --security-groups sg-068f739363example\n\n\nOutput:\n\n{\n    \"OwnerId\": \"123456789012\",\n    \"MountTargetId\": \"fsmt-f9a14450\",\n    \"FileSystemId\": \"fs-c7a0456e\",\n    \"SubnetId\": \"subnet-02bf4c428bexample\",\n    \"LifeCycleState\": \"creating\",\n    \"IpAddress\": \"10.0.1.24\",\n    \"NetworkInterfaceId\": \"eni-02d542216aexample\",\n    \"AvailabilityZoneId\": \"use2-az2\",\n    \"AvailabilityZoneName\": \"us-east-2b\",\n    \"VpcId\": \"vpc-0123456789abcdef0\"\n}\n\n\nFor more information, see Creating mount targets in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "delete-access-point",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/delete-access-point.html",
      "command_description": "Description\n\nDeletes the specified access point. After deletion is complete, new clients can no longer connect to the access points. Clients connected to the access point at the time of deletion will continue to function until they terminate their connection.\n\nThis operation requires permissions for the elasticfilesystem:DeleteAccessPoint action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-access-point\n--access-point-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--access-point-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--access-point-id (string)\n\nThe ID of the access point that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-file-system",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/delete-file-system.html",
      "command_description": "Description\n\nDeletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you can’t access any contents of the deleted file system.\n\nYou can’t delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see DescribeMountTargets and DeleteMountTarget .\n\nNote\n\nThe DeleteFileSystem call returns while the file system state is still deleting . You can check the file system deletion status by calling the DescribeFileSystems operation, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the DescribeFileSystems returns a 404 FileSystemNotFound error.\n\nThis operation requires permissions for the elasticfilesystem:DeleteFileSystem action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-file-system\n--file-system-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the file system you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a file system\n\nThe following delete-file-system example deletes the specified file system.\n\naws efs delete-file-system \\\n    --file-system-id fs-c7a0456e\n\n\nThis command produces no output.\n\nFor more information, see Deleting an Amazon EFS file system in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "delete-file-system-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/delete-file-system-policy.html",
      "command_description": "Description\n\nDeletes the FileSystemPolicy for the specified file system. The default FileSystemPolicy goes into effect once the existing policy is deleted. For more information about the default file system policy, see Using Resource-based Policies with EFS .\n\nThis operation requires permissions for the elasticfilesystem:DeleteFileSystemPolicy action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-file-system-policy\n--file-system-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nSpecifies the EFS file system for which to delete the FileSystemPolicy .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-mount-target",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/delete-mount-target.html",
      "command_description": "Description\n\nDeletes the specified mount target.\n\nThis operation forcibly breaks any mounts of the file system by using the mount target that is being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes might be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC by using another mount target.\n\nThis operation requires permissions for the following action on the file system:\n\nelasticfilesystem:DeleteMountTarget\n\nNote\n\nThe DeleteMountTarget call returns while the mount target state is still deleting . You can check the mount target deletion by calling the DescribeMountTargets operation, which returns a list of mount target descriptions for the given file system.\n\nThe operation also requires permissions for the following Amazon EC2 action on the mount target’s network interface:\n\nec2:DeleteNetworkInterface\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-mount-target\n--mount-target-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mount-target-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mount-target-id (string)\n\nThe ID of the mount target to delete (String).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a mount target\n\nThe following delete-mount-target example deletes the specified mount target.\n\naws efs delete-mount-target \\\n    --mount-target-id fsmt-f9a14450\n\n\nThis command produces no output.\n\nFor more information, see Creating mount targets in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "describe-access-points",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-access-points.html",
      "command_description": "Description\n\nReturns the description of a specific Amazon EFS access point if the AccessPointId is provided. If you provide an EFS FileSystemId , it returns descriptions of all access points for that file system. You can provide either an AccessPointId or a FileSystemId in the request, but not both.\n\nThis operation requires permissions for the elasticfilesystem:DescribeAccessPoints action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-access-points\n[--max-results <value>]\n[--next-token <value>]\n[--access-point-id <value>]\n[--file-system-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--access-point-id <value>]",
        "[--file-system-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\n(Optional) When retrieving all access points for a file system, you can optionally specify the MaxItems parameter to limit the number of objects returned in a response. The default value is 100.\n\n--next-token (string)\n\nNextToken is present if the response is paginated. You can use NextMarker in the subsequent request to fetch the next page of access point descriptions.\n\n--access-point-id (string)\n\n(Optional) Specifies an EFS access point to describe in the response; mutually exclusive with FileSystemId .\n\n--file-system-id (string)\n\n(Optional) If you provide a FileSystemId , EFS returns all access points for that file system; mutually exclusive with AccessPointId .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAccessPoints -> (list)\n\nAn array of access point descriptions.\n\n(structure)\n\nProvides a description of an EFS file system access point.\n\nClientToken -> (string)\n\nThe opaque string specified in the request to ensure idempotent creation.\n\nName -> (string)\n\nThe name of the access point. This is the value of the Name tag.\n\nTags -> (list)\n\nThe tags associated with the access point, presented as an array of Tag objects.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nAccessPointId -> (string)\n\nThe ID of the access point, assigned by Amazon EFS.\n\nAccessPointArn -> (string)\n\nThe unique Amazon Resource Name (ARN) associated with the access point.\n\nFileSystemId -> (string)\n\nThe ID of the EFS file system that the access point applies to.\n\nPosixUser -> (structure)\n\nThe full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point that is used for all file operations by NFS clients using the access point.\n\nUid -> (long)\n\nThe POSIX user ID used for all file system operations using this access point.\n\nGid -> (long)\n\nThe POSIX group ID used for all file system operations using this access point.\n\nSecondaryGids -> (list)\n\nSecondary POSIX group IDs used for all file system operations using this access point.\n\n(long)\n\nRootDirectory -> (structure)\n\nThe directory on the Amazon EFS file system that the access point exposes as the root directory to NFS clients using the access point.\n\nPath -> (string)\n\nSpecifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide the CreationInfo .\n\nCreationInfo -> (structure)\n\n(Optional) Specifies the POSIX IDs and permissions to apply to the access point’s RootDirectory . If the RootDirectory > Path specified does not exist, EFS creates the root directory using the CreationInfo settings when a client connects to an access point. When specifying the CreationInfo , you must provide values for all properties.\n\nWarning\n\nIf you do not provide CreationInfo and the specified RootDirectory > Path does not exist, attempts to mount the file system using the access point will fail.\n\nOwnerUid -> (long)\n\nSpecifies the POSIX user ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nOwnerGid -> (long)\n\nSpecifies the POSIX group ID to apply to the RootDirectory . Accepts values from 0 to 2^32 (4294967295).\n\nPermissions -> (string)\n\nSpecifies the POSIX permissions to apply to the RootDirectory , in the format of an octal number representing the file’s mode bits.\n\nOwnerId -> (string)\n\nIdentified the Amazon Web Services account that owns the access point resource.\n\nLifeCycleState -> (string)\n\nIdentifies the lifecycle phase of the access point.\n\nNextToken -> (string)\n\nPresent if there are more access points than returned in the response. You can use the NextMarker in the subsequent request to fetch the additional descriptions."
    },
    {
      "command_name": "describe-account-preferences",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-account-preferences.html",
      "command_description": "Description\n\nReturns the account preferences settings for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region. For more information, see Managing Amazon EFS resource IDs .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-account-preferences\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\n(Optional) You can use NextToken in a subsequent request to fetch the next page of Amazon Web Services account preferences if the response payload was paginated.\n\n--max-results (integer)\n\n(Optional) When retrieving account preferences, you can optionally specify the MaxItems parameter to limit the number of objects returned in a response. The default value is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceIdPreference -> (structure)\n\nDescribes the resource ID preference setting for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.\n\nResourceIdType -> (string)\n\nIdentifies the EFS resource ID preference, either LONG_ID (17 characters) or SHORT_ID (8 characters).\n\nResources -> (list)\n\nIdentifies the Amazon EFS resources to which the ID preference setting applies, FILE_SYSTEM and MOUNT_TARGET .\n\n(string)\n\nAn EFS resource, for example a file system or a mount target.\n\nNextToken -> (string)\n\nPresent if there are more records than returned in the response. You can use the NextToken in the subsequent request to fetch the additional descriptions."
    },
    {
      "command_name": "describe-backup-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-backup-policy.html",
      "command_description": "Description\n\nReturns the backup policy for the specified EFS file system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-backup-policy\n--file-system-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nSpecifies which EFS file system to retrieve the BackupPolicy for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBackupPolicy -> (structure)\n\nDescribes the file system’s backup policy, indicating whether automatic backups are turned on or off..\n\nStatus -> (string)\n\nDescribes the status of the file system’s backup policy.\n\n**ENABLED ** - EFS is automatically backing up the file system.\n\n**ENABLING ** - EFS is turning on automatic backups for the file system.\n\n**DISABLED ** - automatic back ups are turned off for the file system.\n\n**DISABLING ** - EFS is turning off automatic backups for the file system."
    },
    {
      "command_name": "describe-file-system-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-file-system-policy.html",
      "command_description": "Description\n\nReturns the FileSystemPolicy for the specified EFS file system.\n\nThis operation requires permissions for the elasticfilesystem:DescribeFileSystemPolicy action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-file-system-policy\n--file-system-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nSpecifies which EFS file system to retrieve the FileSystemPolicy for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFileSystemId -> (string)\n\nSpecifies the EFS file system to which the FileSystemPolicy applies.\n\nPolicy -> (string)\n\nThe JSON formatted FileSystemPolicy for the EFS file system."
    },
    {
      "command_name": "describe-file-systems",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-file-systems.html",
      "command_description": "Description\n\nReturns the description of a specific Amazon EFS file system if either the file system CreationToken or the FileSystemId is provided. Otherwise, it returns descriptions of all file systems owned by the caller’s Amazon Web Services account in the Amazon Web Services Region of the endpoint that you’re calling.\n\nWhen retrieving all file system descriptions, you can optionally specify the MaxItems parameter to limit the number of descriptions in a response. Currently, this number is automatically set to 10. If more file system descriptions remain, Amazon EFS returns a NextMarker , an opaque token, in the response. In this case, you should send a subsequent request with the Marker request parameter set to the value of NextMarker .\n\nTo retrieve a list of your file system descriptions, this operation is used in an iterative process, where DescribeFileSystems is called first without the Marker and then the operation continues to call it with the Marker parameter set to the value of the NextMarker from the previous response until the response has no NextMarker .\n\nThe order of file systems returned in the response of one DescribeFileSystems call and the order of file systems returned across the responses of a multi-call iteration is unspecified.\n\nThis operation requires permissions for the elasticfilesystem:DescribeFileSystems action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-file-systems is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: FileSystems",
      "command_synopsis": "Synopsis\n  describe-file-systems\n[--max-items <value>]\n[--creation-token <value>]\n[--file-system-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--creation-token <value>]",
        "[--file-system-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--creation-token (string)\n\n(Optional) Restricts the list to the file system with this creation token (String). You specify a creation token when you create an Amazon EFS file system.\n\n--file-system-id (string)\n\n(Optional) ID of the file system whose description you want to retrieve (String).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMarker -> (string)\n\nPresent if provided by caller in the request (String).\n\nFileSystems -> (list)\n\nAn array of file system descriptions.\n\n(structure)\n\nA description of the file system.\n\nOwnerId -> (string)\n\nThe Amazon Web Services account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.\n\nCreationToken -> (string)\n\nThe opaque string specified in the request.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nFileSystemArn -> (string)\n\nThe Amazon Resource Name (ARN) for the EFS file system, in the format arn:aws:elasticfilesystem:*region* :*account-id* :file-system/*file-system-id* `` . Example with sample data: ``arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567\n\nCreationTime -> (timestamp)\n\nThe time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).\n\nLifeCycleState -> (string)\n\nThe lifecycle phase of the file system.\n\nName -> (string)\n\nYou can add tags to a file system, including a Name tag. For more information, see CreateFileSystem . If the file system has a Name tag, Amazon EFS returns the value in this field.\n\nNumberOfMountTargets -> (integer)\n\nThe current number of mount targets that the file system has. For more information, see CreateMountTarget .\n\nSizeInBytes -> (structure)\n\nThe latest known metered size (in bytes) of data stored in the file system, in its Value field, and the time at which that size was determined in its Timestamp field. The Timestamp value is the integer number of seconds since 1970-01-01T00:00:00Z. The SizeInBytes value doesn’t represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, SizeInBytes represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time.\n\nValue -> (long)\n\nThe latest known metered size (in bytes) of data stored in the file system.\n\nTimestamp -> (timestamp)\n\nThe time at which the size of data, returned in the Value field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.\n\nValueInIA -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Infrequent Access storage class.\n\nValueInStandard -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Standard storage class.\n\nPerformanceMode -> (string)\n\nThe performance mode of the file system.\n\nEncrypted -> (boolean)\n\nA Boolean value that, if true, indicates that the file system is encrypted.\n\nKmsKeyId -> (string)\n\nThe ID of an Key Management Service customer master key (CMK) that was used to protect the encrypted file system.\n\nThroughputMode -> (string)\n\nDisplays the file system’s throughput mode. For more information, see Throughput modes in the Amazon EFS User Guide .\n\nProvisionedThroughputInMibps -> (double)\n\nThe amount of provisioned throughput, measured in MiB/s, for the file system. Valid for file systems using ThroughputMode set to provisioned .\n\nAvailabilityZoneName -> (string)\n\nDescribes the Amazon Web Services Availability Zone in which the file system is located, and is valid only for file systems using One Zone storage classes. For more information, see Using EFS storage classes in the Amazon EFS User Guide .\n\nAvailabilityZoneId -> (string)\n\nThe unique and consistent identifier of the Availability Zone in which the file system’s One Zone storage classes exist. For example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web Services Region, and it has the same location in every Amazon Web Services account.\n\nTags -> (list)\n\nThe tags associated with the file system, presented as an array of Tag objects.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nNextMarker -> (string)\n\nPresent if there are more file systems than returned in the response (String). You can use the NextMarker in the subsequent request to fetch the descriptions.",
      "command_examples": "Examples\n\nTo describe a file system\n\nThe following describe-file-systems example describes the specified file system.\n\naws efs describe-file-systems \\\n    --file-system-id fs-c7a0456e\n\n\nOutput:\n\n{\n    \"FileSystems\": [\n        {\n            \"OwnerId\": \"123456789012\",\n            \"CreationToken\": \"console-d7f56c5f-e433-41ca-8307-9d9c0example\",\n            \"FileSystemId\": \"fs-c7a0456e\",\n            \"FileSystemArn\": \"arn:aws:elasticfilesystem:us-west-2:123456789012:file-system/fs-48499b4d\",\n            \"CreationTime\": 1595286880.0,\n            \"LifeCycleState\": \"available\",\n            \"Name\": \"my-file-system\",\n            \"NumberOfMountTargets\": 3,\n            \"SizeInBytes\": {\n                \"Value\": 6144,\n                \"Timestamp\": 1600991437.0,\n                \"ValueInIA\": 0,\n                \"ValueInStandard\": 6144\n            },\n            \"PerformanceMode\": \"generalPurpose\",\n            \"Encrypted\": true,\n            \"KmsKeyId\": \"arn:aws:kms:us-west-2:123456789012:key/a59b3472-e62c-42e4-adcf-30d92example\",\n            \"ThroughputMode\": \"bursting\",\n            \"Tags\": [\n                {\n                    \"Key\": \"Name\",\n                    \"Value\": \"my-file-system\"\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see Managing Amazon EFS file systems in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "describe-lifecycle-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-lifecycle-configuration.html",
      "command_description": "Description\n\nReturns the current LifecycleConfiguration object for the specified Amazon EFS file system. EFS lifecycle management uses the LifecycleConfiguration object to identify which files to move to the EFS Infrequent Access (IA) storage class. For a file system without a LifecycleConfiguration object, the call returns an empty array in the response.\n\nWhen EFS Intelligent Tiering is enabled, TransitionToPrimaryStorageClass has a value of AFTER_1_ACCESS .\n\nThis operation requires permissions for the elasticfilesystem:DescribeLifecycleConfiguration operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-lifecycle-configuration\n--file-system-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the file system whose LifecycleConfiguration object you want to retrieve (String).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLifecyclePolicies -> (list)\n\nAn array of lifecycle management policies. EFS supports a maximum of one policy per file system.\n\n(structure)\n\nDescribes a policy used by EFS lifecycle management and EFS intelligent tiering that specifies when to transition files into and out of the file system’s Infrequent Access (IA) storage class. For more information, see EFS Intelligent‐Tiering and EFS Lifecycle Management .\n\nNote\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration API action, Amazon EFS requires that each LifecyclePolicy object have only a single transition. This means that in a request body, LifecyclePolicies needs to be structured as an array of LifecyclePolicy objects, one object for each transition, TransitionToIA , TransitionToPrimaryStorageClass . For more information, see the request examples in PutLifecycleConfiguration .\n\nTransitionToIA -> (string)\n\nDescribes the period of time that a file is not accessed, after which it transitions to IA storage. Metadata operations such as listing the contents of a directory don’t count as file access events.\n\nTransitionToPrimaryStorageClass -> (string)\n\nDescribes when to transition a file from IA storage to primary storage. Metadata operations such as listing the contents of a directory don’t count as file access events."
    },
    {
      "command_name": "describe-mount-target-security-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-mount-target-security-groups.html",
      "command_description": "Description\n\nReturns the security groups currently in effect for a mount target. This operation requires that the network interface of the mount target has been created and the lifecycle state of the mount target is not deleted .\n\nThis operation requires permissions for the following actions:\n\nelasticfilesystem:DescribeMountTargetSecurityGroups action on the mount target’s file system.\n\nec2:DescribeNetworkInterfaceAttribute action on the mount target’s network interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-mount-target-security-groups\n--mount-target-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mount-target-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mount-target-id (string)\n\nThe ID of the mount target whose security groups you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSecurityGroups -> (list)\n\nAn array of security groups.\n\n(string)"
    },
    {
      "command_name": "describe-mount-targets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/describe-mount-targets.html",
      "command_description": "Description\n\nReturns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified.\n\nThis operation requires permissions for the elasticfilesystem:DescribeMountTargets action, on either the file system ID that you specify in FileSystemId , or on the file system of the mount target that you specify in MountTargetId .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-mount-targets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: MountTargets",
      "command_synopsis": "Synopsis\n  describe-mount-targets\n[--max-items <value>]\n[--file-system-id <value>]\n[--mount-target-id <value>]\n[--access-point-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--file-system-id <value>]",
        "[--mount-target-id <value>]",
        "[--access-point-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--file-system-id (string)\n\n(Optional) ID of the file system whose mount targets you want to list (String). It must be included in your request if an AccessPointId or MountTargetId is not included. Accepts either a file system ID or ARN as input.\n\n--mount-target-id (string)\n\n(Optional) ID of the mount target that you want to have described (String). It must be included in your request if FileSystemId is not included. Accepts either a mount target ID or ARN as input.\n\n--access-point-id (string)\n\n(Optional) The ID of the access point whose mount targets that you want to list. It must be included in your request if a FileSystemId or MountTargetId is not included in your request. Accepts either an access point ID or ARN as input.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMarker -> (string)\n\nIf the request included the Marker , the response returns that value in this field.\n\nMountTargets -> (list)\n\nReturns the file system’s mount targets as an array of MountTargetDescription objects.\n\n(structure)\n\nProvides a description of a mount target.\n\nOwnerId -> (string)\n\nAmazon Web Services account ID that owns the resource.\n\nMountTargetId -> (string)\n\nSystem-assigned mount target ID.\n\nFileSystemId -> (string)\n\nThe ID of the file system for which the mount target is intended.\n\nSubnetId -> (string)\n\nThe ID of the mount target’s subnet.\n\nLifeCycleState -> (string)\n\nLifecycle state of the mount target.\n\nIpAddress -> (string)\n\nAddress at which the file system can be mounted by using the mount target.\n\nNetworkInterfaceId -> (string)\n\nThe ID of the network interface that Amazon EFS created when it created the mount target.\n\nAvailabilityZoneId -> (string)\n\nThe unique and consistent identifier of the Availability Zone that the mount target resides in. For example, use1-az1 is an AZ ID for the us-east-1 Region and it has the same location in every Amazon Web Services account.\n\nAvailabilityZoneName -> (string)\n\nThe name of the Availability Zone in which the mount target is located. Availability Zones are independently mapped to names for each Amazon Web Services account. For example, the Availability Zone us-east-1a for your Amazon Web Services account might not be the same location as us-east-1a for another Amazon Web Services account.\n\nVpcId -> (string)\n\nThe virtual private cloud (VPC) ID that the mount target is configured in.\n\nNextMarker -> (string)\n\nIf a value is present, there are more mount targets to return. In a subsequent request, you can provide Marker in your request with this value to retrieve the next set of mount targets.",
      "command_examples": "Examples\n\nTo describe a mount target\n\nThe following describe-mount-targets example describes the specified mount target.\n\naws efs describe-mount-targets \\\n    --mount-target-id fsmt-f9a14450\n\n\nOutput:\n\n{\n    \"MountTargets\": [\n        {\n            \"OwnerId\": \"123456789012\",\n            \"MountTargetId\": \"fsmt-f9a14450\",\n            \"FileSystemId\": \"fs-c7a0456e\",\n            \"SubnetId\": \"subnet-02bf4c428bexample\",\n            \"LifeCycleState\": \"creating\",\n            \"IpAddress\": \"10.0.1.24\",\n            \"NetworkInterfaceId\": \"eni-02d542216aexample\",\n            \"AvailabilityZoneId\": \"use2-az2\",\n            \"AvailabilityZoneName\": \"us-east-2b\",\n            \"VpcId\": \"vpc-0123456789abcdef0\"\n        }\n    ]\n}\n\n\nFor more information, see Creating mount targets in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/list-tags-for-resource.html",
      "command_description": "Description\n\nLists all tags for a top-level EFS resource. You must provide the ID of the resource that you want to retrieve the tags for.\n\nThis operation requires permissions for the elasticfilesystem:DescribeAccessPoints action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nSpecifies the EFS resource you want to retrieve tags for. You can retrieve tags for EFS file systems and access points using this API endpoint.\n\n--max-results (integer)\n\n(Optional) Specifies the maximum number of tag objects to return in the response. The default value is 100.\n\n--next-token (string)\n\n(Optional) You can use NextToken in a subsequent request to fetch the next page of access point descriptions if the response payload was paginated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nAn array of the tags for the specified EFS resource.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nNextToken -> (string)\n\nNextToken is present if the response payload is paginated. You can use NextToken in a subsequent request to fetch the next page of access point descriptions.",
      "command_examples": "Examples\n\nTo retrieve the tags for a resource\n\nThe following list-tags-for-resource example retrieves the tags associated with the specified file system.\n\naws efs list-tags-for-resource \\\n    --resource-id fs-c7a0456e\n\n\nOutput:\n\n{\n    \"Tags\": [\n        {\n            \"Key\": \"Name\",\n            \"Value\": \"my-file-system\"\n        },\n        {\n            \"Key\": \"Department\",\n            \"Value\": \"Business Intelligence\"\n        }\n    ]\n}\n\n\nFor more information, see Managing file system tags in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "modify-mount-target-security-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/modify-mount-target-security-groups.html",
      "command_description": "Description\n\nModifies the set of security groups in effect for a mount target.\n\nWhen you create a mount target, Amazon EFS also creates a new network interface. For more information, see CreateMountTarget . This operation replaces the security groups in effect for the network interface associated with a mount target, with the SecurityGroups provided in the request. This operation requires that the network interface of the mount target has been created and the lifecycle state of the mount target is not deleted .\n\nThe operation requires permissions for the following actions:\n\nelasticfilesystem:ModifyMountTargetSecurityGroups action on the mount target’s file system.\n\nec2:ModifyNetworkInterfaceAttribute action on the mount target’s network interface.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  modify-mount-target-security-groups\n--mount-target-id <value>\n[--security-groups <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--mount-target-id <value>",
        "[--security-groups <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--mount-target-id (string)\n\nThe ID of the mount target whose security groups you want to modify.\n\n--security-groups (list)\n\nAn array of up to five VPC security group IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-account-preferences",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/put-account-preferences.html",
      "command_description": "Description\n\nUse this operation to set the account preference in the current Amazon Web Services Region to use long 17 character (63 bit) or short 8 character (32 bit) resource IDs for new EFS file system and mount target resources. All existing resource IDs are not affected by any changes you make. You can set the ID preference during the opt-in period as EFS transitions to long resource IDs. For more information, see Managing Amazon EFS resource IDs .\n\nNote\n\nStarting in October, 2021, you will receive an error if you try to set the account preference to use the short 8 character format resource ID. Contact Amazon Web Services support if you receive an error and need to use short IDs for file system and mount target resources.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-account-preferences\n--resource-id-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id-type (string)\n\nSpecifies the EFS resource ID preference to set for the user’s Amazon Web Services account, in the current Amazon Web Services Region, either LONG_ID (17 characters), or SHORT_ID (8 characters).\n\nNote\n\nStarting in October, 2021, you will receive an error when setting the account preference to SHORT_ID . Contact Amazon Web Services support if you receive an error and need to use short IDs for file system and mount target resources.\n\nPossible values:\n\nLONG_ID\n\nSHORT_ID\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceIdPreference -> (structure)\n\nDescribes the resource type and its ID preference for the user’s Amazon Web Services account, in the current Amazon Web Services Region.\n\nResourceIdType -> (string)\n\nIdentifies the EFS resource ID preference, either LONG_ID (17 characters) or SHORT_ID (8 characters).\n\nResources -> (list)\n\nIdentifies the Amazon EFS resources to which the ID preference setting applies, FILE_SYSTEM and MOUNT_TARGET .\n\n(string)\n\nAn EFS resource, for example a file system or a mount target."
    },
    {
      "command_name": "put-backup-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/put-backup-policy.html",
      "command_description": "Description\n\nUpdates the file system’s backup policy. Use this action to start or stop automatic backups of the file system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-backup-policy\n--file-system-id <value>\n--backup-policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "--backup-policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nSpecifies which EFS file system to update the backup policy for.\n\n--backup-policy (structure)\n\nThe backup policy included in the PutBackupPolicy request.\n\nStatus -> (string)\n\nDescribes the status of the file system’s backup policy.\n\n**ENABLED ** - EFS is automatically backing up the file system.\n\n**ENABLING ** - EFS is turning on automatic backups for the file system.\n\n**DISABLED ** - automatic back ups are turned off for the file system.\n\n**DISABLING ** - EFS is turning off automatic backups for the file system.\n\nShorthand Syntax:\n\nStatus=string\n\n\nJSON Syntax:\n\n{\n  \"Status\": \"ENABLED\"|\"ENABLING\"|\"DISABLED\"|\"DISABLING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBackupPolicy -> (structure)\n\nDescribes the file system’s backup policy, indicating whether automatic backups are turned on or off..\n\nStatus -> (string)\n\nDescribes the status of the file system’s backup policy.\n\n**ENABLED ** - EFS is automatically backing up the file system.\n\n**ENABLING ** - EFS is turning on automatic backups for the file system.\n\n**DISABLED ** - automatic back ups are turned off for the file system.\n\n**DISABLING ** - EFS is turning off automatic backups for the file system."
    },
    {
      "command_name": "put-file-system-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/put-file-system-policy.html",
      "command_description": "Description\n\nApplies an Amazon EFS FileSystemPolicy to an Amazon EFS file system. A file system policy is an IAM resource-based policy and can contain multiple policy statements. A file system always has exactly one file system policy, which can be the default policy or an explicit policy set or updated using this API operation. EFS file system policies have a 20,000 character limit. When an explicit policy is set, it overrides the default policy. For more information about the default file system policy, see Default EFS File System Policy .\n\nNote\n\nEFS file system policies have a 20,000 character limit.\n\nThis operation requires permissions for the elasticfilesystem:PutFileSystemPolicy action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-file-system-policy\n--file-system-id <value>\n--policy <value>\n[--bypass-policy-lockout-safety-check | --no-bypass-policy-lockout-safety-check]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "--policy <value>",
        "[--bypass-policy-lockout-safety-check | --no-bypass-policy-lockout-safety-check]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the EFS file system that you want to create or update the FileSystemPolicy for.\n\n--policy (string)\n\nThe FileSystemPolicy that you’re creating. Accepts a JSON formatted policy definition. EFS file system policies have a 20,000 character limit. To find out more about the elements that make up a file system policy, see EFS Resource-based Policies .\n\n--bypass-policy-lockout-safety-check | --no-bypass-policy-lockout-safety-check (boolean)\n\n(Optional) A flag to indicate whether to bypass the FileSystemPolicy lockout safety check. The policy lockout safety check determines whether the policy in the request will prevent the principal making the request will be locked out from making future PutFileSystemPolicy requests on the file system. Set BypassPolicyLockoutSafetyCheck to True only when you intend to prevent the principal that is making the request from making a subsequent PutFileSystemPolicy request on the file system. The default value is False.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFileSystemId -> (string)\n\nSpecifies the EFS file system to which the FileSystemPolicy applies.\n\nPolicy -> (string)\n\nThe JSON formatted FileSystemPolicy for the EFS file system."
    },
    {
      "command_name": "put-lifecycle-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/put-lifecycle-configuration.html",
      "command_description": "Description\n\nEnables lifecycle management by creating a new LifecycleConfiguration object. A LifecycleConfiguration object defines when files in an Amazon EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access (IA) storage class. To enable EFS Intelligent Tiering, set the value of TransitionToPrimaryStorageClass to AFTER_1_ACCESS . For more information, see EFS Lifecycle Management .\n\nEach Amazon EFS file system supports one lifecycle configuration, which applies to all files in the file system. If a LifecycleConfiguration object already exists for the specified file system, a PutLifecycleConfiguration call modifies the existing configuration. A PutLifecycleConfiguration call with an empty LifecyclePolicies array in the request body deletes any existing LifecycleConfiguration and turns off lifecycle management for the file system.\n\nIn the request, specify the following:\n\nThe ID for the file system for which you are enabling, disabling, or modifying lifecycle management.\n\nA LifecyclePolicies array of LifecyclePolicy objects that define when files are moved to the IA storage class. Amazon EFS requires that each LifecyclePolicy object have only have a single transition, so the LifecyclePolicies array needs to be structured with separate LifecyclePolicy objects. See the example requests in the following section for more information.\n\nThis operation requires permissions for the elasticfilesystem:PutLifecycleConfiguration operation.\n\nTo apply a LifecycleConfiguration object to an encrypted file system, you need the same Key Management Service permissions as when you created the encrypted file system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-lifecycle-configuration\n--file-system-id <value>\n--lifecycle-policies <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "--lifecycle-policies <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the file system for which you are creating the LifecycleConfiguration object (String).\n\n--lifecycle-policies (list)\n\nAn array of LifecyclePolicy objects that define the file system’s LifecycleConfiguration object. A LifecycleConfiguration object informs EFS lifecycle management and intelligent tiering of the following:\n\nWhen to move files in the file system from primary storage to the IA storage class.\n\nWhen to move files that are in IA storage to primary storage.\n\nNote\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration API action, Amazon EFS requires that each LifecyclePolicy object have only a single transition. This means that in a request body, LifecyclePolicies needs to be structured as an array of LifecyclePolicy objects, one object for each transition, TransitionToIA , TransitionToPrimaryStorageClass . See the example requests in the following section for more information.\n\n(structure)\n\nDescribes a policy used by EFS lifecycle management and EFS intelligent tiering that specifies when to transition files into and out of the file system’s Infrequent Access (IA) storage class. For more information, see EFS Intelligent‐Tiering and EFS Lifecycle Management .\n\nNote\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration API action, Amazon EFS requires that each LifecyclePolicy object have only a single transition. This means that in a request body, LifecyclePolicies needs to be structured as an array of LifecyclePolicy objects, one object for each transition, TransitionToIA , TransitionToPrimaryStorageClass . For more information, see the request examples in PutLifecycleConfiguration .\n\nTransitionToIA -> (string)\n\nDescribes the period of time that a file is not accessed, after which it transitions to IA storage. Metadata operations such as listing the contents of a directory don’t count as file access events.\n\nTransitionToPrimaryStorageClass -> (string)\n\nDescribes when to transition a file from IA storage to primary storage. Metadata operations such as listing the contents of a directory don’t count as file access events.\n\nShorthand Syntax:\n\nTransitionToIA=string,TransitionToPrimaryStorageClass=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"TransitionToIA\": \"AFTER_7_DAYS\"|\"AFTER_14_DAYS\"|\"AFTER_30_DAYS\"|\"AFTER_60_DAYS\"|\"AFTER_90_DAYS\",\n    \"TransitionToPrimaryStorageClass\": \"AFTER_1_ACCESS\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLifecyclePolicies -> (list)\n\nAn array of lifecycle management policies. EFS supports a maximum of one policy per file system.\n\n(structure)\n\nDescribes a policy used by EFS lifecycle management and EFS intelligent tiering that specifies when to transition files into and out of the file system’s Infrequent Access (IA) storage class. For more information, see EFS Intelligent‐Tiering and EFS Lifecycle Management .\n\nNote\n\nWhen using the put-lifecycle-configuration CLI command or the PutLifecycleConfiguration API action, Amazon EFS requires that each LifecyclePolicy object have only a single transition. This means that in a request body, LifecyclePolicies needs to be structured as an array of LifecyclePolicy objects, one object for each transition, TransitionToIA , TransitionToPrimaryStorageClass . For more information, see the request examples in PutLifecycleConfiguration .\n\nTransitionToIA -> (string)\n\nDescribes the period of time that a file is not accessed, after which it transitions to IA storage. Metadata operations such as listing the contents of a directory don’t count as file access events.\n\nTransitionToPrimaryStorageClass -> (string)\n\nDescribes when to transition a file from IA storage to primary storage. Metadata operations such as listing the contents of a directory don’t count as file access events."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/tag-resource.html",
      "command_description": "Description\n\nCreates a tag for an EFS resource. You can create tags for EFS file systems and access points using this API operation.\n\nThis operation requires permissions for the elasticfilesystem:TagResource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-id <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nThe ID specifying the EFS resource that you want to create a tag for.\n\n--tags (list)\n\nAn array of Tag objects to add. Each Tag object is a key-value pair.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resource\n\nThe following tag-resource example adds the tag Department=Business Intelligence to the specified file system.\n\naws efs tag-resource \\\n    --resource-id fs-c7a0456e \\\n    --tags Key=Department,Value=\"Business Intelligence\"\n\n\nThis command produces no output.\n\nFor more information, see Managing file system tags in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from an EFS resource. You can remove tags from EFS file systems and access points using this API operation.\n\nThis operation requires permissions for the elasticfilesystem:UntagResource action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-id <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-id <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-id (string)\n\nSpecifies the EFS resource that you want to remove tags from.\n\n--tag-keys (list)\n\nThe keys of the key-value tag pairs that you want to remove from the specified EFS resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a resource\n\nThe following untag-resource example removes the tag with the Department tag key from the specified file system.\n\naws efs untag-resource \\\n    --resource-id fs-c7a0456e \\\n    --tag-keys Department\n\n\nThis command produces no output.\n\nFor more information, see Managing file system tags in the Amazon Elastic File System User Guide."
    },
    {
      "command_name": "update-file-system",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/efs/update-file-system.html",
      "command_description": "Description\n\nUpdates the throughput mode or the amount of provisioned throughput of an existing file system.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-file-system\n--file-system-id <value>\n[--throughput-mode <value>]\n[--provisioned-throughput-in-mibps <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--file-system-id <value>",
        "[--throughput-mode <value>]",
        "[--provisioned-throughput-in-mibps <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--file-system-id (string)\n\nThe ID of the file system that you want to update.\n\n--throughput-mode (string)\n\n(Optional) Updates the file system’s throughput mode. If you’re not updating your throughput mode, you don’t need to provide this value in your request. If you are changing the ThroughputMode to provisioned , you must also set a value for ProvisionedThroughputInMibps .\n\nPossible values:\n\nbursting\n\nprovisioned\n\n--provisioned-throughput-in-mibps (double)\n\n(Optional) Sets the amount of provisioned throughput, in MiB/s, for the file system. Valid values are 1-1024. If you are changing the throughput mode to provisioned, you must also provide the amount of provisioned throughput. Required if ThroughputMode is changed to provisioned on update.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOwnerId -> (string)\n\nThe Amazon Web Services account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.\n\nCreationToken -> (string)\n\nThe opaque string specified in the request.\n\nFileSystemId -> (string)\n\nThe ID of the file system, assigned by Amazon EFS.\n\nFileSystemArn -> (string)\n\nThe Amazon Resource Name (ARN) for the EFS file system, in the format arn:aws:elasticfilesystem:*region* :*account-id* :file-system/*file-system-id* `` . Example with sample data: ``arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567\n\nCreationTime -> (timestamp)\n\nThe time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).\n\nLifeCycleState -> (string)\n\nThe lifecycle phase of the file system.\n\nName -> (string)\n\nYou can add tags to a file system, including a Name tag. For more information, see CreateFileSystem . If the file system has a Name tag, Amazon EFS returns the value in this field.\n\nNumberOfMountTargets -> (integer)\n\nThe current number of mount targets that the file system has. For more information, see CreateMountTarget .\n\nSizeInBytes -> (structure)\n\nThe latest known metered size (in bytes) of data stored in the file system, in its Value field, and the time at which that size was determined in its Timestamp field. The Timestamp value is the integer number of seconds since 1970-01-01T00:00:00Z. The SizeInBytes value doesn’t represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, SizeInBytes represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time.\n\nValue -> (long)\n\nThe latest known metered size (in bytes) of data stored in the file system.\n\nTimestamp -> (timestamp)\n\nThe time at which the size of data, returned in the Value field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.\n\nValueInIA -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Infrequent Access storage class.\n\nValueInStandard -> (long)\n\nThe latest known metered size (in bytes) of data stored in the Standard storage class.\n\nPerformanceMode -> (string)\n\nThe performance mode of the file system.\n\nEncrypted -> (boolean)\n\nA Boolean value that, if true, indicates that the file system is encrypted.\n\nKmsKeyId -> (string)\n\nThe ID of an Key Management Service customer master key (CMK) that was used to protect the encrypted file system.\n\nThroughputMode -> (string)\n\nDisplays the file system’s throughput mode. For more information, see Throughput modes in the Amazon EFS User Guide .\n\nProvisionedThroughputInMibps -> (double)\n\nThe amount of provisioned throughput, measured in MiB/s, for the file system. Valid for file systems using ThroughputMode set to provisioned .\n\nAvailabilityZoneName -> (string)\n\nDescribes the Amazon Web Services Availability Zone in which the file system is located, and is valid only for file systems using One Zone storage classes. For more information, see Using EFS storage classes in the Amazon EFS User Guide .\n\nAvailabilityZoneId -> (string)\n\nThe unique and consistent identifier of the Availability Zone in which the file system’s One Zone storage classes exist. For example, use1-az1 is an Availability Zone ID for the us-east-1 Amazon Web Services Region, and it has the same location in every Amazon Web Services account.\n\nTags -> (list)\n\nThe tags associated with the file system, presented as an array of Tag objects.\n\n(structure)\n\nA tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:+ - = . _ : / .\n\nKey -> (string)\n\nThe tag key (String). The key can’t start with aws: .\n\nValue -> (string)\n\nThe value of the tag key."
    }
  ],
  "service_description": "Description\n\nAmazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so your applications have the storage they need, when they need it. For more information, see the Amazon Elastic File System API Reference and the Amazon Elastic File System User Guide ."
}