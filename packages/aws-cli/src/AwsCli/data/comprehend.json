{
  "service_name": "comprehend",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/index.html",
  "service_commands": [
    {
      "command_name": "batch-detect-dominant-language",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/batch-detect-dominant-language.html",
      "command_description": "Description\n\nDetermines the dominant language of the input text for a batch of documents. For a list of languages that Amazon Comprehend can detect, see Amazon Comprehend Supported Languages .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-detect-dominant-language\n--text-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text-list (list)\n\nA list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document should contain at least 20 characters and must contain fewer than 5,000 bytes of UTF-8 encoded characters.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResultList -> (list)\n\nA list of objects containing the results of the operation. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If all of the documents contain an error, the ResultList is empty.\n\n(structure)\n\nThe result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nLanguages -> (list)\n\nOne or more DominantLanguage objects describing the dominant languages in the document.\n\n(structure)\n\nReturns the code for the dominant language in the input text and the level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nLanguageCode -> (string)\n\nThe RFC 5646 language code for the dominant language. For more information about RFC 5646, see Tags for Identifying Languages on the IETF Tools web site.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nErrorList -> (list)\n\nA list containing one object for each document that contained an error. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If there are no errors in the batch, the ErrorList is empty.\n\n(structure)\n\nDescribes an error that occurred while processing a document in a batch. The operation returns on BatchItemError object for each document that contained an error.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nErrorCode -> (string)\n\nThe numeric error code of the error.\n\nErrorMessage -> (string)\n\nA text description of the error."
    },
    {
      "command_name": "batch-detect-entities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/batch-detect-entities.html",
      "command_description": "Description\n\nInspects the text of a batch of documents for named entities and returns information about them. For more information about named entities, see how-entities\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-detect-entities\n--text-list <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text-list <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text-list (list)\n\nA list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer than 5,000 bytes of UTF-8 encoded characters.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResultList -> (list)\n\nA list of objects containing the results of the operation. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If all of the documents contain an error, the ResultList is empty.\n\n(structure)\n\nThe result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nEntities -> (list)\n\nOne or more Entity objects, one for each entity detected in the document.\n\n(structure)\n\nProvides information about an entity.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nType -> (string)\n\nThe entity’s type.\n\nText -> (string)\n\nThe text of the entity.\n\nBeginOffset -> (integer)\n\nA character offset in the input text that shows where the entity begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nEndOffset -> (integer)\n\nA character offset in the input text that shows where the entity ends. The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nErrorList -> (list)\n\nA list containing one object for each document that contained an error. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If there are no errors in the batch, the ErrorList is empty.\n\n(structure)\n\nDescribes an error that occurred while processing a document in a batch. The operation returns on BatchItemError object for each document that contained an error.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nErrorCode -> (string)\n\nThe numeric error code of the error.\n\nErrorMessage -> (string)\n\nA text description of the error."
    },
    {
      "command_name": "batch-detect-key-phrases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/batch-detect-key-phrases.html",
      "command_description": "Description\n\nDetects the key noun phrases found in a batch of documents.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-detect-key-phrases\n--text-list <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text-list <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text-list (list)\n\nA list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResultList -> (list)\n\nA list of objects containing the results of the operation. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If all of the documents contain an error, the ResultList is empty.\n\n(structure)\n\nThe result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nKeyPhrases -> (list)\n\nOne or more KeyPhrase objects, one for each key phrase detected in the document.\n\n(structure)\n\nDescribes a key noun phrase.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nText -> (string)\n\nThe text of a key noun phrase.\n\nBeginOffset -> (integer)\n\nA character offset in the input text that shows where the key phrase begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nEndOffset -> (integer)\n\nA character offset in the input text where the key phrase ends. The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nErrorList -> (list)\n\nA list containing one object for each document that contained an error. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If there are no errors in the batch, the ErrorList is empty.\n\n(structure)\n\nDescribes an error that occurred while processing a document in a batch. The operation returns on BatchItemError object for each document that contained an error.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nErrorCode -> (string)\n\nThe numeric error code of the error.\n\nErrorMessage -> (string)\n\nA text description of the error."
    },
    {
      "command_name": "batch-detect-sentiment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/batch-detect-sentiment.html",
      "command_description": "Description\n\nInspects a batch of documents and returns an inference of the prevailing sentiment, POSITIVE , NEUTRAL , MIXED , or NEGATIVE , in each one.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-detect-sentiment\n--text-list <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text-list <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text-list (list)\n\nA list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResultList -> (list)\n\nA list of objects containing the results of the operation. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If all of the documents contain an error, the ResultList is empty.\n\n(structure)\n\nThe result of calling the operation. The operation returns one object for each document that is successfully processed by the operation.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nSentiment -> (string)\n\nThe sentiment detected in the document.\n\nSentimentScore -> (structure)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its sentiment detection.\n\nPositive -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the POSITIVE sentiment.\n\nNegative -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the NEGATIVE sentiment.\n\nNeutral -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the NEUTRAL sentiment.\n\nMixed -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the MIXED sentiment.\n\nErrorList -> (list)\n\nA list containing one object for each document that contained an error. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If there are no errors in the batch, the ErrorList is empty.\n\n(structure)\n\nDescribes an error that occurred while processing a document in a batch. The operation returns on BatchItemError object for each document that contained an error.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nErrorCode -> (string)\n\nThe numeric error code of the error.\n\nErrorMessage -> (string)\n\nA text description of the error."
    },
    {
      "command_name": "batch-detect-syntax",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/batch-detect-syntax.html",
      "command_description": "Description\n\nInspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns information about them. For more information, see how-syntax .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-detect-syntax\n--text-list <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text-list <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text-list (list)\n\nA list containing the text of the input documents. The list can contain a maximum of 25 documents. Each document must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German (“de”), English (“en”), Spanish (“es”), French (“fr”), Italian (“it”), or Portuguese (“pt”). All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResultList -> (list)\n\nA list of objects containing the results of the operation. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If all of the documents contain an error, the ResultList is empty.\n\n(structure)\n\nThe result of calling the operation. The operation returns one object that is successfully processed by the operation.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nSyntaxTokens -> (list)\n\nThe syntax tokens for the words in the document, one token for each word.\n\n(structure)\n\nRepresents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.\n\nTokenId -> (integer)\n\nA unique identifier for a token.\n\nText -> (string)\n\nThe word that was recognized in the source text.\n\nBeginOffset -> (integer)\n\nThe zero-based offset from the beginning of the source text to the first character in the word.\n\nEndOffset -> (integer)\n\nThe zero-based offset from the beginning of the source text to the last character in the word.\n\nPartOfSpeech -> (structure)\n\nProvides the part of speech label and the confidence level that Amazon Comprehend has that the part of speech was correctly identified. For more information, see how-syntax .\n\nTag -> (string)\n\nIdentifies the part of speech that the token represents.\n\nScore -> (float)\n\nThe confidence that Amazon Comprehend has that the part of speech was correctly identified.\n\nErrorList -> (list)\n\nA list containing one object for each document that contained an error. The results are sorted in ascending order by the Index field and match the order of the documents in the input list. If there are no errors in the batch, the ErrorList is empty.\n\n(structure)\n\nDescribes an error that occurred while processing a document in a batch. The operation returns on BatchItemError object for each document that contained an error.\n\nIndex -> (integer)\n\nThe zero-based index of the document in the input list.\n\nErrorCode -> (string)\n\nThe numeric error code of the error.\n\nErrorMessage -> (string)\n\nA text description of the error."
    },
    {
      "command_name": "classify-document",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/classify-document.html",
      "command_description": "Description\n\nCreates a new document classification request to analyze a single document in real-time, using a previously created and trained custom model and an endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  classify-document\n--text <value>\n--endpoint-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--endpoint-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nThe document text to be analyzed.\n\n--endpoint-arn (string)\n\nThe Amazon Resource Number (ARN) of the endpoint.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClasses -> (list)\n\nThe classes used by the document being analyzed. These are used for multi-class trained models. Individual classes are mutually exclusive and each document is expected to have only a single class assigned to it. For example, an animal can be a dog or a cat, but not both at the same time.\n\n(structure)\n\nSpecifies the class that categorizes the document being analyzed\n\nName -> (string)\n\nThe name of the class.\n\nScore -> (float)\n\nThe confidence score that Amazon Comprehend has this class correctly attributed.\n\nLabels -> (list)\n\nThe labels used the document being analyzed. These are used for multi-label trained models. Individual labels represent different categories that are related in some manner and are not mutually exclusive. For example, a movie can be just an action movie, or it can be an action movie, a science fiction movie, and a comedy, all at the same time.\n\n(structure)\n\nSpecifies one of the label or labels that categorize the document being analyzed.\n\nName -> (string)\n\nThe name of the label.\n\nScore -> (float)\n\nThe confidence score that Amazon Comprehend has this label correctly attributed."
    },
    {
      "command_name": "contains-pii-entities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/contains-pii-entities.html",
      "command_description": "Description\n\nAnalyzes input text for the presence of personally identifiable information (PII) and returns the labels of identified PII entity types such as name, address, bank account number, or phone number.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  contains-pii-entities\n--text <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nCreates a new document classification request to analyze a single document in real-time, returning personally identifiable information (PII) entity labels.\n\n--language-code (string)\n\nThe language of the input documents.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLabels -> (list)\n\nThe labels used in the document being analyzed. Individual labels represent personally identifiable information (PII) entity types.\n\n(structure)\n\nSpecifies one of the label or labels that categorize the personally identifiable information (PII) entity being analyzed.\n\nName -> (string)\n\nThe name of the label.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection."
    },
    {
      "command_name": "create-document-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/create-document-classifier.html",
      "command_description": "Description\n\nCreates a new document classifier that you can use to categorize documents. To create a classifier, you provide a set of training documents that labeled with the categories that you want to use. After the classifier is trained you can use it to categorize a set of labeled documents into the categories. For more information, see how-document-classification .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-document-classifier\n--document-classifier-name <value>\n[--version-name <value>]\n--data-access-role-arn <value>\n[--tags <value>]\n--input-data-config <value>\n[--output-data-config <value>]\n[--client-request-token <value>]\n--language-code <value>\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--mode <value>]\n[--model-kms-key-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--document-classifier-name <value>",
        "[--version-name <value>]",
        "--data-access-role-arn <value>",
        "[--tags <value>]",
        "--input-data-config <value>",
        "[--output-data-config <value>]",
        "[--client-request-token <value>]",
        "--language-code <value>",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--mode <value>]",
        "[--model-kms-key-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--document-classifier-name (string)\n\nThe name of the document classifier.\n\n--version-name (string)\n\nThe version name given to the newly created classifier. Version names can have a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The version name must be unique among all models with the same classifier name in the account/AWS Region.\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\n--tags (list)\n\nTags to be associated with the document classifier being created. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the S3Uri parameter in your request.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The S3 bucket must be in the same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nTestS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The Amazon S3 bucket must be in the same AWS Region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nLabelDelimiter -> (string)\n\nIndicates the delimiter used to separate each label for training a multi-label classifier. The default delimiter between labels is a pipe (|). You can use a different character as a delimiter (if it’s an allowed character) by specifying it under Delimiter for labels. If the training documents use a delimiter other than the default or the delimiter you specify, the labels on that line will be combined to make a single unique label, such as LABELLABELLABEL.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nJSON Syntax:\n\n{\n  \"DataFormat\": \"COMPREHEND_CSV\"|\"AUGMENTED_MANIFEST\",\n  \"S3Uri\": \"string\",\n  \"TestS3Uri\": \"string\",\n  \"LabelDelimiter\": \"string\",\n  \"AugmentedManifests\": [\n    {\n      \"S3Uri\": \"string\",\n      \"Split\": \"TRAIN\"|\"TEST\",\n      \"AttributeNames\": [\"string\", ...],\n      \"AnnotationDataS3Uri\": \"string\",\n      \"SourceDocumentsS3Uri\": \"string\",\n      \"DocumentType\": \"PLAIN_TEXT_DOCUMENT\"|\"SEMI_STRUCTURED_DOCUMENT\"\n    }\n    ...\n  ]\n}\n\n\n--output-data-config (structure)\n\nEnables the addition of output results configuration parameters for custom classifier jobs.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object while creating a custom classifier, you specify the Amazon S3 location where you want to write the confusion matrix. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of this output file.\n\nWhen the custom classifier job is finished, the service creates the output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the confusion matrix.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German (“de”), English (“en”), Spanish (“es”), French (“fr”), Italian (“it”), or Portuguese (“pt”). All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--mode (string)\n\nIndicates the mode in which the classifier will be trained. The classifier can be trained in multi-class mode, which identifies one and only one class for each document, or multi-label mode, which identifies one or more labels for each document. In multi-label mode, multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).\n\nPossible values:\n\nMULTI_CLASS\n\nMULTI_LABEL\n\n--model-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassifierArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier."
    },
    {
      "command_name": "create-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/create-endpoint.html",
      "command_description": "Description\n\nCreates a model-specific endpoint for synchronous inference for a previously trained custom model\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-endpoint\n--endpoint-name <value>\n--model-arn <value>\n--desired-inference-units <value>\n[--client-request-token <value>]\n[--tags <value>]\n[--data-access-role-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-name <value>",
        "--model-arn <value>",
        "--desired-inference-units <value>",
        "[--client-request-token <value>]",
        "[--tags <value>]",
        "[--data-access-role-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-name (string)\n\nThis is the descriptive suffix that becomes part of the EndpointArn used for all subsequent requests to this resource.\n\n--model-arn (string)\n\nThe Amazon Resource Number (ARN) of the model to which the endpoint will be attached.\n\n--desired-inference-units (integer)\n\nThe desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.\n\n--client-request-token (string)\n\nAn idempotency token provided by the customer. If this token matches a previous endpoint creation request, Amazon Comprehend will not return a ResourceInUseException .\n\n--tags (list)\n\nTags associated with the endpoint being created. A tag is a key-value pair that adds metadata to the endpoint. For example, a tag with “Sales” as the key might be added to an endpoint to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to trained custom models encrypted with a customer managed key (ModelKmsKeyId).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpointArn -> (string)\n\nThe Amazon Resource Number (ARN) of the endpoint being created."
    },
    {
      "command_name": "create-entity-recognizer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/create-entity-recognizer.html",
      "command_description": "Description\n\nCreates an entity recognizer using submitted files. After your CreateEntityRecognizer request is submitted, you can check job status using the API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-entity-recognizer\n--recognizer-name <value>\n[--version-name <value>]\n--data-access-role-arn <value>\n[--tags <value>]\n--input-data-config <value>\n[--client-request-token <value>]\n--language-code <value>\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--model-kms-key-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--recognizer-name <value>",
        "[--version-name <value>]",
        "--data-access-role-arn <value>",
        "[--tags <value>]",
        "--input-data-config <value>",
        "[--client-request-token <value>]",
        "--language-code <value>",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--model-kms-key-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--recognizer-name (string)\n\nThe name given to the newly created recognizer. Recognizer names can be a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The name must be unique in the account/region.\n\n--version-name (string)\n\nThe version name given to the newly created recognizer. Version names can be a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The version name must be unique among all models with the same recognizer name in the account/ AWS Region.\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\n--tags (list)\n\nTags to be associated with the entity recognizer being created. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data. The S3 bucket containing the input data must be located in the same region as the entity recognizer being created.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A CSV file that supplements your training documents. The CSV file contains information about the custom entities that your trained model will detect. The required format of the file depends on whether you are providing annotations or an entity list. If you use this value, you must provide your CSV file by using either the Annotations or EntityList parameters. You must provide your training documents by using the Documents parameter.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its labels. Each label annotates a named entity in the training document. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nEntityTypes -> (list)\n\nThe entity types in the labeled training data that Amazon Comprehend uses to train the custom entity recognizer. Any entity types that you don’t specify are ignored.\n\nA maximum of 25 entity types can be used at one time to train an entity recognizer. Entity types must not contain the following invalid characters: n (line break), \\n (escaped line break), r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\n(structure)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nType -> (string)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nEntity types must not contain the following invalid characters: n (line break), \\n (escaped line break, r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\nDocuments -> (structure)\n\nThe S3 location of the folder that contains the training documents for your custom entity recognizer.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the test documents for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed. This is optional, and the default is ONE_DOC_PER_LINE. ONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers. ONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nAnnotations -> (structure)\n\nThe S3 location of the CSV file that annotates your training documents.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the annotations for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nThis specifies the Amazon S3 location where the test annotations for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nEntityList -> (structure)\n\nThe S3 location of the CSV file that has the entity list for your custom entity recognizer.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the entity list is located. The URI must be in the same region as the API endpoint that you are calling.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nJSON Syntax:\n\n{\n  \"DataFormat\": \"COMPREHEND_CSV\"|\"AUGMENTED_MANIFEST\",\n  \"EntityTypes\": [\n    {\n      \"Type\": \"string\"\n    }\n    ...\n  ],\n  \"Documents\": {\n    \"S3Uri\": \"string\",\n    \"TestS3Uri\": \"string\",\n    \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\"\n  },\n  \"Annotations\": {\n    \"S3Uri\": \"string\",\n    \"TestS3Uri\": \"string\"\n  },\n  \"EntityList\": {\n    \"S3Uri\": \"string\"\n  },\n  \"AugmentedManifests\": [\n    {\n      \"S3Uri\": \"string\",\n      \"Split\": \"TRAIN\"|\"TEST\",\n      \"AttributeNames\": [\"string\", ...],\n      \"AnnotationDataS3Uri\": \"string\",\n      \"SourceDocumentsS3Uri\": \"string\",\n      \"DocumentType\": \"PLAIN_TEXT_DOCUMENT\"|\"SEMI_STRUCTURED_DOCUMENT\"\n    }\n    ...\n  ]\n}\n\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--language-code (string)\n\nYou can specify any of the following languages supported by Amazon Comprehend: English (“en”), Spanish (“es”), French (“fr”), Italian (“it”), German (“de”), or Portuguese (“pt”). All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your custom entity recognizer. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--model-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntityRecognizerArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer."
    },
    {
      "command_name": "delete-document-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/delete-document-classifier.html",
      "command_description": "Description\n\nDeletes a previously created document classifier\n\nOnly those classifiers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a ResourceInUseException will be returned.\n\nThis is an asynchronous action that puts the classifier into a DELETING state, and it is then removed by a background job. Once removed, the classifier disappears from your account and is no longer available for use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-document-classifier\n--document-classifier-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--document-classifier-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--document-classifier-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/delete-endpoint.html",
      "command_description": "Description\n\nDeletes a model-specific endpoint for a previously-trained custom model. All endpoints must be deleted in order for the model to be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-endpoint\n--endpoint-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-arn (string)\n\nThe Amazon Resource Number (ARN) of the endpoint being deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-entity-recognizer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/delete-entity-recognizer.html",
      "command_description": "Description\n\nDeletes an entity recognizer.\n\nOnly those recognizers that are in terminated states (IN_ERROR, TRAINED) will be deleted. If an active inference job is using the model, a ResourceInUseException will be returned.\n\nThis is an asynchronous action that puts the recognizer into a DELETING state, and it is then removed by a background job. Once removed, the recognizer disappears from your account and is no longer available for use.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-entity-recognizer\n--entity-recognizer-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entity-recognizer-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entity-recognizer-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-document-classification-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-document-classification-job.html",
      "command_description": "Description\n\nGets the properties associated with a document classification job. Use this operation to get the status of a classification job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-document-classification-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassificationJobProperties -> (structure)\n\nAn object that describes the properties associated with the document classification job.\n\nJobId -> (string)\n\nThe identifier assigned to the document classification job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the document classification job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:document-classification-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:document-classification-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the document classification job.\n\nJobStatus -> (string)\n\nThe current status of the document classification job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of the job.\n\nSubmitTime -> (timestamp)\n\nThe time that the document classification job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the document classification job completed.\n\nDocumentClassifierArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the document classification job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the document classification job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your document classification job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "describe-document-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-document-classifier.html",
      "command_description": "Description\n\nGets the properties associated with a document classifier.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-document-classifier\n--document-classifier-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--document-classifier-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--document-classifier-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassifierProperties -> (structure)\n\nAn object that contains the properties associated with a document classifier.\n\nDocumentClassifierArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier.\n\nLanguageCode -> (string)\n\nThe language code for the language of the documents that the classifier was trained on.\n\nStatus -> (string)\n\nThe status of the document classifier. If the status is TRAINED the classifier is ready to use. If the status is FAILED you can see additional information about why the classifier wasn’t trained in the Message field.\n\nMessage -> (string)\n\nAdditional information about the status of the classifier.\n\nSubmitTime -> (timestamp)\n\nThe time that the document classifier was submitted for training.\n\nEndTime -> (timestamp)\n\nThe time that training the document classifier completed.\n\nTrainingStartTime -> (timestamp)\n\nIndicates the time when the training starts on documentation classifiers. You are billed for the time interval between this time and the value of TrainingEndTime.\n\nTrainingEndTime -> (timestamp)\n\nThe time that training of the document classifier was completed. Indicates the time when the training completes on documentation classifiers. You are billed for the time interval between this time and the value of TrainingStartTime.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the document classifier for training.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the S3Uri parameter in your request.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The S3 bucket must be in the same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nTestS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The Amazon S3 bucket must be in the same AWS Region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nLabelDelimiter -> (string)\n\nIndicates the delimiter used to separate each label for training a multi-label classifier. The default delimiter between labels is a pipe (|). You can use a different character as a delimiter (if it’s an allowed character) by specifying it under Delimiter for labels. If the training documents use a delimiter other than the default or the delimiter you specify, the labels on that line will be combined to make a single unique label, such as LABELLABELLABEL.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nOutputDataConfig -> (structure)\n\nProvides output results configuration parameters for custom classifier jobs.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object while creating a custom classifier, you specify the Amazon S3 location where you want to write the confusion matrix. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of this output file.\n\nWhen the custom classifier job is finished, the service creates the output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the confusion matrix.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nClassifierMetadata -> (structure)\n\nInformation about the document classifier, including the number of documents used for training the classifier, the number of documents used for test the classifier, and an accuracy rating.\n\nNumberOfLabels -> (integer)\n\nThe number of labels in the input data.\n\nNumberOfTrainedDocuments -> (integer)\n\nThe number of documents in the input data that were used to train the classifier. Typically this is 80 to 90 percent of the input documents.\n\nNumberOfTestDocuments -> (integer)\n\nThe number of documents in the input data that were used to test the classifier. Typically this is 10 to 20 percent of the input documents, up to 10,000 documents.\n\nEvaluationMetrics -> (structure)\n\nDescribes the result metrics for the test data associated with an documentation classifier.\n\nAccuracy -> (double)\n\nThe fraction of the labels that were correct recognized. It is computed by dividing the number of labels in the test documents that were correctly recognized by the total number of labels in the test documents.\n\nPrecision -> (double)\n\nA measure of the usefulness of the classifier results in the test data. High precision means that the classifier returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the classifier results are for the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nMicroPrecision -> (double)\n\nA measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones. Unlike the Precision metric which comes from averaging the precision of all available labels, this is based on the overall score of all precision scores added together.\n\nMicroRecall -> (double)\n\nA measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results. Specifically, this indicates how many of the correct categories in the text that the model can predict. It is a percentage of correct categories in the text that can found. Instead of averaging the recall scores of all labels (as with Recall), micro Recall is based on the overall score of all recall scores added together.\n\nMicroF1Score -> (double)\n\nA measure of how accurate the classifier results are for the test data. It is a combination of the Micro Precision and Micro Recall values. The Micro F1Score is the harmonic mean of the two scores. The highest score is 1, and the worst score is 0.\n\nHammingLoss -> (double)\n\nIndicates the fraction of labels that are incorrectly predicted. Also seen as the fraction of wrong labels compared to the total number of labels. Scores closer to zero are better.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nMode -> (string)\n\nIndicates the mode in which the specific classifier was trained. This also indicates the format of input documents and the format of the confusion matrix. Each classifier can only be trained in one mode and this cannot be changed once the classifier is trained.\n\nModelKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVersionName -> (string)\n\nThe version name that you assigned to the document classifier."
    },
    {
      "command_name": "describe-dominant-language-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-dominant-language-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a dominant language detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-dominant-language-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDominantLanguageDetectionJobProperties -> (structure)\n\nAn object that contains the properties associated with a dominant language detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the dominant language detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dominant language detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:dominant-language-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:dominant-language-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the dominant language detection job.\n\nJobStatus -> (string)\n\nThe current status of the dominant language detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description for the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the dominant language detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the dominant language detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the dominant language detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the dominant language detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your dominant language detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "describe-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-endpoint.html",
      "command_description": "Description\n\nGets the properties associated with a specific endpoint. Use this operation to get the status of an endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-endpoint\n--endpoint-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-arn (string)\n\nThe Amazon Resource Number (ARN) of the endpoint being described.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpointProperties -> (structure)\n\nDescribes information associated with the specific endpoint.\n\nEndpointArn -> (string)\n\nThe Amazon Resource Number (ARN) of the endpoint.\n\nStatus -> (string)\n\nSpecifies the status of the endpoint. Because the endpoint updates and creation are asynchronous, so customers will need to wait for the endpoint to be Ready status before making inference requests.\n\nMessage -> (string)\n\nSpecifies a reason for failure in cases of Failed status.\n\nModelArn -> (string)\n\nThe Amazon Resource Number (ARN) of the model to which the endpoint is attached.\n\nDesiredModelArn -> (string)\n\nARN of the new model to use for updating an existing endpoint. This ARN is going to be different from the model ARN when the update is in progress\n\nDesiredInferenceUnits -> (integer)\n\nThe desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.\n\nCurrentInferenceUnits -> (integer)\n\nThe number of inference units currently used by the model using this endpoint.\n\nCreationTime -> (timestamp)\n\nThe creation date and time of the endpoint.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the endpoint was last modified.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to trained custom models encrypted with a customer managed key (ModelKmsKeyId).\n\nDesiredDataAccessRoleArn -> (string)\n\nData access role ARN to use in case the new model is encrypted with a customer KMS key."
    },
    {
      "command_name": "describe-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-entities-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with an entities detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-entities-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntitiesDetectionJobProperties -> (structure)\n\nAn object that contains the properties associated with an entities detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the entities detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the entities detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the entities detection job.\n\nJobStatus -> (string)\n\nThe current status of the entities detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the entities detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the entities detection job completed\n\nEntityRecognizerArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the entities detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the entities detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your entity detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "describe-entity-recognizer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-entity-recognizer.html",
      "command_description": "Description\n\nProvides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-entity-recognizer\n--entity-recognizer-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entity-recognizer-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entity-recognizer-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntityRecognizerProperties -> (structure)\n\nDescribes information associated with an entity recognizer.\n\nEntityRecognizerArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\nLanguageCode -> (string)\n\nThe language of the input documents. All documents must be in the same language. Only English (“en”) is currently supported.\n\nStatus -> (string)\n\nProvides the status of the entity recognizer.\n\nMessage -> (string)\n\nA description of the status of the recognizer.\n\nSubmitTime -> (timestamp)\n\nThe time that the recognizer was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the recognizer creation completed.\n\nTrainingStartTime -> (timestamp)\n\nThe time that training of the entity recognizer started.\n\nTrainingEndTime -> (timestamp)\n\nThe time that training of the entity recognizer was completed.\n\nInputDataConfig -> (structure)\n\nThe input data properties of an entity recognizer.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A CSV file that supplements your training documents. The CSV file contains information about the custom entities that your trained model will detect. The required format of the file depends on whether you are providing annotations or an entity list. If you use this value, you must provide your CSV file by using either the Annotations or EntityList parameters. You must provide your training documents by using the Documents parameter.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its labels. Each label annotates a named entity in the training document. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nEntityTypes -> (list)\n\nThe entity types in the labeled training data that Amazon Comprehend uses to train the custom entity recognizer. Any entity types that you don’t specify are ignored.\n\nA maximum of 25 entity types can be used at one time to train an entity recognizer. Entity types must not contain the following invalid characters: n (line break), \\n (escaped line break), r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\n(structure)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nType -> (string)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nEntity types must not contain the following invalid characters: n (line break), \\n (escaped line break, r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\nDocuments -> (structure)\n\nThe S3 location of the folder that contains the training documents for your custom entity recognizer.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the test documents for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed. This is optional, and the default is ONE_DOC_PER_LINE. ONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers. ONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nAnnotations -> (structure)\n\nThe S3 location of the CSV file that annotates your training documents.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the annotations for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nThis specifies the Amazon S3 location where the test annotations for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nEntityList -> (structure)\n\nThe S3 location of the CSV file that has the entity list for your custom entity recognizer.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the entity list is located. The URI must be in the same region as the API endpoint that you are calling.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nRecognizerMetadata -> (structure)\n\nProvides information about an entity recognizer.\n\nNumberOfTrainedDocuments -> (integer)\n\nThe number of documents in the input data that were used to train the entity recognizer. Typically this is 80 to 90 percent of the input documents.\n\nNumberOfTestDocuments -> (integer)\n\nThe number of documents in the input data that were used to test the entity recognizer. Typically this is 10 to 20 percent of the input documents.\n\nEvaluationMetrics -> (structure)\n\nDetailed information about the accuracy of an entity recognizer.\n\nPrecision -> (double)\n\nA measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the recognizer results are for the test data. High recall means that the recognizer returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the recognizer results are for the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nEntityTypes -> (list)\n\nEntity types from the metadata of an entity recognizer.\n\n(structure)\n\nIndividual item from the list of entity types in the metadata of an entity recognizer.\n\nType -> (string)\n\nType of entity from the list of entity types in the metadata of an entity recognizer.\n\nEvaluationMetrics -> (structure)\n\nDetailed information about the accuracy of the entity recognizer for a specific item on the list of entity types.\n\nPrecision -> (double)\n\nA measure of the usefulness of the recognizer results for a specific entity type in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the recognizer results are for a specific entity type in the test data. High recall means that the recognizer returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the recognizer results are for a specific entity type in the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nNumberOfTrainMentions -> (integer)\n\nIndicates the number of times the given entity type was seen in the training data.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom entity recognizer. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nModelKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVersionName -> (string)\n\nThe version name you assigned to the entity recognizer."
    },
    {
      "command_name": "describe-events-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-events-detection-job.html",
      "command_description": "Description\n\nGets the status and details of an events detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-events-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the events detection job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventsDetectionJobProperties -> (structure)\n\nAn object that contains the properties associated with an event detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the events detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the events detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:events-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:events-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name you assigned the events detection job.\n\nJobStatus -> (string)\n\nThe current status of the events detection job.\n\nMessage -> (string)\n\nA description of the status of the events detection job.\n\nSubmitTime -> (timestamp)\n\nThe time that the events detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the events detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the events detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the events detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identify and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nTargetEventTypes -> (list)\n\nThe types of events that are detected by the job.\n\n(string)"
    },
    {
      "command_name": "describe-key-phrases-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-key-phrases-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a key phrases detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-key-phrases-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyPhrasesDetectionJobProperties -> (structure)\n\nAn object that contains the properties associated with a key phrases detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the key phrases detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key phrases detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:key-phrases-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:key-phrases-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the key phrases detection job.\n\nJobStatus -> (string)\n\nThe current status of the key phrases detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the key phrases detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the key phrases detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the key phrases detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the key phrases detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your key phrases detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "describe-pii-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-pii-entities-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a PII entities detection job. For example, you can use this operation to get the job status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-pii-entities-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPiiEntitiesDetectionJobProperties -> (structure)\n\nProvides information about a PII entities detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the PII entities detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the PII entities detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:pii-entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:pii-entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the PII entities detection job.\n\nJobStatus -> (string)\n\nThe current status of the PII entities detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the PII entities detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the PII entities detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input properties for a PII entities detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the PII entities detection job.\n\nS3Uri -> (string)\n\nWhen you use the PiiOutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job.\n\nRedactionConfig -> (structure)\n\nProvides configuration parameters for PII entity redaction.\n\nThis parameter is required if you set the Mode parameter to ONLY_REDACTION . In that case, you must provide a RedactionConfig definition that includes the PiiEntityTypes parameter.\n\nPiiEntityTypes -> (list)\n\nAn array of the types of PII entities that Amazon Comprehend detects in the input text for your request.\n\n(string)\n\nMaskMode -> (string)\n\nSpecifies whether the PII entity is redacted with the mask character or the entity type.\n\nMaskCharacter -> (string)\n\nA character that replaces each character in the redacted PII entity.\n\nLanguageCode -> (string)\n\nThe language code of the input documents\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nMode -> (string)\n\nSpecifies whether the output provides the locations (offsets) of PII entities or a file in which PII entities are redacted."
    },
    {
      "command_name": "describe-sentiment-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-sentiment-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a sentiment detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-sentiment-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier that Amazon Comprehend generated for the job. The operation returns this identifier in its response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSentimentDetectionJobProperties -> (structure)\n\nAn object that contains the properties associated with a sentiment detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the sentiment detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the sentiment detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:sentiment-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:sentiment-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the sentiment detection job\n\nJobStatus -> (string)\n\nThe current status of the sentiment detection job. If the status is FAILED , the Messages field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the sentiment detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the sentiment detection job ended.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the sentiment detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the sentiment detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your sentiment detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "describe-topics-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/describe-topics-detection-job.html",
      "command_description": "Description\n\nGets the properties associated with a topic detection job. Use this operation to get the status of a detection job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-topics-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier assigned by the user to the detection job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTopicsDetectionJobProperties -> (structure)\n\nThe list of properties for the requested job.\n\nJobId -> (string)\n\nThe identifier assigned to the topic detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the topics detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:topics-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:topics-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name of the topic detection job.\n\nJobStatus -> (string)\n\nThe current status of the topic detection job. If the status is Failed , the reason for the failure is shown in the Message field.\n\nMessage -> (string)\n\nA description for the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the topic detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the topic detection job was completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration supplied when you created the topic detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration supplied when you created the topic detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nNumberOfTopics -> (integer)\n\nThe number of topics to detect supplied when you created the topic detection job. The default is 10.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your job data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your topic detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)"
    },
    {
      "command_name": "detect-dominant-language",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-dominant-language.html",
      "command_description": "Description\n\nDetermines the dominant language of the input text. For a list of languages that Amazon Comprehend can detect, see Amazon Comprehend Supported Languages .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-dominant-language\n--text <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string. Each string should contain at least 20 characters and must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLanguages -> (list)\n\nThe languages that Amazon Comprehend detected in the input text. For each language, the response returns the RFC 5646 language code and the level of confidence that Amazon Comprehend has in the accuracy of its inference. For more information about RFC 5646, see Tags for Identifying Languages on the IETF Tools web site.\n\n(structure)\n\nReturns the code for the dominant language in the input text and the level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nLanguageCode -> (string)\n\nThe RFC 5646 language code for the dominant language. For more information about RFC 5646, see Tags for Identifying Languages on the IETF Tools web site.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection."
    },
    {
      "command_name": "detect-entities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-entities.html",
      "command_description": "Description\n\nInspects text for named entities, and returns information about them. For more information, about named entities, see how-entities .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-entities\n--text <value>\n[--language-code <value>]\n[--endpoint-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "[--language-code <value>]",
        "[--endpoint-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nIf your request includes the endpoint for a custom entity recognition model, Amazon Comprehend uses the language of your custom model, and it ignores any language code that you specify here.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--endpoint-arn (string)\n\nThe Amazon Resource Name of an endpoint that is associated with a custom entity recognition model. Provide an endpoint if you want to detect entities by using your own custom model instead of the default model that is used by Amazon Comprehend.\n\nIf you specify an endpoint, Amazon Comprehend uses the language of your custom model, and it ignores any language code that you provide in your request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nA collection of entities identified in the input text. For each entity, the response provides the entity text, entity type, where the entity text begins and ends, and the level of confidence that Amazon Comprehend has in the detection.\n\nIf your request uses a custom entity recognition model, Amazon Comprehend detects the entities that the model is trained to recognize. Otherwise, it detects the default entity types. For a list of default entity types, see how-entities .\n\n(structure)\n\nProvides information about an entity.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nType -> (string)\n\nThe entity’s type.\n\nText -> (string)\n\nThe text of the entity.\n\nBeginOffset -> (integer)\n\nA character offset in the input text that shows where the entity begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nEndOffset -> (integer)\n\nA character offset in the input text that shows where the entity ends. The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point."
    },
    {
      "command_name": "detect-key-phrases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-key-phrases.html",
      "command_description": "Description\n\nDetects the key noun phrases found in the text.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-key-phrases\n--text <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyPhrases -> (list)\n\nA collection of key phrases that Amazon Comprehend identified in the input text. For each key phrase, the response provides the text of the key phrase, where the key phrase begins and ends, and the level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\n(structure)\n\nDescribes a key noun phrase.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nText -> (string)\n\nThe text of a key noun phrase.\n\nBeginOffset -> (integer)\n\nA character offset in the input text that shows where the key phrase begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nEndOffset -> (integer)\n\nA character offset in the input text where the key phrase ends. The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point."
    },
    {
      "command_name": "detect-pii-entities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-pii-entities.html",
      "command_description": "Description\n\nInspects the input text for entities that contain personally identifiable information (PII) and returns information about them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-pii-entities\n--text <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n--language-code (string)\n\nThe language of the input documents.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntities -> (list)\n\nA collection of PII entities identified in the input text. For each entity, the response provides the entity type, where the entity text begins and ends, and the level of confidence that Amazon Comprehend has in the detection.\n\n(structure)\n\nProvides information about a PII entity.\n\nScore -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of the detection.\n\nType -> (string)\n\nThe entity’s type.\n\nBeginOffset -> (integer)\n\nA character offset in the input text that shows where the PII entity begins (the first character is at position 0). The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point.\n\nEndOffset -> (integer)\n\nA character offset in the input text that shows where the PII entity ends. The offset returns the position of each UTF-8 code point in the string. A code point is the abstract character from a particular graphical representation. For example, a multi-byte UTF-8 character maps to a single code point."
    },
    {
      "command_name": "detect-sentiment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-sentiment.html",
      "command_description": "Description\n\nInspects text and returns an inference of the prevailing sentiment (POSITIVE , NEUTRAL , MIXED , or NEGATIVE ).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-sentiment\n--text <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 text string. Each string must contain fewer that 5,000 bytes of UTF-8 encoded characters.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSentiment -> (string)\n\nThe inferred sentiment that Amazon Comprehend has the highest level of confidence in.\n\nSentimentScore -> (structure)\n\nAn object that lists the sentiments, and their corresponding confidence levels.\n\nPositive -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the POSITIVE sentiment.\n\nNegative -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the NEGATIVE sentiment.\n\nNeutral -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the NEUTRAL sentiment.\n\nMixed -> (float)\n\nThe level of confidence that Amazon Comprehend has in the accuracy of its detection of the MIXED sentiment."
    },
    {
      "command_name": "detect-syntax",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/detect-syntax.html",
      "command_description": "Description\n\nInspects text for syntax and the part of speech of words in the document. For more information, how-syntax .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detect-syntax\n--text <value>\n--language-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--text <value>",
        "--language-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--text (string)\n\nA UTF-8 string. Each string must contain fewer that 5,000 bytes of UTF encoded characters.\n\n--language-code (string)\n\nThe language code of the input documents. You can specify any of the following languages supported by Amazon Comprehend: German (“de”), English (“en”), Spanish (“es”), French (“fr”), Italian (“it”), or Portuguese (“pt”).\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSyntaxTokens -> (list)\n\nA collection of syntax tokens describing the text. For each token, the response provides the text, the token type, where the text begins and ends, and the level of confidence that Amazon Comprehend has that the token is correct. For a list of token types, see how-syntax .\n\n(structure)\n\nRepresents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.\n\nTokenId -> (integer)\n\nA unique identifier for a token.\n\nText -> (string)\n\nThe word that was recognized in the source text.\n\nBeginOffset -> (integer)\n\nThe zero-based offset from the beginning of the source text to the first character in the word.\n\nEndOffset -> (integer)\n\nThe zero-based offset from the beginning of the source text to the last character in the word.\n\nPartOfSpeech -> (structure)\n\nProvides the part of speech label and the confidence level that Amazon Comprehend has that the part of speech was correctly identified. For more information, see how-syntax .\n\nTag -> (string)\n\nIdentifies the part of speech that the token represents.\n\nScore -> (float)\n\nThe confidence that Amazon Comprehend has that the part of speech was correctly identified."
    },
    {
      "command_name": "list-document-classification-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-document-classification-jobs.html",
      "command_description": "Description\n\nGets a list of the documentation classification jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-document-classification-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DocumentClassificationJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-document-classification-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their names, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassificationJobPropertiesList -> (list)\n\nA list containing the properties of each job returned.\n\n(structure)\n\nProvides information about a document classification job.\n\nJobId -> (string)\n\nThe identifier assigned to the document classification job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the document classification job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:document-classification-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:document-classification-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the document classification job.\n\nJobStatus -> (string)\n\nThe current status of the document classification job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of the job.\n\nSubmitTime -> (timestamp)\n\nThe time that the document classification job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the document classification job completed.\n\nDocumentClassifierArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the document classification job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the document classification job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your document classification job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-document-classifier-summaries",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-document-classifier-summaries.html",
      "command_description": "Description\n\nGets a list of summaries of the document classifiers that you have created\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-document-classifier-summaries\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return on each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassifierSummariesList -> (list)\n\nThe list of summaries of document classifiers.\n\n(structure)\n\nDescribes information about a document classifier and its versions.\n\nDocumentClassifierName -> (string)\n\nThe name that you assigned the document classifier.\n\nNumberOfVersions -> (integer)\n\nThe number of versions you created.\n\nLatestVersionCreatedAt -> (timestamp)\n\nThe time that the latest document classifier version was submitted for processing.\n\nLatestVersionName -> (string)\n\nThe version name you assigned to the latest document classifier version.\n\nLatestVersionStatus -> (string)\n\nProvides the status of the latest document classifier version.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-document-classifiers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-document-classifiers.html",
      "command_description": "Description\n\nGets a list of the document classifiers that you have created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-document-classifiers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DocumentClassifierPropertiesList",
      "command_synopsis": "Synopsis\n  list-document-classifiers\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nStatus -> (string)\n\nFilters the list of classifiers based on status.\n\nDocumentClassifierName -> (string)\n\nThe name that you assigned to the document classifier\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of classifiers based on the time that the classifier was submitted for processing. Returns only classifiers submitted before the specified time. Classifiers are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of classifiers based on the time that the classifier was submitted for processing. Returns only classifiers submitted after the specified time. Classifiers are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nStatus=string,DocumentClassifierName=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"Status\": \"SUBMITTED\"|\"TRAINING\"|\"DELETING\"|\"STOP_REQUESTED\"|\"STOPPED\"|\"IN_ERROR\"|\"TRAINED\",\n  \"DocumentClassifierName\": \"string\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDocumentClassifierPropertiesList -> (list)\n\nA list containing the properties of each job returned.\n\n(structure)\n\nProvides information about a document classifier.\n\nDocumentClassifierArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier.\n\nLanguageCode -> (string)\n\nThe language code for the language of the documents that the classifier was trained on.\n\nStatus -> (string)\n\nThe status of the document classifier. If the status is TRAINED the classifier is ready to use. If the status is FAILED you can see additional information about why the classifier wasn’t trained in the Message field.\n\nMessage -> (string)\n\nAdditional information about the status of the classifier.\n\nSubmitTime -> (timestamp)\n\nThe time that the document classifier was submitted for training.\n\nEndTime -> (timestamp)\n\nThe time that training the document classifier completed.\n\nTrainingStartTime -> (timestamp)\n\nIndicates the time when the training starts on documentation classifiers. You are billed for the time interval between this time and the value of TrainingEndTime.\n\nTrainingEndTime -> (timestamp)\n\nThe time that training of the document classifier was completed. Indicates the time when the training completes on documentation classifiers. You are billed for the time interval between this time and the value of TrainingStartTime.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the document classifier for training.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A two-column CSV file, where labels are provided in the first column, and documents are provided in the second. If you use this value, you must provide the S3Uri parameter in your request.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its associated labels. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The S3 bucket must be in the same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nTestS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The Amazon S3 bucket must be in the same AWS Region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of input files.\n\nLabelDelimiter -> (string)\n\nIndicates the delimiter used to separate each label for training a multi-label classifier. The default delimiter between labels is a pipe (|). You can use a different character as a delimiter (if it’s an allowed character) by specifying it under Delimiter for labels. If the training documents use a delimiter other than the default or the delimiter you specify, the labels on that line will be combined to make a single unique label, such as LABELLABELLABEL.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nOutputDataConfig -> (structure)\n\nProvides output results configuration parameters for custom classifier jobs.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object while creating a custom classifier, you specify the Amazon S3 location where you want to write the confusion matrix. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of this output file.\n\nWhen the custom classifier job is finished, the service creates the output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the confusion matrix.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nClassifierMetadata -> (structure)\n\nInformation about the document classifier, including the number of documents used for training the classifier, the number of documents used for test the classifier, and an accuracy rating.\n\nNumberOfLabels -> (integer)\n\nThe number of labels in the input data.\n\nNumberOfTrainedDocuments -> (integer)\n\nThe number of documents in the input data that were used to train the classifier. Typically this is 80 to 90 percent of the input documents.\n\nNumberOfTestDocuments -> (integer)\n\nThe number of documents in the input data that were used to test the classifier. Typically this is 10 to 20 percent of the input documents, up to 10,000 documents.\n\nEvaluationMetrics -> (structure)\n\nDescribes the result metrics for the test data associated with an documentation classifier.\n\nAccuracy -> (double)\n\nThe fraction of the labels that were correct recognized. It is computed by dividing the number of labels in the test documents that were correctly recognized by the total number of labels in the test documents.\n\nPrecision -> (double)\n\nA measure of the usefulness of the classifier results in the test data. High precision means that the classifier returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the classifier results are for the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nMicroPrecision -> (double)\n\nA measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones. Unlike the Precision metric which comes from averaging the precision of all available labels, this is based on the overall score of all precision scores added together.\n\nMicroRecall -> (double)\n\nA measure of how complete the classifier results are for the test data. High recall means that the classifier returned most of the relevant results. Specifically, this indicates how many of the correct categories in the text that the model can predict. It is a percentage of correct categories in the text that can found. Instead of averaging the recall scores of all labels (as with Recall), micro Recall is based on the overall score of all recall scores added together.\n\nMicroF1Score -> (double)\n\nA measure of how accurate the classifier results are for the test data. It is a combination of the Micro Precision and Micro Recall values. The Micro F1Score is the harmonic mean of the two scores. The highest score is 1, and the worst score is 0.\n\nHammingLoss -> (double)\n\nIndicates the fraction of labels that are incorrectly predicted. Also seen as the fraction of wrong labels compared to the total number of labels. Scores closer to zero are better.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nMode -> (string)\n\nIndicates the mode in which the specific classifier was trained. This also indicates the format of input documents and the format of the confusion matrix. Each classifier can only be trained in one mode and this cannot be changed once the classifier is trained.\n\nModelKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVersionName -> (string)\n\nThe version name that you assigned to the document classifier.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-dominant-language-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-dominant-language-detection-jobs.html",
      "command_description": "Description\n\nGets a list of the dominant language detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-dominant-language-detection-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DominantLanguageDetectionJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-dominant-language-detection-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters that jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDominantLanguageDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a dominant language detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the dominant language detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dominant language detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:dominant-language-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:dominant-language-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the dominant language detection job.\n\nJobStatus -> (string)\n\nThe current status of the dominant language detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description for the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the dominant language detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the dominant language detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the dominant language detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the dominant language detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your dominant language detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-endpoints",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-endpoints.html",
      "command_description": "Description\n\nGets a list of all existing endpoints that you’ve created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-endpoints\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the endpoints that are returned. You can filter endpoints on their name, model, status, or the date and time that they were created. You can only set one filter at a time.\n\nModelArn -> (string)\n\nThe Amazon Resource Number (ARN) of the model to which the endpoint is attached.\n\nStatus -> (string)\n\nSpecifies the status of the endpoint being returned. Possible values are: Creating, Ready, Updating, Deleting, Failed.\n\nCreationTimeBefore -> (timestamp)\n\nSpecifies a date before which the returned endpoint or endpoints were created.\n\nCreationTimeAfter -> (timestamp)\n\nSpecifies a date after which the returned endpoint or endpoints were created.\n\nShorthand Syntax:\n\nModelArn=string,Status=string,CreationTimeBefore=timestamp,CreationTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"ModelArn\": \"string\",\n  \"Status\": \"CREATING\"|\"DELETING\"|\"FAILED\"|\"IN_SERVICE\"|\"UPDATING\",\n  \"CreationTimeBefore\": timestamp,\n  \"CreationTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEndpointPropertiesList -> (list)\n\nDisplays a list of endpoint properties being retrieved by the service in response to the request.\n\n(structure)\n\nSpecifies information about the specified endpoint.\n\nEndpointArn -> (string)\n\nThe Amazon Resource Number (ARN) of the endpoint.\n\nStatus -> (string)\n\nSpecifies the status of the endpoint. Because the endpoint updates and creation are asynchronous, so customers will need to wait for the endpoint to be Ready status before making inference requests.\n\nMessage -> (string)\n\nSpecifies a reason for failure in cases of Failed status.\n\nModelArn -> (string)\n\nThe Amazon Resource Number (ARN) of the model to which the endpoint is attached.\n\nDesiredModelArn -> (string)\n\nARN of the new model to use for updating an existing endpoint. This ARN is going to be different from the model ARN when the update is in progress\n\nDesiredInferenceUnits -> (integer)\n\nThe desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.\n\nCurrentInferenceUnits -> (integer)\n\nThe number of inference units currently used by the model using this endpoint.\n\nCreationTime -> (timestamp)\n\nThe creation date and time of the endpoint.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the endpoint was last modified.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS identity and Access Management (IAM) role that grants Amazon Comprehend read access to trained custom models encrypted with a customer managed key (ModelKmsKeyId).\n\nDesiredDataAccessRoleArn -> (string)\n\nData access role ARN to use in case the new model is encrypted with a customer KMS key.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-entities-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-entities-detection-jobs.html",
      "command_description": "Description\n\nGets a list of the entity detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-entities-detection-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EntitiesDetectionJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-entities-detection-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntitiesDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about an entities detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the entities detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the entities detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the entities detection job.\n\nJobStatus -> (string)\n\nThe current status of the entities detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the entities detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the entities detection job completed\n\nEntityRecognizerArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the entities detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the entities detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your entity detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-entity-recognizer-summaries",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-entity-recognizer-summaries.html",
      "command_description": "Description\n\nGets a list of summaries for the entity recognizers that you have created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-entity-recognizer-summaries\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return on each page. The default is 100.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntityRecognizerSummariesList -> (list)\n\nThe list entity recognizer summaries.\n\n(structure)\n\nDescribes the information about an entity recognizer and its versions.\n\nRecognizerName -> (string)\n\nThe name that you assigned the entity recognizer.\n\nNumberOfVersions -> (integer)\n\nThe number of versions you created.\n\nLatestVersionCreatedAt -> (timestamp)\n\nThe time that the latest entity recognizer version was submitted for processing.\n\nLatestVersionName -> (string)\n\nThe version name you assigned to the latest entity recognizer version.\n\nLatestVersionStatus -> (string)\n\nProvides the status of the latest entity recognizer version.\n\nNextToken -> (string)\n\nThe list entity recognizer summaries."
    },
    {
      "command_name": "list-entity-recognizers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-entity-recognizers.html",
      "command_description": "Description\n\nGets a list of the properties of all entity recognizers that you created, including recognizers currently in training. Allows you to filter the list of recognizers based on criteria such as status and submission time. This call returns up to 500 entity recognizers in the list, with a default number of 100 recognizers in the list.\n\nThe results of this list are not in any particular order. Please get the list and sort locally if needed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-entity-recognizers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EntityRecognizerPropertiesList",
      "command_synopsis": "Synopsis\n  list-entity-recognizers\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the list of entities returned. You can filter on Status , SubmitTimeBefore , or SubmitTimeAfter . You can only set one filter at a time.\n\nStatus -> (string)\n\nThe status of an entity recognizer.\n\nRecognizerName -> (string)\n\nThe name that you assigned the entity recognizer.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of entities based on the time that the list was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in descending order, newest to oldest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of entities based on the time that the list was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in ascending order, oldest to newest.\n\nShorthand Syntax:\n\nStatus=string,RecognizerName=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"Status\": \"SUBMITTED\"|\"TRAINING\"|\"DELETING\"|\"STOP_REQUESTED\"|\"STOPPED\"|\"IN_ERROR\"|\"TRAINED\",\n  \"RecognizerName\": \"string\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEntityRecognizerPropertiesList -> (list)\n\nThe list of properties of an entity recognizer.\n\n(structure)\n\nDescribes information about an entity recognizer.\n\nEntityRecognizerArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer.\n\nLanguageCode -> (string)\n\nThe language of the input documents. All documents must be in the same language. Only English (“en”) is currently supported.\n\nStatus -> (string)\n\nProvides the status of the entity recognizer.\n\nMessage -> (string)\n\nA description of the status of the recognizer.\n\nSubmitTime -> (timestamp)\n\nThe time that the recognizer was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the recognizer creation completed.\n\nTrainingStartTime -> (timestamp)\n\nThe time that training of the entity recognizer started.\n\nTrainingEndTime -> (timestamp)\n\nThe time that training of the entity recognizer was completed.\n\nInputDataConfig -> (structure)\n\nThe input data properties of an entity recognizer.\n\nDataFormat -> (string)\n\nThe format of your training data:\n\nCOMPREHEND_CSV : A CSV file that supplements your training documents. The CSV file contains information about the custom entities that your trained model will detect. The required format of the file depends on whether you are providing annotations or an entity list. If you use this value, you must provide your CSV file by using either the Annotations or EntityList parameters. You must provide your training documents by using the Documents parameter.\n\nAUGMENTED_MANIFEST : A labeled dataset that is produced by Amazon SageMaker Ground Truth. This file is in JSON lines format. Each line is a complete JSON object that contains a training document and its labels. Each label annotates a named entity in the training document. If you use this value, you must provide the AugmentedManifests parameter in your request.\n\nIf you don’t specify a value, Amazon Comprehend uses COMPREHEND_CSV as the default.\n\nEntityTypes -> (list)\n\nThe entity types in the labeled training data that Amazon Comprehend uses to train the custom entity recognizer. Any entity types that you don’t specify are ignored.\n\nA maximum of 25 entity types can be used at one time to train an entity recognizer. Entity types must not contain the following invalid characters: n (line break), \\n (escaped line break), r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\n(structure)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nType -> (string)\n\nAn entity type within a labeled training dataset that Amazon Comprehend uses to train a custom entity recognizer.\n\nEntity types must not contain the following invalid characters: n (line break), \\n (escaped line break, r (carriage return), \\r (escaped carriage return), t (tab), \\t (escaped tab), space, and , (comma).\n\nDocuments -> (structure)\n\nThe S3 location of the folder that contains the training documents for your custom entity recognizer.\n\nThis parameter is required if you set DataFormat to COMPREHEND_CSV .\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the training documents for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the test documents for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed. This is optional, and the default is ONE_DOC_PER_LINE. ONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers. ONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nAnnotations -> (structure)\n\nThe S3 location of the CSV file that annotates your training documents.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the annotations for an entity recognizer are located. The URI must be in the same region as the API endpoint that you are calling.\n\nTestS3Uri -> (string)\n\nThis specifies the Amazon S3 location where the test annotations for an entity recognizer are located. The URI must be in the same AWS Region as the API endpoint that you are calling.\n\nEntityList -> (structure)\n\nThe S3 location of the CSV file that has the entity list for your custom entity recognizer.\n\nS3Uri -> (string)\n\nSpecifies the Amazon S3 location where the entity list is located. The URI must be in the same region as the API endpoint that you are calling.\n\nAugmentedManifests -> (list)\n\nA list of augmented manifest files that provide training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nThis parameter is required if you set DataFormat to AUGMENTED_MANIFEST .\n\n(structure)\n\nAn augmented manifest file that provides training data for your custom model. An augmented manifest file is a labeled dataset that is produced by Amazon SageMaker Ground Truth.\n\nS3Uri -> (string)\n\nThe Amazon S3 location of the augmented manifest file.\n\nSplit -> (string)\n\nThe purpose of the data you’ve provided in the augmented manifest. You can either train or test this data. If you don’t specify, the default is train.\n\nTRAIN - all of the documents in the manifest will be used for training. If no test documents are provided, Amazon Comprehend will automatically reserve a portion of the training documents for testing.\n\nTEST - all of the documents in the manifest will be used for testing.\n\nAttributeNames -> (list)\n\nThe JSON attribute that contains the annotations for your training documents. The number of attribute names that you specify depends on whether your augmented manifest file is the output of a single labeling job or a chained labeling job.\n\nIf your file is the output of a single labeling job, specify the LabelAttributeName key that was used when the job was created in Ground Truth.\n\nIf your file is the output of a chained labeling job, specify the LabelAttributeName key for one or more jobs in the chain. Each LabelAttributeName key provides the annotations from an individual job.\n\n(string)\n\nAnnotationDataS3Uri -> (string)\n\nThe S3 prefix to the annotation files that are referred in the augmented manifest file.\n\nSourceDocumentsS3Uri -> (string)\n\nThe S3 prefix to the source files (PDFs) that are referred to in the augmented manifest file.\n\nDocumentType -> (string)\n\nThe type of augmented manifest. PlainTextDocument or SemiStructuredDocument. If you don’t specify, the default is PlainTextDocument.\n\nPLAIN_TEXT_DOCUMENT A document type that represents any unicode text that is encoded in UTF-8.\n\nSEMI_STRUCTURED_DOCUMENT A document type with positional and structural context, like a PDF. For training with Amazon Comprehend, only PDFs are supported. For inference, Amazon Comprehend support PDFs, DOCX and TXT.\n\nRecognizerMetadata -> (structure)\n\nProvides information about an entity recognizer.\n\nNumberOfTrainedDocuments -> (integer)\n\nThe number of documents in the input data that were used to train the entity recognizer. Typically this is 80 to 90 percent of the input documents.\n\nNumberOfTestDocuments -> (integer)\n\nThe number of documents in the input data that were used to test the entity recognizer. Typically this is 10 to 20 percent of the input documents.\n\nEvaluationMetrics -> (structure)\n\nDetailed information about the accuracy of an entity recognizer.\n\nPrecision -> (double)\n\nA measure of the usefulness of the recognizer results in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the recognizer results are for the test data. High recall means that the recognizer returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the recognizer results are for the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nEntityTypes -> (list)\n\nEntity types from the metadata of an entity recognizer.\n\n(structure)\n\nIndividual item from the list of entity types in the metadata of an entity recognizer.\n\nType -> (string)\n\nType of entity from the list of entity types in the metadata of an entity recognizer.\n\nEvaluationMetrics -> (structure)\n\nDetailed information about the accuracy of the entity recognizer for a specific item on the list of entity types.\n\nPrecision -> (double)\n\nA measure of the usefulness of the recognizer results for a specific entity type in the test data. High precision means that the recognizer returned substantially more relevant results than irrelevant ones.\n\nRecall -> (double)\n\nA measure of how complete the recognizer results are for a specific entity type in the test data. High recall means that the recognizer returned most of the relevant results.\n\nF1Score -> (double)\n\nA measure of how accurate the recognizer results are for a specific entity type in the test data. It is derived from the Precision and Recall values. The F1Score is the harmonic average of the two scores. The highest score is 1, and the worst score is 0.\n\nNumberOfTrainMentions -> (integer)\n\nIndicates the number of times the given entity type was seen in the training data.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom entity recognizer. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nModelKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVersionName -> (string)\n\nThe version name you assigned to the entity recognizer.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-events-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-events-detection-jobs.html",
      "command_description": "Description\n\nGets a list of the events detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-events-detection-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the events detection job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventsDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about an events detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the events detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the events detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:events-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:events-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name you assigned the events detection job.\n\nJobStatus -> (string)\n\nThe current status of the events detection job.\n\nMessage -> (string)\n\nA description of the status of the events detection job.\n\nSubmitTime -> (timestamp)\n\nThe time that the events detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the events detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the events detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the events detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identify and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\nTargetEventTypes -> (list)\n\nThe types of events that are detected by the job.\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-key-phrases-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-key-phrases-detection-jobs.html",
      "command_description": "Description\n\nGet a list of key phrase detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-key-phrases-detection-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: KeyPhrasesDetectionJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-key-phrases-detection-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyPhrasesDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a key phrases detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the key phrases detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key phrases detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:key-phrases-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:key-phrases-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the key phrases detection job.\n\nJobStatus -> (string)\n\nThe current status of the key phrases detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the key phrases detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the key phrases detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the key phrases detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the key phrases detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your key phrases detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-pii-entities-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-pii-entities-detection-jobs.html",
      "command_description": "Description\n\nGets a list of the PII entity detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-pii-entities-detection-jobs\n[--filter <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--next-token (string)\n\nIdentifies the next page of results to return.\n\n--max-results (integer)\n\nThe maximum number of results to return in each page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPiiEntitiesDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a PII entities detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the PII entities detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the PII entities detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:pii-entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:pii-entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned the PII entities detection job.\n\nJobStatus -> (string)\n\nThe current status of the PII entities detection job. If the status is FAILED , the Message field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the PII entities detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the PII entities detection job completed.\n\nInputDataConfig -> (structure)\n\nThe input properties for a PII entities detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the PII entities detection job.\n\nS3Uri -> (string)\n\nWhen you use the PiiOutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job.\n\nRedactionConfig -> (structure)\n\nProvides configuration parameters for PII entity redaction.\n\nThis parameter is required if you set the Mode parameter to ONLY_REDACTION . In that case, you must provide a RedactionConfig definition that includes the PiiEntityTypes parameter.\n\nPiiEntityTypes -> (list)\n\nAn array of the types of PII entities that Amazon Comprehend detects in the input text for your request.\n\n(string)\n\nMaskMode -> (string)\n\nSpecifies whether the PII entity is redacted with the mask character or the entity type.\n\nMaskCharacter -> (string)\n\nA character that replaces each character in the redacted PII entity.\n\nLanguageCode -> (string)\n\nThe language code of the input documents\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nMode -> (string)\n\nSpecifies whether the output provides the locations (offsets) of PII entities or a file in which PII entities are redacted.\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-sentiment-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-sentiment-detection-jobs.html",
      "command_description": "Description\n\nGets a list of sentiment detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-sentiment-detection-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SentimentDetectionJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-sentiment-detection-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. You can filter jobs on their name, status, or the date and time that they were submitted. You can only set one filter at a time.\n\nJobName -> (string)\n\nFilters on the name of the job.\n\nJobStatus -> (string)\n\nFilters the list of jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted before the specified time. Jobs are returned in ascending order, oldest to newest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Returns only jobs submitted after the specified time. Jobs are returned in descending order, newest to oldest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSentimentDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a sentiment detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the sentiment detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the sentiment detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:sentiment-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:sentiment-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name that you assigned to the sentiment detection job\n\nJobStatus -> (string)\n\nThe current status of the sentiment detection job. If the status is FAILED , the Messages field shows the reason for the failure.\n\nMessage -> (string)\n\nA description of the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the sentiment detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the sentiment detection job ended.\n\nInputDataConfig -> (structure)\n\nThe input data configuration that you supplied when you created the sentiment detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration that you supplied when you created the sentiment detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nLanguageCode -> (string)\n\nThe language code of the input documents.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) that gives Amazon Comprehend read access to your input data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your sentiment detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-tags-for-resource.html",
      "command_description": "Description\n\nLists all tags associated with a given Amazon Comprehend resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the given Amazon Comprehend resource you are querying.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceArn -> (string)\n\nThe Amazon Resource Name (ARN) of the given Amazon Comprehend resource you are querying.\n\nTags -> (list)\n\nTags associated with the Amazon Comprehend resource being queried. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department."
    },
    {
      "command_name": "list-topics-detection-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/list-topics-detection-jobs.html",
      "command_description": "Description\n\nGets a list of the topic detection jobs that you have submitted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-topics-detection-jobs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TopicsDetectionJobPropertiesList",
      "command_synopsis": "Synopsis\n  list-topics-detection-jobs\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nFilters the jobs that are returned. Jobs can be filtered on their name, status, or the date and time that they were submitted. You can set only one filter at a time.\n\nJobName -> (string)\n\nJobStatus -> (string)\n\nFilters the list of topic detection jobs based on job status. Returns only jobs with the specified status.\n\nSubmitTimeBefore -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Only returns jobs submitted before the specified time. Jobs are returned in descending order, newest to oldest.\n\nSubmitTimeAfter -> (timestamp)\n\nFilters the list of jobs based on the time that the job was submitted for processing. Only returns jobs submitted after the specified time. Jobs are returned in ascending order, oldest to newest.\n\nShorthand Syntax:\n\nJobName=string,JobStatus=string,SubmitTimeBefore=timestamp,SubmitTimeAfter=timestamp\n\n\nJSON Syntax:\n\n{\n  \"JobName\": \"string\",\n  \"JobStatus\": \"SUBMITTED\"|\"IN_PROGRESS\"|\"COMPLETED\"|\"FAILED\"|\"STOP_REQUESTED\"|\"STOPPED\",\n  \"SubmitTimeBefore\": timestamp,\n  \"SubmitTimeAfter\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTopicsDetectionJobPropertiesList -> (list)\n\nA list containing the properties of each job that is returned.\n\n(structure)\n\nProvides information about a topic detection job.\n\nJobId -> (string)\n\nThe identifier assigned to the topic detection job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the topics detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:topics-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:topics-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobName -> (string)\n\nThe name of the topic detection job.\n\nJobStatus -> (string)\n\nThe current status of the topic detection job. If the status is Failed , the reason for the failure is shown in the Message field.\n\nMessage -> (string)\n\nA description for the status of a job.\n\nSubmitTime -> (timestamp)\n\nThe time that the topic detection job was submitted for processing.\n\nEndTime -> (timestamp)\n\nThe time that the topic detection job was completed.\n\nInputDataConfig -> (structure)\n\nThe input data configuration supplied when you created the topic detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nOutputDataConfig -> (structure)\n\nThe output data configuration supplied when you created the topic detection job.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nNumberOfTopics -> (integer)\n\nThe number of topics to detect supplied when you created the topic detection job. The default is 10.\n\nDataAccessRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Management (IAM) role that grants Amazon Comprehend read access to your job data.\n\nVolumeKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nVpcConfig -> (structure)\n\nConfiguration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your topic detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nNextToken -> (string)\n\nIdentifies the next page of results to return."
    },
    {
      "command_name": "start-document-classification-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-document-classification-job.html",
      "command_description": "Description\n\nStarts an asynchronous document classification job. Use the operation to track the progress of the job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-document-classification-job\n[--job-name <value>]\n--document-classifier-arn <value>\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--job-name <value>]",
        "--document-classifier-arn <value>",
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-name (string)\n\nThe identifier of the job.\n\n--document-classifier-arn (string)\n\nThe Amazon Resource Name (ARN) of the document classifier to use to process the job.\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your document classification job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the document classification job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of the job, use this identifier with the operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the document classification job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:document-classification-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:document-classification-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job:\n\nSUBMITTED - The job has been received and queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. For details, use the operation.\n\nSTOP_REQUESTED - Amazon Comprehend has received a stop request for the job and is processing the request.\n\nSTOPPED - The job was successfully stopped without completing."
    },
    {
      "command_name": "start-dominant-language-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-dominant-language-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous dominant language detection job for a collection of documents. Use the operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-dominant-language-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions .\n\n--job-name (string)\n\nAn identifier for the job.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your dominant language detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the dominant language detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the dominant language detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:dominant-language-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:dominant-language-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job.\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. To get details, use the operation."
    },
    {
      "command_name": "start-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-entities-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous entity detection job for a collection of documents. Use the operation to track the status of a job.\n\nThis API can be used for either standard entity detection or custom entity recognition. In order to be used for custom entity recognition, the optional EntityRecognizerArn must be used in order to provide access to the recognizer being used to detect the custom entity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-entities-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--entity-recognizer-arn <value>]\n--language-code <value>\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--entity-recognizer-arn <value>]",
        "--language-code <value>",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--entity-recognizer-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the specific entity recognizer to be used by the StartEntitiesDetectionJob . This ARN is optional and is only used for a custom entity recognition job.\n\n--language-code (string)\n\nThe language of the input documents. All documents must be in the same language. You can specify any of the languages supported by Amazon Comprehend. If custom entities recognition is used, this parameter is ignored and the language used for training the model is used instead.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your entity detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the entities detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of job, use this identifier with the operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the entities detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job.\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. To get details, use the operation.\n\nSTOP_REQUESTED - Amazon Comprehend has received a stop request for the job and is processing the request.\n\nSTOPPED - The job was successfully stopped without completing."
    },
    {
      "command_name": "start-events-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-events-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous event detection job for a collection of documents.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-events-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n--language-code <value>\n[--client-request-token <value>]\n--target-event-types <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "--language-code <value>",
        "[--client-request-token <value>]",
        "--target-event-types <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\n--job-name (string)\n\nThe identifier of the events detection job.\n\n--language-code (string)\n\nThe language code of the input documents.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--client-request-token (string)\n\nAn unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--target-event-types (list)\n\nThe types of events to detect in the input documents.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nTags to be associated with the events detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nAn unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the events detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:events-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:events-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the events detection job."
    },
    {
      "command_name": "start-key-phrases-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-key-phrases-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous key phrase detection job for a collection of documents. Use the operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-key-phrases-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n--language-code <value>\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "--language-code <value>",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your key phrases detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the key phrases detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the key phrase detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:key-phrases-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:key-phrases-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job.\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. To get details, use the operation."
    },
    {
      "command_name": "start-pii-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-pii-entities-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous PII entity detection job for a collection of documents.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-pii-entities-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--mode <value>\n[--redaction-config <value>]\n--data-access-role-arn <value>\n[--job-name <value>]\n--language-code <value>\n[--client-request-token <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--mode <value>",
        "[--redaction-config <value>]",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "--language-code <value>",
        "[--client-request-token <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nThe input properties for a PII entities detection job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nProvides conﬁguration parameters for the output of PII entity detection jobs.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--mode (string)\n\nSpecifies whether the output provides the locations (offsets) of PII entities or a file in which PII entities are redacted.\n\nPossible values:\n\nONLY_REDACTION\n\nONLY_OFFSETS\n\n--redaction-config (structure)\n\nProvides configuration parameters for PII entity redaction.\n\nThis parameter is required if you set the Mode parameter to ONLY_REDACTION . In that case, you must provide a RedactionConfig definition that includes the PiiEntityTypes parameter.\n\nPiiEntityTypes -> (list)\n\nAn array of the types of PII entities that Amazon Comprehend detects in the input text for your request.\n\n(string)\n\nMaskMode -> (string)\n\nSpecifies whether the PII entity is redacted with the mask character or the entity type.\n\nMaskCharacter -> (string)\n\nA character that replaces each character in the redacted PII entity.\n\nShorthand Syntax:\n\nPiiEntityTypes=string,string,MaskMode=string,MaskCharacter=string\n\n\nJSON Syntax:\n\n{\n  \"PiiEntityTypes\": [\"BANK_ACCOUNT_NUMBER\"|\"BANK_ROUTING\"|\"CREDIT_DEBIT_NUMBER\"|\"CREDIT_DEBIT_CVV\"|\"CREDIT_DEBIT_EXPIRY\"|\"PIN\"|\"EMAIL\"|\"ADDRESS\"|\"NAME\"|\"PHONE\"|\"SSN\"|\"DATE_TIME\"|\"PASSPORT_NUMBER\"|\"DRIVER_ID\"|\"URL\"|\"AGE\"|\"USERNAME\"|\"PASSWORD\"|\"AWS_ACCESS_KEY\"|\"AWS_SECRET_KEY\"|\"IP_ADDRESS\"|\"MAC_ADDRESS\"|\"ALL\", ...],\n  \"MaskMode\": \"MASK\"|\"REPLACE_WITH_PII_ENTITY_TYPE\",\n  \"MaskCharacter\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data.\n\n--job-name (string)\n\nThe identifier of the job.\n\n--language-code (string)\n\nThe language of the input documents.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--tags (list)\n\nTags to be associated with the PII entities detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the PII entity detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:pii-entities-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:pii-entities-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job."
    },
    {
      "command_name": "start-sentiment-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-sentiment-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous sentiment detection job for a collection of documents. use the operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-sentiment-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n--language-code <value>\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "--language-code <value>",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files.\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--language-code (string)\n\nThe language of the input documents. You can specify any of the primary languages supported by Amazon Comprehend. All documents must be in the same language.\n\nPossible values:\n\nen\n\nes\n\nfr\n\nde\n\nit\n\npt\n\nar\n\nhi\n\nja\n\nko\n\nzh\n\nzh-TW\n\n--client-request-token (string)\n\nA unique identifier for the request. If you don’t set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your sentiment detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the sentiment detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of a job, use this identifier with the operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the sentiment detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:sentiment-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:sentiment-detection-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job.\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. To get details, use the operation."
    },
    {
      "command_name": "start-topics-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/start-topics-detection-job.html",
      "command_description": "Description\n\nStarts an asynchronous topic detection job. Use the DescribeTopicDetectionJob operation to track the status of a job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-topics-detection-job\n--input-data-config <value>\n--output-data-config <value>\n--data-access-role-arn <value>\n[--job-name <value>]\n[--number-of-topics <value>]\n[--client-request-token <value>]\n[--volume-kms-key-id <value>]\n[--vpc-config <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--input-data-config <value>",
        "--output-data-config <value>",
        "--data-access-role-arn <value>",
        "[--job-name <value>]",
        "[--number-of-topics <value>]",
        "[--client-request-token <value>]",
        "[--volume-kms-key-id <value>]",
        "[--vpc-config <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--input-data-config (structure)\n\nSpecifies the format and location of the input data for the job.\n\nS3Uri -> (string)\n\nThe Amazon S3 URI for the input data. The URI must be in same region as the API endpoint that you are calling. The URI can point to a single input file or it can provide the prefix for a collection of data files.\n\nFor example, if you use the URI S3://bucketName/prefix , if the prefix is a single file, Amazon Comprehend uses that file as input. If more than one file begins with the prefix, Amazon Comprehend uses all of them as input.\n\nInputFormat -> (string)\n\nSpecifies how the text in an input file should be processed:\n\nONE_DOC_PER_FILE - Each file is considered a separate document. Use this option when you are processing large documents, such as newspaper articles or scientific papers.\n\nONE_DOC_PER_LINE - Each line in a file is considered a separate document. Use this option when you are processing many short documents, such as text messages.\n\nDocumentReaderConfig -> (structure)\n\nThe document reader config field applies only for InputDataConfig of StartEntitiesDetectionJob.\n\nUse DocumentReaderConfig to provide specifications about how you want your inference documents read. Currently it applies for PDF documents in StartEntitiesDetectionJob custom inference.\n\nDocumentReadAction -> (string)\n\nThis enum field will start with two values which will apply to PDFs:\n\nTEXTRACT_DETECT_DOCUMENT_TEXT - The service calls DetectDocumentText for PDF documents per page.\n\nTEXTRACT_ANALYZE_DOCUMENT - The service calls AnalyzeDocument for PDF documents per page.\n\nDocumentReadMode -> (string)\n\nThis enum field provides two values:\n\nSERVICE_DEFAULT - use service defaults for Document reading. For Digital PDF it would mean using an internal parser instead of Textract APIs\n\nFORCE_DOCUMENT_READ_ACTION - Always use specified action for DocumentReadAction, including Digital PDF.\n\nFeatureTypes -> (list)\n\nSpecifies how the text in an input file should be processed:\n\n(string)\n\nA list of the types of analyses to perform. This field specifies what feature types need to be extracted from the document where entity recognition is expected.\n\nTABLES - Add TABLES to the list to return information about the tables that are detected in the input document.\n\nFORMS - Add FORMS to return detected form data.\n\nShorthand Syntax:\n\nS3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"InputFormat\": \"ONE_DOC_PER_FILE\"|\"ONE_DOC_PER_LINE\",\n  \"DocumentReaderConfig\": {\n    \"DocumentReadAction\": \"TEXTRACT_DETECT_DOCUMENT_TEXT\"|\"TEXTRACT_ANALYZE_DOCUMENT\",\n    \"DocumentReadMode\": \"SERVICE_DEFAULT\"|\"FORCE_DOCUMENT_READ_ACTION\",\n    \"FeatureTypes\": [\"TABLES\"|\"FORMS\", ...]\n  }\n}\n\n\n--output-data-config (structure)\n\nSpecifies where to send the output files. The output is a compressed archive with two files, topic-terms.csv that lists the terms associated with each topic, and doc-topics.csv that lists the documents associated with each topic\n\nS3Uri -> (string)\n\nWhen you use the OutputDataConfig object with asynchronous operations, you specify the Amazon S3 location where you want to write the output data. The URI must be in the same region as the API endpoint that you are calling. The location is used as the prefix for the actual location of the output file.\n\nWhen the topic detection job is finished, the service creates an output file in a directory specific to the job. The S3Uri field contains the location of the output file, called output.tar.gz . It is a compressed archive that contains the ouput of the operation.\n\nKmsKeyId -> (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt the output results from an analysis job. The KmsKeyId can be one of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nKMS Key Alias: \"alias/ExampleAlias\"\n\nARN of a KMS Key Alias: \"arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias\"\n\nShorthand Syntax:\n\nS3Uri=string,KmsKeyId=string\n\n\nJSON Syntax:\n\n{\n  \"S3Uri\": \"string\",\n  \"KmsKeyId\": \"string\"\n}\n\n\n--data-access-role-arn (string)\n\nThe Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants Amazon Comprehend read access to your input data. For more information, see https://docs.aws.amazon.com/comprehend/latest/dg/access-control-managing-permissions.html#auth-role-permissions .\n\n--job-name (string)\n\nThe identifier of the job.\n\n--number-of-topics (integer)\n\nThe number of topics to detect.\n\n--client-request-token (string)\n\nA unique identifier for the request. If you do not set the client request token, Amazon Comprehend generates one.\n\n--volume-kms-key-id (string)\n\nID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:\n\nKMS Key ID: \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n\nAmazon Resource Name (ARN) of a KMS Key: \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n\n--vpc-config (structure)\n\nConfiguration parameters for an optional private Virtual Private Cloud (VPC) containing the resources you are using for your topic detection job. For more information, see Amazon VPC .\n\nSecurityGroupIds -> (list)\n\nThe ID number for a security group on an instance of your private VPC. Security groups on your VPC function serve as a virtual firewall to control inbound and outbound traffic and provides security for the resources that you’ll be accessing on the VPC. This ID number is preceded by “sg-“, for instance: “sg-03b388029b0a285ea”. For more information, see Security Groups for your VPC .\n\n(string)\n\nSubnets -> (list)\n\nThe ID for each subnet being used in your private VPC. This subnet is a subset of the a range of IPv4 addresses used by the VPC and is specific to a given availability zone in the VPC’s region. This ID number is preceded by “subnet-“, for instance: “subnet-04ccf456919e69055”. For more information, see VPCs and Subnets .\n\n(string)\n\nShorthand Syntax:\n\nSecurityGroupIds=string,string,Subnets=string,string\n\n\nJSON Syntax:\n\n{\n  \"SecurityGroupIds\": [\"string\", ...],\n  \"Subnets\": [\"string\", ...]\n}\n\n\n--tags (list)\n\nTags to be associated with the topics detection job. A tag is a key-value pair that adds metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier generated for the job. To get the status of the job, use this identifier with the DescribeTopicDetectionJob operation.\n\nJobArn -> (string)\n\nThe Amazon Resource Name (ARN) of the topics detection job. It is a unique, fully qualified identifier for the job. It includes the AWS account, Region, and the job ID. The format of the ARN is as follows:\n\narn:<partition>:comprehend:<region>:<account-id>:topics-detection-job/<job-id>\n\nThe following is an example job ARN:\n\narn:aws:comprehend:us-west-2:111122223333:document-classification-job/1234abcd12ab34cd56ef1234567890ab\n\nJobStatus -> (string)\n\nThe status of the job:\n\nSUBMITTED - The job has been received and is queued for processing.\n\nIN_PROGRESS - Amazon Comprehend is processing the job.\n\nCOMPLETED - The job was successfully completed and the output is available.\n\nFAILED - The job did not complete. To get details, use the DescribeTopicDetectionJob operation."
    },
    {
      "command_name": "stop-dominant-language-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-dominant-language-detection-job.html",
      "command_description": "Description\n\nStops a dominant language detection job in progress.\n\nIf the job state is IN_PROGRESS the job is marked for termination and put into the STOP_REQUESTED state. If the job completes before it can be stopped, it is put into the COMPLETED state; otherwise the job is stopped and put into the STOPPED state.\n\nIf the job is in the COMPLETED or FAILED state when you call the StopDominantLanguageDetectionJob operation, the operation returns a 400 Internal Request Exception.\n\nWhen a job is stopped, any documents already processed are written to the output location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-dominant-language-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the dominant language detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the dominant language detection job to stop.\n\nJobStatus -> (string)\n\nEither STOP_REQUESTED if the job is currently running, or STOPPED if the job was previously stopped with the StopDominantLanguageDetectionJob operation."
    },
    {
      "command_name": "stop-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-entities-detection-job.html",
      "command_description": "Description\n\nStops an entities detection job in progress.\n\nIf the job state is IN_PROGRESS the job is marked for termination and put into the STOP_REQUESTED state. If the job completes before it can be stopped, it is put into the COMPLETED state; otherwise the job is stopped and put into the STOPPED state.\n\nIf the job is in the COMPLETED or FAILED state when you call the StopDominantLanguageDetectionJob operation, the operation returns a 400 Internal Request Exception.\n\nWhen a job is stopped, any documents already processed are written to the output location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-entities-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the entities detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the entities detection job to stop.\n\nJobStatus -> (string)\n\nEither STOP_REQUESTED if the job is currently running, or STOPPED if the job was previously stopped with the StopEntitiesDetectionJob operation."
    },
    {
      "command_name": "stop-events-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-events-detection-job.html",
      "command_description": "Description\n\nStops an events detection job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-events-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the events detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the events detection job to stop.\n\nJobStatus -> (string)\n\nThe status of the events detection job."
    },
    {
      "command_name": "stop-key-phrases-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-key-phrases-detection-job.html",
      "command_description": "Description\n\nStops a key phrases detection job in progress.\n\nIf the job state is IN_PROGRESS the job is marked for termination and put into the STOP_REQUESTED state. If the job completes before it can be stopped, it is put into the COMPLETED state; otherwise the job is stopped and put into the STOPPED state.\n\nIf the job is in the COMPLETED or FAILED state when you call the StopDominantLanguageDetectionJob operation, the operation returns a 400 Internal Request Exception.\n\nWhen a job is stopped, any documents already processed are written to the output location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-key-phrases-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the key phrases detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the key phrases detection job to stop.\n\nJobStatus -> (string)\n\nEither STOP_REQUESTED if the job is currently running, or STOPPED if the job was previously stopped with the StopKeyPhrasesDetectionJob operation."
    },
    {
      "command_name": "stop-pii-entities-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-pii-entities-detection-job.html",
      "command_description": "Description\n\nStops a PII entities detection job in progress.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-pii-entities-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the PII entities detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the PII entities detection job to stop.\n\nJobStatus -> (string)\n\nThe status of the PII entities detection job."
    },
    {
      "command_name": "stop-sentiment-detection-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-sentiment-detection-job.html",
      "command_description": "Description\n\nStops a sentiment detection job in progress.\n\nIf the job state is IN_PROGRESS the job is marked for termination and put into the STOP_REQUESTED state. If the job completes before it can be stopped, it is put into the COMPLETED state; otherwise the job is be stopped and put into the STOPPED state.\n\nIf the job is in the COMPLETED or FAILED state when you call the StopDominantLanguageDetectionJob operation, the operation returns a 400 Internal Request Exception.\n\nWhen a job is stopped, any documents already processed are written to the output location.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-sentiment-detection-job\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe identifier of the sentiment detection job to stop.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nJobId -> (string)\n\nThe identifier of the sentiment detection job to stop.\n\nJobStatus -> (string)\n\nEither STOP_REQUESTED if the job is currently running, or STOPPED if the job was previously stopped with the StopSentimentDetectionJob operation."
    },
    {
      "command_name": "stop-training-document-classifier",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-training-document-classifier.html",
      "command_description": "Description\n\nStops a document classifier training job while in progress.\n\nIf the training job state is TRAINING , the job is marked for termination and put into the STOP_REQUESTED state. If the training job completes before it can be stopped, it is put into the TRAINED ; otherwise the training job is stopped and put into the STOPPED state and the service sends back an HTTP 200 response with an empty HTTP body.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-training-document-classifier\n--document-classifier-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--document-classifier-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--document-classifier-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the document classifier currently being trained.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "stop-training-entity-recognizer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/stop-training-entity-recognizer.html",
      "command_description": "Description\n\nStops an entity recognizer training job while in progress.\n\nIf the training job state is TRAINING , the job is marked for termination and put into the STOP_REQUESTED state. If the training job completes before it can be stopped, it is put into the TRAINED ; otherwise the training job is stopped and putted into the STOPPED state and the service sends back an HTTP 200 response with an empty HTTP body.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-training-entity-recognizer\n--entity-recognizer-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entity-recognizer-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entity-recognizer-arn (string)\n\nThe Amazon Resource Name (ARN) that identifies the entity recognizer currently being trained.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/tag-resource.html",
      "command_description": "Description\n\nAssociates a specific tag with an Amazon Comprehend resource. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the given Amazon Comprehend resource to which you want to associate the tags.\n\n--tags (list)\n\nTags being associated with a specific Amazon Comprehend resource. There can be a maximum of 50 tags (both existing and pending) associated with a specific resource.\n\n(structure)\n\nA key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with the key-value pair ‘Department’:’Sales’ might be added to a resource to indicate its use by a particular department.\n\nKey -> (string)\n\nThe initial part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the key portion of the pair, with multiple possible values such as “sales,” “legal,” and “administration.”\n\nValue -> (string)\n\nThe second part of a key-value pair that forms a tag associated with a given resource. For instance, if you want to show which resources are used by which departments, you might use “Department” as the initial (key) portion of the pair, with a value of “sales” to indicate the sales department.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/untag-resource.html",
      "command_description": "Description\n\nRemoves a specific tag associated with an Amazon Comprehend resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the given Amazon Comprehend resource from which you want to remove the tags.\n\n--tag-keys (list)\n\nThe initial part of a key-value pair that forms a tag being removed from a given resource. For example, a tag with “Sales” as the key might be added to a resource to indicate its use by the sales department. Keys must be unique and cannot be duplicated for a particular resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-endpoint",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/comprehend/update-endpoint.html",
      "command_description": "Description\n\nUpdates information about the specified endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-endpoint\n--endpoint-arn <value>\n[--desired-model-arn <value>]\n[--desired-inference-units <value>]\n[--desired-data-access-role-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--endpoint-arn <value>",
        "[--desired-model-arn <value>]",
        "[--desired-inference-units <value>]",
        "[--desired-data-access-role-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--endpoint-arn (string)\n\nThe Amazon Resource Number (ARN) of the endpoint being updated.\n\n--desired-model-arn (string)\n\nThe ARN of the new model to use when updating an existing endpoint.\n\n--desired-inference-units (integer)\n\nThe desired number of inference units to be used by the model using this endpoint. Each inference unit represents of a throughput of 100 characters per second.\n\n--desired-data-access-role-arn (string)\n\nData access role ARN to use in case the new model is encrypted with a customer CMK.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAmazon Comprehend is an AWS service for gaining insight into the content of documents. Use these actions to determine the topics contained in your documents, the topics they discuss, the predominant sentiment expressed in them, the predominant language used, and more."
}