{
  "service_name": "greengrass",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/index.html",
  "service_commands": [
    {
      "command_name": "associate-role-to-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/associate-role-to-group.html",
      "command_description": "Description\n\nAssociates a role with a group. Your Greengrass core will use the role to access AWS cloud services. The role’s permissions should allow Greengrass core Lambda functions to perform actions against the cloud.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-role-to-group\n--group-id <value>\n--role-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "--role-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--role-arn (string) The ARN of the role you wish to associate with this group. The existence of the role is not validated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssociatedAt -> (string)\n\nThe time, in milliseconds since the epoch, when the role ARN was associated with the group.",
      "command_examples": "Examples\n\nTo associate a role with a Greengrass group\n\nThe following associate-role-to-group example associates the specified IAM role with a Greengrass group. The group role is used by local Lambda functions and connectors to access AWS services. For example, your group role might grant permissions required for CloudWatch Logs integration.\n\naws greengrass associate-role-to-group \\\n    --group-id 2494ee3f-7f8a-4e92-a78b-d205f808b84b \\\n    --role-arn arn:aws:iam::123456789012:role/GG-Group-Role\n\n\nOutput:\n\n{\n    \"AssociatedAt\": \"2019-09-10T20:03:30Z\"\n}\n\n\nFor more information, see Configure the Group Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "associate-service-role-to-account",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/associate-service-role-to-account.html",
      "command_description": "Description\n\nAssociates a role with your account. AWS IoT Greengrass will use the role to access your Lambda functions and AWS IoT resources. This is necessary for deployments to succeed. The role must have at least minimum permissions in the policy ‘’AWSGreengrassResourceAccessRolePolicy’’.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-service-role-to-account\n--role-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--role-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--role-arn (string) The ARN of the service role you wish to associate with your account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssociatedAt -> (string)\n\nThe time when the service role was associated with the account.",
      "command_examples": "Examples\n\nTo associate a service role with your AWS account\n\nThe following associate-service-role-to-account example associates an IAM service role, specified by its ARN, with AWS IoT Greengrass in your AWS account. You must have previously created the service role in IAM, and you must associate a policy document with it that allows AWS IoT Greengrass to assume this role.\n\naws greengrass associate-service-role-to-account \\\n    --role-arn \"arn:aws:iam::123456789012:role/service-role/Greengrass_ServiceRole\"\n\n\nOutput:\n\n{\n    \"AssociatedAt\": \"2019-06-25T18:12:45Z\"\n}\n\n\nFor more information, see Greengrass Service Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-connector-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-connector-definition.html",
      "command_description": "Description\n\nCreates a connector definition. You may provide the initial version of the connector definition now or use ‘’CreateConnectorDefinitionVersion’’ at a later time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connector-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the connector definition.Connectors -> (list)\n\nA list of references to connectors in this version, with their corresponding configuration settings.\n\n(structure)\n\nInformation about a connector. Connectors run on the Greengrass core and contain built-in integration with local infrastructure, device protocols, AWS, and other cloud services.\n\nConnectorArn -> (string)\n\nThe ARN of the connector.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the connector. This value must be unique within the connector definition version. Max length is 128 characters with pattern [a-zA-Z0-9:_-]+.\n\nParameters -> (map)\n\nThe parameters or configuration that the connector uses.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nConnectors=[{ConnectorArn=string,Id=string,Parameters={KeyName1=string,KeyName2=string}},{ConnectorArn=string,Id=string,Parameters={KeyName1=string,KeyName2=string}}]\n\n\nJSON Syntax:\n\n{\n  \"Connectors\": [\n    {\n      \"ConnectorArn\": \"string\",\n      \"Id\": \"string\",\n      \"Parameters\": {\"string\": \"string\"\n        ...}\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the connector definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a connector definition\n\nThe following create-connector-definition example example creates a connector definition and an initial connector definition version. The initial version contains one connector. All connectors in a version define values for their parameters.\n\naws greengrass create-connector-definition \\\n    --name MySNSConnector \\\n    --initial-version \"{\\\"Connectors\\\": [{\\\"Id\\\":\\\"MySNSConnector\\\",\\\"ConnectorArn\\\":\\\"arn:aws:greengrass:us-west-2::/connectors/SNS/versions/1\\\",\\\"Parameters\\\": {\\\"DefaultSNSArn\\\":\\\"arn:aws:sns:us-west-2:123456789012:GGConnectorTopic\\\"}}]}\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n    \"CreationTimestamp\": \"2019-06-19T19:30:01.300Z\",\n    \"Id\": \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T19:30:01.300Z\",\n    \"LatestVersion\": \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8/versions/63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n    \"Name\": \"MySNSConnector\"\n}\n\n\nFor more information, see Getting Started with Greengrass Connectors (CLI) in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-connector-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-connector-definition-version.html",
      "command_description": "Description\n\nCreates a version of a connector definition which has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connector-definition-version\n[--amzn-client-token <value>]\n--connector-definition-id <value>\n[--connectors <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--connector-definition-id <value>",
        "[--connectors <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--connectors (list) A list of references to connectors in this version, with their corresponding configuration settings.(structure)\n\nInformation about a connector. Connectors run on the Greengrass core and contain built-in integration with local infrastructure, device protocols, AWS, and other cloud services.\n\nConnectorArn -> (string)\n\nThe ARN of the connector.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the connector. This value must be unique within the connector definition version. Max length is 128 characters with pattern [a-zA-Z0-9:_-]+.\n\nParameters -> (map)\n\nThe parameters or configuration that the connector uses.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nConnectorArn=string,Id=string,Parameters={KeyName1=string,KeyName2=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ConnectorArn\": \"string\",\n    \"Id\": \"string\",\n    \"Parameters\": {\"string\": \"string\"\n      ...}\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a connector definition version\n\nThe following create-connector-definition-version example creates a connector definition version and associates it with the specified connector definition. All connectors in a version define values for their parameters.\n\naws greengrass create-connector-definition-version \\\n    --connector-definition-id \"55d0052b-0d7d-44d6-b56f-21867215e118\" \\\n    --connectors \"[{\\\"Id\\\": \\\"MyTwilioNotificationsConnector\\\", \\\"ConnectorArn\\\": \\\"arn:aws:greengrass:us-west-2::/connectors/TwilioNotifications/versions/2\\\", \\\"Parameters\\\": {\\\"TWILIO_ACCOUNT_SID\\\": \\\"AC1a8d4204890840d7fc482aab38090d57\\\", \\\"TwilioAuthTokenSecretArn\\\": \\\"arn:aws:secretsmanager:us-west-2:123456789012:secret:greengrass-TwilioAuthToken-ntSlp6\\\", \\\"TwilioAuthTokenSecretArn-ResourceId\\\": \\\"TwilioAuthToken\\\", \\\"DefaultFromPhoneNumber\\\": \\\"4254492999\\\"}}]\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/55d0052b-0d7d-44d6-b56f-21867215e118/versions/33f709a0-c825-49cb-9eea-dc8964fbd635\",\n    \"CreationTimestamp\": \"2019-06-24T20:46:30.134Z\",\n    \"Id\": \"55d0052b-0d7d-44d6-b56f-21867215e118\",\n    \"Version\": \"33f709a0-c825-49cb-9eea-dc8964fbd635\"\n}\n"
    },
    {
      "command_name": "create-core-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-core-definition.html",
      "command_description": "Description\n\nCreates a core definition. You may provide the initial version of the core definition now or use ‘’CreateCoreDefinitionVersion’’ at a later time. Greengrass groups must each contain exactly one Greengrass core.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-core-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the core definition.Cores -> (list)\n\nA list of cores in the core definition version.\n\n(structure)\n\nInformation about a core.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the core.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the core. This value must be unique within the core definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the core’s local shadow is automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe ARN of the thing which is the core.\n\nShorthand Syntax:\n\nCores=[{CertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string},{CertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string}]\n\n\nJSON Syntax:\n\n{\n  \"Cores\": [\n    {\n      \"CertificateArn\": \"string\",\n      \"Id\": \"string\",\n      \"SyncShadow\": true|false,\n      \"ThingArn\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the core definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nExample 1: To create an empty core definition\n\nThe following create-core-definition example creates an empty (no initial version) Greengrass core definition. Before the core is usable, you must use the create-core-definition-version command to provide the other parameters for the core.\n\naws greengrass create-core-definition \\\n    --name cliGroup_Core\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/b5c08008-54cb-44bd-9eec-c121b04283b5\",\n    \"CreationTimestamp\": \"2019-06-25T18:23:22.106Z\",\n    \"Id\": \"b5c08008-54cb-44bd-9eec-c121b04283b5\",\n    \"LastUpdatedTimestamp\": \"2019-06-25T18:23:22.106Z\",\n    \"Name\": \"cliGroup_Core\"\n}\n\n\nExample 2: To create a core definition with an initial version\n\nThe following create-core-definition example creates a core definition that contains an initial core definition version. The version can contain one core only. Before you can create a core, you must first create and provision the corresponding AWS IoT thing. This process includes the following iot commands, which return the ThingArn and CertificateArn required for the create-core-definition command.\n\nCreate the AWS IoT thing that corresponds to the core device:\n\naws iot create-thing \\\n    --thing-name \"MyCoreDevice\"\n\n\nOutput:\n\n{\n    \"thingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/MyCoreDevice\",\n    \"thingName\": \"MyCoreDevice\",\n    \"thingId\": \"cb419a19-9099-4515-9cec-e9b0e760608a\"\n}\n\n\nCreate public and private keys and the core device certificate for the thing. This example uses the create-keys-and-certificate command and requires write permissions to the current directory. Alternatively, you can use the create-certificate-from-csr command.\n\naws iot create-keys-and-certificate \\\n    --set-as-active \\\n    --certificate-pem-outfile \"myCore.cert.pem\" \\\n    --public-key-outfile \"myCore.public.key\" \\\n    --private-key-outfile \"myCore.private.key\"\n\n\nOutput:\n\n{\n    \"certificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\",\n    \"certificatePem\": \"-----BEGIN CERTIFICATE-----\\nMIIDWTCAkGgAwIBATgIUCgq6EGqou6zFqWgIZRndgQEFW+gwDQYJKoZIhvc...KdGewQS\\n-----END CERTIFICATE-----\\n\",\n    \"keyPair\": {\n        \"PublicKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBzrqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqKpRgnn6yq26U3y...wIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n        \"PrivateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIABAKCAQEAqKpRgnn6yq26U3yt5YFZquyukfRjbMXDcNOK4rMCxDR...fvY4+te\\n-----END RSA PRIVATE KEY-----\\n\"\n    },\n    \"certificateId\": \"123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n}\n\n\nCreate an AWS IoT policy that allows iot and greengrass actions. For simplicity, the following policy allows actions on all resources, but your policy should be more restrictive.\n\naws iot create-policy \\\n    --policy-name \"Core_Devices\" \\\n    --policy-document \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\"\n\n\nOutput:\n\n{\n    \"policyName\": \"Core_Devices\",\n    \"policyArn\": \"arn:aws:iot:us-west-2:123456789012:policy/Core_Devices\",\n    \"policyDocument\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\",\n    \"policyVersionId\": \"1\"\n}\n\n\nAttach the policy to the certificate:\n\naws iot attach-policy \\\n    --policy-name \"Core_Devices\" \\\n    --target \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n\n\nThis command produces no output.\n\nAttach the thing to the certificate:\n\naws iot attach-thing-principal \\\n    --thing-name \"MyCoreDevice\" \\\n    --principal \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n\n\nThis command produces no output.\n\nCreate the core definition:\n\naws greengrass create-core-definition \\\n    --name \"MyCores\" \\\n    --initial-version \"{\\\"Cores\\\":[{\\\"Id\\\":\\\"MyCoreDevice\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/MyCoreDevice\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\\\",\\\"SyncShadow\\\":true}]}\"\n\n\nOutput:\n\n{\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/582efe12-b05a-409e-9a24-a2ba1bcc4a12/versions/cc87b5b3-8f4b-465d-944c-1d6de5dbfcdb\",\n    \"Name\": \"MyCores\",\n    \"LastUpdatedTimestamp\": \"2019-09-18T00:11:06.197Z\",\n    \"LatestVersion\": \"cc87b5b3-8f4b-465d-944c-1d6de5dbfcdb\",\n    \"CreationTimestamp\": \"2019-09-18T00:11:06.197Z\",\n    \"Id\": \"582efe12-b05a-409e-9a24-a2ba1bcc4a12\",\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/582efe12-b05a-409e-9a24-a2ba1bcc4a12\"\n}\n\n\nFor more information, see Configure the AWS IoT Greengrass Core in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-core-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-core-definition-version.html",
      "command_description": "Description\n\nCreates a version of a core definition that has already been defined. Greengrass groups must each contain exactly one Greengrass core.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-core-definition-version\n[--amzn-client-token <value>]\n--core-definition-id <value>\n[--cores <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--core-definition-id <value>",
        "[--cores <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--core-definition-id (string) The ID of the core definition.\n\n--cores (list) A list of cores in the core definition version.(structure)\n\nInformation about a core.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the core.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the core. This value must be unique within the core definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the core’s local shadow is automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe ARN of the thing which is the core.\n\nShorthand Syntax:\n\nCertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"CertificateArn\": \"string\",\n    \"Id\": \"string\",\n    \"SyncShadow\": true|false,\n    \"ThingArn\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a core definition version\n\nThe following create-core-definition-version example creates a core definition version and associates it with the specified core definition. The version can contain one core only. Before you can create a core, you must first create and provision the corresponding AWS IoT thing. This process includes the following iot commands, which return the ThingArn and CertificateArn required for the create-core-definition-version command.\n\nCreate the AWS IoT thing that corresponds to the core device:\n\naws iot create-thing \\\n    --thing-name \"MyCoreDevice\"\n\n\nOutput:\n\n{\n    \"thingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/MyCoreDevice\",\n    \"thingName\": \"MyCoreDevice\",\n    \"thingId\": \"cb419a19-9099-4515-9cec-e9b0e760608a\"\n}\n\n\nCreate public and private keys and the core device certificate for the thing. This example uses the create-keys-and-certificate command and requires write permissions to the current directory. Alternatively, you can use the create-certificate-from-csr command.\n\naws iot create-keys-and-certificate \\\n    --set-as-active \\\n    --certificate-pem-outfile \"myCore.cert.pem\" \\\n    --public-key-outfile \"myCore.public.key\" \\\n    --private-key-outfile \"myCore.private.key\"\n\n\nOutput:\n\n{\n    \"certificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\",\n    \"certificatePem\": \"-----BEGIN CERTIFICATE-----\\nMIIDWTCAkGgAwIBATgIUCgq6EGqou6zFqWgIZRndgQEFW+gwDQYJKoZIhvc...KdGewQS\\n-----END CERTIFICATE-----\\n\",\n    \"keyPair\": {\n        \"PublicKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBzrqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqKpRgnn6yq26U3y...wIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n        \"PrivateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIABAKCAQEAqKpRgnn6yq26U3yt5YFZquyukfRjbMXDcNOK4rMCxDR...fvY4+te\\n-----END RSA PRIVATE KEY-----\\n\"\n    },\n    \"certificateId\": \"123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n}\n\n\nCreate an AWS IoT policy that allows iot and greengrass actions. For simplicity, the following policy allows actions on all resources, but your policy should be more restrictive.\n\naws iot create-policy \\\n    --policy-name \"Core_Devices\" \\\n    --policy-document \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\"\n\n\nOutput:\n\n{\n    \"policyName\": \"Core_Devices\",\n    \"policyArn\": \"arn:aws:iot:us-west-2:123456789012:policy/Core_Devices\",\n    \"policyDocument\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\",\n    \"policyVersionId\": \"1\"\n}\n\n\nAttach the policy to the certificate:\n\naws iot attach-policy \\\n    --policy-name \"Core_Devices\" \\\n    --target \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n\n\nThis command produces no output.\n\nAttach the thing to the certificate:\n\naws iot attach-thing-principal \\\n    --thing-name \"MyCoreDevice\" \\\n    --principal \"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\"\n\n\nThis command produces no output.\n\nCreate the core definition version:\n\naws greengrass create-core-definition-version \\\n    --core-definition-id \"582efe12-b05a-409e-9a24-a2ba1bcc4a12\" \\\n    --cores \"[{\\\"Id\\\":\\\"MyCoreDevice\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/MyCoreDevice\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\\\",\\\"SyncShadow\\\":true}]\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/582efe12-b05a-409e-9a24-a2ba1bcc4a12/versions/3fdc1190-2ce5-44de-b98b-eec8f9571014\",\n    \"Version\": \"3fdc1190-2ce5-44de-b98b-eec8f9571014\",\n    \"CreationTimestamp\": \"2019-09-18T00:15:09.838Z\",\n    \"Id\": \"582efe12-b05a-409e-9a24-a2ba1bcc4a12\"\n}\n\n\nFor more information, see Configure the AWS IoT Greengrass Core in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-deployment.html",
      "command_description": "Description\n\nCreates a deployment. ‘’CreateDeployment’’ requests are idempotent with respect to the ‘’X-Amzn-Client-Token’’ token and the request parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment\n[--amzn-client-token <value>]\n[--deployment-id <value>]\n--deployment-type <value>\n--group-id <value>\n[--group-version-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--deployment-id <value>]",
        "--deployment-type <value>",
        "--group-id <value>",
        "[--group-version-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--deployment-id (string) The ID of the deployment if you wish to redeploy a previous deployment.\n\n--deployment-type (string) The type of deployment. When used for ‘’CreateDeployment’’, only ‘’NewDeployment’’ and ‘’Redeployment’’ are valid.\n\nPossible values:\n\nNewDeployment\n\nRedeployment\n\nResetDeployment\n\nForceResetDeployment\n\n--group-id (string) The ID of the Greengrass group.\n\n--group-version-id (string) The ID of the group version to be deployed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeploymentArn -> (string)\n\nThe ARN of the deployment.\n\nDeploymentId -> (string)\n\nThe ID of the deployment.",
      "command_examples": "Examples\n\nTo create a deployment for a version of a Greengrass group\n\nThe following create-deployment example deploys the specified version of a Greengrass group.\n\naws greengrass create-deployment \\\n    --deployment-type NewDeployment \\\n    --group-id \"ce2e7d01-3240-4c24-b8e6-f6f6e7a9eeca\" \\\n    --group-version-id \"dc40c1e9-e8c8-4d28-a84d-a9cad5f599c9\"\n\n\nOutput:\n\n{\n    \"DeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/ce2e7d01-3240-4c24-b8e6-f6f6e7a9eeca/deployments/bfceb608-4e97-45bc-af5c-460144270308\",\n    \"DeploymentId\": \"bfceb608-4e97-45bc-af5c-460144270308\"\n}\n\n\nFor more information, see Getting Started with Connectors (CLI) in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-device-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-device-definition.html",
      "command_description": "Description\n\nCreates a device definition. You may provide the initial version of the device definition now or use ‘’CreateDeviceDefinitionVersion’’ at a later time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-device-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the device definition.Devices -> (list)\n\nA list of devices in the definition version.\n\n(structure)\n\nInformation about a device.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the device.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the device. This value must be unique within the device definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the device’s local shadow will be automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe thing ARN of the device.\n\nShorthand Syntax:\n\nDevices=[{CertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string},{CertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string}]\n\n\nJSON Syntax:\n\n{\n  \"Devices\": [\n    {\n      \"CertificateArn\": \"string\",\n      \"Id\": \"string\",\n      \"SyncShadow\": true|false,\n      \"ThingArn\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the device definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a device definition\n\nThe following create-device-definition example creates a device definition that contains an initial device definition version. The initial version defines two devices. Before you can create a Greengrass device, you must first create and provision the corresponding AWS IoT thing. This process includes the following iot commands that you must run to get the required information for the Greengrass command:\n\nCreate the AWS IoT thing that corresponds to the device:\n\naws iot create-thing \\\n    --thing-name \"InteriorTherm\"\n\n\nOutput:\n\n{\n    \"thingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/InteriorTherm\",\n    \"thingName\": \"InteriorTherm\",\n    \"thingId\": \"01d4763c-78a6-46c6-92be-7add080394bf\"\n}\n\n\nCreate public and private keys and the device certificate for the thing. This example uses the create-keys-and-certificate command and requires write permissions to the current directory. Alternatively, you can use the create-certificate-from-csr command:\n\naws iot create-keys-and-certificate \\\n    --set-as-active \\\n    --certificate-pem-outfile \"myDevice.cert.pem\" \\\n    --public-key-outfile \"myDevice.public.key\" \\\n    --private-key-outfile \"myDevice.private.key\"\n\n\nOutput:\n\n{\n    \"certificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\",\n    \"certificatePem\": \"-----BEGIN CERTIFICATE-----\\nMIIDWTCAkGgAwIBATgIUCgq6EGqou6zFqWgIZRndgQEFW+gwDQYJKoZIhvc...KdGewQS\\n-----END CERTIFICATE-----\\n\",\n    \"keyPair\": {\n        \"PublicKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBzrqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqKpRgnn6yq26U3y...wIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n        \"PrivateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIABAKCAQEAqKpRgnn6yq26U3yt5YFZquyukfRjbMXDcNOK4rMCxDR...fvY4+te\\n-----END RSA PRIVATE KEY-----\\n\"\n    },\n    \"certificateId\": \"66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n}\n\n\nCreate an AWS IoT policy that allows iot and greengrass actions. For simplicity, the following policy allows actions on all resources, but your policy can be more restrictive:\n\naws iot create-policy \\\n    --policy-name \"GG_Devices\" \\\n    --policy-document \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\"\n\n\nOutput:\n\n{\n    \"policyName\": \"GG_Devices\",\n    \"policyArn\": \"arn:aws:iot:us-west-2:123456789012:policy/GG_Devices\",\n    \"policyDocument\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\",\n    \"policyVersionId\": \"1\"\n}\n\n\nAttach the policy to the certificate:\n\naws iot attach-policy \\\n    --policy-name \"GG_Devices\" \\\n    --target \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n\n\nAttach the thing to the certificate\n\naws iot attach-thing-principal \\\n    --thing-name \"InteriorTherm\" \\\n    --principal \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n\n\nAfter you create and configure the IoT thing as shown above, use the ThingArn and CertificateArn from the first two commands in the following example.\n\naws greengrass create-device-definition \\\n    --name \"Sensors\" \\\n    --initial-version \"{\\\"Devices\\\":[{\\\"Id\\\":\\\"InteriorTherm\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/InteriorTherm\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\\\",\\\"SyncShadow\\\":true},{\\\"Id\\\":\\\"ExteriorTherm\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/ExteriorTherm\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/6c52ce1b47bde88a637e9ccdd45fe4e4c2c0a75a6866f8f63d980ee22fa51e02\\\",\\\"SyncShadow\\\":true}]}\"\n\n\nOutput:\n\n{\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/3b5cc510-58c1-44b5-9d98-4ad858ffa795\",\n    \"Name\": \"Sensors\",\n    \"LastUpdatedTimestamp\": \"2019-09-11T00:11:06.197Z\",\n    \"LatestVersion\": \"3b5cc510-58c1-44b5-9d98-4ad858ffa795\",\n    \"CreationTimestamp\": \"2019-09-11T00:11:06.197Z\",\n    \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n}\n"
    },
    {
      "command_name": "create-device-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-device-definition-version.html",
      "command_description": "Description\n\nCreates a version of a device definition that has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-device-definition-version\n[--amzn-client-token <value>]\n--device-definition-id <value>\n[--devices <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--device-definition-id <value>",
        "[--devices <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--device-definition-id (string) The ID of the device definition.\n\n--devices (list) A list of devices in the definition version.(structure)\n\nInformation about a device.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the device.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the device. This value must be unique within the device definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the device’s local shadow will be automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe thing ARN of the device.\n\nShorthand Syntax:\n\nCertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"CertificateArn\": \"string\",\n    \"Id\": \"string\",\n    \"SyncShadow\": true|false,\n    \"ThingArn\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a device definition version\n\nThe following create-device-definition-version example creates a device definition version and associates it with the specified device definition. The version defines two devices. Before you can create a Greengrass device, you must first create and provision the corresponding AWS IoT thing. This process includes the following iot commands that you must run to get the required information for the Greengrass command:\n\nCreate the AWS IoT thing that corresponds to the device:\n\naws iot create-thing \\\n    --thing-name \"InteriorTherm\"\n\n\nOutput:\n\n{\n    \"thingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/InteriorTherm\",\n    \"thingName\": \"InteriorTherm\",\n    \"thingId\": \"01d4763c-78a6-46c6-92be-7add080394bf\"\n}\n\n\nCreate public and private keys and the device certificate for the thing. This example uses the create-keys-and-certificate command and requires write permissions to the current directory. Alternatively, you can use the create-certificate-from-csr command:\n\naws iot create-keys-and-certificate \\\n    --set-as-active \\\n    --certificate-pem-outfile \"myDevice.cert.pem\" \\\n    --public-key-outfile \"myDevice.public.key\" \\\n    --private-key-outfile \"myDevice.private.key\"\n\n\nOutput:\n\n{\n    \"certificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\",\n    \"certificatePem\": \"-----BEGIN CERTIFICATE-----\\nMIIDWTCAkGgAwIBATgIUCgq6EGqou6zFqWgIZRndgQEFW+gwDQYJKoZIhvc...KdGewQS\\n-----END CERTIFICATE-----\\n\",\n    \"keyPair\": {\n        \"PublicKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBzrqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqKpRgnn6yq26U3y...wIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n        \"PrivateKey\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIABAKCAQEAqKpRgnn6yq26U3yt5YFZquyukfRjbMXDcNOK4rMCxDR...fvY4+te\\n-----END RSA PRIVATE KEY-----\\n\"\n    },\n    \"certificateId\": \"66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n}\n\n\nCreate an AWS IoT policy that allows iot and greengrass actions. For simplicity, the following policy allows actions on all resources, but your policy can be more restrictive:\n\naws iot create-policy \\\n    --policy-name \"GG_Devices\" \\\n    --policy-document \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\"\n\n\nOutput:\n\n{\n    \"policyName\": \"GG_Devices\",\n    \"policyArn\": \"arn:aws:iot:us-west-2:123456789012:policy/GG_Devices\",\n    \"policyDocument\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:Publish\\\",\\\"iot:Subscribe\\\",\\\"iot:Connect\\\",\\\"iot:Receive\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"iot:GetThingShadow\\\",\\\"iot:UpdateThingShadow\\\",\\\"iot:DeleteThingShadow\\\"],\\\"Resource\\\":[\\\"*\\\"]},{\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"greengrass:*\\\"],\\\"Resource\\\":[\\\"*\\\"]}]}\",\n    \"policyVersionId\": \"1\"\n}\n\n\nAttach the policy to the certificate:\n\naws iot attach-policy \\\n    --policy-name \"GG_Devices\" \\\n    --target \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n\n\nAttach the thing to the certificate\n\naws iot attach-thing-principal \\\n    --thing-name \"InteriorTherm\" \\\n    --principal \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\"\n\n\nAfter you create and configure the IoT thing as shown above, use the ThingArn and CertificateArn from the first two commands in the following example.\n\naws greengrass create-device-definition-version \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\" \\\n    --devices \"[{\\\"Id\\\":\\\"InteriorTherm\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/InteriorTherm\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\\\",\\\"SyncShadow\\\":true},{\\\"Id\\\":\\\"ExteriorTherm\\\",\\\"ThingArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:thing/ExteriorTherm\\\",\\\"CertificateArn\\\":\\\"arn:aws:iot:us-west-2:123456789012:cert/6c52ce1b47bde88a637e9ccdd45fe4e4c2c0a75a6866f8f63d980ee22fa51e02\\\",\\\"SyncShadow\\\":true}]\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n    \"Version\": \"83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n    \"CreationTimestamp\": \"2019-09-11T00:15:09.838Z\",\n    \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n}\n"
    },
    {
      "command_name": "create-function-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-function-definition.html",
      "command_description": "Description\n\nCreates a Lambda function definition which contains a list of Lambda functions and their configurations to be used in a group. You can create an initial version of the definition by providing a list of Lambda functions and their configurations now, or use ‘’CreateFunctionDefinitionVersion’’ later.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-function-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the function definition.DefaultConfig -> (structure)\n\nThe default configuration that applies to all Lambda functions in this function definition version. Individual Lambda functions can override these settings.\n\nExecution -> (structure)\n\nConfiguration information that specifies how a Lambda function runs.\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nFunctions -> (list)\n\nA list of Lambda functions in this function definition version.\n\n(structure)\n\nInformation about a Lambda function.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nFunctionConfiguration -> (structure)\n\nThe configuration of the Lambda function.\n\nEncodingType -> (string)\n\nThe expected encoding type of the input payload for the function. The default is ‘’json’’.\n\nEnvironment -> (structure)\n\nThe environment configuration of the function.\n\nAccessSysfs -> (boolean)\n\nIf true, the Lambda function is allowed to access the host’s /sys folder. Use this when the Lambda function needs to read device information from /sys. This setting applies only when you run the Lambda function in a Greengrass container.\n\nExecution -> (structure)\n\nConfiguration related to executing the Lambda function\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nResourceAccessPolicies -> (list)\n\nA list of the resources, with their permissions, to which the Lambda function will be granted access. A Lambda function can have at most 10 resources. ResourceAccessPolicies apply only when you run the Lambda function in a Greengrass container.\n\n(structure)\n\nA policy used by the function to access a resource.\n\nPermission -> (string)\n\nThe permissions that the Lambda function has to the resource. Can be one of ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nResourceId -> (string)\n\nThe ID of the resource. (This ID is assigned to the resource when you create the resource definiton.)\n\nVariables -> (map)\n\nEnvironment variables for the Lambda function’s configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nExecArgs -> (string)\n\nThe execution arguments.\n\nExecutable -> (string)\n\nThe name of the function executable.\n\nMemorySize -> (integer)\n\nThe memory size, in KB, which the function requires. This setting is not applicable and should be cleared when you run the Lambda function without containerization.\n\nPinned -> (boolean)\n\nTrue if the function is pinned. Pinned means the function is long-lived and starts when the core starts.\n\nTimeout -> (integer)\n\nThe allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned Lambda functions for each request.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the function. This value must be unique within the function definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nJSON Syntax:\n\n{\n  \"DefaultConfig\": {\n    \"Execution\": {\n      \"IsolationMode\": \"GreengrassContainer\"|\"NoContainer\",\n      \"RunAs\": {\n        \"Gid\": integer,\n        \"Uid\": integer\n      }\n    }\n  },\n  \"Functions\": [\n    {\n      \"FunctionArn\": \"string\",\n      \"FunctionConfiguration\": {\n        \"EncodingType\": \"binary\"|\"json\",\n        \"Environment\": {\n          \"AccessSysfs\": true|false,\n          \"Execution\": {\n            \"IsolationMode\": \"GreengrassContainer\"|\"NoContainer\",\n            \"RunAs\": {\n              \"Gid\": integer,\n              \"Uid\": integer\n            }\n          },\n          \"ResourceAccessPolicies\": [\n            {\n              \"Permission\": \"ro\"|\"rw\",\n              \"ResourceId\": \"string\"\n            }\n            ...\n          ],\n          \"Variables\": {\"string\": \"string\"\n            ...}\n        },\n        \"ExecArgs\": \"string\",\n        \"Executable\": \"string\",\n        \"MemorySize\": integer,\n        \"Pinned\": true|false,\n        \"Timeout\": integer\n      },\n      \"Id\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the function definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a Lambda function definition\n\nThe following create-function-definition example creates a Lambda function definition and an initial version by providing a list of Lambda functions (in this case, a list of just one function named TempMonitorFunction) and their configurations. Before you can create the function definition, you need the Lambda function ARN. To create the function and its alias, use Lambda’s create-function and publish-version commands. Lambda’s create-function command requires the ARN of the execution role, even though AWS IoT Greengrass doesn’t use that role because permissions are specified in the Greengrass group role. You can use the IAM create-role command to create an empty role to get an ARN to use with Lambda’s create-function or you can use an existing execution role.\n\naws greengrass create-function-definition \\\n    --name MyGreengrassFunctions \\\n    --initial-version \"{\\\"Functions\\\": [{\\\"Id\\\": \\\"TempMonitorFunction\\\", \\\"FunctionArn\\\": \\\"arn:aws:lambda:us-west-2:123456789012:function:TempMonitor:GG_TempMonitor\\\", \\\"FunctionConfiguration\\\": {\\\"Executable\\\": \\\"temp_monitor.function_handler\\\", \\\"MemorySize\\\": 16000,\\\"Timeout\\\": 5}}]}\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/3b0d0080-87e7-48c6-b182-503ec743a08b\",\n    \"CreationTimestamp\": \"2019-06-19T22:24:44.585Z\",\n    \"Id\": \"3b0d0080-87e7-48c6-b182-503ec743a08b\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T22:24:44.585Z\",\n    \"LatestVersion\": \"67f918b9-efb4-40b0-b87c-de8c9faf085b\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/3b0d0080-87e7-48c6-b182-503ec743a08b/versions/67f918b9-efb4-40b0-b87c-de8c9faf085b\",\n    \"Name\": \"MyGreengrassFunctions\"\n}\n\n\nFor more information, see How to Configure Local Resource Access Using the AWS Command Line Interface in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-function-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-function-definition-version.html",
      "command_description": "Description\n\nCreates a version of a Lambda function definition that has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-function-definition-version\n[--amzn-client-token <value>]\n[--default-config <value>]\n--function-definition-id <value>\n[--functions <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--default-config <value>]",
        "--function-definition-id <value>",
        "[--functions <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--default-config (structure) The default configuration that applies to all Lambda functions in this function definition version. Individual Lambda functions can override these settings.Execution -> (structure)\n\nConfiguration information that specifies how a Lambda function runs.\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nShorthand Syntax:\n\nExecution={IsolationMode=string,RunAs={Gid=integer,Uid=integer}}\n\n\nJSON Syntax:\n\n{\n  \"Execution\": {\n    \"IsolationMode\": \"GreengrassContainer\"|\"NoContainer\",\n    \"RunAs\": {\n      \"Gid\": integer,\n      \"Uid\": integer\n    }\n  }\n}\n\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--functions (list) A list of Lambda functions in this function definition version.(structure)\n\nInformation about a Lambda function.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nFunctionConfiguration -> (structure)\n\nThe configuration of the Lambda function.\n\nEncodingType -> (string)\n\nThe expected encoding type of the input payload for the function. The default is ‘’json’’.\n\nEnvironment -> (structure)\n\nThe environment configuration of the function.\n\nAccessSysfs -> (boolean)\n\nIf true, the Lambda function is allowed to access the host’s /sys folder. Use this when the Lambda function needs to read device information from /sys. This setting applies only when you run the Lambda function in a Greengrass container.\n\nExecution -> (structure)\n\nConfiguration related to executing the Lambda function\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nResourceAccessPolicies -> (list)\n\nA list of the resources, with their permissions, to which the Lambda function will be granted access. A Lambda function can have at most 10 resources. ResourceAccessPolicies apply only when you run the Lambda function in a Greengrass container.\n\n(structure)\n\nA policy used by the function to access a resource.\n\nPermission -> (string)\n\nThe permissions that the Lambda function has to the resource. Can be one of ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nResourceId -> (string)\n\nThe ID of the resource. (This ID is assigned to the resource when you create the resource definiton.)\n\nVariables -> (map)\n\nEnvironment variables for the Lambda function’s configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nExecArgs -> (string)\n\nThe execution arguments.\n\nExecutable -> (string)\n\nThe name of the function executable.\n\nMemorySize -> (integer)\n\nThe memory size, in KB, which the function requires. This setting is not applicable and should be cleared when you run the Lambda function without containerization.\n\nPinned -> (boolean)\n\nTrue if the function is pinned. Pinned means the function is long-lived and starts when the core starts.\n\nTimeout -> (integer)\n\nThe allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned Lambda functions for each request.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the function. This value must be unique within the function definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nJSON Syntax:\n\n[\n  {\n    \"FunctionArn\": \"string\",\n    \"FunctionConfiguration\": {\n      \"EncodingType\": \"binary\"|\"json\",\n      \"Environment\": {\n        \"AccessSysfs\": true|false,\n        \"Execution\": {\n          \"IsolationMode\": \"GreengrassContainer\"|\"NoContainer\",\n          \"RunAs\": {\n            \"Gid\": integer,\n            \"Uid\": integer\n          }\n        },\n        \"ResourceAccessPolicies\": [\n          {\n            \"Permission\": \"ro\"|\"rw\",\n            \"ResourceId\": \"string\"\n          }\n          ...\n        ],\n        \"Variables\": {\"string\": \"string\"\n          ...}\n      },\n      \"ExecArgs\": \"string\",\n      \"Executable\": \"string\",\n      \"MemorySize\": integer,\n      \"Pinned\": true|false,\n      \"Timeout\": integer\n    },\n    \"Id\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a version of the function defintion\n\nThe following create-function-definition-version example creates a new version of the specified function definition. This version specifies a single function whose ID is Hello-World-function, allows access to the file system, and specifies a maximum memory size and timeout period.\n\naws greengrass create-function-definition-version \\\n    --cli-input-json \"{\\\"FunctionDefinitionId\\\": \\\"e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3\\\",\\\"Functions\\\": [{\\\"Id\\\": \\\"Hello-World-function\\\", \\\"FunctionArn\\\": \\\"\"arn:aws:lambda:us-west-2:123456789012:function:Greengrass_HelloWorld_Counter:gghw-alias\"\\\",\\\"FunctionConfiguration\\\": {\\\"Environment\\\": {\\\"AccessSysfs\\\": true},\\\"Executable\\\": \\\"greengrassHelloWorldCounter.function_handler\\\",\\\"MemorySize\\\": 16000,\\\"Pinned\\\": false,\\\"Timeout\\\": 25}}]}\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3/versions/74abd1cc-637e-4abe-8684-9a67890f4043\",\n    \"CreationTimestamp\": \"2019-06-25T22:03:43.376Z\",\n    \"Id\": \"e626e8c9-3b8f-4bf3-9cdc-d26ecdeb9fa3\",\n    \"Version\": \"74abd1cc-637e-4abe-8684-9a67890f4043\"\n}\n"
    },
    {
      "command_name": "create-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-group.html",
      "command_description": "Description\n\nCreates a group. You may provide the initial version of the group or use ‘’CreateGroupVersion’’ at a later time. Tip: You can use the ‘’gg_group_setup’’ package (https://github.com/awslabs/aws-greengrass-group-setup) as a library or command-line application to create and deploy Greengrass groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-group\n[--amzn-client-token <value>]\n[--initial-version <value>]\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the group.ConnectorDefinitionVersionArn -> (string)\n\nThe ARN of the connector definition version for this group.\n\nCoreDefinitionVersionArn -> (string)\n\nThe ARN of the core definition version for this group.\n\nDeviceDefinitionVersionArn -> (string)\n\nThe ARN of the device definition version for this group.\n\nFunctionDefinitionVersionArn -> (string)\n\nThe ARN of the function definition version for this group.\n\nLoggerDefinitionVersionArn -> (string)\n\nThe ARN of the logger definition version for this group.\n\nResourceDefinitionVersionArn -> (string)\n\nThe ARN of the resource definition version for this group.\n\nSubscriptionDefinitionVersionArn -> (string)\n\nThe ARN of the subscription definition version for this group.\n\nShorthand Syntax:\n\nConnectorDefinitionVersionArn=string,CoreDefinitionVersionArn=string,DeviceDefinitionVersionArn=string,FunctionDefinitionVersionArn=string,LoggerDefinitionVersionArn=string,ResourceDefinitionVersionArn=string,SubscriptionDefinitionVersionArn=string\n\n\nJSON Syntax:\n\n{\n  \"ConnectorDefinitionVersionArn\": \"string\",\n  \"CoreDefinitionVersionArn\": \"string\",\n  \"DeviceDefinitionVersionArn\": \"string\",\n  \"FunctionDefinitionVersionArn\": \"string\",\n  \"LoggerDefinitionVersionArn\": \"string\",\n  \"ResourceDefinitionVersionArn\": \"string\",\n  \"SubscriptionDefinitionVersionArn\": \"string\"\n}\n\n\n--name (string) The name of the group.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a Greeengrass group\n\nThe following create-group example creates a group named cli-created-group.\n\naws greengrass create-group \\\n    --name cli-created-group\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/4e22bd92-898c-436b-ade5-434d883ff749\",\n    \"CreationTimestamp\": \"2019-06-25T18:07:17.688Z\",\n    \"Id\": \"4e22bd92-898c-436b-ade5-434d883ff749\",\n    \"LastUpdatedTimestamp\": \"2019-06-25T18:07:17.688Z\",\n    \"Name\": \"cli-created-group\"\n}\n\n\nFor more information, see Overview of the AWS IoT Greengrass Group Object Model in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-group-certificate-authority",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-group-certificate-authority.html",
      "command_description": "Description\n\nCreates a CA for the group. If a CA already exists, it will rotate the existing CA.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-group-certificate-authority\n[--amzn-client-token <value>]\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupCertificateAuthorityArn -> (string)\n\nThe ARN of the group certificate authority.",
      "command_examples": "Examples\n\nTo create a certificate authority (CA) for a group\n\nThe following create-group-certificate-authority example creates or rotates a CA for the specified group.\n\naws greengrass create-group-certificate-authority \\\n    --group-id \"8eaadd72-ce4b-4f15-892a-0cc4f3a343f1\"\n\n\nOutput:\n\n{\n    \"GroupCertificateAuthorityArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/8eaadd72-ce4b-4f15-892a-0cc4f3a343f1/certificateauthorities/d31630d674c4437f6c5dbc0dca56312a902171ce2d086c38e509c8EXAMPLEcc5\"\n}\n\n\nFor more information, see AWS IoT Greengrass Security in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-group-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-group-version.html",
      "command_description": "Description\n\nCreates a version of a group which has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-group-version\n[--amzn-client-token <value>]\n[--connector-definition-version-arn <value>]\n[--core-definition-version-arn <value>]\n[--device-definition-version-arn <value>]\n[--function-definition-version-arn <value>]\n--group-id <value>\n[--logger-definition-version-arn <value>]\n[--resource-definition-version-arn <value>]\n[--subscription-definition-version-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--connector-definition-version-arn <value>]",
        "[--core-definition-version-arn <value>]",
        "[--device-definition-version-arn <value>]",
        "[--function-definition-version-arn <value>]",
        "--group-id <value>",
        "[--logger-definition-version-arn <value>]",
        "[--resource-definition-version-arn <value>]",
        "[--subscription-definition-version-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--connector-definition-version-arn (string) The ARN of the connector definition version for this group.\n\n--core-definition-version-arn (string) The ARN of the core definition version for this group.\n\n--device-definition-version-arn (string) The ARN of the device definition version for this group.\n\n--function-definition-version-arn (string) The ARN of the function definition version for this group.\n\n--group-id (string) The ID of the Greengrass group.\n\n--logger-definition-version-arn (string) The ARN of the logger definition version for this group.\n\n--resource-definition-version-arn (string) The ARN of the resource definition version for this group.\n\n--subscription-definition-version-arn (string) The ARN of the subscription definition version for this group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a version of a Greengrass group\n\nThe following create-group-version example creates a group version and associates it with the specified group. The version references the core, resource, connector, function, and subscription versions that contain the entities to include in this group version. You must create these entities before you can create the group version.\n\nTo create a resource definition with an initial version, use the create-resource-definition command.\n\nTo create a connector definition with an initial version, use the create-connector-definition command.\n\nTo create a function definition with an initial version, use the create-function-definition command.\n\nTo create a subscription definition with an initial version, use the create-subscription-definition command.\n\nTo retrieve the ARN of the latest core definition version, use the get-group-version command and specify the ID of the latest group version.\n\naws greengrass create-group-version \\\n    --group-id \"ce2e7d01-3240-4c24-b8e6-f6f6e7a9eeca\" \\\n    --core-definition-version-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/6a630442-8708-4838-ad36-eb98849d975e/versions/6c87151b-1fb4-4cb2-8b31-6ee715d8f8ba\" \\\n    --resource-definition-version-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38/versions/a5f94d0b-f6bc-40f4-bb78-7a1c5fe13ba1\" \\\n    --connector-definition-version-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/55d0052b-0d7d-44d6-b56f-21867215e118/versions/78a3331b-895d-489b-8823-17b4f9f418a0\" \\\n    --function-definition-version-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/3b0d0080-87e7-48c6-b182-503ec743a08b/versions/67f918b9-efb4-40b0-b87c-de8c9faf085b\" \\\n    --subscription-definition-version-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/9d611d57-5d5d-44bd-a3b4-feccbdd69112/versions/aa645c47-ac90-420d-9091-8c7ffa4f103f\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/ce2e7d01-3240-4c24-b8e6-f6f6e7a9eeca/versions/e10b0459-4345-4a09-88a4-1af1f5d34638\",\n    \"CreationTimestamp\": \"2019-06-20T18:42:47.020Z\",\n    \"Id\": \"ce2e7d01-3240-4c24-b8e6-f6f6e7a9eeca\",\n    \"Version\": \"e10b0459-4345-4a09-88a4-1af1f5d34638\"\n}\n\n\nFor more information, see Overview of the AWS IoT Greengrass Group Object Model in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-logger-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-logger-definition.html",
      "command_description": "Description\n\nCreates a logger definition. You may provide the initial version of the logger definition now or use ‘’CreateLoggerDefinitionVersion’’ at a later time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-logger-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the logger definition.Loggers -> (list)\n\nA list of loggers.\n\n(structure)\n\nInformation about a logger\n\nComponent -> (string)\n\nThe component that will be subject to logging.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the logger. This value must be unique within the logger definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nLevel -> (string)\n\nThe level of the logs.\n\nSpace -> (integer)\n\nThe amount of file space, in KB, to use if the local file system is used for logging purposes.\n\nType -> (string)\n\nThe type of log output which will be used.\n\nShorthand Syntax:\n\nLoggers=[{Component=string,Id=string,Level=string,Space=integer,Type=string},{Component=string,Id=string,Level=string,Space=integer,Type=string}]\n\n\nJSON Syntax:\n\n{\n  \"Loggers\": [\n    {\n      \"Component\": \"GreengrassSystem\"|\"Lambda\",\n      \"Id\": \"string\",\n      \"Level\": \"DEBUG\"|\"INFO\"|\"WARN\"|\"ERROR\"|\"FATAL\",\n      \"Space\": integer,\n      \"Type\": \"FileSystem\"|\"AWSCloudWatch\"\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the logger definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a logger definition\n\nThe following create-logger-definition example creates a logger definition that contains an initial logger definition version. The initial version defines three logging configurations: 1) system component logs on the file system of the core device, 2) user-defined Lambda function logs on the file system of the core device, and 3) user-defined Lambda function logs in Amazon CloudWatch Logs. Note: For CloudWatch Logs integration, your group role must grant appropriate permissions.\n\naws greengrass create-logger-definition \\\n    --name \"LoggingConfigs\" \\\n    --initial-version \"{\\\"Loggers\\\":[{\\\"Id\\\":\\\"1\\\",\\\"Component\\\":\\\"GreengrassSystem\\\",\\\"Level\\\":\\\"ERROR\\\",\\\"Space\\\":10240,\\\"Type\\\":\\\"FileSystem\\\"},{\\\"Id\\\":\\\"2\\\",\\\"Component\\\":\\\"Lambda\\\",\\\"Level\\\":\\\"INFO\\\",\\\"Space\\\":10240,\\\"Type\\\":\\\"FileSystem\\\"},{\\\"Id\\\":\\\"3\\\",\\\"Component\\\":\\\"Lambda\\\",\\\"Level\\\":\\\"INFO\\\",\\\"Type\\\":\\\"AWSCloudWatch\\\"}]}\"\n\n\nOutput:\n\n{\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/a454b62a-5d56-4ca9-bdc4-8254e1662cb0/versions/de1d9854-1588-4525-b25e-b378f60f2322\",\n    \"Name\": \"LoggingConfigs\",\n    \"LastUpdatedTimestamp\": \"2019-07-23T23:52:17.165Z\",\n    \"LatestVersion\": \"de1d9854-1588-4525-b25e-b378f60f2322\",\n    \"CreationTimestamp\": \"2019-07-23T23:52:17.165Z\",\n    \"Id\": \"a454b62a-5d56-4ca9-bdc4-8254e1662cb0\",\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/a454b62a-5d56-4ca9-bdc4-8254e1662cb0\"\n}\n\n\nFor more information, see Monitoring with AWS IoT Greengrass Logs in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-logger-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-logger-definition-version.html",
      "command_description": "Description\n\nCreates a version of a logger definition that has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-logger-definition-version\n[--amzn-client-token <value>]\n--logger-definition-id <value>\n[--loggers <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--logger-definition-id <value>",
        "[--loggers <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--loggers (list) A list of loggers.(structure)\n\nInformation about a logger\n\nComponent -> (string)\n\nThe component that will be subject to logging.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the logger. This value must be unique within the logger definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nLevel -> (string)\n\nThe level of the logs.\n\nSpace -> (integer)\n\nThe amount of file space, in KB, to use if the local file system is used for logging purposes.\n\nType -> (string)\n\nThe type of log output which will be used.\n\nShorthand Syntax:\n\nComponent=string,Id=string,Level=string,Space=integer,Type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Component\": \"GreengrassSystem\"|\"Lambda\",\n    \"Id\": \"string\",\n    \"Level\": \"DEBUG\"|\"INFO\"|\"WARN\"|\"ERROR\"|\"FATAL\",\n    \"Space\": integer,\n    \"Type\": \"FileSystem\"|\"AWSCloudWatch\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a logger definition version\n\nThe following create-logger-definition-version example creates a logger definition version and associates it with a logger definition. The version defines four logging configurations: 1) system component logs on the file system of the core device, 2) user-defined Lambda function logs on the file system of the core device, 3) system component logs in Amazon CloudWatch Logs, and 4) user-defined Lambda function logs in Amazon CloudWatch Logs. Note: For CloudWatch Logs integration, your group role must grant appropriate permissions.\n\naws greengrass create-logger-definition-version \\\n    --logger-definition-id \"a454b62a-5d56-4ca9-bdc4-8254e1662cb0\" \\\n    --loggers \"[{\\\"Id\\\":\\\"1\\\",\\\"Component\\\":\\\"GreengrassSystem\\\",\\\"Level\\\":\\\"ERROR\\\",\\\"Space\\\":10240,\\\"Type\\\":\\\"FileSystem\\\"},{\\\"Id\\\":\\\"2\\\",\\\"Component\\\":\\\"Lambda\\\",\\\"Level\\\":\\\"INFO\\\",\\\"Space\\\":10240,\\\"Type\\\":\\\"FileSystem\\\"},{\\\"Id\\\":\\\"3\\\",\\\"Component\\\":\\\"GreengrassSystem\\\",\\\"Level\\\":\\\"WARN\\\",\\\"Type\\\":\\\"AWSCloudWatch\\\"},{\\\"Id\\\":\\\"4\\\",\\\"Component\\\":\\\"Lambda\\\",\\\"Level\\\":\\\"INFO\\\",\\\"Type\\\":\\\"AWSCloudWatch\\\"}]\"\n\n\nOutput:\n\n{\n \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/a454b62a-5d56-4ca9-bdc4-8254e1662cb0/versions/49aedb1e-01a3-4d39-9871-3a052573f1ea\",\n \"Version\": \"49aedb1e-01a3-4d39-9871-3a052573f1ea\",\n \"CreationTimestamp\": \"2019-07-24T00:04:48.523Z\",\n \"Id\": \"a454b62a-5d56-4ca9-bdc4-8254e1662cb0\"\n}\n\n\nFor more information, see Monitoring with AWS IoT Greengrass Logs in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-resource-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-resource-definition.html",
      "command_description": "Description\n\nCreates a resource definition which contains a list of resources to be used in a group. You can create an initial version of the definition by providing a list of resources now, or use ‘’CreateResourceDefinitionVersion’’ later.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resource-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the resource definition.Resources -> (list)\n\nA list of resources.\n\n(structure)\n\nInformation about a resource.\n\nId -> (string)\n\nThe resource ID, used to refer to a resource in the Lambda function configuration. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nName -> (string)\n\nThe descriptive resource name, which is displayed on the AWS IoT Greengrass console. Max length 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nResourceDataContainer -> (structure)\n\nA container of data for all resource types.\n\nLocalDeviceResourceData -> (structure)\n\nAttributes that define the local device resource.\n\nGroupOwnerSetting -> (structure)\n\nGroup/owner related settings for local resources.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the device resource. The source path for a device resource can refer only to a character device or block device under ‘’/dev’’.\n\nLocalVolumeResourceData -> (structure)\n\nAttributes that define the local volume resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nGroupOwnerSetting -> (structure)\n\nAllows you to configure additional group privileges for the Lambda process. This field is optional.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the volume resource on the host. The source path for a volume resource type cannot start with ‘’/sys’’.\n\nS3MachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon S3 machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nS3Uri -> (string)\n\nThe URI of the source model in an S3 bucket. The model package must be in tar.gz or .zip format.\n\nSageMakerMachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon SageMaker machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nSageMakerJobArn -> (string)\n\nThe ARN of the Amazon SageMaker training job that represents the source model.\n\nSecretsManagerSecretResourceData -> (structure)\n\nAttributes that define a secret resource, which references a secret from AWS Secrets Manager.\n\nARN -> (string)\n\nThe ARN of the Secrets Manager secret to make available on the core. The value of the secret’s latest version (represented by the ‘’AWSCURRENT’’ staging label) is included by default.\n\nAdditionalStagingLabelsToDownload -> (list)\n\nOptional. The staging labels whose values you want to make available on the core, in addition to ‘’AWSCURRENT’’.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Resources\": [\n    {\n      \"Id\": \"string\",\n      \"Name\": \"string\",\n      \"ResourceDataContainer\": {\n        \"LocalDeviceResourceData\": {\n          \"GroupOwnerSetting\": {\n            \"AutoAddGroupOwner\": true|false,\n            \"GroupOwner\": \"string\"\n          },\n          \"SourcePath\": \"string\"\n        },\n        \"LocalVolumeResourceData\": {\n          \"DestinationPath\": \"string\",\n          \"GroupOwnerSetting\": {\n            \"AutoAddGroupOwner\": true|false,\n            \"GroupOwner\": \"string\"\n          },\n          \"SourcePath\": \"string\"\n        },\n        \"S3MachineLearningModelResourceData\": {\n          \"DestinationPath\": \"string\",\n          \"OwnerSetting\": {\n            \"GroupOwner\": \"string\",\n            \"GroupPermission\": \"ro\"|\"rw\"\n          },\n          \"S3Uri\": \"string\"\n        },\n        \"SageMakerMachineLearningModelResourceData\": {\n          \"DestinationPath\": \"string\",\n          \"OwnerSetting\": {\n            \"GroupOwner\": \"string\",\n            \"GroupPermission\": \"ro\"|\"rw\"\n          },\n          \"SageMakerJobArn\": \"string\"\n        },\n        \"SecretsManagerSecretResourceData\": {\n          \"ARN\": \"string\",\n          \"AdditionalStagingLabelsToDownload\": [\"string\", ...]\n        }\n      }\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the resource definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a resource definition\n\nThe following create-resource-definition example creates a resource definition that contains a list of resources to be used in a Greengrass group. In this example, an initial version of the resource definition is included by providing a list of resources. The list includes one resource for a Twilio authorization token and the ARN for a secret stored in AWS Secrets Manager. You must create the secret before you can create the resource definition.\n\naws greengrass create-resource-definition \\\n    --name MyGreengrassResources \\\n    --initial-version \"{\\\"Resources\\\": [{\\\"Id\\\": \\\"TwilioAuthToken\\\",\\\"Name\\\": \\\"MyTwilioAuthToken\\\",\\\"ResourceDataContainer\\\": {\\\"SecretsManagerSecretResourceData\\\": {\\\"ARN\\\": \\\"arn:aws:secretsmanager:us-west-2:123456789012:secret:greengrass-TwilioAuthToken-ntSlp6\\\"}}}]}\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\",\n    \"CreationTimestamp\": \"2019-06-19T21:51:28.212Z\",\n    \"Id\": \"c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T21:51:28.212Z\",\n    \"LatestVersion\": \"a5f94d0b-f6bc-40f4-bb78-7a1c5fe13ba1\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38/versions/a5f94d0b-f6bc-40f4-bb78-7a1c5fe13ba1\",\n    \"Name\": \"MyGreengrassResources\"\n}\n\n\nFor more information, see How to Configure Local Resource Access Using the AWS Command Line Interface in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-resource-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-resource-definition-version.html",
      "command_description": "Description\n\nCreates a version of a resource definition that has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-resource-definition-version\n[--amzn-client-token <value>]\n--resource-definition-id <value>\n[--resources <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--resource-definition-id <value>",
        "[--resources <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--resources (list) A list of resources.(structure)\n\nInformation about a resource.\n\nId -> (string)\n\nThe resource ID, used to refer to a resource in the Lambda function configuration. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nName -> (string)\n\nThe descriptive resource name, which is displayed on the AWS IoT Greengrass console. Max length 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nResourceDataContainer -> (structure)\n\nA container of data for all resource types.\n\nLocalDeviceResourceData -> (structure)\n\nAttributes that define the local device resource.\n\nGroupOwnerSetting -> (structure)\n\nGroup/owner related settings for local resources.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the device resource. The source path for a device resource can refer only to a character device or block device under ‘’/dev’’.\n\nLocalVolumeResourceData -> (structure)\n\nAttributes that define the local volume resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nGroupOwnerSetting -> (structure)\n\nAllows you to configure additional group privileges for the Lambda process. This field is optional.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the volume resource on the host. The source path for a volume resource type cannot start with ‘’/sys’’.\n\nS3MachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon S3 machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nS3Uri -> (string)\n\nThe URI of the source model in an S3 bucket. The model package must be in tar.gz or .zip format.\n\nSageMakerMachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon SageMaker machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nSageMakerJobArn -> (string)\n\nThe ARN of the Amazon SageMaker training job that represents the source model.\n\nSecretsManagerSecretResourceData -> (structure)\n\nAttributes that define a secret resource, which references a secret from AWS Secrets Manager.\n\nARN -> (string)\n\nThe ARN of the Secrets Manager secret to make available on the core. The value of the secret’s latest version (represented by the ‘’AWSCURRENT’’ staging label) is included by default.\n\nAdditionalStagingLabelsToDownload -> (list)\n\nOptional. The staging labels whose values you want to make available on the core, in addition to ‘’AWSCURRENT’’.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"Name\": \"string\",\n    \"ResourceDataContainer\": {\n      \"LocalDeviceResourceData\": {\n        \"GroupOwnerSetting\": {\n          \"AutoAddGroupOwner\": true|false,\n          \"GroupOwner\": \"string\"\n        },\n        \"SourcePath\": \"string\"\n      },\n      \"LocalVolumeResourceData\": {\n        \"DestinationPath\": \"string\",\n        \"GroupOwnerSetting\": {\n          \"AutoAddGroupOwner\": true|false,\n          \"GroupOwner\": \"string\"\n        },\n        \"SourcePath\": \"string\"\n      },\n      \"S3MachineLearningModelResourceData\": {\n        \"DestinationPath\": \"string\",\n        \"OwnerSetting\": {\n          \"GroupOwner\": \"string\",\n          \"GroupPermission\": \"ro\"|\"rw\"\n        },\n        \"S3Uri\": \"string\"\n      },\n      \"SageMakerMachineLearningModelResourceData\": {\n        \"DestinationPath\": \"string\",\n        \"OwnerSetting\": {\n          \"GroupOwner\": \"string\",\n          \"GroupPermission\": \"ro\"|\"rw\"\n        },\n        \"SageMakerJobArn\": \"string\"\n      },\n      \"SecretsManagerSecretResourceData\": {\n        \"ARN\": \"string\",\n        \"AdditionalStagingLabelsToDownload\": [\"string\", ...]\n      }\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a version of a resource definition\n\nThe following create-resource-definition-version example creates a new version of a TwilioAuthToken.\n\naws greengrass create-resource-definition-version \\\n    --resource-definition-id \"c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\" \\\n    --resources \"[{\\\"Id\\\": \\\"TwilioAuthToken\\\",\\\"Name\\\": \\\"MyTwilioAuthToken\\\",\\\"ResourceDataContainer\\\": {\\\"SecretsManagerSecretResourceData\\\": {\\\"ARN\\\": \\\"arn:aws:secretsmanager:us-west-2:123456789012:secret:greengrass-TwilioAuthToken-ntSlp6\\\"}}}]\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38/versions/b3bcada0-5fb6-42df-bf0b-1ee4f15e769e\",\n    \"CreationTimestamp\": \"2019-06-24T21:17:25.623Z\",\n    \"Id\": \"c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\",\n    \"Version\": \"b3bcada0-5fb6-42df-bf0b-1ee4f15e769e\"\n}\n"
    },
    {
      "command_name": "create-software-update-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-software-update-job.html",
      "command_description": "Description\n\nCreates a software update for a core or group of cores (specified as an IoT thing group.) Use this to update the OTA Agent as well as the Greengrass core software. It makes use of the IoT Jobs feature which provides additional commands to manage a Greengrass core software update job.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-software-update-job\n[--amzn-client-token <value>]\n--s3-url-signer-role <value>\n--software-to-update <value>\n[--update-agent-log-level <value>]\n--update-targets <value>\n--update-targets-architecture <value>\n--update-targets-operating-system <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--s3-url-signer-role <value>",
        "--software-to-update <value>",
        "[--update-agent-log-level <value>]",
        "--update-targets <value>",
        "--update-targets-architecture <value>",
        "--update-targets-operating-system <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--s3-url-signer-role (string) The IAM Role that Greengrass will use to create pre-signed URLs pointing towards the update artifact.\n\n--software-to-update (string) The piece of software on the Greengrass core that will be updated.\n\nPossible values:\n\ncore\n\nota_agent\n\n--update-agent-log-level (string) The minimum level of log statements that should be logged by the OTA Agent during an update.\n\nPossible values:\n\nNONE\n\nTRACE\n\nDEBUG\n\nVERBOSE\n\nINFO\n\nWARN\n\nERROR\n\nFATAL\n\n--update-targets (list) The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--update-targets-architecture (string) The architecture of the cores which are the targets of an update.\n\nPossible values:\n\narmv6l\n\narmv7l\n\nx86_64\n\naarch64\n\n--update-targets-operating-system (string) The operating system of the cores which are the targets of an update.\n\nPossible values:\n\nubuntu\n\nraspbian\n\namazon_linux\n\nopenwrt\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIotJobArn -> (string)\n\nThe IoT Job ARN corresponding to this update.\n\nIotJobId -> (string)\n\nThe IoT Job Id corresponding to this update.\n\nPlatformSoftwareVersion -> (string)\n\nThe software version installed on the device or devices after the update.",
      "command_examples": "Examples\n\nTo create a software update job for a core\n\nThe following create-software-update-job example creates an over-the-air (OTA) update job to update the AWS IoT Greengrass Core software on the core whose name is MyFirstGroup_Core. This command requires an IAM role that allows access to software update packages in Amazon S3 and includes iot.amazonaws.com as a trusted entity.\n\naws greengrass create-software-update-job \\\n    --update-targets-architecture armv7l \\\n    --update-targets [\\\"arn:aws:iot:us-west-2:123456789012:thing/MyFirstGroup_Core\\\"] \\\n    --update-targets-operating-system raspbian \\\n    --software-to-update core \\\n    --s3-url-signer-role arn:aws:iam::123456789012:role/OTA_signer_role \\\n    --update-agent-log-level WARN\n\n\nOutput:\n\n{\n    \"IotJobId\": \"GreengrassUpdateJob_30b353e3-3af7-4786-be25-4c446663c09e\",\n    \"IotJobArn\": \"arn:aws:iot:us-west-2:123456789012:job/GreengrassUpdateJob_30b353e3-3af7-4786-be25-4c446663c09e\",\n    \"PlatformSoftwareVersion\": \"1.9.3\"\n}\n\n\nFor more information, see OTA Updates of AWS IoT Greengrass Core Software in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-subscription-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-subscription-definition.html",
      "command_description": "Description\n\nCreates a subscription definition. You may provide the initial version of the subscription definition now or use ‘’CreateSubscriptionDefinitionVersion’’ at a later time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-subscription-definition\n[--amzn-client-token <value>]\n[--initial-version <value>]\n[--name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--initial-version <value>]",
        "[--name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--initial-version (structure) Information about the initial version of the subscription definition.Subscriptions -> (list)\n\nA list of subscriptions.\n\n(structure)\n\nInformation about a subscription.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the subscription. This value must be unique within the subscription definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSource -> (string)\n\nThe source of the subscription. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nSubject -> (string)\n\nThe MQTT topic used to route the message.\n\nTarget -> (string)\n\nWhere the message is sent to. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nShorthand Syntax:\n\nSubscriptions=[{Id=string,Source=string,Subject=string,Target=string},{Id=string,Source=string,Subject=string,Target=string}]\n\n\nJSON Syntax:\n\n{\n  \"Subscriptions\": [\n    {\n      \"Id\": \"string\",\n      \"Source\": \"string\",\n      \"Subject\": \"string\",\n      \"Target\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--name (string) The name of the subscription definition.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.",
      "command_examples": "Examples\n\nTo create a subscription definition\n\nThe following create-subscription-definition example creates a subscription definition and specifies its initial version. The initial version contains three subscriptions: one for the MQTT topic to which the connector subscribes, one to allow a function to receive temperature readings from AWS IoT, and one to allow AWS IoT to receive status information from the connector. The example provides the ARN for the Lambda function alias that was created earlier by using Lambda’s create-alias command.\n\naws greengrass create-subscription-definition \\\n    --initial-version \"{\\\"Subscriptions\\\": [{\\\"Id\\\": \\\"TriggerNotification\\\", \\\"Source\\\": \\\"arn:aws:lambda:us-west-2:123456789012:function:TempMonitor:GG_TempMonitor\\\", \\\"Subject\\\": \\\"twilio/txt\\\", \\\"Target\\\": \\\"arn:aws:greengrass:us-west-2::/connectors/TwilioNotifications/versions/1\\\"},{\\\"Id\\\": \\\"TemperatureInput\\\", \\\"Source\\\": \\\"cloud\\\", \\\"Subject\\\": \\\"temperature/input\\\", \\\"Target\\\": \\\"arn:aws:lambda:us-west-2:123456789012:function:TempMonitor:GG_TempMonitor\\\"},{\\\"Id\\\": \\\"OutputStatus\\\", \\\"Source\\\": \\\"arn:aws:greengrass:us-west-2::/connectors/TwilioNotifications/versions/1\\\", \\\"Subject\\\": \\\"twilio/message/status\\\", \\\"Target\\\": \\\"cloud\\\"}]}\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/9d611d57-5d5d-44bd-a3b4-feccbdd69112\",\n    \"CreationTimestamp\": \"2019-06-19T22:34:26.677Z\",\n    \"Id\": \"9d611d57-5d5d-44bd-a3b4-feccbdd69112\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T22:34:26.677Z\",\n    \"LatestVersion\": \"aa645c47-ac90-420d-9091-8c7ffa4f103f\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/9d611d57-5d5d-44bd-a3b4-feccbdd69112/versions/aa645c47-ac90-420d-9091-8c7ffa4f103f\"\n}\n\n\nFor more information, see Getting Started with Connectors (CLI) in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "create-subscription-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/create-subscription-definition-version.html",
      "command_description": "Description\n\nCreates a version of a subscription definition which has already been defined.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-subscription-definition-version\n[--amzn-client-token <value>]\n--subscription-definition-id <value>\n[--subscriptions <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--subscription-definition-id <value>",
        "[--subscriptions <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--subscriptions (list) A list of subscriptions.(structure)\n\nInformation about a subscription.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the subscription. This value must be unique within the subscription definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSource -> (string)\n\nThe source of the subscription. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nSubject -> (string)\n\nThe MQTT topic used to route the message.\n\nTarget -> (string)\n\nWhere the message is sent to. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nShorthand Syntax:\n\nId=string,Source=string,Subject=string,Target=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"Source\": \"string\",\n    \"Subject\": \"string\",\n    \"Target\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo create a new version of a subscription definition\n\nThe following create-subscription-definition-version example creates a new version of a subscription definition that contains three subscriptions: a trigger notification, a temperature input, and an output status.\n\naws greengrass create-subscription-definition-version \\\n    --subscription-definition-id \"9d611d57-5d5d-44bd-a3b4-feccbdd69112\" \\\n    --subscriptions \"[{\\\"Id\\\": \\\"TriggerNotification\\\", \\\"Source\\\": \\\"arn:aws:lambda:us-west-2:123456789012:function:TempMonitor:GG_TempMonitor\\\", \\\"Subject\\\": \\\"twilio/txt\\\", \\\"Target\\\": \\\"arn:aws:greengrass:us-west-2::/connectors/TwilioNotifications/versions/1\\\"},{\\\"Id\\\": \\\"TemperatureInput\\\", \\\"Source\\\": \\\"cloud\\\", \\\"Subject\\\": \\\"temperature/input\\\", \\\"Target\\\": \\\"arn:aws:lambda:us-west-2:123456789012:function:TempMonitor:GG_TempMonitor\\\"},{\\\"Id\\\": \\\"OutputStatus\\\", \\\"Source\\\": \\\"arn:aws:greengrass:us-west-2::/connectors/TwilioNotifications/versions/1\\\", \\\"Subject\\\": \\\"twilio/message/status\\\", \\\"Target\\\": \\\"cloud\\\"}]\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/9d611d57-5d5d-44bd-a3b4-feccbdd69112/versions/7b65dfae-50b6-4d0f-b3e0-27728bfb0620\",\n    \"CreationTimestamp\": \"2019-06-24T21:21:33.837Z\",\n    \"Id\": \"9d611d57-5d5d-44bd-a3b4-feccbdd69112\",\n    \"Version\": \"7b65dfae-50b6-4d0f-b3e0-27728bfb0620\"\n}\n"
    },
    {
      "command_name": "delete-connector-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-connector-definition.html",
      "command_description": "Description\n\nDeletes a connector definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-connector-definition\n--connector-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connector-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a connector definition\n\nThe following delete-connector-definition example deletes the specified Greengrass connector definition. If you delete a connector definition that is used by a group, that group can’t be deployed successfully.\n\naws greengrass delete-connector-definition \\\n    --connector-definition-id \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-core-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-core-definition.html",
      "command_description": "Description\n\nDeletes a core definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-core-definition\n--core-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--core-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--core-definition-id (string) The ID of the core definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a core definition\n\nThe following delete-core-definition example deletes the specified Greengrass core definition, including all versions. If you delete a core that is associated with a Greengrass group, that group can’t be deployed successfully.\n\naws greengrass delete-core-definition \\\n    --core-definition-id \"ff36cc5f-9f98-4994-b468-9d9b6dc52abd\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-device-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-device-definition.html",
      "command_description": "Description\n\nDeletes a device definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-device-definition\n--device-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-definition-id (string) The ID of the device definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a device definition\n\nThe following delete-device-definition example deletes the specified device definition, including all of its versions. If you delete a device definition version that is used by a group version, the group version cannot be deployed successfully.\n\naws greengrass delete-device-definition \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-function-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-function-definition.html",
      "command_description": "Description\n\nDeletes a Lambda function definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function-definition\n--function-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a function definition\n\nThe following delete-function-definition example deletes the specified Greengrass function definition. If you delete a function definition that is used by a group, that group can’t be deployed successfully.\n\naws greengrass delete-function-definition \\\n    --function-definition-id \"fd4b906a-dff3-4c1b-96eb-52ebfcfac06a\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-group.html",
      "command_description": "Description\n\nDeletes a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-group\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a group\n\nThe following delete-group example deletes the specified Greengrass group.\n\naws greengrass delete-group \\\n    --group-id \"4e22bd92-898c-436b-ade5-434d883ff749\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-logger-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-logger-definition.html",
      "command_description": "Description\n\nDeletes a logger definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-logger-definition\n--logger-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logger-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a logger definition\n\nThe following delete-logger-definition example deletes the specified logger definition, including all logger definition versions. If you delete a logger definition version that is used by a group version, the group version cannot be deployed successfully.\n\naws greengrass delete-logger-definition \\\n    --logger-definition-id \"a454b62a-5d56-4ca9-bdc4-8254e1662cb0\"\n\n\nThis command produces no output.\n\nFor more information, see Monitoring with AWS IoT Greengrass Logs in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "delete-resource-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-resource-definition.html",
      "command_description": "Description\n\nDeletes a resource definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-resource-definition\n--resource-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a resource definition\n\nThe following delete-resource-definition example deletes the specified resource definition, including all resource versions. If you delete a resource definition that is used by a group, that group can’t be deployed successfully.\n\naws greengrass delete-resource-definition \\\n    --resource-definition-id \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "delete-subscription-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/delete-subscription-definition.html",
      "command_description": "Description\n\nDeletes a subscription definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-subscription-definition\n--subscription-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subscription-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a subscription definition\n\nThe following delete-subscription-definition example deletes the specified Greengrass subscription definition. If you delete a subscription that is being used by a group, that group can’t be deployed successfully.\n\naws greengrass delete-subscription-definition \\\n    --subscription-definition-id \"cd6f1c37-d9a4-4e90-be94-01a7404f5967\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "disassociate-role-from-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/disassociate-role-from-group.html",
      "command_description": "Description\n\nDisassociates the role from a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-role-from-group\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDisassociatedAt -> (string)\n\nThe time, in milliseconds since the epoch, when the role was disassociated from the group.",
      "command_examples": "Examples\n\nTo disassociate the role from a Greengrass group\n\nThe following disassociate-role-from-group example disassociates the IAM role from the specified Greengrass group.\n\naws greengrass disassociate-role-from-group \\\n    --group-id 2494ee3f-7f8a-4e92-a78b-d205f808b84b\n\n\nOutput:\n\n{\n    \"DisassociatedAt\": \"2019-09-10T20:05:49Z\"\n}\n\n\nFor more information, see Configure the Group Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "disassociate-service-role-from-account",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/disassociate-service-role-from-account.html",
      "command_description": "Description\n\nDisassociates the service role from your account. Without a service role, deployments will not work.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-service-role-from-account\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDisassociatedAt -> (string)\n\nThe time when the service role was disassociated from the account.",
      "command_examples": "Examples\n\nTo disassociate a service role from your AWS account\n\nThe following disassociate-service-role-from-account example removes the service role that is associated with your AWS account. If you are not using the service role in any AWS Region, use the delete-role-policy command to detach the AWSGreengrassResourceAccessRolePolicy managed policy from the role, and then use the delete-role command to delete the role.\n\naws greengrass disassociate-service-role-from-account\n\n\nOutput:\n\n{\n    \"DisassociatedAt\": \"2019-06-25T22:12:55Z\"\n}\n\n\nFor more information, see Greengrass Service Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-associated-role",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-associated-role.html",
      "command_description": "Description\n\nRetrieves the role associated with a particular group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-associated-role\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssociatedAt -> (string)\n\nThe time when the role was associated with the group.\n\nRoleArn -> (string)\n\nThe ARN of the role that is associated with the group.",
      "command_examples": "Examples\n\nTo get the role associated with a Greengrass group\n\nThe following get-associated-role example gets the IAM role that’s associated with the specified Greengrass group. The group role is used by local Lambda functions and connectors to access AWS services.\n\naws greengrass get-associated-role \\\n    --group-id 2494ee3f-7f8a-4e92-a78b-d205f808b84b\n\n\nOutput:\n\n{\n    \"RoleArn\": \"arn:aws:iam::123456789012:role/GG-Group-Role\",\n    \"AssociatedAt\": \"2019-09-10T20:03:30Z\"\n}\n\n\nFor more information, see Configure the Group Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-bulk-deployment-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-bulk-deployment-status.html",
      "command_description": "Description\n\nReturns the status of a bulk deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-bulk-deployment-status\n--bulk-deployment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bulk-deployment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bulk-deployment-id (string) The ID of the bulk deployment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBulkDeploymentMetrics -> (structure)\n\nRelevant metrics on input records processed during bulk deployment.\n\nInvalidInputRecords -> (integer)\n\nThe total number of records that returned a non-retryable error. For example, this can occur if a group record from the input file uses an invalid format or specifies a nonexistent group version, or if the execution role doesn’t grant permission to deploy a group or group version.\n\nRecordsProcessed -> (integer)\n\nThe total number of group records from the input file that have been processed so far, or attempted.\n\nRetryAttempts -> (integer)\n\nThe total number of deployment attempts that returned a retryable error. For example, a retry is triggered if the attempt to deploy a group returns a throttling error. ‘’StartBulkDeployment’’ retries a group deployment up to five times.\n\nBulkDeploymentStatus -> (string)\n\nThe status of the bulk deployment.\n\nCreatedAt -> (string)\n\nThe time, in ISO format, when the deployment was created.\n\nErrorDetails -> (list)\n\nError details\n\n(structure)\n\nDetails about the error.\n\nDetailedErrorCode -> (string)\n\nA detailed error code.\n\nDetailedErrorMessage -> (string)\n\nA detailed error message.\n\nErrorMessage -> (string)\n\nError message\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo check the status of your bulk deployment\n\nThe following get-bulk-deployment-status example retrieves status information for the specified bulk deployment operation. In this example, the file that specified the groups to be deployed has an invalid input record.\n\naws greengrass get-bulk-deployment-status \\\n    --bulk-deployment-id \"870fb41b-6288-4e0c-bc76-a7ba4b4d3267\"\n\n\nOutput:\n\n{\n    \"BulkDeploymentMetrics\": {\n        \"InvalidInputRecords\": 1,\n        \"RecordsProcessed\": 1,\n        \"RetryAttempts\": 0\n    },\n    \"BulkDeploymentStatus\": \"Completed\",\n    \"CreatedAt\": \"2019-06-25T16:11:33.265Z\",\n    \"tags\": {}\n}\n\n\nFor more information, see Create Bulk Deployments for Groups in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-connectivity-info",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-connectivity-info.html",
      "command_description": "Description\n\nRetrieves the connectivity information for a core.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-connectivity-info\n--thing-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--thing-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--thing-name (string) The thing name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectivityInfo -> (list)\n\nConnectivity info list.\n\n(structure)\n\nInformation about a Greengrass core’s connectivity.\n\nHostAddress -> (string)\n\nThe endpoint for the Greengrass core. Can be an IP address or DNS.\n\nId -> (string)\n\nThe ID of the connectivity information.\n\nMetadata -> (string)\n\nMetadata for this endpoint.\n\nPortNumber -> (integer)\n\nThe port of the Greengrass core. Usually 8883.\n\nMessage -> (string)\n\nA message about the connectivity info request.",
      "command_examples": "Examples\n\nTo get the connectivity information for a Greengrass core\n\nThe following get-connectivity-info example displays the endpoints that devices can use to connect to the specified Greengrass core. Connectivity information is a list of IP addresses or domain names, with corresponding port numbers and optional customer-defined metadata.\n\naws greengrass get-connectivity-info \\\n    --thing-name \"MyGroup_Core\"\n\n\nOutput:\n\n{\n    \"ConnectivityInfo\": [\n        {\n            \"Metadata\": \"\",\n            \"PortNumber\": 8883,\n            \"HostAddress\": \"127.0.0.1\",\n            \"Id\": \"AUTOIP_127.0.0.1_0\"\n        },\n        {\n            \"Metadata\": \"\",\n            \"PortNumber\": 8883,\n            \"HostAddress\": \"192.168.1.3\",\n            \"Id\": \"AUTOIP_192.168.1.3_1\"\n        },\n        {\n            \"Metadata\": \"\",\n            \"PortNumber\": 8883,\n            \"HostAddress\": \"::1\",\n            \"Id\": \"AUTOIP_::1_2\"\n        },\n        {\n            \"Metadata\": \"\",\n            \"PortNumber\": 8883,\n            \"HostAddress\": \"fe80::1e69:ed93:f5b:f6d\",\n            \"Id\": \"AUTOIP_fe80::1e69:ed93:f5b:f6d_3\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-connector-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-connector-definition.html",
      "command_description": "Description\n\nRetrieves information about a connector definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-connector-definition\n--connector-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connector-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve information about a connector definition\n\nThe following get-connector-definition example retrieves information about the specified connector definition. To retrieve the IDs of your connector definitions, use the list-connector-definitions command.\n\naws greengrass get-connector-definition \\\n    --connector-definition-id \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n    \"CreationTimestamp\": \"2019-06-19T19:30:01.300Z\",\n    \"Id\": \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T19:30:01.300Z\",\n    \"LatestVersion\": \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8/versions/63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n    \"Name\": \"MySNSConnector\",\n    \"tags\": {}\n}\n\n\nFor more information, see Integrate with Services and Protocols Using Greengrass Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-connector-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-connector-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a connector definition version, including the connectors that the version contains. Connectors are prebuilt modules that interact with local infrastructure, device protocols, AWS, and other cloud services.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-connector-definition-version\n--connector-definition-id <value>\n--connector-definition-version-id <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connector-definition-id <value>",
        "--connector-definition-version-id <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--connector-definition-version-id (string) The ID of the connector definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListConnectorDefinitionVersions’’ requests. If the version is the last one that was associated with a connector definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--next-token (string) The token for the next set of results, or ‘’null’’ if there are no additional results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the connector definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the connector definition version was created.\n\nDefinition -> (structure)\n\nInformation about the connector definition version.\n\nConnectors -> (list)\n\nA list of references to connectors in this version, with their corresponding configuration settings.\n\n(structure)\n\nInformation about a connector. Connectors run on the Greengrass core and contain built-in integration with local infrastructure, device protocols, AWS, and other cloud services.\n\nConnectorArn -> (string)\n\nThe ARN of the connector.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the connector. This value must be unique within the connector definition version. Max length is 128 characters with pattern [a-zA-Z0-9:_-]+.\n\nParameters -> (map)\n\nThe parameters or configuration that the connector uses.\n\nkey -> (string)\n\nvalue -> (string)\n\nId -> (string)\n\nThe ID of the connector definition version.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersion -> (string)\n\nThe version of the connector definition version.",
      "command_examples": "Examples\n\nTo retreive information about a specific version of a connector definition\n\nThe following get-connector-definition-version example retrieves information about the specified version of the specified connector definition. To retrieve the IDs of all versions of the connector definition, use the list-connector-definition-versions command. To retrieve the ID of the last version added to the connector definition, use the get-connector-definition command and check the LatestVersion property.\n\naws greengrass get-connector-definition-version \\\n    --connector-definition-id \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\" \\\n    --connector-definition-version-id \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8/versions/63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n    \"CreationTimestamp\": \"2019-06-19T19:30:01.300Z\",\n    \"Definition\": {\n        \"Connectors\": [\n            {\n                \"ConnectorArn\": \"arn:aws:greengrass:us-west-2::/connectors/SNS/versions/1\",\n                \"Id\": \"MySNSConnector\",\n                \"Parameters\": {\n                    \"DefaultSNSArn\": \"arn:aws:sns:us-west-2:123456789012:GGConnectorTopic\"\n                }\n            }\n        ]\n    },\n    \"Id\": \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n    \"Version\": \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\"\n}\n\n\nFor more information, see Integrate with Services and Protocols Using Greengrass Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-core-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-core-definition.html",
      "command_description": "Description\n\nRetrieves information about a core definition version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-core-definition\n--core-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--core-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--core-definition-id (string) The ID of the core definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve details for a Greengrass core definition\n\nThe following get-core-definition example retrieves information about the specified core definition. To retrieve the IDs of your core definitions, use the list-core-definitions command.\n\naws greengrass get-core-definition \\\n    --core-definition-id \"c906ed39-a1e3-4822-a981-7b9bd57b4b46\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/237d6916-27cf-457f-ba0c-e86cfb5d25cd\",\n    \"CreationTimestamp\": \"2018-10-18T04:47:06.721Z\",\n    \"Id\": \"237d6916-27cf-457f-ba0c-e86cfb5d25cd\",\n    \"LastUpdatedTimestamp\": \"2018-10-18T04:47:06.721Z\",\n    \"LatestVersion\": \"bd2cd6d4-2bc5-468a-8962-39e071e34b68\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/237d6916-27cf-457f-ba0c-e86cfb5d25cd/versions/bd2cd6d4-2bc5-468a-8962-39e071e34b68\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-core-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-core-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a core definition version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-core-definition-version\n--core-definition-id <value>\n--core-definition-version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--core-definition-id <value>",
        "--core-definition-version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--core-definition-id (string) The ID of the core definition.\n\n--core-definition-version-id (string) The ID of the core definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListCoreDefinitionVersions’’ requests. If the version is the last one that was associated with a core definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the core definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the core definition version was created.\n\nDefinition -> (structure)\n\nInformation about the core definition version.\n\nCores -> (list)\n\nA list of cores in the core definition version.\n\n(structure)\n\nInformation about a core.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the core.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the core. This value must be unique within the core definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the core’s local shadow is automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe ARN of the thing which is the core.\n\nId -> (string)\n\nThe ID of the core definition version.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersion -> (string)\n\nThe version of the core definition version.",
      "command_examples": "Examples\n\nTo retrieve details about a specific version of the Greengrass core definition\n\nThe following get-core-definition-version example retrieves information about the specified version of the specified core definition. To retrieve the IDs of all versions of the core definition, use the list-core-definition-versions command. To retrieve the ID of the last version added to the core definition, use the get-core-definition command and check the LatestVersion property.\n\naws greengrass get-core-definition-version \\\n    --core-definition-id \"c906ed39-a1e3-4822-a981-7b9bd57b4b46\"  \\\n    --core-definition-version-id \"42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/c906ed39-a1e3-4822-a981-7b9bd57b4b46/versions/42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\",\n    \"CreationTimestamp\": \"2019-06-18T16:21:21.351Z\",\n    \"Definition\": {\n        \"Cores\": [\n            {\n                \"CertificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/928dea7b82331b47c3ff77b0e763fc5e64e2f7c884e6ef391baed9b6b8e21b45\",\n                \"Id\": \"1a39aac7-0885-4417-91f6-23e4cea6c511\",\n                \"SyncShadow\": false,\n                \"ThingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/GGGroup4Pi3_Core\"\n            }\n        ]\n    },\n    \"Id\": \"c906ed39-a1e3-4822-a981-7b9bd57b4b46\",\n    \"Version\": \"42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\"\n}\n"
    },
    {
      "command_name": "get-deployment-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-deployment-status.html",
      "command_description": "Description\n\nReturns the status of a deployment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-deployment-status\n--deployment-id <value>\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--deployment-id <value>",
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string) The ID of the deployment.\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeploymentStatus -> (string)\n\nThe status of the deployment: ‘’InProgress’’, ‘’Building’’, ‘’Success’’, or ‘’Failure’’.\n\nDeploymentType -> (string)\n\nThe type of the deployment.\n\nErrorDetails -> (list)\n\nError details\n\n(structure)\n\nDetails about the error.\n\nDetailedErrorCode -> (string)\n\nA detailed error code.\n\nDetailedErrorMessage -> (string)\n\nA detailed error message.\n\nErrorMessage -> (string)\n\nError message\n\nUpdatedAt -> (string)\n\nThe time, in milliseconds since the epoch, when the deployment status was updated.",
      "command_examples": "Examples\n\nTo retrieve the status of a deployment\n\nThe following get-deployment-status example retrieves the status for the specified deployment of the specified Greengrass group. To get the deployment ID, use the list-deployments command and specify the group ID.\n\naws greengrass get-deployment-status \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\" \\\n    --deployment-id \"1065b8a0-812b-4f21-9d5d-e89b232a530f\"\n\n\nOutput:\n\n{\n    \"DeploymentStatus\": \"Success\",\n    \"DeploymentType\": \"NewDeployment\",\n    \"UpdatedAt\": \"2019-06-18T17:04:44.761Z\"\n}\n"
    },
    {
      "command_name": "get-device-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-device-definition.html",
      "command_description": "Description\n\nRetrieves information about a device definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-definition\n--device-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-definition-id (string) The ID of the device definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get a device definition\n\nThe following get-device-definition example retrieves information about the specified device definition. To retrieve the IDs of your device definitions, use the list-device-definitions command.\n\naws greengrass get-device-definition \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n\n\nOutput:\n\n{\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n    \"Name\": \"TemperatureSensors\",\n    \"tags\": {},\n    \"LastUpdatedTimestamp\": \"2019-09-11T00:19:03.698Z\",\n    \"LatestVersion\": \"83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n    \"CreationTimestamp\": \"2019-09-11T00:11:06.197Z\",\n    \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n}\n"
    },
    {
      "command_name": "get-device-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-device-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a device definition version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-definition-version\n--device-definition-id <value>\n--device-definition-version-id <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-definition-id <value>",
        "--device-definition-version-id <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-definition-id (string) The ID of the device definition.\n\n--device-definition-version-id (string) The ID of the device definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListDeviceDefinitionVersions’’ requests. If the version is the last one that was associated with a device definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--next-token (string) The token for the next set of results, or ‘’null’’ if there are no additional results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the device definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the device definition version was created.\n\nDefinition -> (structure)\n\nInformation about the device definition version.\n\nDevices -> (list)\n\nA list of devices in the definition version.\n\n(structure)\n\nInformation about a device.\n\nCertificateArn -> (string)\n\nThe ARN of the certificate associated with the device.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the device. This value must be unique within the device definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSyncShadow -> (boolean)\n\nIf true, the device’s local shadow will be automatically synced with the cloud.\n\nThingArn -> (string)\n\nThe thing ARN of the device.\n\nId -> (string)\n\nThe ID of the device definition version.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersion -> (string)\n\nThe version of the device definition version.",
      "command_examples": "Examples\n\nTo get a device definition version\n\nThe following get-device-definition-version example retrieves information about the specified version of the specified device definition. To retrieve the IDs of all versions of the device definition, use the list-device-definition-versions command. To retrieve the ID of the last version added to the device definition, use the get-device-definition command and check the LatestVersion property.\n\naws greengrass get-device-definition-version \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\" \\\n    --device-definition-version-id \"83c13984-6fed-447e-84d5-5b8aa45d5f71\"\n\n\nOutput:\n\n{\n    \"Definition\": {\n        \"Devices\": [\n            {\n                \"CertificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/6c52ce1b47bde88a637e9ccdd45fe4e4c2c0a75a6866f8f63d980ee22fa51e02\",\n                \"ThingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/ExteriorTherm\",\n                \"SyncShadow\": true,\n                \"Id\": \"ExteriorTherm\"\n            },\n            {\n                \"CertificateArn\": \"arn:aws:iot:us-west-2:123456789012:cert/66a415ec415668c2349a76170b64ac0878231c1e21ec83c10e92a18bd568eb92\",\n                \"ThingArn\": \"arn:aws:iot:us-west-2:123456789012:thing/InteriorTherm\",\n                \"SyncShadow\": true,\n                \"Id\": \"InteriorTherm\"\n            }\n        ]\n    },\n    \"Version\": \"83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n    \"CreationTimestamp\": \"2019-09-11T00:15:09.838Z\",\n    \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/83c13984-6fed-447e-84d5-5b8aa45d5f71\"\n}\n"
    },
    {
      "command_name": "get-function-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-function-definition.html",
      "command_description": "Description\n\nRetrieves information about a Lambda function definition, including its creation time and latest version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-definition\n--function-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve a function definition\n\nThe following get-function-definition example displays details for the specified function definition. To retrieve the IDs of your function definitions, use the list-function-definitions command.\n\naws greengrass get-function-definition \\\n    --function-definition-id \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n    \"CreationTimestamp\": \"2019-06-18T16:21:21.431Z\",\n    \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n    \"LastUpdatedTimestamp\": \"2019-06-18T16:21:21.431Z\",\n    \"LatestVersion\": \"9748fda7-1589-4fcc-ac94-f5559e88678b\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-function-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-function-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a Lambda function definition version, including which Lambda functions are included in the version and their configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function-definition-version\n--function-definition-id <value>\n--function-definition-version-id <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-definition-id <value>",
        "--function-definition-version-id <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--function-definition-version-id (string) The ID of the function definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListFunctionDefinitionVersions’’ requests. If the version is the last one that was associated with a function definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--next-token (string) The token for the next set of results, or ‘’null’’ if there are no additional results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the function definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the function definition version was created.\n\nDefinition -> (structure)\n\nInformation on the definition.\n\nDefaultConfig -> (structure)\n\nThe default configuration that applies to all Lambda functions in this function definition version. Individual Lambda functions can override these settings.\n\nExecution -> (structure)\n\nConfiguration information that specifies how a Lambda function runs.\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nFunctions -> (list)\n\nA list of Lambda functions in this function definition version.\n\n(structure)\n\nInformation about a Lambda function.\n\nFunctionArn -> (string)\n\nThe ARN of the Lambda function.\n\nFunctionConfiguration -> (structure)\n\nThe configuration of the Lambda function.\n\nEncodingType -> (string)\n\nThe expected encoding type of the input payload for the function. The default is ‘’json’’.\n\nEnvironment -> (structure)\n\nThe environment configuration of the function.\n\nAccessSysfs -> (boolean)\n\nIf true, the Lambda function is allowed to access the host’s /sys folder. Use this when the Lambda function needs to read device information from /sys. This setting applies only when you run the Lambda function in a Greengrass container.\n\nExecution -> (structure)\n\nConfiguration related to executing the Lambda function\n\nIsolationMode -> (string)\n\nSpecifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.\n\nRunAs -> (structure)\n\nSpecifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ‘’IsolationMode’’ to ‘’NoContainer’’ and update config.json in ‘’greengrass-root/config’’ to set ‘’allowFunctionsToRunAsRoot’’ to ‘’yes’’.\n\nGid -> (integer)\n\nThe group ID whose permissions are used to run a Lambda function.\n\nUid -> (integer)\n\nThe user ID whose permissions are used to run a Lambda function.\n\nResourceAccessPolicies -> (list)\n\nA list of the resources, with their permissions, to which the Lambda function will be granted access. A Lambda function can have at most 10 resources. ResourceAccessPolicies apply only when you run the Lambda function in a Greengrass container.\n\n(structure)\n\nA policy used by the function to access a resource.\n\nPermission -> (string)\n\nThe permissions that the Lambda function has to the resource. Can be one of ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nResourceId -> (string)\n\nThe ID of the resource. (This ID is assigned to the resource when you create the resource definiton.)\n\nVariables -> (map)\n\nEnvironment variables for the Lambda function’s configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nExecArgs -> (string)\n\nThe execution arguments.\n\nExecutable -> (string)\n\nThe name of the function executable.\n\nMemorySize -> (integer)\n\nThe memory size, in KB, which the function requires. This setting is not applicable and should be cleared when you run the Lambda function without containerization.\n\nPinned -> (boolean)\n\nTrue if the function is pinned. Pinned means the function is long-lived and starts when the core starts.\n\nTimeout -> (integer)\n\nThe allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned Lambda functions for each request.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the function. This value must be unique within the function definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nId -> (string)\n\nThe ID of the function definition version.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersion -> (string)\n\nThe version of the function definition version.",
      "command_examples": "Examples\n\nTo retrieve details about a specific version of a Lambda function\n\nThe following get-function-definition-version retrieves information about the specified version of the specified function definition. To retrieve the IDs of all versions of the function definition, use the list-function-definition-versions command. To retrieve the ID of the last version added to the function definition, use the get-function-definition command and check the LatestVersion property.\n\naws greengrass get-function-definition-version \\\n    --function-definition-id \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\" \\\n    --function-definition-version-id \"9748fda7-1589-4fcc-ac94-f5559e88678b\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b\",\n    \"CreationTimestamp\": \"2019-06-18T17:04:30.776Z\",\n    \"Definition\": {\n        \"Functions\": [\n            {\n                \"FunctionArn\": \"arn:aws:lambda:::function:GGIPDetector:1\",\n                \"FunctionConfiguration\": {\n                    \"Environment\": {},\n                    \"MemorySize\": 32768,\n                    \"Pinned\": true,\n                    \"Timeout\": 3\n                },\n                \"Id\": \"26b69bdb-e547-46bc-9812-84ec04b6cc8c\"\n            },\n            {\n                \"FunctionArn\": \"arn:aws:lambda:us-west-2:123456789012:function:Greengrass_HelloWorld:GG_HelloWorld\",\n                \"FunctionConfiguration\": {\n                    \"EncodingType\": \"json\",\n                    \"Environment\": {\n                        \"Variables\": {}\n                    },\n                    \"MemorySize\": 16384,\n                    \"Pinned\": true,\n                    \"Timeout\": 25\n                },\n                \"Id\": \"384465a8-eedf-48c6-b793-4c35f7bfae9b\"\n            }\n        ]\n    },\n    \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n    \"Version\": \"9748fda7-1589-4fcc-ac94-f5559e88678b\"\n}\n"
    },
    {
      "command_name": "get-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-group.html",
      "command_description": "Description\n\nRetrieves information about a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve information about a Greengrass group\n\nThe following get-group example retrieves information about the specified Greengrass group. To retrieve the IDs of your groups, use the list-groups command.\n\naws greengrass get-group \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731\",\n    \"CreationTimestamp\": \"2019-06-18T16:21:21.457Z\",\n    \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n    \"LastUpdatedTimestamp\": \"2019-06-18T16:21:21.457Z\",\n    \"LatestVersion\": \"115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n    \"Name\": \"GGGroup4Pi3\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-group-certificate-authority",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-group-certificate-authority.html",
      "command_description": "Description\n\nRetreives the CA associated with a group. Returns the public key of the CA.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-certificate-authority\n--certificate-authority-id <value>\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--certificate-authority-id <value>",
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--certificate-authority-id (string) The ID of the certificate authority.\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupCertificateAuthorityArn -> (string)\n\nThe ARN of the certificate authority for the group.\n\nGroupCertificateAuthorityId -> (string)\n\nThe ID of the certificate authority for the group.\n\nPemEncodedCertificate -> (string)\n\nThe PEM encoded certificate for the group.",
      "command_examples": "Examples\n\nTo retrieve the CA associated with a Greengrass group\n\nThe following get-group-certificate-authority example retrieves the certificate authority (CA) that is associated with the specified Greengrass group. To get the certificate authority ID, use the list-group-certificate-authorities command and specify the group ID.\n\naws greengrass get-group-certificate-authority \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\" \\\n    --certificate-authority-id \"f0430e1736ea8ed30cc5d5de9af67a7e3586bad9ae4d89c2a44163f65fdd8cf6\"\n\n\nOutput:\n\n{\n    \"GroupCertificateAuthorityArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/certificateauthorities/f0430e1736ea8ed30cc5d5de9af67a7e3586bad9ae4d89c2a44163f65fdd8cf6\",\n    \"GroupCertificateAuthorityId\": \"f0430e1736ea8ed30cc5d5de9af67a7e3586bad9ae4d89c2a44163f65fdd8cf6\",\n    \"PemEncodedCertificate\": \"-----BEGIN CERTIFICATE-----\nMIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBWEXAMPLEGA1UEBhMC\nVVMxCzAJBgNVBAgTAldBMRAwDEXAMPLEEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\nb24xFDASBgNVBAEXAMPLESBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\nBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jEXAMPLENMTEwNDI1MjA0NTIxWhcN\nMTIwNDI0MjA0EXAMPLEBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\nVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWEXAMPLEDASBgNVBAsTC0lBTSBDb25z\nb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWEXAMPLEgkqhkiG9w0BCQEWEG5vb25lQGFt\nYXpvbi5EXAMPLE8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CEXAMPLE93vUEIO3IyNoH/f0wYK8m9T\nrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswYEXAMPLEgpE\nIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKEXAMPLEAQEFBQADgYEAtCu4\nnUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\nFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\nNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=\n-----END CERTIFICATE-----\\n\"\n}\n"
    },
    {
      "command_name": "get-group-certificate-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-group-certificate-configuration.html",
      "command_description": "Description\n\nRetrieves the current configuration for the CA used by the group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-certificate-configuration\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCertificateAuthorityExpiryInMilliseconds -> (string)\n\nThe amount of time remaining before the certificate authority expires, in milliseconds.\n\nCertificateExpiryInMilliseconds -> (string)\n\nThe amount of time remaining before the certificate expires, in milliseconds.\n\nGroupId -> (string)\n\nThe ID of the group certificate configuration.",
      "command_examples": "Examples\n\nTo retrieve the configuration for the certificate authority used by the Greengrass group\n\nThe following get-group-certificate-configuration example retrieves the configuration for the certificate authority (CA) used by the specified Greengrass group.\n\naws greengrass get-group-certificate-configuration \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"\n\n\nOutput:\n\n{\n    \"CertificateAuthorityExpiryInMilliseconds\": 2524607999000,\n    \"CertificateExpiryInMilliseconds\": 604800000,\n    \"GroupId\": \"1013db12-8b58-45ff-acc7-704248f66731\"\n}\n"
    },
    {
      "command_name": "get-group-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-group-version.html",
      "command_description": "Description\n\nRetrieves information about a group version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-group-version\n--group-id <value>\n--group-version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "--group-version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--group-version-id (string) The ID of the group version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListGroupVersions’’ requests. If the version is the last one that was associated with a group, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’GroupInformation’’ object.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the group version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the group version was created.\n\nDefinition -> (structure)\n\nInformation about the group version definition.\n\nConnectorDefinitionVersionArn -> (string)\n\nThe ARN of the connector definition version for this group.\n\nCoreDefinitionVersionArn -> (string)\n\nThe ARN of the core definition version for this group.\n\nDeviceDefinitionVersionArn -> (string)\n\nThe ARN of the device definition version for this group.\n\nFunctionDefinitionVersionArn -> (string)\n\nThe ARN of the function definition version for this group.\n\nLoggerDefinitionVersionArn -> (string)\n\nThe ARN of the logger definition version for this group.\n\nResourceDefinitionVersionArn -> (string)\n\nThe ARN of the resource definition version for this group.\n\nSubscriptionDefinitionVersionArn -> (string)\n\nThe ARN of the subscription definition version for this group.\n\nId -> (string)\n\nThe ID of the group that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the group version.",
      "command_examples": "Examples\n\nTo retrieve information about a version of a Greengrass group\n\nThe following get-group-version example retrieves information about the specified version of the specified group. To retrieve the IDs of all versions of the group, use the list-group-versions command. To retrieve the ID of the last version added to the group, use the get-group command and check the LatestVersion property.\n\naws greengrass get-group-version \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"  \\\n    --group-version-id \"115136b3-cfd7-4462-b77f-8741a4b00e5e\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n    \"CreationTimestamp\": \"2019-06-18T17:04:30.915Z\",\n    \"Definition\": {\n        \"CoreDefinitionVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/c906ed39-a1e3-4822-a981-7b9bd57b4b46/versions/42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\",\n        \"FunctionDefinitionVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b\",\n        \"SubscriptionDefinitionVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/88ae8699-12ac-4663-ba3f-4d7f0519140b\"\n    },\n    \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n    \"Version\": \"115136b3-cfd7-4462-b77f-8741a4b00e5e\"\n}\n"
    },
    {
      "command_name": "get-logger-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-logger-definition.html",
      "command_description": "Description\n\nRetrieves information about a logger definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-logger-definition\n--logger-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logger-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve information about a logger definition\n\nThe following get-logger-definition example retrieves information about the specified logger definition. To retrieve the IDs of your logger definitions, use the list-logger-definitions command.\n\naws greengrass get-logger-definition \\\n    --logger-definition-id \"49eeeb66-f1d3-4e34-86e3-3617262abf23\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n    \"CreationTimestamp\": \"2019-05-08T16:10:13.809Z\",\n    \"Id\": \"49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n    \"LastUpdatedTimestamp\": \"2019-05-08T16:10:13.809Z\",\n    \"LatestVersion\": \"5e3f6f64-a565-491e-8de0-3c0d8e0f2073\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23/versions/5e3f6f64-a565-491e-8de0-3c0d8e0f2073\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-logger-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-logger-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a logger definition version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-logger-definition-version\n--logger-definition-id <value>\n--logger-definition-version-id <value>\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logger-definition-id <value>",
        "--logger-definition-version-id <value>",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--logger-definition-version-id (string) The ID of the logger definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListLoggerDefinitionVersions’’ requests. If the version is the last one that was associated with a logger definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--next-token (string) The token for the next set of results, or ‘’null’’ if there are no additional results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the logger definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the logger definition version was created.\n\nDefinition -> (structure)\n\nInformation about the logger definition version.\n\nLoggers -> (list)\n\nA list of loggers.\n\n(structure)\n\nInformation about a logger\n\nComponent -> (string)\n\nThe component that will be subject to logging.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the logger. This value must be unique within the logger definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nLevel -> (string)\n\nThe level of the logs.\n\nSpace -> (integer)\n\nThe amount of file space, in KB, to use if the local file system is used for logging purposes.\n\nType -> (string)\n\nThe type of log output which will be used.\n\nId -> (string)\n\nThe ID of the logger definition version.\n\nVersion -> (string)\n\nThe version of the logger definition version.",
      "command_examples": "Examples\n\nTo retrieve information about a version of a logger definition\n\nThe following get-logger-definition-version example retrieves information about the specified version of the specified logger definition. To retrieve the IDs of all versions of the logger definition, use the list-logger-definition-versions command. To retrieve the ID of the last version added to the logger definition, use the get-logger-definition command and check the LatestVersion property.\n\naws greengrass get-logger-definition-version \\\n    --logger-definition-id \"49eeeb66-f1d3-4e34-86e3-3617262abf23\" \\\n    --logger-definition-version-id \"5e3f6f64-a565-491e-8de0-3c0d8e0f2073\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23/versions/5e3f6f64-a565-491e-8de0-3c0d8e0f2073\",\n    \"CreationTimestamp\": \"2019-05-08T16:10:13.866Z\",\n    \"Definition\": {\n        \"Loggers\": []\n    },\n    \"Id\": \"49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n    \"Version\": \"5e3f6f64-a565-491e-8de0-3c0d8e0f2073\"\n}\n"
    },
    {
      "command_name": "get-resource-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-resource-definition.html",
      "command_description": "Description\n\nRetrieves information about a resource definition, including its creation time and latest version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resource-definition\n--resource-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve information about a resource definition\n\nThe following get-resource-definition example retrieves information about the specified resource definition. To retrieve the IDs of your resource definitions, use the list-resource-definitions command.\n\naws greengrass get-resource-definition \\\n    --resource-definition-id \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n    \"CreationTimestamp\": \"2019-06-19T16:40:59.261Z\",\n    \"Id\": \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n    \"LastUpdatedTimestamp\": \"2019-06-19T16:40:59.261Z\",\n    \"LatestVersion\": \"26e8829a-491a-464d-9c87-664bf6f6f2be\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658/versions/26e8829a-491a-464d-9c87-664bf6f6f2be\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-resource-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-resource-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a resource definition version, including which resources are included in the version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-resource-definition-version\n--resource-definition-id <value>\n--resource-definition-version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-definition-id <value>",
        "--resource-definition-version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--resource-definition-version-id (string) The ID of the resource definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListResourceDefinitionVersions’’ requests. If the version is the last one that was associated with a resource definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nArn of the resource definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the resource definition version was created.\n\nDefinition -> (structure)\n\nInformation about the definition.\n\nResources -> (list)\n\nA list of resources.\n\n(structure)\n\nInformation about a resource.\n\nId -> (string)\n\nThe resource ID, used to refer to a resource in the Lambda function configuration. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nName -> (string)\n\nThe descriptive resource name, which is displayed on the AWS IoT Greengrass console. Max length 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’. This must be unique within a Greengrass group.\n\nResourceDataContainer -> (structure)\n\nA container of data for all resource types.\n\nLocalDeviceResourceData -> (structure)\n\nAttributes that define the local device resource.\n\nGroupOwnerSetting -> (structure)\n\nGroup/owner related settings for local resources.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the device resource. The source path for a device resource can refer only to a character device or block device under ‘’/dev’’.\n\nLocalVolumeResourceData -> (structure)\n\nAttributes that define the local volume resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nGroupOwnerSetting -> (structure)\n\nAllows you to configure additional group privileges for the Lambda process. This field is optional.\n\nAutoAddGroupOwner -> (boolean)\n\nIf true, AWS IoT Greengrass automatically adds the specified Linux OS group owner of the resource to the Lambda process privileges. Thus the Lambda process will have the file access permissions of the added Linux group.\n\nGroupOwner -> (string)\n\nThe name of the Linux OS group whose privileges will be added to the Lambda process. This field is optional.\n\nSourcePath -> (string)\n\nThe local absolute path of the volume resource on the host. The source path for a volume resource type cannot start with ‘’/sys’’.\n\nS3MachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon S3 machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nS3Uri -> (string)\n\nThe URI of the source model in an S3 bucket. The model package must be in tar.gz or .zip format.\n\nSageMakerMachineLearningModelResourceData -> (structure)\n\nAttributes that define an Amazon SageMaker machine learning resource.\n\nDestinationPath -> (string)\n\nThe absolute local path of the resource inside the Lambda environment.\n\nOwnerSetting -> (structure)\n\nThe owner setting for downloaded machine learning resources.\n\nGroupOwner -> (string)\n\nThe group owner of the resource. This is the name of an existing Linux OS group on the system or a GID. The group’s permissions are added to the Lambda process.\n\nGroupPermission -> (string)\n\nThe permissions that the group owner has to the resource. Valid values are ‘’rw’’ (read/write) or ‘’ro’’ (read-only).\n\nSageMakerJobArn -> (string)\n\nThe ARN of the Amazon SageMaker training job that represents the source model.\n\nSecretsManagerSecretResourceData -> (structure)\n\nAttributes that define a secret resource, which references a secret from AWS Secrets Manager.\n\nARN -> (string)\n\nThe ARN of the Secrets Manager secret to make available on the core. The value of the secret’s latest version (represented by the ‘’AWSCURRENT’’ staging label) is included by default.\n\nAdditionalStagingLabelsToDownload -> (list)\n\nOptional. The staging labels whose values you want to make available on the core, in addition to ‘’AWSCURRENT’’.\n\n(string)\n\nId -> (string)\n\nThe ID of the resource definition version.\n\nVersion -> (string)\n\nThe version of the resource definition version.",
      "command_examples": "Examples\n\nTo retrieve information about a specific version of a resource definition\n\nThe following get-resource-definition-version example retrieves information about the specified version of the specified resource definition. To retrieve the IDs of all versions of the resource definition, use the list-resource-definition-versions command. To retrieve the ID of the last version added to the resource definition, use the get-resource-definition command and check the LatestVersion property.\n\naws greengrass get-resource-definition-version \\\n    --resource-definition-id \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\" \\\n    --resource-definition-version-id \"26e8829a-491a-464d-9c87-664bf6f6f2be\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658/versions/26e8829a-491a-464d-9c87-664bf6f6f2be\",\n    \"CreationTimestamp\": \"2019-06-19T16:40:59.392Z\",\n    \"Definition\": {\n        \"Resources\": [\n            {\n                \"Id\": \"26ff3f7b-839a-4217-9fdc-a218308b3963\",\n                \"Name\": \"usb-port\",\n                \"ResourceDataContainer\": {\n                    \"LocalDeviceResourceData\": {\n                        \"GroupOwnerSetting\": {\n                            \"AutoAddGroupOwner\": false\n                        },\n                        \"SourcePath\": \"/dev/bus/usb\"\n                    }\n                }\n            }\n        ]\n    },\n    \"Id\": \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n    \"Version\": \"26e8829a-491a-464d-9c87-664bf6f6f2be\"\n}\n"
    },
    {
      "command_name": "get-service-role-for-account",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-service-role-for-account.html",
      "command_description": "Description\n\nRetrieves the service role that is attached to your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-service-role-for-account\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAssociatedAt -> (string)\n\nThe time when the service role was associated with the account.\n\nRoleArn -> (string)\n\nThe ARN of the role which is associated with the account.",
      "command_examples": "Examples\n\nTo retrieve the details for the service role that is attached to your account\n\nThe following get-service-role-for-account example retrieves information about the service role that is attached to your AWS account.\n\naws greengrass get-service-role-for-account\n\n\nOutput:\n\n{\n    \"AssociatedAt\": \"2018-10-18T15:59:20Z\",\n    \"RoleArn\": \"arn:aws:iam::123456789012:role/service-role/Greengrass_ServiceRole\"\n}\n\n\nFor more information, see Greengrass Service Role in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "get-subscription-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-subscription-definition.html",
      "command_description": "Description\n\nRetrieves information about a subscription definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-subscription-definition\n--subscription-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subscription-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\ntags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve information about a subscription definition\n\nThe following get-subscription-definition example retrieves information about the specified subscription definition. To retrieve the IDs of your subscription definitions, use the list-subscription-definitions command.\n\naws greengrass get-subscription-definition \\\n    --subscription-definition-id \"70e49321-83d5-45d2-bc09-81f4917ae152\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152\",\n    \"CreationTimestamp\": \"2019-06-18T17:03:52.392Z\",\n    \"Id\": \"70e49321-83d5-45d2-bc09-81f4917ae152\",\n    \"LastUpdatedTimestamp\": \"2019-06-18T17:03:52.392Z\",\n    \"LatestVersion\": \"88ae8699-12ac-4663-ba3f-4d7f0519140b\",\n    \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/88ae8699-12ac-4663-ba3f-4d7f0519140b\",\n    \"tags\": {}\n}\n"
    },
    {
      "command_name": "get-subscription-definition-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-subscription-definition-version.html",
      "command_description": "Description\n\nRetrieves information about a subscription definition version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-subscription-definition-version\n[--next-token <value>]\n--subscription-definition-id <value>\n--subscription-definition-version-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--next-token <value>]",
        "--subscription-definition-id <value>",
        "--subscription-definition-version-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--next-token (string) The token for the next set of results, or ‘’null’’ if there are no additional results.\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--subscription-definition-version-id (string) The ID of the subscription definition version. This value maps to the ‘’Version’’ property of the corresponding ‘’VersionInformation’’ object, which is returned by ‘’ListSubscriptionDefinitionVersions’’ requests. If the version is the last one that was associated with a subscription definition, the value also maps to the ‘’LatestVersion’’ property of the corresponding ‘’DefinitionInformation’’ object.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the subscription definition version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the subscription definition version was created.\n\nDefinition -> (structure)\n\nInformation about the subscription definition version.\n\nSubscriptions -> (list)\n\nA list of subscriptions.\n\n(structure)\n\nInformation about a subscription.\n\nId -> (string)\n\nA descriptive or arbitrary ID for the subscription. This value must be unique within the subscription definition version. Max length is 128 characters with pattern ‘’[a-zA-Z0-9:_-]+’’.\n\nSource -> (string)\n\nThe source of the subscription. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nSubject -> (string)\n\nThe MQTT topic used to route the message.\n\nTarget -> (string)\n\nWhere the message is sent to. Can be a thing ARN, a Lambda function ARN, a connector ARN, ‘cloud’ (which represents the AWS IoT cloud), or ‘GGShadowService’.\n\nId -> (string)\n\nThe ID of the subscription definition version.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersion -> (string)\n\nThe version of the subscription definition version.",
      "command_examples": "Examples\n\nTo retrieve information about a specific version of a subscription definition\n\nThe following get-subscription-definition-version example retrieves retrieves information about the specified version of the specified subscription definition. To retrieve the IDs of all versions of the subscription definition, use the list-subscription-definition-versions command. To retrieve the ID of the last version added to the subscription definition, use the get-subscription-definition command and check the LatestVersion property.\n\naws greengrass get-subscription-definition-version \\\n    --subscription-definition-id \"70e49321-83d5-45d2-bc09-81f4917ae152\" \\\n    --subscription-definition-version-id \"88ae8699-12ac-4663-ba3f-4d7f0519140b\"\n\n\nOutput:\n\n{\n    \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/88ae8699-12ac-4663-ba3f-4d7f0519140b\",\n    \"CreationTimestamp\": \"2019-06-18T17:03:52.499Z\",\n    \"Definition\": {\n        \"Subscriptions\": [\n            {\n                \"Id\": \"692c4484-d89f-4f64-8edd-1a041a65e5b6\",\n                \"Source\": \"arn:aws:lambda:us-west-2:123456789012:function:Greengrass_HelloWorld:GG_HelloWorld\",\n                \"Subject\": \"hello/world\",\n                \"Target\": \"cloud\"\n            }\n        ]\n    },\n    \"Id\": \"70e49321-83d5-45d2-bc09-81f4917ae152\",\n    \"Version\": \"88ae8699-12ac-4663-ba3f-4d7f0519140b\"\n}\n"
    },
    {
      "command_name": "get-thing-runtime-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/get-thing-runtime-configuration.html",
      "command_description": "Description\n\nGet the runtime configuration of a thing.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-thing-runtime-configuration\n--thing-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--thing-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--thing-name (string) The thing name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRuntimeConfiguration -> (structure)\n\nRuntime configuration for a thing.\n\nTelemetryConfiguration -> (structure)\n\nConfiguration for telemetry service.\n\nConfigurationSyncStatus -> (string)\n\nSynchronization status of the device reported configuration with the desired configuration.\n\nTelemetry -> (string)\n\nConfigure telemetry to be on or off.",
      "command_examples": "Examples\n\nTo retrieve the runtime configuration of a Greengrass core\n\nThe following get-thing-runtime-configuration example retrieves the runtime configuration of a Greengrass core. Before you can retrieve the runtime configuration, you must use the update-thing-runtime-configuration command to create a runtime configuration for the core.\n\naws greengrass get-thing-runtime-configuration \\\n    --thing-name SampleGreengrassCore\n\n\nOutput:\n\n{\n    \"RuntimeConfiguration\": {\n        \"TelemetryConfiguration\": {\n            \"ConfigurationSyncStatus\": \"OutOfSync\",\n            \"Telemetry\": \"On\"\n        }\n    }\n}\n\n\nFor more information, see Configuring telemetry settings in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "list-bulk-deployment-detailed-reports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-bulk-deployment-detailed-reports.html",
      "command_description": "Description\n\nGets a paginated list of the deployments that have been started in a bulk deployment operation, and their current deployment status.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-bulk-deployment-detailed-reports is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Deployments",
      "command_synopsis": "Synopsis\n  list-bulk-deployment-detailed-reports\n--bulk-deployment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bulk-deployment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bulk-deployment-id (string) The ID of the bulk deployment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeployments -> (list)\n\nA list of the individual group deployments in the bulk deployment operation.\n\n(structure)\n\nInformation about an individual group deployment in a bulk deployment operation.\n\nCreatedAt -> (string)\n\nThe time, in ISO format, when the deployment was created.\n\nDeploymentArn -> (string)\n\nThe ARN of the group deployment.\n\nDeploymentId -> (string)\n\nThe ID of the group deployment.\n\nDeploymentStatus -> (string)\n\nThe current status of the group deployment: ‘’InProgress’’, ‘’Building’’, ‘’Success’’, or ‘’Failure’’.\n\nDeploymentType -> (string)\n\nThe type of the deployment.\n\nErrorDetails -> (list)\n\nDetails about the error.\n\n(structure)\n\nDetails about the error.\n\nDetailedErrorCode -> (string)\n\nA detailed error code.\n\nDetailedErrorMessage -> (string)\n\nA detailed error message.\n\nErrorMessage -> (string)\n\nThe error message for a failed deployment\n\nGroupArn -> (string)\n\nThe ARN of the Greengrass group.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list information about individual deployments in a bulk deployment\n\nThe following list-bulk-deployment-detailed-reports example displays information about the individual deployments in a bulk deployment operation, including status.\n\naws greengrass list-bulk-deployment-detailed-reports \\\n    --bulk-deployment-id 42ce9c42-489b-4ed4-b905-8996aa50ef9d\n\n\nOutput:\n\n{\n    \"Deployments\": [\n        {\n            \"DeploymentType\": \"NewDeployment\",\n            \"DeploymentStatus\": \"Success\",\n            \"DeploymentId\": \"123456789012:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n            \"DeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333/deployments/123456789012:123456789012:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n            \"GroupArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-EXAMPLE33333/versions/123456789012:a1b2c3d4-5678-90ab-cdef-EXAMPLE44444\",\n            \"CreatedAt\": \"2020-01-21T21:34:16.501Z\"\n        },\n        {\n            \"DeploymentType\": \"NewDeployment\",\n            \"DeploymentStatus\": \"InProgress\",\n            \"DeploymentId\": \"123456789012:a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n            \"DeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-EXAMPLE55555/deployments/123456789012:123456789012:a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n            \"GroupArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/a1b2c3d4-5678-90ab-cdef-EXAMPLE55555/versions/a1b2c3d4-5678-90ab-cdef-EXAMPLE66666\",\n            \"CreatedAt\": \"2020-01-21T21:34:16.486Z\"\n        },\n        ...\n    ]\n}\n\n\nFor more information, see Create Bulk Deployments for Groups in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "list-bulk-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-bulk-deployments.html",
      "command_description": "Description\n\nReturns a list of bulk deployments.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-bulk-deployments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: BulkDeployments",
      "command_synopsis": "Synopsis\n  list-bulk-deployments\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBulkDeployments -> (list)\n\nA list of bulk deployments.\n\n(structure)\n\nInformation about a bulk deployment. You cannot start a new bulk deployment while another one is still running or in a non-terminal state.\n\nBulkDeploymentArn -> (string)\n\nThe ARN of the bulk deployment.\n\nBulkDeploymentId -> (string)\n\nThe ID of the bulk deployment.\n\nCreatedAt -> (string)\n\nThe time, in ISO format, when the deployment was created.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list bulk deployments\n\nThe following list-bulk-deployments example lists all bulk deployments.\n\naws greengrass list-bulk-deployments\n\n\nOutput:\n\n{\n    \"BulkDeployments\": [\n        {\n            \"BulkDeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/bulk/deployments/870fb41b-6288-4e0c-bc76-a7ba4b4d3267\",\n            \"BulkDeploymentId\": \"870fb41b-6288-4e0c-bc76-a7ba4b4d3267\",\n            \"CreatedAt\": \"2019-06-25T16:11:33.265Z\"\n        }\n    ]\n}\n\n\nFor more information, see Create Bulk Deployments for Groups in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "list-connector-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-connector-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a connector definition, which are containers for connectors. Connectors run on the Greengrass core and contain built-in integration with local infrastructure, device protocols, AWS, and other cloud services.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-connector-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-connector-definition-versions\n--connector-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connector-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions that are available for a connector definition\n\nThe following list-connector-definition-versions example lists the versions that are available for the specified connector definition. Use the list-connector-definitions command to get the connector definition ID.\n\naws greengrass list-connector-definition-versions \\\n    --connector-definition-id \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8/versions/63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n            \"CreationTimestamp\": \"2019-06-19T19:30:01.300Z\",\n            \"Id\": \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n            \"Version\": \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\"\n        }\n    ]\n}\n\n\nFor more information, see Integrate with Services and Protocols Using Greengrass Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "list-connector-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-connector-definitions.html",
      "command_description": "Description\n\nRetrieves a list of connector definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-connector-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-connector-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list the Greengrass connectors that are defined\n\nThe following list-connector-definitions example lists all of the Greengrass connectors that are defined for your AWS account.\n\naws greengrass list-connector-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n            \"CreationTimestamp\": \"2019-06-19T19:30:01.300Z\",\n            \"Id\": \"b5c4ebfd-f672-49a3-83cd-31c7216a7bb8\",\n            \"LastUpdatedTimestamp\": \"2019-06-19T19:30:01.300Z\",\n            \"LatestVersion\": \"63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/connectors/b5c4ebfd-f672-49a3-83cd-31c7216a7bb8/versions/63c57963-c7c2-4a26-a7e2-7bf478ea2623\",\n            \"Name\": \"MySNSConnector\"\n        }\n    ]\n}\n\n\nFor more information, see Integrate with Services and Protocols Using Greengrass Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "list-core-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-core-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a core definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-core-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-core-definition-versions\n--core-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--core-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--core-definition-id (string) The ID of the core definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a Greengrass core definition\n\nThe following list-core-definitions example lists all versions of the specied Greengrass core definition. You can use the list-core-definitions command to get the version ID.\n\naws greengrass list-core-definition-versions \\\n    --core-definition-id \"eaf280cb-138c-4d15-af36-6f681a1348f7\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/eaf280cb-138c-4d15-af36-6f681a1348f7/versions/467c36e4-c5da-440c-a97b-084e62593b4c\",\n            \"CreationTimestamp\": \"2019-06-18T16:14:17.709Z\",\n            \"Id\": \"eaf280cb-138c-4d15-af36-6f681a1348f7\",\n            \"Version\": \"467c36e4-c5da-440c-a97b-084e62593b4c\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-core-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-core-definitions.html",
      "command_description": "Description\n\nRetrieves a list of core definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-core-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-core-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list Greengrass core definitions\n\nThe following list-core-definitions example lists all of the Greengrass core definitions for your AWS account.\n\naws greengrass list-core-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/0507843c-c1ef-4f06-b051-817030df7e7d\",\n            \"CreationTimestamp\": \"2018-10-17T04:30:32.786Z\",\n            \"Id\": \"0507843c-c1ef-4f06-b051-817030df7e7d\",\n            \"LastUpdatedTimestamp\": \"2018-10-17T04:30:32.786Z\",\n            \"LatestVersion\": \"bcdf9e86-3793-491e-93af-3cdfbf4e22b7\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/0507843c-c1ef-4f06-b051-817030df7e7d/versions/bcdf9e86-3793-491e-93af-3cdfbf4e22b7\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/31c22500-3509-4271-bafd-cf0655cda438\",\n            \"CreationTimestamp\": \"2019-06-18T16:24:16.064Z\",\n            \"Id\": \"31c22500-3509-4271-bafd-cf0655cda438\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:24:16.064Z\",\n            \"LatestVersion\": \"2f350395-6d09-4c8a-8336-9ae5b57ace84\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/31c22500-3509-4271-bafd-cf0655cda438/versions/2f350395-6d09-4c8a-8336-9ae5b57ace84\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/c906ed39-a1e3-4822-a981-7b9bd57b4b46\",\n            \"CreationTimestamp\": \"2019-06-18T16:21:21.351Z\",\n            \"Id\": \"c906ed39-a1e3-4822-a981-7b9bd57b4b46\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:21:21.351Z\",\n            \"LatestVersion\": \"42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/c906ed39-a1e3-4822-a981-7b9bd57b4b46/versions/42aeeac3-fd9d-4312-a8fd-ffa9404a20e0\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/eaf280cb-138c-4d15-af36-6f681a1348f7\",\n            \"CreationTimestamp\": \"2019-06-18T16:14:17.709Z\",\n            \"Id\": \"eaf280cb-138c-4d15-af36-6f681a1348f7\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:14:17.709Z\",\n            \"LatestVersion\": \"467c36e4-c5da-440c-a97b-084e62593b4c\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/cores/eaf280cb-138c-4d15-af36-6f681a1348f7/versions/467c36e4-c5da-440c-a97b-084e62593b4c\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-deployments.html",
      "command_description": "Description\n\nReturns a history of deployments for the group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-deployments is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Deployments",
      "command_synopsis": "Synopsis\n  list-deployments\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeployments -> (list)\n\nA list of deployments for the requested groups.\n\n(structure)\n\nInformation about a deployment.\n\nCreatedAt -> (string)\n\nThe time, in milliseconds since the epoch, when the deployment was created.\n\nDeploymentArn -> (string)\n\nThe ARN of the deployment.\n\nDeploymentId -> (string)\n\nThe ID of the deployment.\n\nDeploymentType -> (string)\n\nThe type of the deployment.\n\nGroupArn -> (string)\n\nThe ARN of the group for this deployment.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list the deployments for a Greengrass group\n\nThe following list-deployments example lists the deployments for the specified Greengrass group. You can use the list-groups command to look up your group ID.\n\naws greengrass list-deployments \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"\n\n\nOutput:\n\n{\n    \"Deployments\": [\n        {\n            \"CreatedAt\": \"2019-06-18T17:04:32.702Z\",\n            \"DeploymentId\": \"1065b8a0-812b-4f21-9d5d-e89b232a530f\",\n            \"DeploymentType\": \"NewDeployment\",\n            \"GroupArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/115136b3-cfd7-4462-b77f-8741a4b00e5e\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-device-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-device-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a device definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-device-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-device-definition-versions\n--device-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-definition-id (string) The ID of the device definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a device definition\n\nThe following list-device-definition-versions example displays the device definition versions associated with the specified device definition.\n\naws greengrass list-device-definition-versions \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Version\": \"83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n            \"CreationTimestamp\": \"2019-09-11T00:15:09.838Z\",\n            \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/83c13984-6fed-447e-84d5-5b8aa45d5f71\"\n        },\n        {\n            \"Version\": \"3b5cc510-58c1-44b5-9d98-4ad858ffa795\",\n            \"CreationTimestamp\": \"2019-09-11T00:11:06.197Z\",\n            \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/3b5cc510-58c1-44b5-9d98-4ad858ffa795\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-device-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-device-definitions.html",
      "command_description": "Description\n\nRetrieves a list of device definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-device-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-device-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list your device definitions\n\nThe following list-device-definitions example displays details about the device definitions in your AWS account in the specified AWS Region.\n\naws greengrass list-device-definitions \\\n    --region us-west-2\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/50f3274c-3f0a-4f57-b114-6f46085281ab/versions/c777b0f5-1059-449b-beaa-f003ebc56c34\",\n            \"LastUpdatedTimestamp\": \"2019-06-14T15:42:09.059Z\",\n            \"LatestVersion\": \"c777b0f5-1059-449b-beaa-f003ebc56c34\",\n            \"CreationTimestamp\": \"2019-06-14T15:42:09.059Z\",\n            \"Id\": \"50f3274c-3f0a-4f57-b114-6f46085281ab\",\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/50f3274c-3f0a-4f57-b114-6f46085281ab\"\n        },\n        {\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/e01951c9-6134-479a-969a-1a15cac11c40/versions/514d57aa-4ee6-401c-9fac-938a9f7a51e5\",\n            \"Name\": \"TestDeviceDefinition\",\n            \"LastUpdatedTimestamp\": \"2019-04-16T23:17:43.245Z\",\n            \"LatestVersion\": \"514d57aa-4ee6-401c-9fac-938a9f7a51e5\",\n            \"CreationTimestamp\": \"2019-04-16T23:17:43.245Z\",\n            \"Id\": \"e01951c9-6134-479a-969a-1a15cac11c40\",\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/e01951c9-6134-479a-969a-1a15cac11c40\"\n        },\n        {\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd/versions/83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n            \"Name\": \"TemperatureSensors\",\n            \"LastUpdatedTimestamp\": \"2019-09-10T00:19:03.698Z\",\n            \"LatestVersion\": \"83c13984-6fed-447e-84d5-5b8aa45d5f71\",\n            \"CreationTimestamp\": \"2019-09-11T00:11:06.197Z\",\n            \"Id\": \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\",\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/devices/f9ba083d-5ad4-4534-9f86-026a45df1ccd\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-function-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-function-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a Lambda function definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-function-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-function-definition-versions\n--function-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a Lambda function\n\nThe following list-function-definition-versions example lists all of the versions of the specified Lambda function. You can use the list-function-definitions command to get the ID.\n\naws greengrass list-function-definition-versions \\\n    --function-definition-id \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b\",\n            \"CreationTimestamp\": \"2019-06-18T17:04:30.776Z\",\n            \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"Version\": \"9748fda7-1589-4fcc-ac94-f5559e88678b\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9b08df77-26f2-4c29-93d2-769715edcfec\",\n            \"CreationTimestamp\": \"2019-06-18T17:02:44.087Z\",\n            \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"Version\": \"9b08df77-26f2-4c29-93d2-769715edcfec\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/4236239f-94f7-4b90-a2f8-2a24c829d21e\",\n            \"CreationTimestamp\": \"2019-06-18T17:01:42.284Z\",\n            \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"Version\": \"4236239f-94f7-4b90-a2f8-2a24c829d21e\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/343408bb-549a-4fbe-b043-853643179a39\",\n            \"CreationTimestamp\": \"2019-06-18T16:21:21.431Z\",\n            \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"Version\": \"343408bb-549a-4fbe-b043-853643179a39\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-function-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-function-definitions.html",
      "command_description": "Description\n\nRetrieves a list of Lambda function definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-function-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-function-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list Lambda functions\n\nThe following list-function-definitions example lists all of the Lambda functions defined for your AWS account.\n\naws greengrass list-function-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/017970a5-8952-46dd-b1c1-020b3ae8e960\",\n            \"CreationTimestamp\": \"2018-10-17T04:30:32.884Z\",\n            \"Id\": \"017970a5-8952-46dd-b1c1-020b3ae8e960\",\n            \"LastUpdatedTimestamp\": \"2018-10-17T04:30:32.884Z\",\n            \"LatestVersion\": \"4380b302-790d-4ed8-92bf-02e88afecb15\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/017970a5-8952-46dd-b1c1-020b3ae8e960/versions/4380b302-790d-4ed8-92bf-02e88afecb15\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"CreationTimestamp\": \"2019-06-18T16:21:21.431Z\",\n            \"Id\": \"063f5d1a-1dd1-40b4-9b51-56f8993d0f85\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:21:21.431Z\",\n            \"LatestVersion\": \"9748fda7-1589-4fcc-ac94-f5559e88678b\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/063f5d1a-1dd1-40b4-9b51-56f8993d0f85/versions/9748fda7-1589-4fcc-ac94-f5559e88678b\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/6598e653-a262-440c-9967-e2697f64da7b\",\n            \"CreationTimestamp\": \"2019-06-18T16:24:16.123Z\",\n            \"Id\": \"6598e653-a262-440c-9967-e2697f64da7b\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:24:16.123Z\",\n            \"LatestVersion\": \"38bc6ccd-98a2-4ce7-997e-16c84748fae4\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/6598e653-a262-440c-9967-e2697f64da7b/versions/38bc6ccd-98a2-4ce7-997e-16c84748fae4\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/c668df84-fad2-491b-95f4-655d2cad7885\",\n            \"CreationTimestamp\": \"2019-06-18T16:14:17.784Z\",\n            \"Id\": \"c668df84-fad2-491b-95f4-655d2cad7885\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:14:17.784Z\",\n            \"LatestVersion\": \"37dd68c4-a64f-40ba-aa13-71fecc3ebded\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/functions/c668df84-fad2-491b-95f4-655d2cad7885/versions/37dd68c4-a64f-40ba-aa13-71fecc3ebded\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-group-certificate-authorities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-group-certificate-authorities.html",
      "command_description": "Description\n\nRetrieves the current CAs for a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-group-certificate-authorities\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroupCertificateAuthorities -> (list)\n\nA list of certificate authorities associated with the group.\n\n(structure)\n\nInformation about a certificate authority for a group.\n\nGroupCertificateAuthorityArn -> (string)\n\nThe ARN of the certificate authority for the group.\n\nGroupCertificateAuthorityId -> (string)\n\nThe ID of the certificate authority for the group.",
      "command_examples": "Examples\n\nTo list the current CAs for a group\n\nThe following list-group-certificate-authorities example lists the current certificate authorities (CAs) for the specified Greengrass group.\n\naws greengrass list-group-certificate-authorities \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"\n\n\nOutput:\n\n{\n    \"GroupCertificateAuthorities\": [\n        {\n            \"GroupCertificateAuthorityArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/certificateauthorities/f0430e1736ea8ed30cc5d5de9af67a7e3586bad9ae4d89c2a44163f65fdd8cf6\",\n            \"GroupCertificateAuthorityId\": \"f0430e1736ea8ed30cc5d5de9af67a7e3586bad9ae4d89c2a44163f65fdd8cf6\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-group-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-group-versions.html",
      "command_description": "Description\n\nLists the versions of a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-group-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-group-versions\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a Greengrass group\n\nThe following list-group-versions example lists the versions of the specified Greengrass group.\n\naws greengrass list-group-versions \\\n    --group-id \"1013db12-8b58-45ff-acc7-704248f66731\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n            \"CreationTimestamp\": \"2019-06-18T17:04:30.915Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"Version\": \"115136b3-cfd7-4462-b77f-8741a4b00e5e\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/4340669d-d14d-44e3-920c-46c928750750\",\n            \"CreationTimestamp\": \"2019-06-18T17:03:52.663Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"Version\": \"4340669d-d14d-44e3-920c-46c928750750\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/1b06e099-2d5b-4f10-91b9-78c4e060f5da\",\n            \"CreationTimestamp\": \"2019-06-18T17:02:44.189Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"Version\": \"1b06e099-2d5b-4f10-91b9-78c4e060f5da\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/2d3f27f1-3b43-4554-ab7a-73ec30477efe\",\n            \"CreationTimestamp\": \"2019-06-18T17:01:42.401Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"Version\": \"2d3f27f1-3b43-4554-ab7a-73ec30477efe\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/d20f7ae9-3444-4c1c-b025-e2ede23cdd31\",\n            \"CreationTimestamp\": \"2019-06-18T16:21:21.457Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"Version\": \"d20f7ae9-3444-4c1c-b025-e2ede23cdd31\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-groups.html",
      "command_description": "Description\n\nRetrieves a list of groups.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-groups is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Groups",
      "command_synopsis": "Synopsis\n  list-groups\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGroups -> (list)\n\nInformation about a group.\n\n(structure)\n\nInformation about a group.\n\nArn -> (string)\n\nThe ARN of the group.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the group was created.\n\nId -> (string)\n\nThe ID of the group.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the group was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the group.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the group.\n\nName -> (string)\n\nThe name of the group.\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list the Greengrass groups\n\nThe following list-groups example lists all Greengrass groups that are defined in your AWS account.\n\naws greengrass list-groups\n\n\nOutput:\n\n{\n    \"Groups\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731\",\n            \"CreationTimestamp\": \"2019-06-18T16:21:21.457Z\",\n            \"Id\": \"1013db12-8b58-45ff-acc7-704248f66731\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T16:21:21.457Z\",\n            \"LatestVersion\": \"115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731/versions/115136b3-cfd7-4462-b77f-8741a4b00e5e\",\n            \"Name\": \"GGGroup4Pi3\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1402daf9-71cf-4cfe-8be0-d5e80526d0d8\",\n            \"CreationTimestamp\": \"2018-10-31T21:52:46.603Z\",\n            \"Id\": \"1402daf9-71cf-4cfe-8be0-d5e80526d0d8\",\n            \"LastUpdatedTimestamp\": \"2018-10-31T21:52:46.603Z\",\n            \"LatestVersion\": \"749af901-60ab-456f-a096-91b12d983c29\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1402daf9-71cf-4cfe-8be0-d5e80526d0d8/versions/749af901-60ab-456f-a096-91b12d983c29\",\n            \"Name\": \"MyTestGroup\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/504b5c8d-bbed-4635-aff1-48ec5b586db5\",\n            \"CreationTimestamp\": \"2018-12-31T21:39:36.771Z\",\n            \"Id\": \"504b5c8d-bbed-4635-aff1-48ec5b586db5\",\n            \"LastUpdatedTimestamp\": \"2018-12-31T21:39:36.771Z\",\n            \"LatestVersion\": \"46911e8e-f9bc-4898-8b63-59c7653636ec\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/504b5c8d-bbed-4635-aff1-48ec5b586db5/versions/46911e8e-f9bc-4898-8b63-59c7653636ec\",\n            \"Name\": \"smp-ggrass-group\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-logger-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-logger-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a logger definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-logger-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-logger-definition-versions\n--logger-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logger-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo get a list of versions of a logger definition\n\nThe following list-logger-definition-versions example gets a list of all versions of the specified logger definition.\n\naws greengrass list-logger-definition-versions \\\n    --logger-definition-id \"49eeeb66-f1d3-4e34-86e3-3617262abf23\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23/versions/5e3f6f64-a565-491e-8de0-3c0d8e0f2073\",\n            \"CreationTimestamp\": \"2019-05-08T16:10:13.866Z\",\n            \"Id\": \"49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n            \"Version\": \"5e3f6f64-a565-491e-8de0-3c0d8e0f2073\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23/versions/3ec6d3af-eb85-48f9-a16d-1c795fe696d7\",\n            \"CreationTimestamp\": \"2019-05-08T16:10:13.809Z\",\n            \"Id\": \"49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n            \"Version\": \"3ec6d3af-eb85-48f9-a16d-1c795fe696d7\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-logger-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-logger-definitions.html",
      "command_description": "Description\n\nRetrieves a list of logger definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-logger-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-logger-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo get a list of logger definitions\n\nThe following list-logger-definitions example lists all of the logger definitions for your AWS account.\n\naws greengrass list-logger-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n            \"CreationTimestamp\": \"2019-05-08T16:10:13.809Z\",\n            \"Id\": \"49eeeb66-f1d3-4e34-86e3-3617262abf23\",\n            \"LastUpdatedTimestamp\": \"2019-05-08T16:10:13.809Z\",\n            \"LatestVersion\": \"5e3f6f64-a565-491e-8de0-3c0d8e0f2073\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/loggers/49eeeb66-f1d3-4e34-86e3-3617262abf23/versions/5e3f6f64-a565-491e-8de0-3c0d8e0f2073\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-resource-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-resource-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a resource definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resource-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-resource-definition-versions\n--resource-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a resource definition\n\nThe following list-resource-definition-versions example lists the versions for the specified Greengrass resource.\n\naws greengrass list-resource-definition-versions \\\n    --resource-definition-id \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658/versions/26e8829a-491a-464d-9c87-664bf6f6f2be\",\n            \"CreationTimestamp\": \"2019-06-19T16:40:59.392Z\",\n            \"Id\": \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n            \"Version\": \"26e8829a-491a-464d-9c87-664bf6f6f2be\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658/versions/432d92f6-12de-4ec9-a704-619a942a62aa\",\n            \"CreationTimestamp\": \"2019-06-19T16:40:59.261Z\",\n            \"Id\": \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n            \"Version\": \"432d92f6-12de-4ec9-a704-619a942a62aa\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-resource-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-resource-definitions.html",
      "command_description": "Description\n\nRetrieves a list of resource definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resource-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-resource-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo list the resources that are defined\n\nThe following list-resource-definitions example lists the resources that are defined for AWS IoT Greengrass to use.\n\naws greengrass list-resource-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n            \"CreationTimestamp\": \"2019-06-19T16:40:59.261Z\",\n            \"Id\": \"ad8c101d-8109-4b0e-b97d-9cc5802ab658\",\n            \"LastUpdatedTimestamp\": \"2019-06-19T16:40:59.261Z\",\n            \"LatestVersion\": \"26e8829a-491a-464d-9c87-664bf6f6f2be\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658/versions/26e8829a-491a-464d-9c87-664bf6f6f2be\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\",\n            \"CreationTimestamp\": \"2019-06-19T21:51:28.212Z\",\n            \"Id\": \"c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\",\n            \"LastUpdatedTimestamp\": \"2019-06-19T21:51:28.212Z\",\n            \"LatestVersion\": \"a5f94d0b-f6bc-40f4-bb78-7a1c5fe13ba1\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/c8bb9ebc-c3fd-40a4-9c6a-568d75569d38/versions/a5f94d0b-f6bc-40f4-bb78-7a1c5fe13ba1\",\n            \"Name\": \"MyGreengrassResources\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-subscription-definition-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-subscription-definition-versions.html",
      "command_description": "Description\n\nLists the versions of a subscription definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-subscription-definition-versions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Versions",
      "command_synopsis": "Synopsis\n  list-subscription-definition-versions\n--subscription-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subscription-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.\n\nVersions -> (list)\n\nInformation about a version.\n\n(structure)\n\nInformation about a version.\n\nArn -> (string)\n\nThe ARN of the version.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the version was created.\n\nId -> (string)\n\nThe ID of the parent definition that the version is associated with.\n\nVersion -> (string)\n\nThe ID of the version.",
      "command_examples": "Examples\n\nTo list the versions of a subscription definition\n\nThe following list-subscription-definition-versions example lists all versions of the specified subscription. You can use the list-subscription-definitions command to look up the subscription ID.\n\naws greengrass list-subscription-definition-versions \\\n    --subscription-definition-id \"70e49321-83d5-45d2-bc09-81f4917ae152\"\n\n\nOutput:\n\n{\n    \"Versions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/88ae8699-12ac-4663-ba3f-4d7f0519140b\",\n            \"CreationTimestamp\": \"2019-06-18T17:03:52.499Z\",\n            \"Id\": \"70e49321-83d5-45d2-bc09-81f4917ae152\",\n            \"Version\": \"88ae8699-12ac-4663-ba3f-4d7f0519140b\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/7e320ba3-c369-4069-a2f0-90acb7f219d6\",\n            \"CreationTimestamp\": \"2019-06-18T17:03:52.392Z\",\n            \"Id\": \"70e49321-83d5-45d2-bc09-81f4917ae152\",\n            \"Version\": \"7e320ba3-c369-4069-a2f0-90acb7f219d6\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-subscription-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-subscription-definitions.html",
      "command_description": "Description\n\nRetrieves a list of subscription definitions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-subscription-definitions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Definitions",
      "command_synopsis": "Synopsis\n  list-subscription-definitions\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDefinitions -> (list)\n\nInformation about a definition.\n\n(structure)\n\nInformation about a definition.\n\nArn -> (string)\n\nThe ARN of the definition.\n\nCreationTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was created.\n\nId -> (string)\n\nThe ID of the definition.\n\nLastUpdatedTimestamp -> (string)\n\nThe time, in milliseconds since the epoch, when the definition was last updated.\n\nLatestVersion -> (string)\n\nThe ID of the latest version associated with the definition.\n\nLatestVersionArn -> (string)\n\nThe ARN of the latest version associated with the definition.\n\nName -> (string)\n\nThe name of the definition.\n\nTags -> (map)\n\nTag(s) attached to the resource arn.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token for the next set of results, or ‘’null’’ if there are no additional results.",
      "command_examples": "Examples\n\nTo get a list subscription definitions\n\nThe following list-subscription-definitions example lists all of the AWS IoT Greengrass subscriptions that are defined in your AWS account.\n\naws greengrass list-subscription-definitions\n\n\nOutput:\n\n{\n    \"Definitions\": [\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152\",\n            \"CreationTimestamp\": \"2019-06-18T17:03:52.392Z\",\n            \"Id\": \"70e49321-83d5-45d2-bc09-81f4917ae152\",\n            \"LastUpdatedTimestamp\": \"2019-06-18T17:03:52.392Z\",\n            \"LatestVersion\": \"88ae8699-12ac-4663-ba3f-4d7f0519140b\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/70e49321-83d5-45d2-bc09-81f4917ae152/versions/88ae8699-12ac-4663-ba3f-4d7f0519140b\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/cd6f1c37-d9a4-4e90-be94-01a7404f5967\",\n            \"CreationTimestamp\": \"2018-10-18T15:45:34.024Z\",\n            \"Id\": \"cd6f1c37-d9a4-4e90-be94-01a7404f5967\",\n            \"LastUpdatedTimestamp\": \"2018-10-18T15:45:34.024Z\",\n            \"LatestVersion\": \"d1cf8fac-284f-4f6a-98fe-a2d36d089373\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/cd6f1c37-d9a4-4e90-be94-01a7404f5967/versions/d1cf8fac-284f-4f6a-98fe-a2d36d089373\"\n        },\n        {\n            \"Arn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/fa81bc84-3f59-4377-a84b-5d0134da359b\",\n            \"CreationTimestamp\": \"2018-10-22T17:09:31.429Z\",\n            \"Id\": \"fa81bc84-3f59-4377-a84b-5d0134da359b\",\n            \"LastUpdatedTimestamp\": \"2018-10-22T17:09:31.429Z\",\n            \"LatestVersion\": \"086d1b08-b25a-477c-a16f-6f9b3a9c295a\",\n            \"LatestVersionArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/subscriptions/fa81bc84-3f59-4377-a84b-5d0134da359b/versions/086d1b08-b25a-477c-a16f-6f9b3a9c295a\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/list-tags-for-resource.html",
      "command_description": "Description\n\nRetrieves a list of resource tags for a resource arn.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string) The Amazon Resource Name (ARN) of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe key-value pair for the resource tag.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list the tags attached to a resource\n\nThe following list-tags-for-resource example lists the tags and their values that are attached to the specified resource.\n\naws greengrass list-tags-for-resource \\\n    --resource-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658\"\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"ResourceSubType\": \"USB\",\n        \"ResourceType\": \"Device\"\n    }\n}\n\n\nFor more information, see Tagging Your Greengrass Resources in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "reset-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/reset-deployments.html",
      "command_description": "Description\n\nResets a group’s deployments.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reset-deployments\n[--amzn-client-token <value>]\n[--force | --no-force]\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "[--force | --no-force]",
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--force | --no-force (boolean) If true, performs a best-effort only core reset.\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeploymentArn -> (string)\n\nThe ARN of the deployment.\n\nDeploymentId -> (string)\n\nThe ID of the deployment.",
      "command_examples": "Examples\n\nTo clean up deployment information for a Greengrass group\n\nThe following reset-deployments example cleans up deployment information for the specified Greengrass group. When you add the --force option, the deployment information is reset without waiting for the core device to respond.\n\naws greengrass reset-deployments \\\n    --group-id \"1402daf9-71cf-4cfe-8be0-d5e80526d0d8\" \\\n    --force\n\n\nOutput:\n\n{\n    \"DeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1402daf9-71cf-4cfe-8be0-d5e80526d0d8/deployments/7dd4e356-9882-46a3-9e28-6d21900c011a\",\n    \"DeploymentId\": \"7dd4e356-9882-46a3-9e28-6d21900c011a\"\n}\n\n\nFor more information, see Reset Deployments in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "start-bulk-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/start-bulk-deployment.html",
      "command_description": "Description\n\nDeploys multiple groups in one operation. This action starts the bulk deployment of a specified set of group versions. Each group version deployment will be triggered with an adaptive rate that has a fixed upper limit. We recommend that you include an ‘’X-Amzn-Client-Token’’ token in every ‘’StartBulkDeployment’’ request. These requests are idempotent with respect to the token and the request parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-bulk-deployment\n[--amzn-client-token <value>]\n--execution-role-arn <value>\n--input-file-uri <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--amzn-client-token <value>]",
        "--execution-role-arn <value>",
        "--input-file-uri <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--amzn-client-token (string) A client token used to correlate requests and responses.\n\n--execution-role-arn (string) The ARN of the execution role to associate with the bulk deployment operation. This IAM role must allow the ‘’greengrass:CreateDeployment’’ action for all group versions that are listed in the input file. This IAM role must have access to the S3 bucket containing the input file.\n\n--input-file-uri (string) The URI of the input file contained in the S3 bucket. The execution role must have ‘’getObject’’ permissions on this bucket to access the input file. The input file is a JSON-serialized, line delimited file with UTF-8 encoding that provides a list of group and version IDs and the deployment type. This file must be less than 100 MB. Currently, AWS IoT Greengrass supports only ‘’NewDeployment’’ deployment types.\n\n--tags (map) Tag(s) to add to the new resource.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBulkDeploymentArn -> (string)\n\nThe ARN of the bulk deployment.\n\nBulkDeploymentId -> (string)\n\nThe ID of the bulk deployment.",
      "command_examples": "Examples\n\nTo start a bulk deployment operation\n\nThe following start-bulk-deployment example starts a bulk deployment operation, using a file stored in an S3 bucket to specify the groups to be deployed.\n\naws greengrass start-bulk-deployment \\\n    --cli-input-json \"{\\\"InputFileUri\\\":\\\"https://gg-group-deployment1.s3-us-west-2.amazonaws.com/MyBulkDeploymentInputFile.txt\\\", \\\"ExecutionRoleArn\\\":\\\"arn:aws:iam::123456789012:role/ggCreateDeploymentRole\\\",\\\"AmznClientToken\\\":\\\"yourAmazonClientToken\\\"}\"\n\n\nOutput:\n\n{\n    \"BulkDeploymentArn\": \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/bulk/deployments/870fb41b-6288-4e0c-bc76-a7ba4b4d3267\",\n    \"BulkDeploymentId\": \"870fb41b-6288-4e0c-bc76-a7ba4b4d3267\"\n}\n\n\nFor more information, see Create Bulk Deployments for Groups in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "stop-bulk-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/stop-bulk-deployment.html",
      "command_description": "Description\n\nStops the execution of a bulk deployment. This action returns a status of ‘’Stopping’’ until the deployment is stopped. You cannot start a new bulk deployment while a previous deployment is in the ‘’Stopping’’ state. This action doesn’t rollback completed deployments or cancel pending deployments.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-bulk-deployment\n--bulk-deployment-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--bulk-deployment-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--bulk-deployment-id (string) The ID of the bulk deployment.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo stop a bulk deployment\n\nThe following stop-bulk-deployment example stops the specified bulk deployment. If you try to stop a bulk deployment that is complete, you receive an error: InvalidInputException: Cannot change state of finished execution.\n\naws greengrass stop-bulk-deployment \\\n    --bulk-deployment-id \"870fb41b-6288-4e0c-bc76-a7ba4b4d3267\"\n\n\nThis command produces no output.\n\nFor more information, see Create Bulk Deployments for Groups in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/tag-resource.html",
      "command_description": "Description\n\nAdds tags to a Greengrass resource. Valid resources are ‘Group’, ‘ConnectorDefinition’, ‘CoreDefinition’, ‘DeviceDefinition’, ‘FunctionDefinition’, ‘LoggerDefinition’, ‘SubscriptionDefinition’, ‘ResourceDefinition’, and ‘BulkDeployment’.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string) The Amazon Resource Name (ARN) of the resource.\n\n--tags (map) The key-value pair for the resource tag.key -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo apply tags to a resource\n\nThe following tag-resource example applies two tags, ResourceType and ResourceSubType, to the specified Greengrass resource. This operation can both add new tags and values or update the value for existing tags. Use the untag-resource command to remove a tag.\n\naws greengrass tag-resource \\\n    --resource-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/definition/resources/ad8c101d-8109-4b0e-b97d-9cc5802ab658\" \\\n    --tags \"ResourceType=Device,ResourceSubType=USB\"\n\n\nThis command produces no output.\n\nFor more information, see Tagging Your Greengrass Resources in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/untag-resource.html",
      "command_description": "Description\n\nRemove resource tags from a Greengrass Resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string) The Amazon Resource Name (ARN) of the resource.\n\n--tag-keys (list) An array of tag keys to delete(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag and its value from a resource\n\nThe following untag-resource example removes the tag whose key is Category from the specified Greengrass group. If the key Category does not exist for the specified resource, no error is returned.\n\naws greengrass untag-resource \\\n    --resource-arn \"arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/1013db12-8b58-45ff-acc7-704248f66731\" \\\n    --tag-keys \"Category\"\n\n\nThis command produces no output.\n\nFor more information, see Tagging Your Greengrass Resources in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-connectivity-info",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-connectivity-info.html",
      "command_description": "Description\n\nUpdates the connectivity information for the core. Any devices that belong to the group which has this core will receive this information in order to find the location of the core and connect to it.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-connectivity-info\n[--connectivity-info <value>]\n--thing-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--connectivity-info <value>]",
        "--thing-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connectivity-info (list) A list of connectivity info.(structure)\n\nInformation about a Greengrass core’s connectivity.\n\nHostAddress -> (string)\n\nThe endpoint for the Greengrass core. Can be an IP address or DNS.\n\nId -> (string)\n\nThe ID of the connectivity information.\n\nMetadata -> (string)\n\nMetadata for this endpoint.\n\nPortNumber -> (integer)\n\nThe port of the Greengrass core. Usually 8883.\n\nShorthand Syntax:\n\nHostAddress=string,Id=string,Metadata=string,PortNumber=integer ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"HostAddress\": \"string\",\n    \"Id\": \"string\",\n    \"Metadata\": \"string\",\n    \"PortNumber\": integer\n  }\n  ...\n]\n\n\n--thing-name (string) The thing name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMessage -> (string)\n\nA message about the connectivity info update request.\n\nVersion -> (string)\n\nThe new version of the connectivity info.",
      "command_examples": "Examples\n\nTo update the connectivity information for a Greengrass core\n\nThe following update-connectivity-info example changes the endpoints that devices can use to connect to the specified Greengrass core. Connectivity information is a list of IP addresses or domain names, with corresponding port numbers and optional customer-defined metadata. You might need to update connectivity information when the local network changes.\n\naws greengrass update-connectivity-info \\\n    --thing-name \"MyGroup_Core\" \\\n    --connectivity-info \"[{\\\"Metadata\\\":\\\"\\\",\\\"PortNumber\\\":8883,\\\"HostAddress\\\":\\\"127.0.0.1\\\",\\\"Id\\\":\\\"localhost_127.0.0.1_0\\\"},{\\\"Metadata\\\":\\\"\\\",\\\"PortNumber\\\":8883,\\\"HostAddress\\\":\\\"192.168.1.3\\\",\\\"Id\\\":\\\"localIP_192.168.1.3\\\"}]\"\n\n\nOutput:\n\n{\n    \"Version\": \"312de337-59af-4cf9-a278-2a23bd39c300\"\n}\n"
    },
    {
      "command_name": "update-connector-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-connector-definition.html",
      "command_description": "Description\n\nUpdates a connector definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-connector-definition\n--connector-definition-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--connector-definition-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--connector-definition-id (string) The ID of the connector definition.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the name for a connector definition\n\nThe following update-connector-definition example updates the name for the specified connector definition. If you want to update the details for the connector, use the create-connector-definition-version command to create a new version.\n\naws greengrass update-connector-definition \\\n    --connector-definition-id \"55d0052b-0d7d-44d6-b56f-21867215e118\" \\\n    --name \"GreengrassConnectors2019\"\n\n\nFor more information, see Integrate with Services and Protocols Using Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-core-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-core-definition.html",
      "command_description": "Description\n\nUpdates a core definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-core-definition\n--core-definition-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--core-definition-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--core-definition-id (string) The ID of the core definition.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a core definition\n\nThe following update-core-definition example changes the name of the specified core definition. You can update only the name property of a core definition.\n\naws greengrass update-core-definition \\\n    --core-definition-id \"582efe12-b05a-409e-9a24-a2ba1bcc4a12\" \\\n    --name \"MyCoreDevices\"\n\n\nThis command produces no output.\n\nFor more information, see Configure the AWS IoT Greengrass Core in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-device-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-device-definition.html",
      "command_description": "Description\n\nUpdates a device definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-device-definition\n--device-definition-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-definition-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-definition-id (string) The ID of the device definition.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a device definition\n\nThe following update-device-definition example changes the name of the specified device definition. You can only update the name property of a device definition.\n\naws greengrass update-device-definition \\\n    --device-definition-id \"f9ba083d-5ad4-4534-9f86-026a45df1ccd\" \\\n    --name \"TemperatureSensors\"\n\n\nThis command produces no output."
    },
    {
      "command_name": "update-function-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-function-definition.html",
      "command_description": "Description\n\nUpdates a Lambda function definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function-definition\n--function-definition-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--function-definition-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--function-definition-id (string) The ID of the Lambda function definition.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the name for a function definition\n\nThe following update-function-definition example updates the name for the specified function definition. If you want to update the details for the function, use the create-function-definition-version command to create a new version.\n\naws greengrass update-function-definition \\\n    --function-definition-id \"e47952bd-dea9-4e2c-a7e1-37bbe8807f46\" \\\n    --name ObsoleteFunction\n\n\nThis command produces no output.\n\nFor more information, see Run Local Lambda Functions in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-group.html",
      "command_description": "Description\n\nUpdates a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-group\n--group-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--group-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--group-id (string) The ID of the Greengrass group.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the group name\n\nThe following update-group example updates the name of the specified Greengrass group. If you want to update the details for the group, use the create-group-version command to create a new version.\n\naws greengrass update-group \\\n    --group-id \"1402daf9-71cf-4cfe-8be0-d5e80526d0d8\" \\\n    --name TestGroup4of6\n\n\nFor more information, see Configure AWS IoT Greengrass on AWS IoT in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-group-certificate-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-group-certificate-configuration.html",
      "command_description": "Description\n\nUpdates the Certificate expiry time for a group.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-group-certificate-configuration\n[--certificate-expiry-in-milliseconds <value>]\n--group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--certificate-expiry-in-milliseconds <value>]",
        "--group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--certificate-expiry-in-milliseconds (string) The amount of time remaining before the certificate expires, in milliseconds.\n\n--group-id (string) The ID of the Greengrass group.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCertificateAuthorityExpiryInMilliseconds -> (string)\n\nThe amount of time remaining before the certificate authority expires, in milliseconds.\n\nCertificateExpiryInMilliseconds -> (string)\n\nThe amount of time remaining before the certificate expires, in milliseconds.\n\nGroupId -> (string)\n\nThe ID of the group certificate configuration.",
      "command_examples": "Examples\n\nTo update the expiry of a group’s certificates\n\nThe following update-group-certificate-configuration example sets a 10-day expiry for the certificates generated for the specified group.\n\naws greengrass update-group-certificate-configuration \\\n    --group-id \"8eaadd72-ce4b-4f15-892a-0cc4f3a343f1\" \\\n    --certificate-expiry-in-milliseconds 864000000\n\n\nOutput:\n\n{\n    \"CertificateExpiryInMilliseconds\": 864000000,\n    \"CertificateAuthorityExpiryInMilliseconds\": 2524607999000,\n    \"GroupId\": \"8eaadd72-ce4b-4f15-892a-0cc4f3a343f1\"\n}\n\n\nFor more information, see AWS IoT Greengrass Security in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-logger-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-logger-definition.html",
      "command_description": "Description\n\nUpdates a logger definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-logger-definition\n--logger-definition-id <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--logger-definition-id <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--logger-definition-id (string) The ID of the logger definition.\n\n--name (string) The name of the definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a logger definition\n\nThe following update-logger-definition example changes the name of the specified logger definition. You can only update the name property of a logger definition.\n\naws greengrass update-logger-definition \\\n    --logger-definition-id \"a454b62a-5d56-4ca9-bdc4-8254e1662cb0\" \\\n    --name \"LoggingConfigsForSensors\"\n\n\nThis command produces no output.\n\nFor more information, see Monitoring with AWS IoT Greengrass Logs in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-resource-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-resource-definition.html",
      "command_description": "Description\n\nUpdates a resource definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-resource-definition\n[--name <value>]\n--resource-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name <value>]",
        "--resource-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string) The name of the definition.\n\n--resource-definition-id (string) The ID of the resource definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the name for a resource definition\n\nThe following update-resource-definition example updates the name for the specified resource definition. If you want to change the details for the resource, use the create-resource-definition-version command to create a new version.\n\naws greengrass update-resource-definition \\\n    --resource-definition-id \"c8bb9ebc-c3fd-40a4-9c6a-568d75569d38\" \\\n    --name GreengrassConnectorResoruces\n\n\nThis command produces no output.\n\nFor more information, see Access Local Resources with Lambda Functions and Connectors in the AWS IoT Greengrass Developer Guide."
    },
    {
      "command_name": "update-subscription-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-subscription-definition.html",
      "command_description": "Description\n\nUpdates a subscription definition.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-subscription-definition\n[--name <value>]\n--subscription-definition-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name <value>]",
        "--subscription-definition-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string) The name of the definition.\n\n--subscription-definition-id (string) The ID of the subscription definition.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the name for a subscription definition\n\nThe following update-subscription-definition example updates the name for the specified subscription definition. If you want to change details for the subscription, use the create-subscription-definition-version command to create a new version.\n\naws greengrass update-subscription-definition \\\n    --subscription-definition-id \"fa81bc84-3f59-4377-a84b-5d0134da359b\" \\\n    --name \"ObsoleteSubscription\"\n\n\nThis command produces no output.\n\nFor more information, see title in the guide."
    },
    {
      "command_name": "update-thing-runtime-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/greengrass/update-thing-runtime-configuration.html",
      "command_description": "Description\n\nUpdates the runtime configuration of a thing.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-thing-runtime-configuration\n[--telemetry-configuration <value>]\n--thing-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--telemetry-configuration <value>]",
        "--thing-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--telemetry-configuration (structure) Configuration for telemetry service.Telemetry -> (string)\n\nConfigure telemetry to be on or off.\n\nShorthand Syntax:\n\nTelemetry=string\n\n\nJSON Syntax:\n\n{\n  \"Telemetry\": \"On\"|\"Off\"\n}\n\n\n--thing-name (string) The thing name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo turn on telemetry in the runtime configuration of a Greengrass core\n\nThe following update-thing-runtime-configuration example updates the runtime configuration of a Greengrass core to turn on telemetry.\n\naws greengrass update-thing-runtime-configuration \\\n    --thing-name SampleGreengrassCore \\\n    --telemetry-configuration {\\\"Telemetry\\\":\\\"On\\\"}\n\n\nThis command produces no output.\n\nFor more information, see Configuring telemetry settings in the AWS IoT Greengrass Developer Guide."
    }
  ],
  "service_description": "Description\n\nAWS IoT Greengrass seamlessly extends AWS onto physical devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. AWS IoT Greengrass ensures your devices can respond quickly to local events and operate with intermittent connectivity. AWS IoT Greengrass minimizes the cost of transmitting data to the cloud by allowing you to author AWS Lambda functions that execute locally."
}