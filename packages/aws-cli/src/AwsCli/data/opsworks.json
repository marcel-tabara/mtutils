{
  "service_name": "opsworks",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/index.html",
  "service_commands": [
    {
      "command_name": "assign-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/assign-instance.html",
      "command_description": "Description\n\nAssign a registered instance to a layer.\n\nYou can assign registered on-premises instances to any layer type.\n\nYou can assign registered Amazon EC2 instances only to custom layers.\n\nYou cannot use this action with instances that were created with AWS OpsWorks Stacks.\n\nRequired Permissions : To use this action, an AWS Identity and Access Management (IAM) user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  assign-instance\n--instance-id <value>\n--layer-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "--layer-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--layer-ids (list)\n\nThe layer ID, which must correspond to a custom layer. You cannot assign a registered instance to a built-in layer.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo assign a registered instance to a layer\n\nThe following example assigns a registered instance to a custom layer.\n\naws opsworks --region us-east-1 assign-instance --instance-id 4d6d1710-ded9-42a1-b08e-b043ad7af1e2 --layer-ids 26cf1d32-6876-42fa-bbf1-9cadc0bff938\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Assigning a Registered Instance to a Layer in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "assign-volume",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/assign-volume.html",
      "command_description": "Description\n\nAssigns one of the stack’s registered Amazon EBS volumes to a specified instance. The volume must first be registered with the stack by calling RegisterVolume . After you register the volume, you must call UpdateVolume to specify a mount point before calling AssignVolume . For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  assign-volume\n--volume-id <value>\n[--instance-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--volume-id <value>",
        "[--instance-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--volume-id (string)\n\nThe volume ID.\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo assign a registered volume to an instance\n\nThe following example assigns a registered Amazon Elastic Block Store (Amazon EBS) volume to an instance. The volume is identified by its volume ID, which is the GUID that AWS OpsWorks assigns when you register the volume with a stack, not the Amazon Elastic Compute Cloud (Amazon EC2) volume ID. Before you run assign-volume, you must first run update-volume to assign a mount point to the volume.\n\naws opsworks --region us-east-1 assign-volume --instance-id 4d6d1710-ded9-42a1-b08e-b043ad7af1e2 --volume-id 26cf1d32-6876-42fa-bbf1-9cadc0bff938\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Assigning Amazon EBS Volumes to an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "associate-elastic-ip",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/associate-elastic-ip.html",
      "command_description": "Description\n\nAssociates one of the stack’s registered Elastic IP addresses with a specified instance. The address must first be registered with the stack by calling RegisterElasticIp . For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-elastic-ip\n--elastic-ip <value>\n[--instance-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-ip <value>",
        "[--instance-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-ip (string)\n\nThe Elastic IP address.\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo associate an Elastic IP address with an instance\n\nThe following example associates an Elastic IP address with a specified instance.\n\naws opsworks --region us-east-1 associate-elastic-ip --instance-id dfe18b02-5327-493d-91a4-c5c0c448927f --elastic-ip 54.148.130.96\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Resource Management in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "attach-elastic-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/attach-elastic-load-balancer.html",
      "command_description": "Description\n\nAttaches an Elastic Load Balancing load balancer to a specified layer. AWS OpsWorks Stacks does not support Application Load Balancer. You can only use Classic Load Balancer with AWS OpsWorks Stacks. For more information, see Elastic Load Balancing .\n\nNote\n\nYou must create the Elastic Load Balancing instance separately, by using the Elastic Load Balancing console, API, or CLI. For more information, see Elastic Load Balancing Developer Guide .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  attach-elastic-load-balancer\n--elastic-load-balancer-name <value>\n--layer-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-load-balancer-name <value>",
        "--layer-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-load-balancer-name (string)\n\nThe Elastic Load Balancing instance’s name.\n\n--layer-id (string)\n\nThe ID of the layer to which the Elastic Load Balancing instance is to be attached.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo attach a load balancer to a layer\n\nThe following example attaches a load balancer, identified by its name, to a specified layer.\n\naws opsworks --region us-east-1 attach-elastic-load-balancer --elastic-load-balancer-name Java-LB --layer-id 888c5645-09a5-4d0e-95a8-812ef1db76a4\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Elastic Load Balancing in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "clone-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/clone-stack.html",
      "command_description": "Description\n\nCreates a clone of a specified stack. For more information, see Clone a Stack . By default, all parameters are set to the values used by the parent stack.\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  clone-stack\n--source-stack-id <value>\n[--name <value>]\n[--vpc-id <value>]\n[--attributes <value>]\n--service-role-arn <value>\n[--default-instance-profile-arn <value>]\n[--default-os <value>]\n[--hostname-theme <value>]\n[--default-availability-zone <value>]\n[--default-subnet-id <value>]\n[--custom-json <value>]\n[--configuration-manager <value>]\n[--chef-configuration <value>]\n[--use-custom-cookbooks | --no-use-custom-cookbooks]\n[--use-opsworks-security-groups | --no-use-opsworks-security-groups]\n[--custom-cookbooks-source <value>]\n[--default-ssh-key-name <value>]\n[--clone-permissions | --no-clone-permissions]\n[--clone-app-ids <value>]\n[--default-root-device-type <value>]\n[--agent-version <value>]\n[--stack-region <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--source-stack-id <value>",
        "[--name <value>]",
        "[--vpc-id <value>]",
        "[--attributes <value>]",
        "--service-role-arn <value>",
        "[--default-instance-profile-arn <value>]",
        "[--default-os <value>]",
        "[--hostname-theme <value>]",
        "[--default-availability-zone <value>]",
        "[--default-subnet-id <value>]",
        "[--custom-json <value>]",
        "[--configuration-manager <value>]",
        "[--chef-configuration <value>]",
        "[--use-custom-cookbooks | --no-use-custom-cookbooks]",
        "[--use-opsworks-security-groups | --no-use-opsworks-security-groups]",
        "[--custom-cookbooks-source <value>]",
        "[--default-ssh-key-name <value>]",
        "[--clone-permissions | --no-clone-permissions]",
        "[--clone-app-ids <value>]",
        "[--default-root-device-type <value>]",
        "[--agent-version <value>]",
        "[--stack-region <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--source-stack-id (string)\n\nThe source stack ID.\n\n--name (string)\n\nThe cloned stack name.\n\n--vpc-id (string)\n\nThe ID of the VPC that the cloned stack is to be launched into. It must be in the specified region. All instances are launched into this VPC, and you cannot change the ID later.\n\nIf your account supports EC2 Classic, the default value is no VPC.\n\nIf your account does not support EC2 Classic, the default value is the default VPC for the specified region.\n\nIf the VPC ID corresponds to a default VPC and you have specified either the DefaultAvailabilityZone or the DefaultSubnetId parameter only, AWS OpsWorks Stacks infers the value of the other parameter. If you specify neither parameter, AWS OpsWorks Stacks sets these parameters to the first valid Availability Zone for the specified region and the corresponding default VPC subnet ID, respectively.\n\nIf you specify a nondefault VPC ID, note the following:\n\nIt must belong to a VPC in your account that is in the specified region.\n\nYou must specify a value for DefaultSubnetId .\n\nFor more information about how to use AWS OpsWorks Stacks with a VPC, see Running a Stack in a VPC . For more information about default VPC and EC2 Classic, see Supported Platforms .\n\n--attributes (map)\n\nA list of stack attributes and values as key/value pairs to be added to the cloned stack.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  Color\n\n\nJSON Syntax:\n\n{\"Color\": \"string\"\n  ...}\n\n\n--service-role-arn (string)\n\nThe stack AWS Identity and Access Management (IAM) role, which allows AWS OpsWorks Stacks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. If you create a stack by using the AWS OpsWorks Stacks console, it creates the role for you. You can obtain an existing stack’s IAM ARN programmatically by calling DescribePermissions . For more information about IAM ARNs, see Using Identifiers .\n\nNote\n\nYou must set this parameter to a valid service role ARN or the action will fail; there is no default value. You can specify the source stack’s service role ARN, if you prefer, but you must do so explicitly.\n\n--default-instance-profile-arn (string)\n\nThe Amazon Resource Name (ARN) of an IAM profile that is the default profile for all of the stack’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\n--default-os (string)\n\nThe stack’s operating system, which must be set to one of the following.\n\nA supported Linux operating system: An Amazon Linux version, such as Amazon Linux 2018.03 , Amazon Linux 2017.09 , Amazon Linux 2017.03 , Amazon Linux 2016.09 , Amazon Linux 2016.03 , Amazon Linux 2015.09 , or Amazon Linux 2015.03 .\n\nA supported Ubuntu operating system, such as Ubuntu 16.04 LTS , Ubuntu 14.04 LTS , or Ubuntu 12.04 LTS .\n\nCentOS Linux 7\n\nRed Hat Enterprise Linux 7\n\nMicrosoft Windows Server 2012 R2 Base , Microsoft Windows Server 2012 R2 with SQL Server Express , Microsoft Windows Server 2012 R2 with SQL Server Standard , or Microsoft Windows Server 2012 R2 with SQL Server Web .\n\nA custom AMI: Custom . You specify the custom AMI you want to use when you create instances. For more information about how to use custom AMIs with OpsWorks, see Using Custom AMIs .\n\nThe default option is the parent stack’s operating system. For more information about supported operating systems, see AWS OpsWorks Stacks Operating Systems .\n\nNote\n\nYou can specify a different Linux operating system for the cloned stack, but you cannot change from Linux to Windows or Windows to Linux.\n\n--hostname-theme (string)\n\nThe stack’s host name theme, with spaces are replaced by underscores. The theme is used to generate host names for the stack’s instances. By default, HostnameTheme is set to Layer_Dependent , which creates host names by appending integers to the layer’s short name. The other themes are:\n\nBaked_Goods\n\nClouds\n\nEurope_Cities\n\nFruits\n\nGreek_Deities_and_Titans\n\nLegendary_creatures_from_Japan\n\nPlanets_and_Moons\n\nRoman_Deities\n\nScottish_Islands\n\nUS_Cities\n\nWild_Cats\n\nTo obtain a generated host name, call GetHostNameSuggestion , which returns a host name based on the current theme.\n\n--default-availability-zone (string)\n\nThe cloned stack’s default Availability Zone, which must be in the specified region. For more information, see Regions and Endpoints . If you also specify a value for DefaultSubnetId , the subnet must be in the same zone. For more information, see the VpcId parameter description.\n\n--default-subnet-id (string)\n\nThe stack’s default VPC subnet ID. This parameter is required if you specify a value for the VpcId parameter. All instances are launched into this subnet unless you specify otherwise when you create the instance. If you also specify a value for DefaultAvailabilityZone , the subnet must be in that zone. For information on default values and when this parameter is required, see the VpcId parameter description.\n\n--custom-json (string)\n\nA string that contains user-defined, custom JSON. It is used to override the corresponding default stack configuration JSON values. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information about custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes\n\n--configuration-manager (structure)\n\nThe configuration manager. When you clone a stack we recommend that you use the configuration manager to specify the Chef version: 12, 11.10, or 11.4 for Linux stacks, or 12.2 for Windows stacks. The default value for Linux stacks is currently 12.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4.\n\nShorthand Syntax:\n\nName=string,Version=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Version\": \"string\"\n}\n\n\n--chef-configuration (structure)\n\nA ChefConfiguration object that specifies whether to enable Berkshelf and the Berkshelf version on Chef 11.10 stacks. For more information, see Create a New Stack .\n\nManageBerkshelf -> (boolean)\n\nWhether to enable Berkshelf.\n\nBerkshelfVersion -> (string)\n\nThe Berkshelf version.\n\nShorthand Syntax:\n\nManageBerkshelf=boolean,BerkshelfVersion=string\n\n\nJSON Syntax:\n\n{\n  \"ManageBerkshelf\": true|false,\n  \"BerkshelfVersion\": \"string\"\n}\n\n\n--use-custom-cookbooks | --no-use-custom-cookbooks (boolean)\n\nWhether to use custom cookbooks.\n\n--use-opsworks-security-groups | --no-use-opsworks-security-groups (boolean)\n\nWhether to associate the AWS OpsWorks Stacks built-in security groups with the stack’s layers.\n\nAWS OpsWorks Stacks provides a standard set of built-in security groups, one for each layer, which are associated with layers by default. With UseOpsworksSecurityGroups you can instead provide your own custom security groups. UseOpsworksSecurityGroups has the following settings:\n\nTrue - AWS OpsWorks Stacks automatically associates the appropriate built-in security group with each layer (default setting). You can associate additional security groups with a layer after you create it but you cannot delete the built-in security group.\n\nFalse - AWS OpsWorks Stacks does not associate built-in security groups with layers. You must create appropriate Amazon Elastic Compute Cloud (Amazon EC2) security groups and associate a security group with each layer that you create. However, you can still manually associate a built-in security group with a layer on creation; custom security groups are required only for those layers that need custom settings.\n\nFor more information, see Create a New Stack .\n\n--custom-cookbooks-source (structure)\n\nContains the information required to retrieve an app or cookbook from a repository. For more information, see Adding Apps or Cookbooks and Recipes .\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nShorthand Syntax:\n\nType=string,Url=string,Username=string,Password=string,SshKey=string,Revision=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"git\"|\"svn\"|\"archive\"|\"s3\",\n  \"Url\": \"string\",\n  \"Username\": \"string\",\n  \"Password\": \"string\",\n  \"SshKey\": \"string\",\n  \"Revision\": \"string\"\n}\n\n\n--default-ssh-key-name (string)\n\nA default Amazon EC2 key pair name. The default value is none. If you specify a key pair name, AWS OpsWorks installs the public key on the instance and you can use the private key with an SSH client to log in to the instance. For more information, see Using SSH to Communicate with an Instance and Managing SSH Access . You can override this setting by specifying a different key pair, or no key pair, when you create an instance .\n\n--clone-permissions | --no-clone-permissions (boolean)\n\nWhether to clone the source stack’s permissions.\n\n--clone-app-ids (list)\n\nA list of source stack app IDs to be included in the cloned stack.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--default-root-device-type (string)\n\nThe default root device type. This value is used by default for all instances in the cloned stack, but you can override it when you create an instance. For more information, see Storage for the Root Device .\n\nPossible values:\n\nebs\n\ninstance-store\n\n--agent-version (string)\n\nThe default AWS OpsWorks Stacks agent version. You have the following options:\n\nAuto-update - Set this parameter to LATEST . AWS OpsWorks Stacks automatically installs new agent versions on the stack’s instances as soon as they are available.\n\nFixed version - Set this parameter to your preferred agent version. To update the agent version, you must edit the stack configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the stack’s instances.\n\nThe default setting is LATEST . To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions . AgentVersion cannot be set to Chef 12.2.\n\nNote\n\nYou can also specify an agent version when you create or update an instance, which overrides the stack’s default setting.\n\n--stack-region (string)\n\nThe cloned stack AWS region, such as “ap-northeast-2”. For more information about AWS regions, see Regions and Endpoints .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStackId -> (string)\n\nThe cloned stack ID."
    },
    {
      "command_name": "create-app",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-app.html",
      "command_description": "Description\n\nCreates an app for a specified stack. For more information, see Creating Apps .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-app\n--stack-id <value>\n[--shortname <value>]\n--name <value>\n[--description <value>]\n[--data-sources <value>]\n--type <value>\n[--app-source <value>]\n[--domains <value>]\n[--enable-ssl | --no-enable-ssl]\n[--ssl-configuration <value>]\n[--attributes <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--shortname <value>]",
        "--name <value>",
        "[--description <value>]",
        "[--data-sources <value>]",
        "--type <value>",
        "[--app-source <value>]",
        "[--domains <value>]",
        "[--enable-ssl | --no-enable-ssl]",
        "[--ssl-configuration <value>]",
        "[--attributes <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--shortname (string)\n\nThe app’s short name.\n\n--name (string)\n\nThe app name.\n\n--description (string)\n\nA description of the app.\n\n--data-sources (list)\n\nThe app’s data source.\n\n(structure)\n\nDescribes an app’s data source.\n\nType -> (string)\n\nThe data source’s type, AutoSelectOpsworksMysqlInstance , OpsworksMysqlInstance , RdsDbInstance , or None .\n\nArn -> (string)\n\nThe data source’s ARN.\n\nDatabaseName -> (string)\n\nThe database name.\n\nShorthand Syntax:\n\nType=string,Arn=string,DatabaseName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"string\",\n    \"Arn\": \"string\",\n    \"DatabaseName\": \"string\"\n  }\n  ...\n]\n\n\n--type (string)\n\nThe app type. Each supported type is associated with a particular layer. For example, PHP applications are associated with a PHP layer. AWS OpsWorks Stacks deploys an application to those instances that are members of the corresponding layer. If your app isn’t one of the standard types, or you prefer to implement your own Deploy recipes, specify other .\n\nPossible values:\n\naws-flow-ruby\n\njava\n\nrails\n\nphp\n\nnodejs\n\nstatic\n\nother\n\n--app-source (structure)\n\nA Source object that specifies the app repository.\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nShorthand Syntax:\n\nType=string,Url=string,Username=string,Password=string,SshKey=string,Revision=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"git\"|\"svn\"|\"archive\"|\"s3\",\n  \"Url\": \"string\",\n  \"Username\": \"string\",\n  \"Password\": \"string\",\n  \"SshKey\": \"string\",\n  \"Revision\": \"string\"\n}\n\n\n--domains (list)\n\nThe app virtual host settings, with multiple domains separated by commas. For example: 'www.example.com, example.com'\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--enable-ssl | --no-enable-ssl (boolean)\n\nWhether to enable SSL for the app.\n\n--ssl-configuration (structure)\n\nAn SslConfiguration object with the SSL configuration.\n\nCertificate -> (string)\n\nThe contents of the certificate’s domain.crt file.\n\nPrivateKey -> (string)\n\nThe private key; the contents of the certificate’s domain.kex file.\n\nChain -> (string)\n\nOptional. Can be used to specify an intermediate certificate authority key or client authentication.\n\nShorthand Syntax:\n\nCertificate=string,PrivateKey=string,Chain=string\n\n\nJSON Syntax:\n\n{\n  \"Certificate\": \"string\",\n  \"PrivateKey\": \"string\",\n  \"Chain\": \"string\"\n}\n\n\n--attributes (map)\n\nOne or more user-defined key/value pairs to be added to the stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  DocumentRoot\n  RailsEnv\n  AutoBundleOnDeploy\n  AwsFlowRubySettings\n\n\nJSON Syntax:\n\n{\"DocumentRoot\"|\"RailsEnv\"|\"AutoBundleOnDeploy\"|\"AwsFlowRubySettings\": \"string\"\n  ...}\n\n\n--environment (list)\n\nAn array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instance. For more information, see Environment Variables .\n\nThere is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variables’ names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases. Exceeding it will cause an exception with the message, “Environment: is too large (maximum is 20KB).”\n\nNote\n\nIf you have specified one or more environment variables, you cannot modify the stack’s Chef version.\n\n(structure)\n\nRepresents an app’s environment variable.\n\nKey -> (string)\n\n(Required) The environment variable’s name, which can consist of up to 64 characters and must be specified. The name can contain upper- and lowercase letters, numbers, and underscores (_), but it must start with a letter or underscore.\n\nValue -> (string)\n\n(Optional) The environment variable’s value, which can be left empty. If you specify a value, it can contain up to 256 characters, which must all be printable.\n\nSecure -> (boolean)\n\n(Optional) Whether the variable’s value will be returned by the DescribeApps action. To conceal an environment variable’s value, set Secure to true . DescribeApps then returns *****FILTERED***** instead of the actual value. The default value for Secure is false .\n\nShorthand Syntax:\n\nKey=string,Value=string,Secure=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Secure\": true|false\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAppId -> (string)\n\nThe app ID.",
      "command_examples": "Examples\n\nTo create an app\n\nThe following example creates a PHP app named SimplePHPApp from code stored in a GitHub repository. The command uses the shorthand form of the application source definition.\n\naws opsworks --region us-east-1 create-app --stack-id f6673d70-32e6-4425-8999-265dd002fec7 --name SimplePHPApp --type php --app-source Type=git,Url=git://github.com/amazonwebservices/opsworks-demo-php-simple-app.git,Revision=version1\n\n\nOutput:\n\n{\n  \"AppId\": \"6cf5163c-a951-444f-a8f7-3716be75f2a2\"\n}\n\n\nTo create an app with an attached database\n\nThe following example creates a JSP app from code stored in .zip archive in a public S3 bucket. It attaches an RDS DB instance to serve as the app’s data store. The application and database sources are defined in separate JSON files that are in the directory from which you run the command.\n\naws opsworks --region us-east-1 create-app --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8 --name SimpleJSP --type java --app-source file://appsource.json --data-sources file://datasource.json\n\n\nThe application source information is in appsource.json and contains the following.\n\n{\n  \"Type\": \"archive\",\n  \"Url\": \"https://s3.amazonaws.com/jsp_example/simplejsp.zip\"\n}\n\n\nThe database source information is in datasource.json and contains the following.\n\n[\n  {\n    \"Type\": \"RdsDbInstance\",\n    \"Arn\": \"arn:aws:rds:us-west-2:123456789012:db:clitestdb\",\n    \"DatabaseName\": \"mydb\"\n  }\n]\n\n\nNote: For an RDS DB instance, you must first use register-rds-db-instance to register the instance with the stack. For MySQL App Server instances, set Type to OpsworksMysqlInstance. These instances are created by AWS OpsWorks, so they do not have to be registered.\n\nOutput:\n\n{\n  \"AppId\": \"26a61ead-d201-47e3-b55c-2a7c666942f8\"\n}\n\n\nFor more information, see Adding Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "create-deployment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-deployment.html",
      "command_description": "Description\n\nRuns deployment or stack commands. For more information, see Deploying Apps and Run Stack Commands .\n\nRequired Permissions : To use this action, an IAM user must have a Deploy or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-deployment\n--stack-id <value>\n[--app-id <value>]\n[--instance-ids <value>]\n[--layer-ids <value>]\n--command <value>\n[--comment <value>]\n[--custom-json <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--app-id <value>]",
        "[--instance-ids <value>]",
        "[--layer-ids <value>]",
        "--command <value>",
        "[--comment <value>]",
        "[--custom-json <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--app-id (string)\n\nThe app ID. This parameter is required for app deployments, but not for other deployment commands.\n\n--instance-ids (list)\n\nThe instance IDs for the deployment targets.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--layer-ids (list)\n\nThe layer IDs for the deployment targets.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--command (structure)\n\nA DeploymentCommand object that specifies the deployment command and any associated arguments.\n\nName -> (string)\n\nSpecifies the operation. You can specify only one command.\n\nFor stacks, the following commands are available:\n\nexecute_recipes : Execute one or more recipes. To specify the recipes, set an Args parameter named recipes to the list of recipes to be executed. For example, to execute phpapp::appsetup , set Args to {\"recipes\":[\"phpapp::appsetup\"]} .\n\ninstall_dependencies : Install the stack’s dependencies.\n\nupdate_custom_cookbooks : Update the stack’s custom cookbooks.\n\nupdate_dependencies : Update the stack’s dependencies.\n\nNote\n\nThe update_dependencies and install_dependencies commands are supported only for Linux instances. You can run the commands successfully on Windows instances, but they do nothing.\n\nFor apps, the following commands are available:\n\ndeploy : Deploy an app. Ruby on Rails apps have an optional Args parameter named migrate . Set Args to {“migrate”:[“true”]} to migrate the database. The default setting is {“migrate”:[“false”]}.\n\nrollback Roll the app back to the previous version. When you update an app, AWS OpsWorks Stacks stores the previous version, up to a maximum of five versions. You can use this command to roll an app back as many as four versions.\n\nstart : Start the app’s web or application server.\n\nstop : Stop the app’s web or application server.\n\nrestart : Restart the app’s web or application server.\n\nundeploy : Undeploy the app.\n\nArgs -> (map)\n\nThe arguments of those commands that take arguments. It should be set to a JSON object with the following format:\n\n{\"arg_name1\" : [\"value1\", \"value2\", ...], \"arg_name2\" : [\"value1\", \"value2\", ...], ...}\n\nThe update_dependencies command takes two arguments:\n\nupgrade_os_to - Specifies the desired Amazon Linux version for instances whose OS you want to upgrade, such as Amazon Linux 2016.09 . You must also set the allow_reboot argument to true.\n\nallow_reboot - Specifies whether to allow AWS OpsWorks Stacks to reboot the instances if necessary, after installing the updates. This argument can be set to either true or false . The default value is false .\n\nFor example, to upgrade an instance to Amazon Linux 2016.09, set Args to the following.\n\n{ \"upgrade_os_to\":[\"Amazon Linux 2016.09\"], \"allow_reboot\":[\"true\"] }\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nShorthand Syntax:\n\nName=string,Args={KeyName1=string,string,KeyName2=string,string}\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"install_dependencies\"|\"update_dependencies\"|\"update_custom_cookbooks\"|\"execute_recipes\"|\"configure\"|\"setup\"|\"deploy\"|\"rollback\"|\"start\"|\"stop\"|\"restart\"|\"undeploy\",\n  \"Args\": {\"string\": [\"string\", ...]\n    ...}\n}\n\n\n--comment (string)\n\nA user-defined comment.\n\n--custom-json (string)\n\nA string that contains user-defined, custom JSON. You can use this parameter to override some corresponding default stack configuration JSON values. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information about custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes and Overriding Attributes With Custom JSON .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeploymentId -> (string)\n\nThe deployment ID, which can be used with other requests to identify the deployment.",
      "command_examples": "Examples\n\nExample 1: To deploy apps and run stack commands\n\nThe following examples show how to use the create-deployment command to deploy apps and run stack commands. Notice that the quote (\") characters in the JSON object that specifies the command are all preceded by escape characters (\\). Without the escape characters, the command might return an invalid JSON error.\n\nThe following create-deployment example deploys an app to a specified stack.\n\naws opsworks create-deployment \\\n    --stack-id cfb7e082-ad1d-4599-8e81-de1c39ab45bf \\\n    --app-id 307be5c8-d55d-47b5-bd6e-7bd417c6c7eb\n    --command \"{\\\"Name\\\":\\\"deploy\\\"}\"\n\n\nOutput:\n\n{\n    \"DeploymentId\": \"5746c781-df7f-4c87-84a7-65a119880560\"\n}\n\n\nExample 2: To deploy a Rails App and Migrate the Database\n\nThe following create-deployment command deploys a Ruby on Rails app to a specified stack and migrates the database.\n\naws opsworks create-deployment \\\n    --stack-id cfb7e082-ad1d-4599-8e81-de1c39ab45bf \\\n    --app-id 307be5c8-d55d-47b5-bd6e-7bd417c6c7eb \\\n    --command \"{\\\"Name\\\":\\\"deploy\\\", \\\"Args\\\":{\\\"migrate\\\":[\\\"true\\\"]}}\"\n\n\nOutput:\n\n{\n    \"DeploymentId\": \"5746c781-df7f-4c87-84a7-65a119880560\"\n}\n\n\nFor more information on deployment, see Deploying Apps in the AWS OpsWorks User Guide.\n\nExample 3: Run a Recipe\n\nThe following create-deployment command runs a custom recipe, phpapp::appsetup, on the instances in a specified stack.\n\naws opsworks create-deployment \\\n    --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb \\\n    --command \"{\\\"Name\\\":\\\"execute_recipes\\\", \\\"Args\\\":{\\\"recipes\\\":[\\\"phpapp::appsetup\\\"]}}\"\n\n\nOutput:\n\n{\n    \"DeploymentId\": \"5cbaa7b9-4e09-4e53-aa1b-314fbd106038\"\n}\n\n\nFor more information, see Run Stack Commands in the AWS OpsWorks User Guide.\n\nExample 4: Install Dependencies\n\nThe following create-deployment command installs dependencies, such as packages or Ruby gems, on the instances in a specified stack.\n\naws opsworks create-deployment \\\n    --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb \\\n    --command \"{\\\"Name\\\":\\\"install_dependencies\\\"}\"\n\n\nOutput:\n\n{\n    \"DeploymentId\": \"aef5b255-8604-4928-81b3-9b0187f962ff\"\n}\n\n\nFor more information, see Run Stack Commands in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "create-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-instance.html",
      "command_description": "Description\n\nCreates an instance in a specified stack. For more information, see Adding an Instance to a Layer .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-instance\n--stack-id <value>\n--layer-ids <value>\n--instance-type <value>\n[--auto-scaling-type <value>]\n[--hostname <value>]\n[--os <value>]\n[--ami-id <value>]\n[--ssh-key-name <value>]\n[--availability-zone <value>]\n[--virtualization-type <value>]\n[--subnet-id <value>]\n[--architecture <value>]\n[--root-device-type <value>]\n[--block-device-mappings <value>]\n[--install-updates-on-boot | --no-install-updates-on-boot]\n[--ebs-optimized | --no-ebs-optimized]\n[--agent-version <value>]\n[--tenancy <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "--layer-ids <value>",
        "--instance-type <value>",
        "[--auto-scaling-type <value>]",
        "[--hostname <value>]",
        "[--os <value>]",
        "[--ami-id <value>]",
        "[--ssh-key-name <value>]",
        "[--availability-zone <value>]",
        "[--virtualization-type <value>]",
        "[--subnet-id <value>]",
        "[--architecture <value>]",
        "[--root-device-type <value>]",
        "[--block-device-mappings <value>]",
        "[--install-updates-on-boot | --no-install-updates-on-boot]",
        "[--ebs-optimized | --no-ebs-optimized]",
        "[--agent-version <value>]",
        "[--tenancy <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--layer-ids (list)\n\nAn array that contains the instance’s layer IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--instance-type (string)\n\nThe instance type, such as t2.micro . For a list of supported instance types, open the stack in the console, choose Instances , and choose + Instance . The Size list contains the currently supported types. For more information, see Instance Families and Types . The parameter values that you use to specify the various types are in the API Name column of the Available Instance Types table.\n\n--auto-scaling-type (string)\n\nFor load-based or time-based instances, the type. Windows stacks can use only time-based instances.\n\nPossible values:\n\nload\n\ntimer\n\n--hostname (string)\n\nThe instance host name.\n\n--os (string)\n\nThe instance’s operating system, which must be set to one of the following.\n\nA supported Linux operating system: An Amazon Linux version, such as Amazon Linux 2018.03 , Amazon Linux 2017.09 , Amazon Linux 2017.03 , Amazon Linux 2016.09 , Amazon Linux 2016.03 , Amazon Linux 2015.09 , or Amazon Linux 2015.03 .\n\nA supported Ubuntu operating system, such as Ubuntu 16.04 LTS , Ubuntu 14.04 LTS , or Ubuntu 12.04 LTS .\n\nCentOS Linux 7\n\nRed Hat Enterprise Linux 7\n\nA supported Windows operating system, such as Microsoft Windows Server 2012 R2 Base , Microsoft Windows Server 2012 R2 with SQL Server Express , Microsoft Windows Server 2012 R2 with SQL Server Standard , or Microsoft Windows Server 2012 R2 with SQL Server Web .\n\nA custom AMI: Custom .\n\nFor more information about the supported operating systems, see AWS OpsWorks Stacks Operating Systems .\n\nThe default option is the current Amazon Linux version. If you set this parameter to Custom , you must use the CreateInstance action’s AmiId parameter to specify the custom AMI that you want to use. Block device mappings are not supported if the value is Custom . For more information about supported operating systems, see Operating Systems For more information about how to use custom AMIs with AWS OpsWorks Stacks, see Using Custom AMIs .\n\n--ami-id (string)\n\nA custom AMI ID to be used to create the instance. The AMI should be based on one of the supported operating systems. For more information, see Using Custom AMIs .\n\nNote\n\nIf you specify a custom AMI, you must set Os to Custom .\n\n--ssh-key-name (string)\n\nThe instance’s Amazon EC2 key-pair name.\n\n--availability-zone (string)\n\nThe instance Availability Zone. For more information, see Regions and Endpoints .\n\n--virtualization-type (string)\n\nThe instance’s virtualization type, paravirtual or hvm .\n\n--subnet-id (string)\n\nThe ID of the instance’s subnet. If the stack is running in a VPC, you can use this parameter to override the stack’s default subnet ID value and direct AWS OpsWorks Stacks to launch the instance in a different subnet.\n\n--architecture (string)\n\nThe instance architecture. The default option is x86_64 . Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see Instance Families and Types .\n\nPossible values:\n\nx86_64\n\ni386\n\n--root-device-type (string)\n\nThe instance root device type. For more information, see Storage for the Root Device .\n\nPossible values:\n\nebs\n\ninstance-store\n\n--block-device-mappings (list)\n\nAn array of BlockDeviceMapping objects that specify the instance’s block devices. For more information, see Block Device Mapping . Note that block device mappings are not supported for custom AMIs.\n\n(structure)\n\nDescribes a block device mapping. This data type maps directly to the Amazon EC2 BlockDeviceMapping data type.\n\nDeviceName -> (string)\n\nThe device name that is exposed to the instance, such as /dev/sdh . For the root device, you can use the explicit device name or you can set this parameter to ROOT_DEVICE and AWS OpsWorks Stacks will provide the correct device name.\n\nNoDevice -> (string)\n\nSuppresses the specified device included in the AMI’s block device mapping.\n\nVirtualName -> (string)\n\nThe virtual device name. For more information, see BlockDeviceMapping .\n\nEbs -> (structure)\n\nAn EBSBlockDevice that defines how to configure an Amazon EBS volume when the instance is launched.\n\nSnapshotId -> (string)\n\nThe snapshot ID.\n\nIops -> (integer)\n\nThe number of I/O operations per second (IOPS) that the volume supports. For more information, see EbsBlockDevice .\n\nVolumeSize -> (integer)\n\nThe volume size, in GiB. For more information, see EbsBlockDevice .\n\nVolumeType -> (string)\n\nThe volume type. gp2 for General Purpose (SSD) volumes, io1 for Provisioned IOPS (SSD) volumes, st1 for Throughput Optimized hard disk drives (HDD), sc1 for Cold HDD,and standard for Magnetic volumes.\n\nIf you specify the io1 volume type, you must also specify a value for the Iops attribute. The maximum ratio of provisioned IOPS to requested volume size (in GiB) is 50:1. AWS uses the default volume size (in GiB) specified in the AMI attributes to set IOPS to 50 x (volume size).\n\nDeleteOnTermination -> (boolean)\n\nWhether the volume is deleted on instance termination.\n\nShorthand Syntax:\n\nDeviceName=string,NoDevice=string,VirtualName=string,Ebs={SnapshotId=string,Iops=integer,VolumeSize=integer,VolumeType=string,DeleteOnTermination=boolean} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"DeviceName\": \"string\",\n    \"NoDevice\": \"string\",\n    \"VirtualName\": \"string\",\n    \"Ebs\": {\n      \"SnapshotId\": \"string\",\n      \"Iops\": integer,\n      \"VolumeSize\": integer,\n      \"VolumeType\": \"gp2\"|\"io1\"|\"standard\",\n      \"DeleteOnTermination\": true|false\n    }\n  }\n  ...\n]\n\n\n--install-updates-on-boot | --no-install-updates-on-boot (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . To control when updates are installed, set this value to false . You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nWe strongly recommend using the default value of true to ensure that your instances have the latest security updates.\n\n--ebs-optimized | --no-ebs-optimized (boolean)\n\nWhether to create an Amazon EBS-optimized instance.\n\n--agent-version (string)\n\nThe default AWS OpsWorks Stacks agent version. You have the following options:\n\nINHERIT - Use the stack’s default agent version setting.\n\nversion_number - Use the specified agent version. This value overrides the stack’s default setting. To update the agent version, edit the instance configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the instance.\n\nThe default setting is INHERIT . To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions . AgentVersion cannot be set to Chef 12.2.\n\n--tenancy (string)\n\nThe instance’s tenancy option. The default option is no tenancy, or if the instance is running in a VPC, inherit tenancy settings from the VPC. The following are valid values for this parameter: dedicated , default , or host . Because there are costs associated with changes in tenancy options, we recommend that you research tenancy options before choosing them for your instances. For more information about dedicated hosts, see Dedicated Hosts Overview and Amazon EC2 Dedicated Hosts . For more information about dedicated instances, see Dedicated Instances and Amazon EC2 Dedicated Instances .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceId -> (string)\n\nThe instance ID.",
      "command_examples": "Examples\n\nTo create an instance\n\nThe following create-instance command creates an m1.large Amazon Linux instance named myinstance1 in a specified stack. The instance is assigned to one layer.\n\naws opsworks --region us-east-1 create-instance --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --layer-ids 5c8c272a-f2d5-42e3-8245-5bf3927cb65b --hostname myinstance1 --instance-type m1.large --os \"Amazon Linux\"\n\n\nTo use an autogenerated name, call get-hostname-suggestion, which generates a hostname based on the theme that you specified when you created the stack. Then pass that name to the hostname argument.\n\nOutput:\n\n{\n  \"InstanceId\": \"5f9adeaa-c94c-42c6-aeef-28a5376002cd\"\n}\n\n\nMore Information\n\nFor more information, see Adding an Instance to a Layer in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "create-layer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-layer.html",
      "command_description": "Description\n\nCreates a layer. For more information, see How to Create a Layer .\n\nNote\n\nYou should use CreateLayer for noncustom layer types such as PHP App Server only if the stack does not have an existing layer of that type. A stack can have at most one instance of each noncustom layer; if you attempt to create a second instance, CreateLayer fails. A stack can have an arbitrary number of custom layers, so you can call CreateLayer as many times as you like for that layer type.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-layer\n--stack-id <value>\n--type <value>\n--name <value>\n--shortname <value>\n[--attributes <value>]\n[--cloud-watch-logs-configuration <value>]\n[--custom-instance-profile-arn <value>]\n[--custom-json <value>]\n[--custom-security-group-ids <value>]\n[--packages <value>]\n[--volume-configurations <value>]\n[--enable-auto-healing | --no-enable-auto-healing]\n[--auto-assign-elastic-ips | --no-auto-assign-elastic-ips]\n[--auto-assign-public-ips | --no-auto-assign-public-ips]\n[--custom-recipes <value>]\n[--install-updates-on-boot | --no-install-updates-on-boot]\n[--use-ebs-optimized-instances | --no-use-ebs-optimized-instances]\n[--lifecycle-event-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "--type <value>",
        "--name <value>",
        "--shortname <value>",
        "[--attributes <value>]",
        "[--cloud-watch-logs-configuration <value>]",
        "[--custom-instance-profile-arn <value>]",
        "[--custom-json <value>]",
        "[--custom-security-group-ids <value>]",
        "[--packages <value>]",
        "[--volume-configurations <value>]",
        "[--enable-auto-healing | --no-enable-auto-healing]",
        "[--auto-assign-elastic-ips | --no-auto-assign-elastic-ips]",
        "[--auto-assign-public-ips | --no-auto-assign-public-ips]",
        "[--custom-recipes <value>]",
        "[--install-updates-on-boot | --no-install-updates-on-boot]",
        "[--use-ebs-optimized-instances | --no-use-ebs-optimized-instances]",
        "[--lifecycle-event-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe layer stack ID.\n\n--type (string)\n\nThe layer type. A stack cannot have more than one built-in layer of the same type. It can have any number of custom layers. Built-in layers are not available in Chef 12 stacks.\n\nPossible values:\n\naws-flow-ruby\n\necs-cluster\n\njava-app\n\nlb\n\nweb\n\nphp-app\n\nrails-app\n\nnodejs-app\n\nmemcached\n\ndb-master\n\nmonitoring-master\n\ncustom\n\n--name (string)\n\nThe layer name, which is used by the console.\n\n--shortname (string)\n\nFor custom layers only, use this parameter to specify the layer’s short name, which is used internally by AWS OpsWorks Stacks and by Chef recipes. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 200 characters, which are limited to the alphanumeric characters, ‘-‘, ‘_’, and ‘.’.\n\nThe built-in layers’ short names are defined by AWS OpsWorks Stacks. For more information, see the Layer Reference .\n\n--attributes (map)\n\nOne or more user-defined key-value pairs to be added to the stack attributes.\n\nTo create a cluster layer, set the EcsClusterArn attribute to the cluster’s ARN.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  EcsClusterArn\n  EnableHaproxyStats\n  HaproxyStatsUrl\n  HaproxyStatsUser\n  HaproxyStatsPassword\n  HaproxyHealthCheckUrl\n  HaproxyHealthCheckMethod\n  MysqlRootPassword\n  MysqlRootPasswordUbiquitous\n  GangliaUrl\n  GangliaUser\n  GangliaPassword\n  MemcachedMemory\n  NodejsVersion\n  RubyVersion\n  RubygemsVersion\n  ManageBundler\n  BundlerVersion\n  RailsStack\n  PassengerVersion\n  Jvm\n  JvmVersion\n  JvmOptions\n  JavaAppServer\n  JavaAppServerVersion\n\n\nJSON Syntax:\n\n{\"EcsClusterArn\"|\"EnableHaproxyStats\"|\"HaproxyStatsUrl\"|\"HaproxyStatsUser\"|\"HaproxyStatsPassword\"|\"HaproxyHealthCheckUrl\"|\"HaproxyHealthCheckMethod\"|\"MysqlRootPassword\"|\"MysqlRootPasswordUbiquitous\"|\"GangliaUrl\"|\"GangliaUser\"|\"GangliaPassword\"|\"MemcachedMemory\"|\"NodejsVersion\"|\"RubyVersion\"|\"RubygemsVersion\"|\"ManageBundler\"|\"BundlerVersion\"|\"RailsStack\"|\"PassengerVersion\"|\"Jvm\"|\"JvmVersion\"|\"JvmOptions\"|\"JavaAppServer\"|\"JavaAppServerVersion\": \"string\"\n  ...}\n\n\n--cloud-watch-logs-configuration (structure)\n\nSpecifies CloudWatch Logs configuration options for the layer. For more information, see CloudWatchLogsLogStream .\n\nEnabled -> (boolean)\n\nWhether CloudWatch Logs is enabled for a layer.\n\nLogStreams -> (list)\n\nA list of configuration options for CloudWatch Logs.\n\n(structure)\n\nDescribes the Amazon CloudWatch logs configuration for a layer. For detailed information about members of this data type, see the CloudWatch Logs Agent Reference .\n\nLogGroupName -> (string)\n\nSpecifies the destination log group. A log group is created automatically if it doesn’t already exist. Log group names can be between 1 and 512 characters long. Allowed characters include a-z, A-Z, 0-9, ‘_’ (underscore), ‘-‘ (hyphen), ‘/’ (forward slash), and ‘.’ (period).\n\nDatetimeFormat -> (string)\n\nSpecifies how the time stamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference .\n\nTimeZone -> (string)\n\nSpecifies the time zone of log event time stamps.\n\nFile -> (string)\n\nSpecifies log files that you want to push to CloudWatch Logs.\n\nFile can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log* ). Only the latest file is pushed to CloudWatch Logs, based on file modification time. We recommend that you use wild card characters to specify a series of files of the same type, such as access_log.2014-06-01-01 , access_log.2014-06-01-02 , and so on by using a pattern like access_log.* . Don’t use a wildcard to match multiple file types, such as access_log_80 and access_log_443 . To specify multiple, different file types, add another log stream entry to the configuration file, so that each log file type is stored in a different log group.\n\nZipped files are not supported.\n\nFileFingerprintLines -> (string)\n\nSpecifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as ‘1’, ‘2-5’. The default value is ‘1’, meaning the first line is used to calculate the fingerprint. Fingerprint lines are not sent to CloudWatch Logs unless all specified lines are available.\n\nMultiLineStartPattern -> (string)\n\nSpecifies the pattern for identifying the start of a log message.\n\nInitialPosition -> (string)\n\nSpecifies where to start to read data (start_of_file or end_of_file). The default is start_of_file. This setting is only used if there is no state persisted for that log stream.\n\nEncoding -> (string)\n\nSpecifies the encoding of the log file so that the file can be read correctly. The default is utf_8 . Encodings supported by Python codecs.decode() can be used here.\n\nBufferDuration -> (integer)\n\nSpecifies the time duration for the batching of log events. The minimum value is 5000ms and default value is 5000ms.\n\nBatchCount -> (integer)\n\nSpecifies the max number of log events in a batch, up to 10000. The default value is 1000.\n\nBatchSize -> (integer)\n\nSpecifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes. This size is calculated as the sum of all event messages in UTF-8, plus 26 bytes for each log event.\n\nShorthand Syntax:\n\nEnabled=boolean,LogStreams=[{LogGroupName=string,DatetimeFormat=string,TimeZone=string,File=string,FileFingerprintLines=string,MultiLineStartPattern=string,InitialPosition=string,Encoding=string,BufferDuration=integer,BatchCount=integer,BatchSize=integer},{LogGroupName=string,DatetimeFormat=string,TimeZone=string,File=string,FileFingerprintLines=string,MultiLineStartPattern=string,InitialPosition=string,Encoding=string,BufferDuration=integer,BatchCount=integer,BatchSize=integer}]\n\n\nJSON Syntax:\n\n{\n  \"Enabled\": true|false,\n  \"LogStreams\": [\n    {\n      \"LogGroupName\": \"string\",\n      \"DatetimeFormat\": \"string\",\n      \"TimeZone\": \"LOCAL\"|\"UTC\",\n      \"File\": \"string\",\n      \"FileFingerprintLines\": \"string\",\n      \"MultiLineStartPattern\": \"string\",\n      \"InitialPosition\": \"start_of_file\"|\"end_of_file\",\n      \"Encoding\": \"ascii\"|\"big5\"|\"big5hkscs\"|\"cp037\"|\"cp424\"|\"cp437\"|\"cp500\"|\"cp720\"|\"cp737\"|\"cp775\"|\"cp850\"|\"cp852\"|\"cp855\"|\"cp856\"|\"cp857\"|\"cp858\"|\"cp860\"|\"cp861\"|\"cp862\"|\"cp863\"|\"cp864\"|\"cp865\"|\"cp866\"|\"cp869\"|\"cp874\"|\"cp875\"|\"cp932\"|\"cp949\"|\"cp950\"|\"cp1006\"|\"cp1026\"|\"cp1140\"|\"cp1250\"|\"cp1251\"|\"cp1252\"|\"cp1253\"|\"cp1254\"|\"cp1255\"|\"cp1256\"|\"cp1257\"|\"cp1258\"|\"euc_jp\"|\"euc_jis_2004\"|\"euc_jisx0213\"|\"euc_kr\"|\"gb2312\"|\"gbk\"|\"gb18030\"|\"hz\"|\"iso2022_jp\"|\"iso2022_jp_1\"|\"iso2022_jp_2\"|\"iso2022_jp_2004\"|\"iso2022_jp_3\"|\"iso2022_jp_ext\"|\"iso2022_kr\"|\"latin_1\"|\"iso8859_2\"|\"iso8859_3\"|\"iso8859_4\"|\"iso8859_5\"|\"iso8859_6\"|\"iso8859_7\"|\"iso8859_8\"|\"iso8859_9\"|\"iso8859_10\"|\"iso8859_13\"|\"iso8859_14\"|\"iso8859_15\"|\"iso8859_16\"|\"johab\"|\"koi8_r\"|\"koi8_u\"|\"mac_cyrillic\"|\"mac_greek\"|\"mac_iceland\"|\"mac_latin2\"|\"mac_roman\"|\"mac_turkish\"|\"ptcp154\"|\"shift_jis\"|\"shift_jis_2004\"|\"shift_jisx0213\"|\"utf_32\"|\"utf_32_be\"|\"utf_32_le\"|\"utf_16\"|\"utf_16_be\"|\"utf_16_le\"|\"utf_7\"|\"utf_8\"|\"utf_8_sig\",\n      \"BufferDuration\": integer,\n      \"BatchCount\": integer,\n      \"BatchSize\": integer\n    }\n    ...\n  ]\n}\n\n\n--custom-instance-profile-arn (string)\n\nThe ARN of an IAM profile to be used for the layer’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\n--custom-json (string)\n\nA JSON-formatted string containing custom stack configuration and deployment attributes to be installed on the layer’s instances. For more information, see Using Custom JSON . This feature is supported as of version 1.7.42 of the AWS CLI.\n\n--custom-security-group-ids (list)\n\nAn array containing the layer custom security group IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--packages (list)\n\nAn array of Package objects that describes the layer packages.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--volume-configurations (list)\n\nA VolumeConfigurations object that describes the layer’s Amazon EBS volumes.\n\n(structure)\n\nDescribes an Amazon EBS volume configuration.\n\nMountPoint -> (string)\n\nThe volume mount point. For example “/dev/sdh”.\n\nRaidLevel -> (integer)\n\nThe volume RAID level .\n\nNumberOfDisks -> (integer)\n\nThe number of disks in the volume.\n\nSize -> (integer)\n\nThe volume size.\n\nVolumeType -> (string)\n\nThe volume type. For more information, see Amazon EBS Volume Types .\n\nstandard - Magnetic. Magnetic volumes must have a minimum size of 1 GiB and a maximum size of 1024 GiB.\n\nio1 - Provisioned IOPS (SSD). PIOPS volumes must have a minimum size of 4 GiB and a maximum size of 16384 GiB.\n\ngp2 - General Purpose (SSD). General purpose volumes must have a minimum size of 1 GiB and a maximum size of 16384 GiB.\n\nst1 - Throughput Optimized hard disk drive (HDD). Throughput optimized HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nsc1 - Cold HDD. Cold HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nIops -> (integer)\n\nFor PIOPS volumes, the IOPS per disk.\n\nEncrypted -> (boolean)\n\nSpecifies whether an Amazon EBS volume is encrypted. For more information, see Amazon EBS Encryption .\n\nShorthand Syntax:\n\nMountPoint=string,RaidLevel=integer,NumberOfDisks=integer,Size=integer,VolumeType=string,Iops=integer,Encrypted=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"MountPoint\": \"string\",\n    \"RaidLevel\": integer,\n    \"NumberOfDisks\": integer,\n    \"Size\": integer,\n    \"VolumeType\": \"string\",\n    \"Iops\": integer,\n    \"Encrypted\": true|false\n  }\n  ...\n]\n\n\n--enable-auto-healing | --no-enable-auto-healing (boolean)\n\nWhether to disable auto healing for the layer.\n\n--auto-assign-elastic-ips | --no-auto-assign-elastic-ips (boolean)\n\nWhether to automatically assign an Elastic IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\n--auto-assign-public-ips | --no-auto-assign-public-ips (boolean)\n\nFor stacks that are running in a VPC, whether to automatically assign a public IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\n--custom-recipes (structure)\n\nA LayerCustomRecipes object that specifies the layer custom recipes.\n\nSetup -> (list)\n\nAn array of custom recipe names to be run following a setup event.\n\n(string)\n\nConfigure -> (list)\n\nAn array of custom recipe names to be run following a configure event.\n\n(string)\n\nDeploy -> (list)\n\nAn array of custom recipe names to be run following a deploy event.\n\n(string)\n\nUndeploy -> (list)\n\nAn array of custom recipe names to be run following a undeploy event.\n\n(string)\n\nShutdown -> (list)\n\nAn array of custom recipe names to be run following a shutdown event.\n\n(string)\n\nShorthand Syntax:\n\nSetup=string,string,Configure=string,string,Deploy=string,string,Undeploy=string,string,Shutdown=string,string\n\n\nJSON Syntax:\n\n{\n  \"Setup\": [\"string\", ...],\n  \"Configure\": [\"string\", ...],\n  \"Deploy\": [\"string\", ...],\n  \"Undeploy\": [\"string\", ...],\n  \"Shutdown\": [\"string\", ...]\n}\n\n\n--install-updates-on-boot | --no-install-updates-on-boot (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . To control when updates are installed, set this value to false . You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nTo ensure that your instances have the latest security updates, we strongly recommend using the default value of true .\n\n--use-ebs-optimized-instances | --no-use-ebs-optimized-instances (boolean)\n\nWhether to use Amazon EBS-optimized instances.\n\n--lifecycle-event-configuration (structure)\n\nA LifeCycleEventConfiguration object that you can use to configure the Shutdown event to specify an execution timeout and enable or disable Elastic Load Balancer connection draining.\n\nShutdown -> (structure)\n\nA ShutdownEventConfiguration object that specifies the Shutdown event configuration.\n\nExecutionTimeout -> (integer)\n\nThe time, in seconds, that AWS OpsWorks Stacks will wait after triggering a Shutdown event before shutting down an instance.\n\nDelayUntilElbConnectionsDrained -> (boolean)\n\nWhether to enable Elastic Load Balancing connection draining. For more information, see Connection Draining\n\nShorthand Syntax:\n\nShutdown={ExecutionTimeout=integer,DelayUntilElbConnectionsDrained=boolean}\n\n\nJSON Syntax:\n\n{\n  \"Shutdown\": {\n    \"ExecutionTimeout\": integer,\n    \"DelayUntilElbConnectionsDrained\": true|false\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLayerId -> (string)\n\nThe layer ID.",
      "command_examples": "Examples\n\nTo create a layer\n\nThe following create-layer command creates a PHP App Server layer named MyPHPLayer in a specified stack.\n\naws opsworks create-layer --region us-east-1 --stack-id f6673d70-32e6-4425-8999-265dd002fec7 --type php-app --name MyPHPLayer --shortname myphplayer\n\n\nOutput:\n\n{\n  \"LayerId\": \"0b212672-6b4b-40e4-8a34-5a943cf2e07a\"\n}\n\n\nMore Information\n\nFor more information, see How to Create a Layer in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "create-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-stack.html",
      "command_description": "Description\n\nCreates a new stack. For more information, see Create a New Stack .\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-stack\n--name <value>\n[--vpc-id <value>]\n[--attributes <value>]\n--service-role-arn <value>\n--default-instance-profile-arn <value>\n[--default-os <value>]\n[--hostname-theme <value>]\n[--default-availability-zone <value>]\n[--default-subnet-id <value>]\n[--custom-json <value>]\n[--configuration-manager <value>]\n[--chef-configuration <value>]\n[--use-custom-cookbooks | --no-use-custom-cookbooks]\n[--use-opsworks-security-groups | --no-use-opsworks-security-groups]\n[--custom-cookbooks-source <value>]\n[--default-ssh-key-name <value>]\n[--default-root-device-type <value>]\n[--agent-version <value>]\n--stack-region <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--vpc-id <value>]",
        "[--attributes <value>]",
        "--service-role-arn <value>",
        "--default-instance-profile-arn <value>",
        "[--default-os <value>]",
        "[--hostname-theme <value>]",
        "[--default-availability-zone <value>]",
        "[--default-subnet-id <value>]",
        "[--custom-json <value>]",
        "[--configuration-manager <value>]",
        "[--chef-configuration <value>]",
        "[--use-custom-cookbooks | --no-use-custom-cookbooks]",
        "[--use-opsworks-security-groups | --no-use-opsworks-security-groups]",
        "[--custom-cookbooks-source <value>]",
        "[--default-ssh-key-name <value>]",
        "[--default-root-device-type <value>]",
        "[--agent-version <value>]",
        "--stack-region <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe stack name.\n\n--vpc-id (string)\n\nThe ID of the VPC that the stack is to be launched into. The VPC must be in the stack’s region. All instances are launched into this VPC. You cannot change the ID later.\n\nIf your account supports EC2-Classic, the default value is no VPC .\n\nIf your account does not support EC2-Classic, the default value is the default VPC for the specified region.\n\nIf the VPC ID corresponds to a default VPC and you have specified either the DefaultAvailabilityZone or the DefaultSubnetId parameter only, AWS OpsWorks Stacks infers the value of the other parameter. If you specify neither parameter, AWS OpsWorks Stacks sets these parameters to the first valid Availability Zone for the specified region and the corresponding default VPC subnet ID, respectively.\n\nIf you specify a nondefault VPC ID, note the following:\n\nIt must belong to a VPC in your account that is in the specified region.\n\nYou must specify a value for DefaultSubnetId .\n\nFor more information about how to use AWS OpsWorks Stacks with a VPC, see Running a Stack in a VPC . For more information about default VPC and EC2-Classic, see Supported Platforms .\n\n--attributes (map)\n\nOne or more user-defined key-value pairs to be added to the stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  Color\n\n\nJSON Syntax:\n\n{\"Color\": \"string\"\n  ...}\n\n\n--service-role-arn (string)\n\nThe stack’s AWS Identity and Access Management (IAM) role, which allows AWS OpsWorks Stacks to work with AWS resources on your behalf. You must set this parameter to the Amazon Resource Name (ARN) for an existing IAM role. For more information about IAM ARNs, see Using Identifiers .\n\n--default-instance-profile-arn (string)\n\nThe Amazon Resource Name (ARN) of an IAM profile that is the default profile for all of the stack’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\n--default-os (string)\n\nThe stack’s default operating system, which is installed on every instance unless you specify a different operating system when you create the instance. You can specify one of the following.\n\nA supported Linux operating system: An Amazon Linux version, such as Amazon Linux 2018.03 , Amazon Linux 2017.09 , Amazon Linux 2017.03 , Amazon Linux 2016.09 , Amazon Linux 2016.03 , Amazon Linux 2015.09 , or Amazon Linux 2015.03 .\n\nA supported Ubuntu operating system, such as Ubuntu 16.04 LTS , Ubuntu 14.04 LTS , or Ubuntu 12.04 LTS .\n\nCentOS Linux 7\n\nRed Hat Enterprise Linux 7\n\nA supported Windows operating system, such as Microsoft Windows Server 2012 R2 Base , Microsoft Windows Server 2012 R2 with SQL Server Express , Microsoft Windows Server 2012 R2 with SQL Server Standard , or Microsoft Windows Server 2012 R2 with SQL Server Web .\n\nA custom AMI: Custom . You specify the custom AMI you want to use when you create instances. For more information, see Using Custom AMIs .\n\nThe default option is the current Amazon Linux version. For more information about supported operating systems, see AWS OpsWorks Stacks Operating Systems .\n\n--hostname-theme (string)\n\nThe stack’s host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack’s instances. By default, HostnameTheme is set to Layer_Dependent , which creates host names by appending integers to the layer’s short name. The other themes are:\n\nBaked_Goods\n\nClouds\n\nEurope_Cities\n\nFruits\n\nGreek_Deities_and_Titans\n\nLegendary_creatures_from_Japan\n\nPlanets_and_Moons\n\nRoman_Deities\n\nScottish_Islands\n\nUS_Cities\n\nWild_Cats\n\nTo obtain a generated host name, call GetHostNameSuggestion , which returns a host name based on the current theme.\n\n--default-availability-zone (string)\n\nThe stack’s default Availability Zone, which must be in the specified region. For more information, see Regions and Endpoints . If you also specify a value for DefaultSubnetId , the subnet must be in the same zone. For more information, see the VpcId parameter description.\n\n--default-subnet-id (string)\n\nThe stack’s default VPC subnet ID. This parameter is required if you specify a value for the VpcId parameter. All instances are launched into this subnet unless you specify otherwise when you create the instance. If you also specify a value for DefaultAvailabilityZone , the subnet must be in that zone. For information on default values and when this parameter is required, see the VpcId parameter description.\n\n--custom-json (string)\n\nA string that contains user-defined, custom JSON. It can be used to override the corresponding default stack configuration attribute values or to pass data to recipes. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information about custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes .\n\n--configuration-manager (structure)\n\nThe configuration manager. When you create a stack we recommend that you use the configuration manager to specify the Chef version: 12, 11.10, or 11.4 for Linux stacks, or 12.2 for Windows stacks. The default value for Linux stacks is currently 12.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4.\n\nShorthand Syntax:\n\nName=string,Version=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Version\": \"string\"\n}\n\n\n--chef-configuration (structure)\n\nA ChefConfiguration object that specifies whether to enable Berkshelf and the Berkshelf version on Chef 11.10 stacks. For more information, see Create a New Stack .\n\nManageBerkshelf -> (boolean)\n\nWhether to enable Berkshelf.\n\nBerkshelfVersion -> (string)\n\nThe Berkshelf version.\n\nShorthand Syntax:\n\nManageBerkshelf=boolean,BerkshelfVersion=string\n\n\nJSON Syntax:\n\n{\n  \"ManageBerkshelf\": true|false,\n  \"BerkshelfVersion\": \"string\"\n}\n\n\n--use-custom-cookbooks | --no-use-custom-cookbooks (boolean)\n\nWhether the stack uses custom cookbooks.\n\n--use-opsworks-security-groups | --no-use-opsworks-security-groups (boolean)\n\nWhether to associate the AWS OpsWorks Stacks built-in security groups with the stack’s layers.\n\nAWS OpsWorks Stacks provides a standard set of built-in security groups, one for each layer, which are associated with layers by default. With UseOpsworksSecurityGroups you can instead provide your own custom security groups. UseOpsworksSecurityGroups has the following settings:\n\nTrue - AWS OpsWorks Stacks automatically associates the appropriate built-in security group with each layer (default setting). You can associate additional security groups with a layer after you create it, but you cannot delete the built-in security group.\n\nFalse - AWS OpsWorks Stacks does not associate built-in security groups with layers. You must create appropriate EC2 security groups and associate a security group with each layer that you create. However, you can still manually associate a built-in security group with a layer on creation; custom security groups are required only for those layers that need custom settings.\n\nFor more information, see Create a New Stack .\n\n--custom-cookbooks-source (structure)\n\nContains the information required to retrieve an app or cookbook from a repository. For more information, see Adding Apps or Cookbooks and Recipes .\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nShorthand Syntax:\n\nType=string,Url=string,Username=string,Password=string,SshKey=string,Revision=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"git\"|\"svn\"|\"archive\"|\"s3\",\n  \"Url\": \"string\",\n  \"Username\": \"string\",\n  \"Password\": \"string\",\n  \"SshKey\": \"string\",\n  \"Revision\": \"string\"\n}\n\n\n--default-ssh-key-name (string)\n\nA default Amazon EC2 key pair name. The default value is none. If you specify a key pair name, AWS OpsWorks installs the public key on the instance and you can use the private key with an SSH client to log in to the instance. For more information, see Using SSH to Communicate with an Instance and Managing SSH Access . You can override this setting by specifying a different key pair, or no key pair, when you create an instance .\n\n--default-root-device-type (string)\n\nThe default root device type. This value is the default for all instances in the stack, but you can override it when you create an instance. The default option is instance-store . For more information, see Storage for the Root Device .\n\nPossible values:\n\nebs\n\ninstance-store\n\n--agent-version (string)\n\nThe default AWS OpsWorks Stacks agent version. You have the following options:\n\nAuto-update - Set this parameter to LATEST . AWS OpsWorks Stacks automatically installs new agent versions on the stack’s instances as soon as they are available.\n\nFixed version - Set this parameter to your preferred agent version. To update the agent version, you must edit the stack configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the stack’s instances.\n\nThe default setting is the most recent release of the agent. To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions . AgentVersion cannot be set to Chef 12.2.\n\nNote\n\nYou can also specify an agent version when you create or update an instance, which overrides the stack’s default setting.\n\n--stack-region (string)\n\nThe stack’s AWS region, such as ap-south-1 . For more information about Amazon regions, see Regions and Endpoints .\n\nNote\n\nIn the AWS CLI, this API maps to the --stack-region parameter. If the --stack-region parameter and the AWS CLI common parameter --region are set to the same value, the stack uses a regional endpoint. If the --stack-region parameter is not set, but the AWS CLI --region parameter is, this also results in a stack with a regional endpoint. However, if the --region parameter is set to us-east-1 , and the --stack-region parameter is set to one of the following, then the stack uses a legacy or classic region: us-west-1, us-west-2, sa-east-1, eu-central-1, eu-west-1, ap-northeast-1, ap-southeast-1, ap-southeast-2 . In this case, the actual API endpoint of the stack is in us-east-1 . Only the preceding regions are supported as classic regions in the us-east-1 API endpoint. Because it is a best practice to choose the regional endpoint that is closest to where you manage AWS, we recommend that you use regional endpoints for new stacks. The AWS CLI common --region parameter always specifies a regional API endpoint; it cannot be used to specify a classic AWS OpsWorks Stacks region.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStackId -> (string)\n\nThe stack ID, which is an opaque string that you use to identify the stack when performing actions such as DescribeStacks .",
      "command_examples": "Examples\n\nTo create a stack\n\nThe following create-stack command creates a stack named CLI Stack.\n\naws opsworks create-stack --name \"CLI Stack\" --stack-region \"us-east-1\" --service-role-arn arn:aws:iam::123456789012:role/aws-opsworks-service-role --default-instance-profile-arn arn:aws:iam::123456789012:instance-profile/aws-opsworks-ec2-role --region us-east-1\n\n\nThe service-role-arn and default-instance-profile-arn parameters are required. You typically use the ones that AWS OpsWorks creates for you when you create your first stack. To get the Amazon Resource Names (ARNs) for your account, go to the IAM console, choose Roles in the navigation panel, choose the role or profile, and choose the Summary tab.\n\nOutput:\n\n{\n  \"StackId\": \"f6673d70-32e6-4425-8999-265dd002fec7\"\n}\n\n\nMore Information\n\nFor more information, see Create a New Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "create-user-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/create-user-profile.html",
      "command_description": "Description\n\nCreates a new user profile.\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-user-profile\n--iam-user-arn <value>\n[--ssh-username <value>]\n[--ssh-public-key <value>]\n[--allow-self-management | --no-allow-self-management]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--iam-user-arn <value>",
        "[--ssh-username <value>]",
        "[--ssh-public-key <value>]",
        "[--allow-self-management | --no-allow-self-management]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--iam-user-arn (string)\n\nThe user’s IAM ARN; this can also be a federated user’s ARN.\n\n--ssh-username (string)\n\nThe user’s SSH user name. The allowable characters are [a-z], [A-Z], [0-9], ‘-‘, and ‘_’. If the specified name includes other punctuation marks, AWS OpsWorks Stacks removes them. For example, my.name will be changed to myname . If you do not specify an SSH user name, AWS OpsWorks Stacks generates one from the IAM user name.\n\n--ssh-public-key (string)\n\nThe user’s public SSH key.\n\n--allow-self-management | --no-allow-self-management (boolean)\n\nWhether users can specify their own SSH public key through the My Settings page. For more information, see Setting an IAM User’s Public SSH Key .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nIamUserArn -> (string)\n\nThe user’s IAM ARN.",
      "command_examples": "Examples\n\nTo create a user profile\n\nYou import an AWS Identity and Access Manager (IAM) user into AWS OpsWorks by calling create-user-profile to create a user profile. The following example creates a user profile for the cli-user-test IAM user, who is identified by Amazon Resource Name (ARN). The example assigns the user an SSH username of myusername and enables self management, which allows the user to specify an SSH public key.\n\naws opsworks --region us-east-1 create-user-profile --iam-user-arn arn:aws:iam::123456789102:user/cli-user-test --ssh-username myusername --allow-self-management\n\n\nOutput:\n\n{\n  \"IamUserArn\": \"arn:aws:iam::123456789102:user/cli-user-test\"\n}\n\n\nTip: This command imports an IAM user into AWS OpsWorks, but only with the permissions that are granted by the attached policies. You can grant per-stack AWS OpsWorks permissions by using the set-permissions command.\n\nMore Information\n\nFor more information, see Importing Users into AWS OpsWorks in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "delete-app",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/delete-app.html",
      "command_description": "Description\n\nDeletes a specified app.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-app\n--app-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--app-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--app-id (string)\n\nThe app ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an app\n\nThe following example deletes a specified app, which is identified by its app ID. You can obtain an app ID by going to the app’s details page on the AWS OpsWorks console or by running the describe-apps command.\n\naws opsworks delete-app --region us-east-1 --app-id 577943b9-2ec1-4baf-a7bf-1d347601edc5\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "delete-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/delete-instance.html",
      "command_description": "Description\n\nDeletes a specified instance, which terminates the associated Amazon EC2 instance. You must stop an instance before you can delete it.\n\nFor more information, see Deleting Instances .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-instance\n--instance-id <value>\n[--delete-elastic-ip | --no-delete-elastic-ip]\n[--delete-volumes | --no-delete-volumes]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--delete-elastic-ip | --no-delete-elastic-ip]",
        "[--delete-volumes | --no-delete-volumes]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--delete-elastic-ip | --no-delete-elastic-ip (boolean)\n\nWhether to delete the instance Elastic IP address.\n\n--delete-volumes | --no-delete-volumes (boolean)\n\nWhether to delete the instance’s Amazon EBS volumes.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete an instance\n\nThe following delete-instance example deletes a specified instance, which is identified by its instance ID. You can find an instance ID by opening the instance’s details page in the AWS OpsWorks console, or by running the describe-instances command.\n\nIf the instance is online, you must first stop the instance by calling stop-instance, and then you must wait until the instance has stopped. Run describe-instances to check the instance status.\n\nTo remove the instance’s Amazon EBS volumes or Elastic IP addresses, add the --delete-volumes or --delete-elastic-ip arguments, respectively.:\n\naws opsworks delete-instance \\\n    --region us-east-1 \\\n    --instance-id 3a21cfac-4a1f-4ce2-a921-b2cfba6f7771\n\n\nThis command produces no output.\n\nFor more information, see Deleting AWS OpsWorks Instances in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "delete-layer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/delete-layer.html",
      "command_description": "Description\n\nDeletes a specified layer. You must first stop and then delete all associated instances or unassign registered instances. For more information, see How to Delete a Layer .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-layer\n--layer-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-id (string)\n\nThe layer ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a layer\n\nThe following example deletes a specified layer, which is identified by its layer ID. You can obtain a layer ID by going to the layer’s details page on the AWS OpsWorks console or by running the describe-layers command.\n\nNote: Before deleting a layer, you must use delete-instance to delete all of the layer’s instances.\n\naws opsworks delete-layer --region us-east-1 --layer-id a919454e-b816-4598-b29a-5796afb498ed\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Deleting AWS OpsWorks Instances in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "delete-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/delete-stack.html",
      "command_description": "Description\n\nDeletes a specified stack. You must first delete all instances, layers, and apps or deregister registered instances. For more information, see Shut Down a Stack .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-stack\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a stack\n\nThe following example deletes a specified stack, which is identified by its stack ID. You can obtain a stack ID by clicking Stack Settings on the AWS OpsWorks console or by running the describe-stacks command.\n\nNote: Before deleting a layer, you must use delete-app, delete-instance, and delete-layer to delete all of the stack’s apps, instances, and layers.\n\naws opsworks delete-stack --region us-east-1 --stack-id 154a9d89-7e9e-433b-8de8-617e53756c84\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Shut Down a Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "delete-user-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/delete-user-profile.html",
      "command_description": "Description\n\nDeletes a user profile.\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user-profile\n--iam-user-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--iam-user-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--iam-user-arn (string)\n\nThe user’s IAM ARN. This can also be a federated user’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a user profile and remove an IAM user from AWS OpsWorks\n\nThe following example deletes the user profile for a specified AWS Identity and Access Management (IAM) user, who is identified by Amazon Resource Name (ARN). The operation removes the user from AWS OpsWorks, but does not delete the IAM user. You must use the IAM console, CLI, or API for that task.\n\naws opsworks --region us-east-1 delete-user-profile --iam-user-arn arn:aws:iam::123456789102:user/cli-user-test\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Importing Users into AWS OpsWorks in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "deregister-ecs-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/deregister-ecs-cluster.html",
      "command_description": "Description\n\nDeregisters a specified Amazon ECS cluster from a stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-ecs-cluster\n--ecs-cluster-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ecs-cluster-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ecs-cluster-arn (string)\n\nThe cluster’s Amazon Resource Number (ARN).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "deregister-elastic-ip",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/deregister-elastic-ip.html",
      "command_description": "Description\n\nDeregisters a specified Elastic IP address. The address can then be registered by another stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-elastic-ip\n--elastic-ip <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-ip <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-ip (string)\n\nThe Elastic IP address.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister an Elastic IP address from a stack\n\nThe following example deregisters an Elastic IP address, identified by its IP address, from its stack.\n\naws opsworks deregister-elastic-ip --region us-east-1 --elastic-ip 54.148.130.96\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Deregistering Elastic IP Addresses in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "deregister-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/deregister-instance.html",
      "command_description": "Description\n\nDeregister a registered Amazon EC2 or on-premises instance. This action removes the instance from the stack and returns it to your control. This action cannot be used with instances that were created with AWS OpsWorks Stacks.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-instance\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister a registered instance from a stack\n\nThe following deregister-instance command deregisters a registered instance from its stack.\n\naws opsworks --region us-east-1 deregister-instance --instance-id 4d6d1710-ded9-42a1-b08e-b043ad7af1e2\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Deregistering a Registered Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "deregister-rds-db-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/deregister-rds-db-instance.html",
      "command_description": "Description\n\nDeregisters an Amazon RDS instance.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-rds-db-instance\n--rds-db-instance-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rds-db-instance-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rds-db-instance-arn (string)\n\nThe Amazon RDS instance’s ARN.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister an Amazon RDS DB instance from a stack\n\nThe following example deregisters an RDS DB instance, identified by its ARN, from its stack.\n\naws opsworks deregister-rds-db-instance --region us-east-1 --rds-db-instance-arn arn:aws:rds:us-west-2:123456789012:db:clitestdb\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Deregistering Amazon RDS Instances in the ASW OpsWorks User Guide."
    },
    {
      "command_name": "deregister-volume",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/deregister-volume.html",
      "command_description": "Description\n\nDeregisters an Amazon EBS volume. The volume can then be registered by another stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-volume\n--volume-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--volume-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--volume-id (string)\n\nThe AWS OpsWorks Stacks volume ID, which is the GUID that AWS OpsWorks Stacks assigned to the instance when you registered the volume with the stack, not the Amazon EC2 volume ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister an Amazon EBS volume\n\nThe following example deregisters an EBS volume from its stack. The volume is identified by its volume ID, which is the GUID that AWS OpsWorks assigned when you registered the volume with the stack, not the EC2 volume ID.\n\naws opsworks deregister-volume --region us-east-1 --volume-id 5c48ef52-3144-4bf5-beaa-fda4deb23d4d\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Deregistering Amazon EBS Volumes in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-agent-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-agent-versions.html",
      "command_description": "Description\n\nDescribes the available AWS OpsWorks Stacks agent versions. You must specify a stack ID or a configuration manager. DescribeAgentVersions returns a list of available agent versions for the specified stack or configuration manager.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-agent-versions\n[--stack-id <value>]\n[--configuration-manager <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--configuration-manager <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--configuration-manager (structure)\n\nThe configuration manager.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4.\n\nShorthand Syntax:\n\nName=string,Version=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Version\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAgentVersions -> (list)\n\nThe agent versions for the specified stack or configuration manager. Note that this value is the complete version number, not the abbreviated number used by the console.\n\n(structure)\n\nDescribes an agent version.\n\nVersion -> (string)\n\nThe agent version.\n\nConfigurationManager -> (structure)\n\nThe configuration manager.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4."
    },
    {
      "command_name": "describe-apps",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-apps.html",
      "command_description": "Description\n\nRequests a description of a specified set of apps.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-apps\n[--stack-id <value>]\n[--app-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--app-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe app stack ID. If you use this parameter, DescribeApps returns a description of the apps in the specified stack.\n\n--app-ids (list)\n\nAn array of app IDs for the apps to be described. If you use this parameter, DescribeApps returns a description of the specified apps. Otherwise, it returns a description of every app.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApps -> (list)\n\nAn array of App objects that describe the specified apps.\n\n(structure)\n\nA description of the app.\n\nAppId -> (string)\n\nThe app ID.\n\nStackId -> (string)\n\nThe app stack ID.\n\nShortname -> (string)\n\nThe app’s short name.\n\nName -> (string)\n\nThe app name.\n\nDescription -> (string)\n\nA description of the app.\n\nDataSources -> (list)\n\nThe app’s data sources.\n\n(structure)\n\nDescribes an app’s data source.\n\nType -> (string)\n\nThe data source’s type, AutoSelectOpsworksMysqlInstance , OpsworksMysqlInstance , RdsDbInstance , or None .\n\nArn -> (string)\n\nThe data source’s ARN.\n\nDatabaseName -> (string)\n\nThe database name.\n\nType -> (string)\n\nThe app type.\n\nAppSource -> (structure)\n\nA Source object that describes the app repository.\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nDomains -> (list)\n\nThe app vhost settings with multiple domains separated by commas. For example: 'www.example.com, example.com'\n\n(string)\n\nEnableSsl -> (boolean)\n\nWhether to enable SSL for the app.\n\nSslConfiguration -> (structure)\n\nAn SslConfiguration object with the SSL configuration.\n\nCertificate -> (string)\n\nThe contents of the certificate’s domain.crt file.\n\nPrivateKey -> (string)\n\nThe private key; the contents of the certificate’s domain.kex file.\n\nChain -> (string)\n\nOptional. Can be used to specify an intermediate certificate authority key or client authentication.\n\nAttributes -> (map)\n\nThe stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nCreatedAt -> (string)\n\nWhen the app was created.\n\nEnvironment -> (list)\n\nAn array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instances. For more information, see Environment Variables .\n\nNote\n\nThere is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variable names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases, but if you do exceed it, you will cause an exception (API) with an “Environment: is too large (maximum is 20 KB)” message.\n\n(structure)\n\nRepresents an app’s environment variable.\n\nKey -> (string)\n\n(Required) The environment variable’s name, which can consist of up to 64 characters and must be specified. The name can contain upper- and lowercase letters, numbers, and underscores (_), but it must start with a letter or underscore.\n\nValue -> (string)\n\n(Optional) The environment variable’s value, which can be left empty. If you specify a value, it can contain up to 256 characters, which must all be printable.\n\nSecure -> (boolean)\n\n(Optional) Whether the variable’s value will be returned by the DescribeApps action. To conceal an environment variable’s value, set Secure to true . DescribeApps then returns *****FILTERED***** instead of the actual value. The default value for Secure is false .",
      "command_examples": "Examples\n\nTo describe apps\n\nThe following describe-apps command describes the apps in a specified stack.\n\naws opsworks --region us-east-1 describe-apps --stack-id 38ee91e2-abdc-4208-a107-0b7168b3cc7a\n\n\nOutput: This particular stack has one app.\n\n{\n  \"Apps\": [\n    {\n      \"StackId\": \"38ee91e2-abdc-4208-a107-0b7168b3cc7a\",\n      \"AppSource\": {\n        \"Url\": \"https://s3-us-west-2.amazonaws.com/opsworks-tomcat/simplejsp.zip\",\n        \"Type\": \"archive\"\n      },\n      \"Name\": \"SimpleJSP\",\n      \"EnableSsl\": false,\n      \"SslConfiguration\": {},\n      \"AppId\": \"da1decc1-0dff-43ea-ad7c-bb667cd87c8b\",\n      \"Attributes\": {\n        \"RailsEnv\": null,\n        \"AutoBundleOnDeploy\": \"true\",\n        \"DocumentRoot\": \"ROOT\"\n      },\n      \"Shortname\": \"simplejsp\",\n      \"Type\": \"other\",\n      \"CreatedAt\": \"2013-08-01T21:46:54+00:00\"\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-commands",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-commands.html",
      "command_description": "Description\n\nDescribes the results of specified commands.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-commands\n[--deployment-id <value>]\n[--instance-id <value>]\n[--command-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--deployment-id <value>]",
        "[--instance-id <value>]",
        "[--command-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--deployment-id (string)\n\nThe deployment ID. If you include this parameter, DescribeCommands returns a description of the commands associated with the specified deployment.\n\n--instance-id (string)\n\nThe instance ID. If you include this parameter, DescribeCommands returns a description of the commands associated with the specified instance.\n\n--command-ids (list)\n\nAn array of command IDs. If you include this parameter, DescribeCommands returns a description of the specified commands. Otherwise, it returns a description of every command.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCommands -> (list)\n\nAn array of Command objects that describe each of the specified commands.\n\n(structure)\n\nDescribes a command.\n\nCommandId -> (string)\n\nThe command ID.\n\nInstanceId -> (string)\n\nThe ID of the instance where the command was executed.\n\nDeploymentId -> (string)\n\nThe command deployment ID.\n\nCreatedAt -> (string)\n\nDate and time when the command was run.\n\nAcknowledgedAt -> (string)\n\nDate and time when the command was acknowledged.\n\nCompletedAt -> (string)\n\nDate when the command completed.\n\nStatus -> (string)\n\nThe command status:\n\nfailed\n\nsuccessful\n\nskipped\n\npending\n\nExitCode -> (integer)\n\nThe command exit code.\n\nLogUrl -> (string)\n\nThe URL of the command log.\n\nType -> (string)\n\nThe command type:\n\nconfigure\n\ndeploy\n\nexecute_recipes\n\ninstall_dependencies\n\nrestart\n\nrollback\n\nsetup\n\nstart\n\nstop\n\nundeploy\n\nupdate_custom_cookbooks\n\nupdate_dependencies",
      "command_examples": "Examples\n\nTo describe commands\n\nThe following describe-commands commmand describes the commands in a specified instance.\n\naws opsworks --region us-east-1 describe-commands --instance-id 8c2673b9-3fe5-420d-9cfa-78d875ee7687\n\n\nOutput:\n\n{\n  \"Commands\": [\n    {\n      \"Status\": \"successful\",\n      \"CompletedAt\": \"2013-07-25T18:57:47+00:00\",\n      \"InstanceId\": \"8c2673b9-3fe5-420d-9cfa-78d875ee7687\",\n      \"DeploymentId\": \"6ed0df4c-9ef7-4812-8dac-d54a05be1029\",\n      \"AcknowledgedAt\": \"2013-07-25T18:57:41+00:00\",\n      \"LogUrl\": \"https://s3.amazonaws.com/prod_stage-log/logs/008c1a91-ec59-4d51-971d-3adff54b00cc?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE &Expires=1375394373&Signature=HkXil6UuNfxTCC37EPQAa462E1E%3D&response-cache-control=private&response-content-encoding=gzip&response-content- type=text%2Fplain\",\n      \"Type\": \"undeploy\",\n      \"CommandId\": \"008c1a91-ec59-4d51-971d-3adff54b00cc\",\n      \"CreatedAt\": \"2013-07-25T18:57:34+00:00\",\n      \"ExitCode\": 0\n    },\n    {\n      \"Status\": \"successful\",\n      \"CompletedAt\": \"2013-07-25T18:55:40+00:00\",\n      \"InstanceId\": \"8c2673b9-3fe5-420d-9cfa-78d875ee7687\",\n      \"DeploymentId\": \"19d3121e-d949-4ff2-9f9d-94eac087862a\",\n      \"AcknowledgedAt\": \"2013-07-25T18:55:32+00:00\",\n      \"LogUrl\": \"https://s3.amazonaws.com/prod_stage-log/logs/899d3d64-0384-47b6-a586-33433aad117c?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE &Expires=1375394373&Signature=xMsJvtLuUqWmsr8s%2FAjVru0BtRs%3D&response-cache-control=private&response-content-encoding=gzip&response-conten t-type=text%2Fplain\",\n      \"Type\": \"deploy\",\n      \"CommandId\": \"899d3d64-0384-47b6-a586-33433aad117c\",\n      \"CreatedAt\": \"2013-07-25T18:55:29+00:00\",\n      \"ExitCode\": 0\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see AWS OpsWorks Lifecycle Events in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-deployments",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-deployments.html",
      "command_description": "Description\n\nRequests a description of a specified set of deployments.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-deployments\n[--stack-id <value>]\n[--app-id <value>]\n[--deployment-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--app-id <value>]",
        "[--deployment-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID. If you include this parameter, the command returns a description of the commands associated with the specified stack.\n\n--app-id (string)\n\nThe app ID. If you include this parameter, the command returns a description of the commands associated with the specified app.\n\n--deployment-ids (list)\n\nAn array of deployment IDs to be described. If you include this parameter, the command returns a description of the specified deployments. Otherwise, it returns a description of every deployment.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeployments -> (list)\n\nAn array of Deployment objects that describe the deployments.\n\n(structure)\n\nDescribes a deployment of a stack or app.\n\nDeploymentId -> (string)\n\nThe deployment ID.\n\nStackId -> (string)\n\nThe stack ID.\n\nAppId -> (string)\n\nThe app ID.\n\nCreatedAt -> (string)\n\nDate when the deployment was created.\n\nCompletedAt -> (string)\n\nDate when the deployment completed.\n\nDuration -> (integer)\n\nThe deployment duration.\n\nIamUserArn -> (string)\n\nThe user’s IAM ARN.\n\nComment -> (string)\n\nA user-defined comment.\n\nCommand -> (structure)\n\nUsed to specify a stack or deployment command.\n\nName -> (string)\n\nSpecifies the operation. You can specify only one command.\n\nFor stacks, the following commands are available:\n\nexecute_recipes : Execute one or more recipes. To specify the recipes, set an Args parameter named recipes to the list of recipes to be executed. For example, to execute phpapp::appsetup , set Args to {\"recipes\":[\"phpapp::appsetup\"]} .\n\ninstall_dependencies : Install the stack’s dependencies.\n\nupdate_custom_cookbooks : Update the stack’s custom cookbooks.\n\nupdate_dependencies : Update the stack’s dependencies.\n\nNote\n\nThe update_dependencies and install_dependencies commands are supported only for Linux instances. You can run the commands successfully on Windows instances, but they do nothing.\n\nFor apps, the following commands are available:\n\ndeploy : Deploy an app. Ruby on Rails apps have an optional Args parameter named migrate . Set Args to {“migrate”:[“true”]} to migrate the database. The default setting is {“migrate”:[“false”]}.\n\nrollback Roll the app back to the previous version. When you update an app, AWS OpsWorks Stacks stores the previous version, up to a maximum of five versions. You can use this command to roll an app back as many as four versions.\n\nstart : Start the app’s web or application server.\n\nstop : Stop the app’s web or application server.\n\nrestart : Restart the app’s web or application server.\n\nundeploy : Undeploy the app.\n\nArgs -> (map)\n\nThe arguments of those commands that take arguments. It should be set to a JSON object with the following format:\n\n{\"arg_name1\" : [\"value1\", \"value2\", ...], \"arg_name2\" : [\"value1\", \"value2\", ...], ...}\n\nThe update_dependencies command takes two arguments:\n\nupgrade_os_to - Specifies the desired Amazon Linux version for instances whose OS you want to upgrade, such as Amazon Linux 2016.09 . You must also set the allow_reboot argument to true.\n\nallow_reboot - Specifies whether to allow AWS OpsWorks Stacks to reboot the instances if necessary, after installing the updates. This argument can be set to either true or false . The default value is false .\n\nFor example, to upgrade an instance to Amazon Linux 2016.09, set Args to the following.\n\n{ \"upgrade_os_to\":[\"Amazon Linux 2016.09\"], \"allow_reboot\":[\"true\"] }\n\nkey -> (string)\n\nvalue -> (list)\n\n(string)\n\nStatus -> (string)\n\nThe deployment status:\n\nrunning\n\nsuccessful\n\nfailed\n\nCustomJson -> (string)\n\nA string that contains user-defined custom JSON. It can be used to override the corresponding default stack configuration attribute values for stack or to pass data to recipes. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information on custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes .\n\nInstanceIds -> (list)\n\nThe IDs of the target instances.\n\n(string)",
      "command_examples": "Examples\n\nTo describe deployments\n\nThe following describe-deployments commmand describes the deployments in a specified stack.\n\naws opsworks --region us-east-1 describe-deployments --stack-id 38ee91e2-abdc-4208-a107-0b7168b3cc7a\n\n\nOutput:\n\n{\n  \"Deployments\": [\n      {\n          \"StackId\": \"38ee91e2-abdc-4208-a107-0b7168b3cc7a\",\n          \"Status\": \"successful\",\n          \"CompletedAt\": \"2013-07-25T18:57:49+00:00\",\n          \"DeploymentId\": \"6ed0df4c-9ef7-4812-8dac-d54a05be1029\",\n          \"Command\": {\n              \"Args\": {},\n              \"Name\": \"undeploy\"\n          },\n          \"CreatedAt\": \"2013-07-25T18:57:34+00:00\",\n          \"Duration\": 15,\n          \"InstanceIds\": [\n              \"8c2673b9-3fe5-420d-9cfa-78d875ee7687\",\n              \"9e588a25-35b2-4804-bd43-488f85ebe5b7\"\n          ]\n      },\n      {\n          \"StackId\": \"38ee91e2-abdc-4208-a107-0b7168b3cc7a\",\n          \"Status\": \"successful\",\n          \"CompletedAt\": \"2013-07-25T18:56:41+00:00\",\n          \"IamUserArn\": \"arn:aws:iam::123456789012:user/someuser\",\n          \"DeploymentId\": \"19d3121e-d949-4ff2-9f9d-94eac087862a\",\n          \"Command\": {\n              \"Args\": {},\n              \"Name\": \"deploy\"\n          },\n          \"InstanceIds\": [\n              \"8c2673b9-3fe5-420d-9cfa-78d875ee7687\",\n              \"9e588a25-35b2-4804-bd43-488f85ebe5b7\"\n          ],\n          \"Duration\": 72,\n          \"CreatedAt\": \"2013-07-25T18:55:29+00:00\"\n      }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Deploying Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-ecs-clusters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-ecs-clusters.html",
      "command_description": "Description\n\nDescribes Amazon ECS clusters that are registered with a stack. If you specify only a stack ID, you can use the MaxResults and NextToken parameters to paginate the response. However, AWS OpsWorks Stacks currently supports only one cluster per layer, so the result set has a maximum of one element.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack or an attached policy that explicitly grants permission. For more information about user permissions, see Managing User Permissions .\n\nThis call accepts only one resource-identifying parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-ecs-clusters is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: EcsClusters",
      "command_synopsis": "Synopsis\n  describe-ecs-clusters\n[--ecs-cluster-arns <value>]\n[--stack-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--ecs-cluster-arns <value>]",
        "[--stack-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ecs-cluster-arns (list)\n\nA list of ARNs, one for each cluster to be described.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--stack-id (string)\n\nA stack ID. DescribeEcsClusters returns a description of the cluster that is registered with the stack.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEcsClusters -> (list)\n\nA list of EcsCluster objects containing the cluster descriptions.\n\n(structure)\n\nDescribes a registered Amazon ECS cluster.\n\nEcsClusterArn -> (string)\n\nThe cluster’s ARN.\n\nEcsClusterName -> (string)\n\nThe cluster name.\n\nStackId -> (string)\n\nThe stack ID.\n\nRegisteredAt -> (string)\n\nThe time and date that the cluster was registered with the stack.\n\nNextToken -> (string)\n\nIf a paginated request does not return all of the remaining results, this parameter is set to a token that you can assign to the request object’s NextToken parameter to retrieve the next set of results. If the previous paginated request returned all of the remaining results, this parameter is set to null ."
    },
    {
      "command_name": "describe-elastic-ips",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-elastic-ips.html",
      "command_description": "Description\n\nDescribes Elastic IP addresses .\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-elastic-ips\n[--instance-id <value>]\n[--stack-id <value>]\n[--ips <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--instance-id <value>]",
        "[--stack-id <value>]",
        "[--ips <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID. If you include this parameter, DescribeElasticIps returns a description of the Elastic IP addresses associated with the specified instance.\n\n--stack-id (string)\n\nA stack ID. If you include this parameter, DescribeElasticIps returns a description of the Elastic IP addresses that are registered with the specified stack.\n\n--ips (list)\n\nAn array of Elastic IP addresses to be described. If you include this parameter, DescribeElasticIps returns a description of the specified Elastic IP addresses. Otherwise, it returns a description of every Elastic IP address.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nElasticIps -> (list)\n\nAn ElasticIps object that describes the specified Elastic IP addresses.\n\n(structure)\n\nDescribes an Elastic IP address.\n\nIp -> (string)\n\nThe IP address.\n\nName -> (string)\n\nThe name.\n\nDomain -> (string)\n\nThe domain.\n\nRegion -> (string)\n\nThe AWS region. For more information, see Regions and Endpoints .\n\nInstanceId -> (string)\n\nThe ID of the instance that the address is attached to.",
      "command_examples": "Examples\n\nTo describe Elastic IP instances\n\nThe following describe-elastic-ips commmand describes the Elastic IP addresses in a specified instance.\n\naws opsworks --region us-east-1 describe-elastic-ips --instance-id b62f3e04-e9eb-436c-a91f-d9e9a396b7b0\n\n\nOutput:\n\n{\n  \"ElasticIps\": [\n      {\n          \"Ip\": \"192.0.2.0\",\n          \"Domain\": \"standard\",\n          \"Region\": \"us-west-2\"\n      }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Instances in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-elastic-load-balancers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-elastic-load-balancers.html",
      "command_description": "Description\n\nDescribes a stack’s Elastic Load Balancing instances.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-elastic-load-balancers\n[--stack-id <value>]\n[--layer-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--layer-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nA stack ID. The action describes the stack’s Elastic Load Balancing instances.\n\n--layer-ids (list)\n\nA list of layer IDs. The action describes the Elastic Load Balancing instances for the specified layers.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nElasticLoadBalancers -> (list)\n\nA list of ElasticLoadBalancer objects that describe the specified Elastic Load Balancing instances.\n\n(structure)\n\nDescribes an Elastic Load Balancing instance.\n\nElasticLoadBalancerName -> (string)\n\nThe Elastic Load Balancing instance’s name.\n\nRegion -> (string)\n\nThe instance’s AWS region.\n\nDnsName -> (string)\n\nThe instance’s public DNS name.\n\nStackId -> (string)\n\nThe ID of the stack that the instance is associated with.\n\nLayerId -> (string)\n\nThe ID of the layer that the instance is attached to.\n\nVpcId -> (string)\n\nThe VPC ID.\n\nAvailabilityZones -> (list)\n\nA list of Availability Zones.\n\n(string)\n\nSubnetIds -> (list)\n\nA list of subnet IDs, if the stack is running in a VPC.\n\n(string)\n\nEc2InstanceIds -> (list)\n\nA list of the EC2 instances that the Elastic Load Balancing instance is managing traffic for.\n\n(string)",
      "command_examples": "Examples\n\nTo describe a stack’s elastic load balancers\n\nThe following describe-elastic-load-balancers command describes a specified stack’s load balancers.\n\naws opsworks --region us-west-2 describe-elastic-load-balancers --stack-id 6f4660e5-37a6-4e42-bfa0-1358ebd9c182\n\n\nOutput: This particular stack has one load balancer.\n\n{\n  \"ElasticLoadBalancers\": [\n      {\n          \"SubnetIds\": [\n              \"subnet-60e4ea04\",\n              \"subnet-66e1c110\"\n          ],\n          \"Ec2InstanceIds\": [],\n          \"ElasticLoadBalancerName\": \"my-balancer\",\n          \"Region\": \"us-west-2\",\n          \"LayerId\": \"344973cb-bf2b-4cd0-8d93-51cd819bab04\",\n          \"AvailabilityZones\": [\n              \"us-west-2a\",\n              \"us-west-2b\"\n          ],\n          \"VpcId\": \"vpc-b319f9d4\",\n          \"StackId\": \"6f4660e5-37a6-4e42-bfa0-1358ebd9c182\",\n          \"DnsName\": \"my-balancer-2094040179.us-west-2.elb.amazonaws.com\"\n      }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-instances.html",
      "command_description": "Description\n\nRequests a description of a set of instances.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-instances\n[--stack-id <value>]\n[--layer-id <value>]\n[--instance-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--layer-id <value>]",
        "[--instance-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nA stack ID. If you use this parameter, DescribeInstances returns descriptions of the instances associated with the specified stack.\n\n--layer-id (string)\n\nA layer ID. If you use this parameter, DescribeInstances returns descriptions of the instances associated with the specified layer.\n\n--instance-ids (list)\n\nAn array of instance IDs to be described. If you use this parameter, DescribeInstances returns a description of the specified instances. Otherwise, it returns a description of every instance.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstances -> (list)\n\nAn array of Instance objects that describe the instances.\n\n(structure)\n\nDescribes an instance.\n\nAgentVersion -> (string)\n\nThe agent version. This parameter is set to INHERIT if the instance inherits the default stack setting or to a a version number for a fixed agent version.\n\nAmiId -> (string)\n\nA custom AMI ID to be used to create the instance. For more information, see Instances\n\nArchitecture -> (string)\n\nThe instance architecture: “i386” or “x86_64”.\n\nArn -> (string)\n\nThe instance’s Amazon Resource Number (ARN).\n\nAutoScalingType -> (string)\n\nFor load-based or time-based instances, the type.\n\nAvailabilityZone -> (string)\n\nThe instance Availability Zone. For more information, see Regions and Endpoints .\n\nBlockDeviceMappings -> (list)\n\nAn array of BlockDeviceMapping objects that specify the instance’s block device mappings.\n\n(structure)\n\nDescribes a block device mapping. This data type maps directly to the Amazon EC2 BlockDeviceMapping data type.\n\nDeviceName -> (string)\n\nThe device name that is exposed to the instance, such as /dev/sdh . For the root device, you can use the explicit device name or you can set this parameter to ROOT_DEVICE and AWS OpsWorks Stacks will provide the correct device name.\n\nNoDevice -> (string)\n\nSuppresses the specified device included in the AMI’s block device mapping.\n\nVirtualName -> (string)\n\nThe virtual device name. For more information, see BlockDeviceMapping .\n\nEbs -> (structure)\n\nAn EBSBlockDevice that defines how to configure an Amazon EBS volume when the instance is launched.\n\nSnapshotId -> (string)\n\nThe snapshot ID.\n\nIops -> (integer)\n\nThe number of I/O operations per second (IOPS) that the volume supports. For more information, see EbsBlockDevice .\n\nVolumeSize -> (integer)\n\nThe volume size, in GiB. For more information, see EbsBlockDevice .\n\nVolumeType -> (string)\n\nThe volume type. gp2 for General Purpose (SSD) volumes, io1 for Provisioned IOPS (SSD) volumes, st1 for Throughput Optimized hard disk drives (HDD), sc1 for Cold HDD,and standard for Magnetic volumes.\n\nIf you specify the io1 volume type, you must also specify a value for the Iops attribute. The maximum ratio of provisioned IOPS to requested volume size (in GiB) is 50:1. AWS uses the default volume size (in GiB) specified in the AMI attributes to set IOPS to 50 x (volume size).\n\nDeleteOnTermination -> (boolean)\n\nWhether the volume is deleted on instance termination.\n\nCreatedAt -> (string)\n\nThe time that the instance was created.\n\nEbsOptimized -> (boolean)\n\nWhether this is an Amazon EBS-optimized instance.\n\nEc2InstanceId -> (string)\n\nThe ID of the associated Amazon EC2 instance.\n\nEcsClusterArn -> (string)\n\nFor container instances, the Amazon ECS cluster’s ARN.\n\nEcsContainerInstanceArn -> (string)\n\nFor container instances, the instance’s ARN.\n\nElasticIp -> (string)\n\nThe instance Elastic IP address .\n\nHostname -> (string)\n\nThe instance host name.\n\nInfrastructureClass -> (string)\n\nFor registered instances, the infrastructure class: ec2 or on-premises .\n\nInstallUpdatesOnBoot -> (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . If this value is set to false , you must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nWe strongly recommend using the default value of true , to ensure that your instances have the latest security updates.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nInstanceProfileArn -> (string)\n\nThe ARN of the instance’s IAM profile. For more information about IAM ARNs, see Using Identifiers .\n\nInstanceType -> (string)\n\nThe instance type, such as t2.micro .\n\nLastServiceErrorId -> (string)\n\nThe ID of the last service error. For more information, call DescribeServiceErrors .\n\nLayerIds -> (list)\n\nAn array containing the instance layer IDs.\n\n(string)\n\nOs -> (string)\n\nThe instance’s operating system.\n\nPlatform -> (string)\n\nThe instance’s platform.\n\nPrivateDns -> (string)\n\nThe instance’s private DNS name.\n\nPrivateIp -> (string)\n\nThe instance’s private IP address.\n\nPublicDns -> (string)\n\nThe instance public DNS name.\n\nPublicIp -> (string)\n\nThe instance public IP address.\n\nRegisteredBy -> (string)\n\nFor registered instances, who performed the registration.\n\nReportedAgentVersion -> (string)\n\nThe instance’s reported AWS OpsWorks Stacks agent version.\n\nReportedOs -> (structure)\n\nFor registered instances, the reported operating system.\n\nFamily -> (string)\n\nThe operating system family.\n\nName -> (string)\n\nThe operating system name.\n\nVersion -> (string)\n\nThe operating system version.\n\nRootDeviceType -> (string)\n\nThe instance’s root device type. For more information, see Storage for the Root Device .\n\nRootDeviceVolumeId -> (string)\n\nThe root device volume ID.\n\nSecurityGroupIds -> (list)\n\nAn array containing the instance security group IDs.\n\n(string)\n\nSshHostDsaKeyFingerprint -> (string)\n\nThe SSH key’s Deep Security Agent (DSA) fingerprint.\n\nSshHostRsaKeyFingerprint -> (string)\n\nThe SSH key’s RSA fingerprint.\n\nSshKeyName -> (string)\n\nThe instance’s Amazon EC2 key-pair name.\n\nStackId -> (string)\n\nThe stack ID.\n\nStatus -> (string)\n\nThe instance status:\n\nbooting\n\nconnection_lost\n\nonline\n\npending\n\nrebooting\n\nrequested\n\nrunning_setup\n\nsetup_failed\n\nshutting_down\n\nstart_failed\n\nstop_failed\n\nstopped\n\nstopping\n\nterminated\n\nterminating\n\nSubnetId -> (string)\n\nThe instance’s subnet ID; applicable only if the stack is running in a VPC.\n\nTenancy -> (string)\n\nThe instance’s tenancy option, such as dedicated or host .\n\nVirtualizationType -> (string)\n\nThe instance’s virtualization type: paravirtual or hvm .",
      "command_examples": "Examples\n\nTo describe instances\n\nThe following describe-instances commmand describes the instances in a specified stack:\n\naws opsworks --region us-east-1 describe-instances --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8\n\n\nOutput: The following output example is for a stack with two instances. The first is a registered EC2 instance, and the second was created by AWS OpsWorks.\n\n{\n  \"Instances\": [\n    {\n      \"StackId\": \"71c7ca72-55ae-4b6a-8ee1-a8dcded3fa0f\",\n      \"PrivateDns\": \"ip-10-31-39-66.us-west-2.compute.internal\",\n      \"LayerIds\": [\n        \"26cf1d32-6876-42fa-bbf1-9cadc0bff938\"\n      ],\n      \"EbsOptimized\": false,\n      \"ReportedOs\": {\n        \"Version\": \"14.04\",\n        \"Name\": \"ubuntu\",\n        \"Family\": \"debian\"\n      },\n      \"Status\": \"online\",\n      \"InstanceId\": \"4d6d1710-ded9-42a1-b08e-b043ad7af1e2\",\n      \"SshKeyName\": \"US-West-2\",\n      \"InfrastructureClass\": \"ec2\",\n      \"RootDeviceVolumeId\": \"vol-d08ec6c1\",\n      \"SubnetId\": \"subnet-b8de0ddd\",\n      \"InstanceType\": \"t1.micro\",\n      \"CreatedAt\": \"2015-02-24T20:52:49+00:00\",\n      \"AmiId\": \"ami-35501205\",\n      \"Hostname\": \"ip-192-0-2-0\",\n      \"Ec2InstanceId\": \"i-5cd23551\",\n      \"PublicDns\": \"ec2-192-0-2-0.us-west-2.compute.amazonaws.com\",\n      \"SecurityGroupIds\": [\n        \"sg-c4d3f0a1\"\n      ],\n      \"Architecture\": \"x86_64\",\n      \"RootDeviceType\": \"ebs\",\n      \"InstallUpdatesOnBoot\": true,\n      \"Os\": \"Custom\",\n      \"VirtualizationType\": \"paravirtual\",\n      \"AvailabilityZone\": \"us-west-2a\",\n      \"PrivateIp\": \"10.31.39.66\",\n      \"PublicIp\": \"192.0.2.06\",\n      \"RegisteredBy\": \"arn:aws:iam::123456789102:user/AWS/OpsWorks/OpsWorks-EC2Register-i-5cd23551\"\n    },\n    {\n      \"StackId\": \"71c7ca72-55ae-4b6a-8ee1-a8dcded3fa0f\",\n      \"PrivateDns\": \"ip-10-31-39-158.us-west-2.compute.internal\",\n      \"SshHostRsaKeyFingerprint\": \"69:6b:7b:8b:72:f3:ed:23:01:00:05:bc:9f:a4:60:c1\",\n      \"LayerIds\": [\n        \"26cf1d32-6876-42fa-bbf1-9cadc0bff938\"\n      ],\n      \"EbsOptimized\": false,\n      \"ReportedOs\": {},\n      \"Status\": \"booting\",\n      \"InstanceId\": \"9b137a0d-2f5d-4cc0-9704-13da4b31fdcb\",\n      \"SshKeyName\": \"US-West-2\",\n      \"InfrastructureClass\": \"ec2\",\n      \"RootDeviceVolumeId\": \"vol-e09dd5f1\",\n      \"SubnetId\": \"subnet-b8de0ddd\",\n      \"InstanceProfileArn\": \"arn:aws:iam::123456789102:instance-profile/aws-opsworks-ec2-role\",\n      \"InstanceType\": \"c3.large\",\n      \"CreatedAt\": \"2015-02-24T21:29:33+00:00\",\n      \"AmiId\": \"ami-9fc29baf\",\n      \"SshHostDsaKeyFingerprint\": \"fc:87:95:c3:f5:e1:3b:9f:d2:06:6e:62:9a:35:27:e8\",\n      \"Ec2InstanceId\": \"i-8d2dca80\",\n      \"PublicDns\": \"ec2-192-0-2-1.us-west-2.compute.amazonaws.com\",\n      \"SecurityGroupIds\": [\n        \"sg-b022add5\",\n        \"sg-b122add4\"\n      ],\n      \"Architecture\": \"x86_64\",\n      \"RootDeviceType\": \"ebs\",\n      \"InstallUpdatesOnBoot\": true,\n      \"Os\": \"Amazon Linux 2014.09\",\n      \"VirtualizationType\": \"paravirtual\",\n      \"AvailabilityZone\": \"us-west-2a\",\n      \"Hostname\": \"custom11\",\n      \"PrivateIp\": \"10.31.39.158\",\n      \"PublicIp\": \"192.0.2.0\"\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Instances in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-layers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-layers.html",
      "command_description": "Description\n\nRequests a description of one or more layers in a specified stack.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-layers\n[--stack-id <value>]\n[--layer-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--layer-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--layer-ids (list)\n\nAn array of layer IDs that specify the layers to be described. If you omit this parameter, DescribeLayers returns a description of every layer in the specified stack.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLayers -> (list)\n\nAn array of Layer objects that describe the layers.\n\n(structure)\n\nDescribes a layer.\n\nArn -> (string)\n\nThe Amazon Resource Number (ARN) of a layer.\n\nStackId -> (string)\n\nThe layer stack ID.\n\nLayerId -> (string)\n\nThe layer ID.\n\nType -> (string)\n\nThe layer type.\n\nName -> (string)\n\nThe layer name.\n\nShortname -> (string)\n\nThe layer short name.\n\nAttributes -> (map)\n\nThe layer attributes.\n\nFor the HaproxyStatsPassword , MysqlRootPassword , and GangliaPassword attributes, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value\n\nFor an ECS Cluster layer, AWS OpsWorks Stacks the EcsClusterArn attribute is set to the cluster’s ARN.\n\nkey -> (string)\n\nvalue -> (string)\n\nCloudWatchLogsConfiguration -> (structure)\n\nThe Amazon CloudWatch Logs configuration settings for the layer.\n\nEnabled -> (boolean)\n\nWhether CloudWatch Logs is enabled for a layer.\n\nLogStreams -> (list)\n\nA list of configuration options for CloudWatch Logs.\n\n(structure)\n\nDescribes the Amazon CloudWatch logs configuration for a layer. For detailed information about members of this data type, see the CloudWatch Logs Agent Reference .\n\nLogGroupName -> (string)\n\nSpecifies the destination log group. A log group is created automatically if it doesn’t already exist. Log group names can be between 1 and 512 characters long. Allowed characters include a-z, A-Z, 0-9, ‘_’ (underscore), ‘-‘ (hyphen), ‘/’ (forward slash), and ‘.’ (period).\n\nDatetimeFormat -> (string)\n\nSpecifies how the time stamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference .\n\nTimeZone -> (string)\n\nSpecifies the time zone of log event time stamps.\n\nFile -> (string)\n\nSpecifies log files that you want to push to CloudWatch Logs.\n\nFile can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log* ). Only the latest file is pushed to CloudWatch Logs, based on file modification time. We recommend that you use wild card characters to specify a series of files of the same type, such as access_log.2014-06-01-01 , access_log.2014-06-01-02 , and so on by using a pattern like access_log.* . Don’t use a wildcard to match multiple file types, such as access_log_80 and access_log_443 . To specify multiple, different file types, add another log stream entry to the configuration file, so that each log file type is stored in a different log group.\n\nZipped files are not supported.\n\nFileFingerprintLines -> (string)\n\nSpecifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as ‘1’, ‘2-5’. The default value is ‘1’, meaning the first line is used to calculate the fingerprint. Fingerprint lines are not sent to CloudWatch Logs unless all specified lines are available.\n\nMultiLineStartPattern -> (string)\n\nSpecifies the pattern for identifying the start of a log message.\n\nInitialPosition -> (string)\n\nSpecifies where to start to read data (start_of_file or end_of_file). The default is start_of_file. This setting is only used if there is no state persisted for that log stream.\n\nEncoding -> (string)\n\nSpecifies the encoding of the log file so that the file can be read correctly. The default is utf_8 . Encodings supported by Python codecs.decode() can be used here.\n\nBufferDuration -> (integer)\n\nSpecifies the time duration for the batching of log events. The minimum value is 5000ms and default value is 5000ms.\n\nBatchCount -> (integer)\n\nSpecifies the max number of log events in a batch, up to 10000. The default value is 1000.\n\nBatchSize -> (integer)\n\nSpecifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes. This size is calculated as the sum of all event messages in UTF-8, plus 26 bytes for each log event.\n\nCustomInstanceProfileArn -> (string)\n\nThe ARN of the default IAM profile to be used for the layer’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\nCustomJson -> (string)\n\nA JSON formatted string containing the layer’s custom stack configuration and deployment attributes.\n\nCustomSecurityGroupIds -> (list)\n\nAn array containing the layer’s custom security group IDs.\n\n(string)\n\nDefaultSecurityGroupNames -> (list)\n\nAn array containing the layer’s security group names.\n\n(string)\n\nPackages -> (list)\n\nAn array of Package objects that describe the layer’s packages.\n\n(string)\n\nVolumeConfigurations -> (list)\n\nA VolumeConfigurations object that describes the layer’s Amazon EBS volumes.\n\n(structure)\n\nDescribes an Amazon EBS volume configuration.\n\nMountPoint -> (string)\n\nThe volume mount point. For example “/dev/sdh”.\n\nRaidLevel -> (integer)\n\nThe volume RAID level .\n\nNumberOfDisks -> (integer)\n\nThe number of disks in the volume.\n\nSize -> (integer)\n\nThe volume size.\n\nVolumeType -> (string)\n\nThe volume type. For more information, see Amazon EBS Volume Types .\n\nstandard - Magnetic. Magnetic volumes must have a minimum size of 1 GiB and a maximum size of 1024 GiB.\n\nio1 - Provisioned IOPS (SSD). PIOPS volumes must have a minimum size of 4 GiB and a maximum size of 16384 GiB.\n\ngp2 - General Purpose (SSD). General purpose volumes must have a minimum size of 1 GiB and a maximum size of 16384 GiB.\n\nst1 - Throughput Optimized hard disk drive (HDD). Throughput optimized HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nsc1 - Cold HDD. Cold HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nIops -> (integer)\n\nFor PIOPS volumes, the IOPS per disk.\n\nEncrypted -> (boolean)\n\nSpecifies whether an Amazon EBS volume is encrypted. For more information, see Amazon EBS Encryption .\n\nEnableAutoHealing -> (boolean)\n\nWhether auto healing is disabled for the layer.\n\nAutoAssignElasticIps -> (boolean)\n\nWhether to automatically assign an Elastic IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\nAutoAssignPublicIps -> (boolean)\n\nFor stacks that are running in a VPC, whether to automatically assign a public IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\nDefaultRecipes -> (structure)\n\nAWS OpsWorks Stacks supports five lifecycle events: setup , configuration , deploy , undeploy , and shutdown . For each layer, AWS OpsWorks Stacks runs a set of standard recipes for each event. You can also provide custom recipes for any or all layers and events. AWS OpsWorks Stacks runs custom event recipes after the standard recipes. LayerCustomRecipes specifies the custom recipes for a particular layer to be run in response to each of the five events.\n\nTo specify a recipe, use the cookbook’s directory name in the repository followed by two colons and the recipe name, which is the recipe’s file name without the .rb extension. For example: phpapp2::dbsetup specifies the dbsetup.rb recipe in the repository’s phpapp2 folder.\n\nSetup -> (list)\n\nAn array of custom recipe names to be run following a setup event.\n\n(string)\n\nConfigure -> (list)\n\nAn array of custom recipe names to be run following a configure event.\n\n(string)\n\nDeploy -> (list)\n\nAn array of custom recipe names to be run following a deploy event.\n\n(string)\n\nUndeploy -> (list)\n\nAn array of custom recipe names to be run following a undeploy event.\n\n(string)\n\nShutdown -> (list)\n\nAn array of custom recipe names to be run following a shutdown event.\n\n(string)\n\nCustomRecipes -> (structure)\n\nA LayerCustomRecipes object that specifies the layer’s custom recipes.\n\nSetup -> (list)\n\nAn array of custom recipe names to be run following a setup event.\n\n(string)\n\nConfigure -> (list)\n\nAn array of custom recipe names to be run following a configure event.\n\n(string)\n\nDeploy -> (list)\n\nAn array of custom recipe names to be run following a deploy event.\n\n(string)\n\nUndeploy -> (list)\n\nAn array of custom recipe names to be run following a undeploy event.\n\n(string)\n\nShutdown -> (list)\n\nAn array of custom recipe names to be run following a shutdown event.\n\n(string)\n\nCreatedAt -> (string)\n\nDate when the layer was created.\n\nInstallUpdatesOnBoot -> (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . If this value is set to false , you must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nWe strongly recommend using the default value of true , to ensure that your instances have the latest security updates.\n\nUseEbsOptimizedInstances -> (boolean)\n\nWhether the layer uses Amazon EBS-optimized instances.\n\nLifecycleEventConfiguration -> (structure)\n\nA LifeCycleEventConfiguration object that specifies the Shutdown event configuration.\n\nShutdown -> (structure)\n\nA ShutdownEventConfiguration object that specifies the Shutdown event configuration.\n\nExecutionTimeout -> (integer)\n\nThe time, in seconds, that AWS OpsWorks Stacks will wait after triggering a Shutdown event before shutting down an instance.\n\nDelayUntilElbConnectionsDrained -> (boolean)\n\nWhether to enable Elastic Load Balancing connection draining. For more information, see Connection Draining",
      "command_examples": "Examples\n\nTo describe a stack’s layers\n\nThe following describe-layers commmand describes the layers in a specified stack:\n\naws opsworks --region us-east-1 describe-layers --stack-id 38ee91e2-abdc-4208-a107-0b7168b3cc7a\n\n\nOutput:\n\n{\n  \"Layers\": [\n      {\n          \"StackId\": \"38ee91e2-abdc-4208-a107-0b7168b3cc7a\",\n          \"Type\": \"db-master\",\n          \"DefaultSecurityGroupNames\": [\n              \"AWS-OpsWorks-DB-Master-Server\"\n          ],\n          \"Name\": \"MySQL\",\n          \"Packages\": [],\n          \"DefaultRecipes\": {\n              \"Undeploy\": [],\n              \"Setup\": [\n                  \"opsworks_initial_setup\",\n                  \"ssh_host_keys\",\n                  \"ssh_users\",\n                  \"mysql::client\",\n                  \"dependencies\",\n                  \"ebs\",\n                  \"opsworks_ganglia::client\",\n                  \"mysql::server\",\n                  \"dependencies\",\n                  \"deploy::mysql\"\n              ],\n              \"Configure\": [\n                  \"opsworks_ganglia::configure-client\",\n                  \"ssh_users\",\n                  \"agent_version\",\n                  \"deploy::mysql\"\n              ],\n              \"Shutdown\": [\n                  \"opsworks_shutdown::default\",\n                  \"mysql::stop\"\n              ],\n              \"Deploy\": [\n                  \"deploy::default\",\n                  \"deploy::mysql\"\n              ]\n          },\n          \"CustomRecipes\": {\n              \"Undeploy\": [],\n              \"Setup\": [],\n              \"Configure\": [],\n              \"Shutdown\": [],\n              \"Deploy\": []\n          },\n          \"EnableAutoHealing\": false,\n          \"LayerId\": \"41a20847-d594-4325-8447-171821916b73\",\n          \"Attributes\": {\n              \"MysqlRootPasswordUbiquitous\": \"true\",\n              \"RubygemsVersion\": null,\n              \"RailsStack\": null,\n              \"HaproxyHealthCheckMethod\": null,\n              \"RubyVersion\": null,\n              \"BundlerVersion\": null,\n              \"HaproxyStatsPassword\": null,\n              \"PassengerVersion\": null,\n              \"MemcachedMemory\": null,\n              \"EnableHaproxyStats\": null,\n              \"ManageBundler\": null,\n              \"NodejsVersion\": null,\n              \"HaproxyHealthCheckUrl\": null,\n              \"MysqlRootPassword\": \"*****FILTERED*****\",\n              \"GangliaPassword\": null,\n              \"GangliaUser\": null,\n              \"HaproxyStatsUrl\": null,\n              \"GangliaUrl\": null,\n              \"HaproxyStatsUser\": null\n          },\n          \"Shortname\": \"db-master\",\n          \"AutoAssignElasticIps\": false,\n          \"CustomSecurityGroupIds\": [],\n          \"CreatedAt\": \"2013-07-25T18:11:19+00:00\",\n          \"VolumeConfigurations\": [\n              {\n                  \"MountPoint\": \"/vol/mysql\",\n                  \"Size\": 10,\n                  \"NumberOfDisks\": 1\n              }\n          ]\n      },\n      {\n          \"StackId\": \"38ee91e2-abdc-4208-a107-0b7168b3cc7a\",\n          \"Type\": \"custom\",\n          \"DefaultSecurityGroupNames\": [\n              \"AWS-OpsWorks-Custom-Server\"\n          ],\n          \"Name\": \"TomCustom\",\n          \"Packages\": [],\n          \"DefaultRecipes\": {\n              \"Undeploy\": [],\n              \"Setup\": [\n                  \"opsworks_initial_setup\",\n                  \"ssh_host_keys\",\n                  \"ssh_users\",\n                  \"mysql::client\",\n                  \"dependencies\",\n                  \"ebs\",\n                  \"opsworks_ganglia::client\"\n              ],\n              \"Configure\": [\n                  \"opsworks_ganglia::configure-client\",\n                  \"ssh_users\",\n                  \"agent_version\"\n              ],\n              \"Shutdown\": [\n                  \"opsworks_shutdown::default\"\n              ],\n              \"Deploy\": [\n                  \"deploy::default\"\n              ]\n          },\n          \"CustomRecipes\": {\n              \"Undeploy\": [],\n              \"Setup\": [\n                  \"tomcat::setup\"\n              ],\n              \"Configure\": [\n                  \"tomcat::configure\"\n              ],\n              \"Shutdown\": [],\n              \"Deploy\": [\n                  \"tomcat::deploy\"\n              ]\n          },\n          \"EnableAutoHealing\": true,\n          \"LayerId\": \"e6cbcd29-d223-40fc-8243-2eb213377440\",\n          \"Attributes\": {\n              \"MysqlRootPasswordUbiquitous\": null,\n              \"RubygemsVersion\": null,\n              \"RailsStack\": null,\n              \"HaproxyHealthCheckMethod\": null,\n              \"RubyVersion\": null,\n              \"BundlerVersion\": null,\n              \"HaproxyStatsPassword\": null,\n              \"PassengerVersion\": null,\n              \"MemcachedMemory\": null,\n              \"EnableHaproxyStats\": null,\n              \"ManageBundler\": null,\n              \"NodejsVersion\": null,\n              \"HaproxyHealthCheckUrl\": null,\n              \"MysqlRootPassword\": null,\n              \"GangliaPassword\": null,\n              \"GangliaUser\": null,\n              \"HaproxyStatsUrl\": null,\n              \"GangliaUrl\": null,\n              \"HaproxyStatsUser\": null\n          },\n          \"Shortname\": \"tomcustom\",\n          \"AutoAssignElasticIps\": false,\n          \"CustomSecurityGroupIds\": [],\n          \"CreatedAt\": \"2013-07-25T18:12:53+00:00\",\n          \"VolumeConfigurations\": []\n      }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Layers in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-load-based-auto-scaling",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-load-based-auto-scaling.html",
      "command_description": "Description\n\nDescribes load-based auto scaling configurations for specified layers.\n\nNote\n\nYou must specify at least one of the parameters.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-load-based-auto-scaling\n--layer-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-ids (list)\n\nAn array of layer IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLoadBasedAutoScalingConfigurations -> (list)\n\nAn array of LoadBasedAutoScalingConfiguration objects that describe each layer’s configuration.\n\n(structure)\n\nDescribes a layer’s load-based auto scaling configuration.\n\nLayerId -> (string)\n\nThe layer ID.\n\nEnable -> (boolean)\n\nWhether load-based auto scaling is enabled for the layer.\n\nUpScaling -> (structure)\n\nAn AutoScalingThresholds object that describes the upscaling configuration, which defines how and when AWS OpsWorks Stacks increases the number of instances.\n\nInstanceCount -> (integer)\n\nThe number of instances to add or remove when the load exceeds a threshold.\n\nThresholdsWaitTime -> (integer)\n\nThe amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.\n\nIgnoreMetricsTime -> (integer)\n\nThe amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events. For example, AWS OpsWorks Stacks adds new instances following an upscaling event but the instances won’t start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks to suppress scaling events long enough to get the new instances online.\n\nCpuThreshold -> (double)\n\nThe CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.\n\nMemoryThreshold -> (double)\n\nThe memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.\n\nLoadThreshold -> (double)\n\nThe load threshold. A value of -1 disables the threshold. For more information about how load is computed, see Load (computing) .\n\nAlarms -> (list)\n\nCustom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.\n\nNote\n\nTo use custom alarms, you must update your service role to allow cloudwatch:DescribeAlarms . You can either have AWS OpsWorks Stacks update the role for you when you first use this feature or you can edit the role manually. For more information, see Allowing AWS OpsWorks Stacks to Act on Your Behalf .\n\n(string)\n\nDownScaling -> (structure)\n\nAn AutoScalingThresholds object that describes the downscaling configuration, which defines how and when AWS OpsWorks Stacks reduces the number of instances.\n\nInstanceCount -> (integer)\n\nThe number of instances to add or remove when the load exceeds a threshold.\n\nThresholdsWaitTime -> (integer)\n\nThe amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.\n\nIgnoreMetricsTime -> (integer)\n\nThe amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events. For example, AWS OpsWorks Stacks adds new instances following an upscaling event but the instances won’t start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks to suppress scaling events long enough to get the new instances online.\n\nCpuThreshold -> (double)\n\nThe CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.\n\nMemoryThreshold -> (double)\n\nThe memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.\n\nLoadThreshold -> (double)\n\nThe load threshold. A value of -1 disables the threshold. For more information about how load is computed, see Load (computing) .\n\nAlarms -> (list)\n\nCustom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.\n\nNote\n\nTo use custom alarms, you must update your service role to allow cloudwatch:DescribeAlarms . You can either have AWS OpsWorks Stacks update the role for you when you first use this feature or you can edit the role manually. For more information, see Allowing AWS OpsWorks Stacks to Act on Your Behalf .\n\n(string)",
      "command_examples": "Examples\n\nTo describe a layer’s load-based scaling configuration\n\nThe following example describes a specified layer’s load-based scaling configuration. The layer is identified by its layer ID, which you can find on the layer’s details page or by running describe-layers.\n\naws opsworks describe-load-based-auto-scaling --region us-east-1 --layer-ids 6bec29c9-c866-41a0-aba5-fa3e374ce2a1\n\n\nOutput: The example layer has a single load-based instance.\n\n{\n  \"LoadBasedAutoScalingConfigurations\": [\n    {\n      \"DownScaling\": {\n        \"IgnoreMetricsTime\": 10,\n        \"ThresholdsWaitTime\": 10,\n        \"InstanceCount\": 1,\n        \"CpuThreshold\": 30.0\n      },\n      \"Enable\": true,\n      \"UpScaling\": {\n        \"IgnoreMetricsTime\": 5,\n        \"ThresholdsWaitTime\": 5,\n        \"InstanceCount\": 1,\n        \"CpuThreshold\": 80.0\n      },\n      \"LayerId\": \"6bec29c9-c866-41a0-aba5-fa3e374ce2a1\"\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see How Automatic Load-based Scaling Works in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-my-user-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-my-user-profile.html",
      "command_description": "Description\n\nDescribes a user’s SSH information.\n\nRequired Permissions : To use this action, an IAM user must have self-management enabled or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-my-user-profile\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserProfile -> (structure)\n\nA UserProfile object that describes the user’s SSH information.\n\nIamUserArn -> (string)\n\nThe user’s IAM ARN.\n\nName -> (string)\n\nThe user’s name.\n\nSshUsername -> (string)\n\nThe user’s SSH user name.\n\nSshPublicKey -> (string)\n\nThe user’s SSH public key.",
      "command_examples": "Examples\n\nTo obtain a user’s profile\n\nThe following example shows how to obtain the profile of the AWS Identity and Access Management (IAM) user that is running the command.\n\naws opsworks --region us-east-1 describe-my-user-profile\n\n\nOutput: For brevity, most of the user’s SSH public key is replaced by an ellipsis (…).\n\n{\n  \"UserProfile\": {\n    \"IamUserArn\": \"arn:aws:iam::123456789012:user/myusername\",\n    \"SshPublicKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAABJQ...3LQ4aX9jpxQw== rsa-key-20141104\",\n    \"Name\": \"myusername\",\n    \"SshUsername\": \"myusername\"\n  }\n}\n\n\nMore Information\n\nFor more information, see Importing Users into AWS OpsWorks in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-operating-systems",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-operating-systems.html",
      "command_description": "Description\n\nDescribes the operating systems that are supported by AWS OpsWorks Stacks.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-operating-systems\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOperatingSystems -> (list)\n\nContains information in response to a DescribeOperatingSystems request.\n\n(structure)\n\nDescribes supported operating systems in AWS OpsWorks Stacks.\n\nName -> (string)\n\nThe name of the operating system, such as Amazon Linux 2018.03 .\n\nId -> (string)\n\nThe ID of a supported operating system, such as Amazon Linux 2018.03 .\n\nType -> (string)\n\nThe type of a supported operating system, either Linux or Windows .\n\nConfigurationManagers -> (list)\n\nSupported configuration manager name and versions for an AWS OpsWorks Stacks operating system.\n\n(structure)\n\nA block that contains information about the configuration manager (Chef) and the versions of the configuration manager that are supported for an operating system.\n\nName -> (string)\n\nThe name of the configuration manager, which is Chef.\n\nVersion -> (string)\n\nThe versions of the configuration manager that are supported by an operating system.\n\nReportedName -> (string)\n\nA short name for the operating system manufacturer.\n\nReportedVersion -> (string)\n\nThe version of the operating system, including the release and edition, if applicable.\n\nSupported -> (boolean)\n\nIndicates that an operating system is not supported for new instances."
    },
    {
      "command_name": "describe-permissions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-permissions.html",
      "command_description": "Description\n\nDescribes the permissions for a specified stack.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-permissions\n[--iam-user-arn <value>]\n[--stack-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--iam-user-arn <value>]",
        "[--stack-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--iam-user-arn (string)\n\nThe user’s IAM ARN. This can also be a federated user’s ARN. For more information about IAM ARNs, see Using Identifiers .\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPermissions -> (list)\n\nAn array of Permission objects that describe the stack permissions.\n\nIf the request object contains only a stack ID, the array contains a Permission object with permissions for each of the stack IAM ARNs.\n\nIf the request object contains only an IAM ARN, the array contains a Permission object with permissions for each of the user’s stack IDs.\n\nIf the request contains a stack ID and an IAM ARN, the array contains a single Permission object with permissions for the specified stack and IAM ARN.\n\n(structure)\n\nDescribes stack or user permissions.\n\nStackId -> (string)\n\nA stack ID.\n\nIamUserArn -> (string)\n\nThe Amazon Resource Name (ARN) for an AWS Identity and Access Management (IAM) role. For more information about IAM ARNs, see Using Identifiers .\n\nAllowSsh -> (boolean)\n\nWhether the user can use SSH.\n\nAllowSudo -> (boolean)\n\nWhether the user can use sudo .\n\nLevel -> (string)\n\nThe user’s permission level, which must be the following:\n\ndeny\n\nshow\n\ndeploy\n\nmanage\n\niam_only\n\nFor more information on the permissions associated with these levels, see Managing User Permissions",
      "command_examples": "Examples\n\nTo obtain a user’s per-stack AWS OpsWorks permission level\n\nThe following example shows how to to obtain an AWS Identity and Access Management (IAM) user’s permission level on a specified stack.\n\naws opsworks --region us-east-1 describe-permissions --iam-user-arn arn:aws:iam::123456789012:user/cli-user-test --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06\n\n\nOutput:\n\n{\n  \"Permissions\": [\n    {\n      \"StackId\": \"d72553d4-8727-448c-9b00-f024f0ba1b06\",\n      \"IamUserArn\": \"arn:aws:iam::123456789012:user/cli-user-test\",\n      \"Level\": \"manage\",\n      \"AllowSudo\": true,\n      \"AllowSsh\": true\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Granting Per-Stack Permissions Levels in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-raid-arrays",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-raid-arrays.html",
      "command_description": "Description\n\nDescribe an instance’s RAID arrays.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-raid-arrays\n[--instance-id <value>]\n[--stack-id <value>]\n[--raid-array-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--instance-id <value>]",
        "[--stack-id <value>]",
        "[--raid-array-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID. If you use this parameter, DescribeRaidArrays returns descriptions of the RAID arrays associated with the specified instance.\n\n--stack-id (string)\n\nThe stack ID.\n\n--raid-array-ids (list)\n\nAn array of RAID array IDs. If you use this parameter, DescribeRaidArrays returns descriptions of the specified arrays. Otherwise, it returns a description of every array.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRaidArrays -> (list)\n\nA RaidArrays object that describes the specified RAID arrays.\n\n(structure)\n\nDescribes an instance’s RAID array.\n\nRaidArrayId -> (string)\n\nThe array ID.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nName -> (string)\n\nThe array name.\n\nRaidLevel -> (integer)\n\nThe RAID level .\n\nNumberOfDisks -> (integer)\n\nThe number of disks in the array.\n\nSize -> (integer)\n\nThe array’s size.\n\nDevice -> (string)\n\nThe array’s Linux device. For example /dev/mdadm0.\n\nMountPoint -> (string)\n\nThe array’s mount point.\n\nAvailabilityZone -> (string)\n\nThe array’s Availability Zone. For more information, see Regions and Endpoints .\n\nCreatedAt -> (string)\n\nWhen the RAID array was created.\n\nStackId -> (string)\n\nThe stack ID.\n\nVolumeType -> (string)\n\nThe volume type, standard or PIOPS.\n\nIops -> (integer)\n\nFor PIOPS volumes, the IOPS per disk.",
      "command_examples": "Examples\n\nTo describe RAID arrays\n\nThe following example describes the RAID arrays attached to the instances in a specified stack.\n\naws opsworks --region us-east-1 describe-raid-arrays --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06\n\n\nOutput: The following is the output for a stack with one RAID array.\n\n{\n  \"RaidArrays\": [\n    {\n      \"StackId\": \"d72553d4-8727-448c-9b00-f024f0ba1b06\",\n      \"AvailabilityZone\": \"us-west-2a\",\n      \"Name\": \"Created for php-app1\",\n      \"NumberOfDisks\": 2,\n      \"InstanceId\": \"9f14adbc-ced5-43b6-bf01-e7d0db6cf2f7\",\n      \"RaidLevel\": 0,\n      \"VolumeType\": \"standard\",\n      \"RaidArrayId\": \"f2d4e470-5972-4676-b1b8-bae41ec3e51c\",\n      \"Device\": \"/dev/md0\",\n      \"MountPoint\": \"/mnt/workspace\",\n      \"CreatedAt\": \"2015-02-26T23:53:09+00:00\",\n      \"Size\": 100\n    }\n  ]\n}\n\n\nFor more information, see EBS Volumes in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-rds-db-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-rds-db-instances.html",
      "command_description": "Description\n\nDescribes Amazon RDS instances.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nThis call accepts only one resource-identifying parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-rds-db-instances\n--stack-id <value>\n[--rds-db-instance-arns <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--rds-db-instance-arns <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe ID of the stack with which the instances are registered. The operation returns descriptions of all registered Amazon RDS instances.\n\n--rds-db-instance-arns (list)\n\nAn array containing the ARNs of the instances to be described.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRdsDbInstances -> (list)\n\nAn a array of RdsDbInstance objects that describe the instances.\n\n(structure)\n\nDescribes an Amazon RDS instance.\n\nRdsDbInstanceArn -> (string)\n\nThe instance’s ARN.\n\nDbInstanceIdentifier -> (string)\n\nThe DB instance identifier.\n\nDbUser -> (string)\n\nThe master user name.\n\nDbPassword -> (string)\n\nAWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRegion -> (string)\n\nThe instance’s AWS region.\n\nAddress -> (string)\n\nThe instance’s address.\n\nEngine -> (string)\n\nThe instance’s database engine.\n\nStackId -> (string)\n\nThe ID of the stack with which the instance is registered.\n\nMissingOnRds -> (boolean)\n\nSet to true if AWS OpsWorks Stacks is unable to discover the Amazon RDS instance. AWS OpsWorks Stacks attempts to discover the instance only once. If this value is set to true , you must deregister the instance, and then register it again.",
      "command_examples": "Examples\n\nTo describe a stack’s registered Amazon RDS instances\n\nThe following example describes the Amazon RDS instances registered with a specified stack.\n\naws opsworks --region us-east-1 describe-rds-db-instances --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06\n\n\nOutput: The following is the output for a stack with one registered RDS instance.\n\n{\n  \"RdsDbInstances\": [\n    {\n      \"Engine\": \"mysql\",\n      \"StackId\": \"d72553d4-8727-448c-9b00-f024f0ba1b06\",\n      \"MissingOnRds\": false,\n      \"Region\": \"us-west-2\",\n      \"RdsDbInstanceArn\": \"arn:aws:rds:us-west-2:123456789012:db:clitestdb\",\n      \"DbPassword\": \"*****FILTERED*****\",\n      \"Address\": \"clitestdb.cdlqlk5uwd0k.us-west-2.rds.amazonaws.com\",\n      \"DbUser\": \"cliuser\",\n      \"DbInstanceIdentifier\": \"clitestdb\"\n    }\n  ]\n}\n\n\nFor more information, see Resource Management in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-service-errors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-service-errors.html",
      "command_description": "Description\n\nDescribes AWS OpsWorks Stacks service errors.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nThis call accepts only one resource-identifying parameter.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-service-errors\n[--stack-id <value>]\n[--instance-id <value>]\n[--service-error-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-id <value>]",
        "[--instance-id <value>]",
        "[--service-error-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID. If you use this parameter, DescribeServiceErrors returns descriptions of the errors associated with the specified stack.\n\n--instance-id (string)\n\nThe instance ID. If you use this parameter, DescribeServiceErrors returns descriptions of the errors associated with the specified instance.\n\n--service-error-ids (list)\n\nAn array of service error IDs. If you use this parameter, DescribeServiceErrors returns descriptions of the specified errors. Otherwise, it returns a description of every error.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nServiceErrors -> (list)\n\nAn array of ServiceError objects that describe the specified service errors.\n\n(structure)\n\nDescribes an AWS OpsWorks Stacks service error.\n\nServiceErrorId -> (string)\n\nThe error ID.\n\nStackId -> (string)\n\nThe stack ID.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nType -> (string)\n\nThe error type.\n\nMessage -> (string)\n\nA message that describes the error.\n\nCreatedAt -> (string)\n\nWhen the error occurred."
    },
    {
      "command_name": "describe-stack-provisioning-parameters",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-stack-provisioning-parameters.html",
      "command_description": "Description\n\nRequests a description of a stack’s provisioning parameters.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-stack-provisioning-parameters\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAgentInstallerUrl -> (string)\n\nThe AWS OpsWorks Stacks agent installer’s URL.\n\nParameters -> (map)\n\nAn embedded object that contains the provisioning parameters.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo return the provisioning parameters for a stack\n\nThe following describe-stack-provisioning-parameters example returns the provisioning parameters for a specified stack. Provisioning parameters include settings such as the agent installation location and public key that OpsWorks uses to manage the agent on instances in a stack.\n\naws opsworks describe-stack-provisioning-parameters \\\n    --stack-id 62744d97-6faf-4ecb-969b-a086fEXAMPLE\n\n\nOutput:\n\n{\n    \"AgentInstallerUrl\": \"https://opsworks-instance-agent-us-west-2.s3.amazonaws.com/ID_number/opsworks-agent-installer.tgz\",\n    \"Parameters\": {\n        \"agent_installer_base_url\": \"https://opsworks-instance-agent-us-west-2.s3.amazonaws.com\",\n        \"agent_installer_tgz\": \"opsworks-agent-installer.tgz\",\n        \"assets_download_bucket\": \"opsworks-instance-assets-us-west-2.s3.amazonaws.com\",\n        \"charlie_public_key\": \"-----BEGIN PUBLIC KEY-----PUBLIC_KEY_EXAMPLE\\n-----END PUBLIC KEY-----\",\n        \"instance_service_endpoint\": \"opsworks-instance-service.us-west-2.amazonaws.com\",\n        \"instance_service_port\": \"443\",\n        \"instance_service_region\": \"us-west-2\",\n        \"instance_service_ssl_verify_peer\": \"true\",\n        \"instance_service_use_ssl\": \"true\",\n        \"ops_works_endpoint\": \"opsworks.us-west-2.amazonaws.com\",\n        \"ops_works_port\": \"443\",\n        \"ops_works_region\": \"us-west-2\",\n        \"ops_works_ssl_verify_peer\": \"true\",\n        \"ops_works_use_ssl\": \"true\",\n        \"verbose\": \"false\",\n        \"wait_between_runs\": \"30\"\n    }\n}\n\n\nFor more information, see Run Stack Commands in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-stack-summary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-stack-summary.html",
      "command_description": "Description\n\nDescribes the number of layers and apps in a specified stack, and the number of instances in each state, such as running_setup or online .\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-stack-summary\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStackSummary -> (structure)\n\nA StackSummary object that contains the results.\n\nStackId -> (string)\n\nThe stack ID.\n\nName -> (string)\n\nThe stack name.\n\nArn -> (string)\n\nThe stack’s ARN.\n\nLayersCount -> (integer)\n\nThe number of layers.\n\nAppsCount -> (integer)\n\nThe number of apps.\n\nInstancesCount -> (structure)\n\nAn InstancesCount object with the number of instances in each status.\n\nAssigning -> (integer)\n\nThe number of instances in the Assigning state.\n\nBooting -> (integer)\n\nThe number of instances with booting status.\n\nConnectionLost -> (integer)\n\nThe number of instances with connection_lost status.\n\nDeregistering -> (integer)\n\nThe number of instances in the Deregistering state.\n\nOnline -> (integer)\n\nThe number of instances with online status.\n\nPending -> (integer)\n\nThe number of instances with pending status.\n\nRebooting -> (integer)\n\nThe number of instances with rebooting status.\n\nRegistered -> (integer)\n\nThe number of instances in the Registered state.\n\nRegistering -> (integer)\n\nThe number of instances in the Registering state.\n\nRequested -> (integer)\n\nThe number of instances with requested status.\n\nRunningSetup -> (integer)\n\nThe number of instances with running_setup status.\n\nSetupFailed -> (integer)\n\nThe number of instances with setup_failed status.\n\nShuttingDown -> (integer)\n\nThe number of instances with shutting_down status.\n\nStartFailed -> (integer)\n\nThe number of instances with start_failed status.\n\nStopFailed -> (integer)\n\nThe number of instances with stop_failed status.\n\nStopped -> (integer)\n\nThe number of instances with stopped status.\n\nStopping -> (integer)\n\nThe number of instances with stopping status.\n\nTerminated -> (integer)\n\nThe number of instances with terminated status.\n\nTerminating -> (integer)\n\nThe number of instances with terminating status.\n\nUnassigning -> (integer)\n\nThe number of instances in the Unassigning state.",
      "command_examples": "Examples\n\nTo describe a stack’s configuration\n\nThe following describe-stack-summary command returns a summary of the specified stack’s configuration.\n\naws opsworks --region us-east-1 describe-stack-summary --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8\n\n\nOutput:\n\n{\n  \"StackSummary\": {\n    \"StackId\": \"8c428b08-a1a1-46ce-a5f8-feddc43771b8\",\n    \"InstancesCount\": {\n      \"Booting\": 1\n    },\n    \"Name\": \"CLITest\",\n    \"AppsCount\": 1,\n    \"LayersCount\": 1,\n    \"Arn\": \"arn:aws:opsworks:us-west-2:123456789012:stack/8c428b08-a1a1-46ce-a5f8-feddc43771b8/\"\n  }\n}\n\n\nMore Information\n\nFor more information, see Stacks in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-stacks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-stacks.html",
      "command_description": "Description\n\nRequests a description of one or more stacks.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-stacks\n[--stack-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--stack-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-ids (list)\n\nAn array of stack IDs that specify the stacks to be described. If you omit this parameter, DescribeStacks returns a description of every stack.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStacks -> (list)\n\nAn array of Stack objects that describe the stacks.\n\n(structure)\n\nDescribes a stack.\n\nStackId -> (string)\n\nThe stack ID.\n\nName -> (string)\n\nThe stack name.\n\nArn -> (string)\n\nThe stack’s ARN.\n\nRegion -> (string)\n\nThe stack AWS region, such as “ap-northeast-2”. For more information about AWS regions, see Regions and Endpoints .\n\nVpcId -> (string)\n\nThe VPC ID; applicable only if the stack is running in a VPC.\n\nAttributes -> (map)\n\nThe stack’s attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nServiceRoleArn -> (string)\n\nThe stack AWS Identity and Access Management (IAM) role.\n\nDefaultInstanceProfileArn -> (string)\n\nThe ARN of an IAM profile that is the default profile for all of the stack’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\nDefaultOs -> (string)\n\nThe stack’s default operating system.\n\nHostnameTheme -> (string)\n\nThe stack host name theme, with spaces replaced by underscores.\n\nDefaultAvailabilityZone -> (string)\n\nThe stack’s default Availability Zone. For more information, see Regions and Endpoints .\n\nDefaultSubnetId -> (string)\n\nThe default subnet ID; applicable only if the stack is running in a VPC.\n\nCustomJson -> (string)\n\nA JSON object that contains user-defined attributes to be added to the stack configuration and deployment attributes. You can use custom JSON to override the corresponding default stack configuration attribute values or to pass data to recipes. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information on custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes .\n\nConfigurationManager -> (structure)\n\nThe configuration manager.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4.\n\nChefConfiguration -> (structure)\n\nA ChefConfiguration object that specifies whether to enable Berkshelf and the Berkshelf version. For more information, see Create a New Stack .\n\nManageBerkshelf -> (boolean)\n\nWhether to enable Berkshelf.\n\nBerkshelfVersion -> (string)\n\nThe Berkshelf version.\n\nUseCustomCookbooks -> (boolean)\n\nWhether the stack uses custom cookbooks.\n\nUseOpsworksSecurityGroups -> (boolean)\n\nWhether the stack automatically associates the AWS OpsWorks Stacks built-in security groups with the stack’s layers.\n\nCustomCookbooksSource -> (structure)\n\nContains the information required to retrieve an app or cookbook from a repository. For more information, see Adding Apps or Cookbooks and Recipes .\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nDefaultSshKeyName -> (string)\n\nA default Amazon EC2 key pair for the stack’s instances. You can override this value when you create or update an instance.\n\nCreatedAt -> (string)\n\nThe date when the stack was created.\n\nDefaultRootDeviceType -> (string)\n\nThe default root device type. This value is used by default for all instances in the stack, but you can override it when you create an instance. For more information, see Storage for the Root Device .\n\nAgentVersion -> (string)\n\nThe agent version. This parameter is set to LATEST for auto-update. or a version number for a fixed agent version.",
      "command_examples": "Examples\n\nTo describe stacks\n\nThe following describe-stacks command describes an account’s stacks.\n\naws opsworks --region us-east-1 describe-stacks\n\n\nOutput:\n\n{\n  \"Stacks\": [\n    {\n      \"ServiceRoleArn\": \"arn:aws:iam::444455556666:role/aws-opsworks-service-role\",\n      \"StackId\": \"aeb7523e-7c8b-49d4-b866-03aae9d4fbcb\",\n      \"DefaultRootDeviceType\": \"instance-store\",\n      \"Name\": \"TomStack-sd\",\n      \"ConfigurationManager\": {\n        \"Version\": \"11.4\",\n        \"Name\": \"Chef\"\n      },\n      \"UseCustomCookbooks\": true,\n      \"CustomJson\": \"{\\n  \\\"tomcat\\\": {\\n    \\\"base_version\\\": 7,\\n    \\\"java_opts\\\": \\\"-Djava.awt.headless=true -Xmx256m\\\"\\n  },\\n  \\\"datasources\\\": {\\n    \\\"ROOT\\\": \\\"jdbc/mydb\\\"\\n  }\\n}\",\n      \"Region\": \"us-east-1\",\n      \"DefaultInstanceProfileArn\": \"arn:aws:iam::444455556666:instance-profile/aws-opsworks-ec2-role\",\n      \"CustomCookbooksSource\": {\n        \"Url\": \"git://github.com/example-repo/tomcustom.git\",\n        \"Type\": \"git\"\n      },\n      \"DefaultAvailabilityZone\": \"us-east-1a\",\n      \"HostnameTheme\": \"Layer_Dependent\",\n      \"Attributes\": {\n        \"Color\": \"rgb(45, 114, 184)\"\n      },\n      \"DefaultOs\": \"Amazon Linux\",\n      \"CreatedAt\": \"2013-08-01T22:53:42+00:00\"\n    },\n    {\n      \"ServiceRoleArn\": \"arn:aws:iam::444455556666:role/aws-opsworks-service-role\",\n      \"StackId\": \"40738975-da59-4c5b-9789-3e422f2cf099\",\n      \"DefaultRootDeviceType\": \"instance-store\",\n      \"Name\": \"MyStack\",\n      \"ConfigurationManager\": {\n        \"Version\": \"11.4\",\n        \"Name\": \"Chef\"\n      },\n      \"UseCustomCookbooks\": false,\n      \"Region\": \"us-east-1\",\n      \"DefaultInstanceProfileArn\": \"arn:aws:iam::444455556666:instance-profile/aws-opsworks-ec2-role\",\n      \"CustomCookbooksSource\": {},\n      \"DefaultAvailabilityZone\": \"us-east-1a\",\n      \"HostnameTheme\": \"Layer_Dependent\",\n      \"Attributes\": {\n        \"Color\": \"rgb(45, 114, 184)\"\n      },\n      \"DefaultOs\": \"Amazon Linux\",\n      \"CreatedAt\": \"2013-10-25T19:24:30+00:00\"\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Stacks in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-time-based-auto-scaling",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-time-based-auto-scaling.html",
      "command_description": "Description\n\nDescribes time-based auto scaling configurations for specified instances.\n\nNote\n\nYou must specify at least one of the parameters.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-time-based-auto-scaling\n--instance-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-ids (list)\n\nAn array of instance IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTimeBasedAutoScalingConfigurations -> (list)\n\nAn array of TimeBasedAutoScalingConfiguration objects that describe the configuration for the specified instances.\n\n(structure)\n\nDescribes an instance’s time-based auto scaling configuration.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nAutoScalingSchedule -> (structure)\n\nA WeeklyAutoScalingSchedule object with the instance schedule.\n\nMonday -> (map)\n\nThe schedule for Monday.\n\nkey -> (string)\n\nvalue -> (string)\n\nTuesday -> (map)\n\nThe schedule for Tuesday.\n\nkey -> (string)\n\nvalue -> (string)\n\nWednesday -> (map)\n\nThe schedule for Wednesday.\n\nkey -> (string)\n\nvalue -> (string)\n\nThursday -> (map)\n\nThe schedule for Thursday.\n\nkey -> (string)\n\nvalue -> (string)\n\nFriday -> (map)\n\nThe schedule for Friday.\n\nkey -> (string)\n\nvalue -> (string)\n\nSaturday -> (map)\n\nThe schedule for Saturday.\n\nkey -> (string)\n\nvalue -> (string)\n\nSunday -> (map)\n\nThe schedule for Sunday.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-user-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-user-profiles.html",
      "command_description": "Description\n\nDescribe specified users.\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-user-profiles\n[--iam-user-arns <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--iam-user-arns <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--iam-user-arns (list)\n\nAn array of IAM or federated user ARNs that identify the users to be described.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUserProfiles -> (list)\n\nA Users object that describes the specified users.\n\n(structure)\n\nDescribes a user’s SSH information.\n\nIamUserArn -> (string)\n\nThe user’s IAM ARN.\n\nName -> (string)\n\nThe user’s name.\n\nSshUsername -> (string)\n\nThe user’s SSH user name.\n\nSshPublicKey -> (string)\n\nThe user’s SSH public key.\n\nAllowSelfManagement -> (boolean)\n\nWhether users can specify their own SSH public key through the My Settings page. For more information, see Managing User Permissions .",
      "command_examples": "Examples\n\nTo describe user profiles\n\nThe following describe-user-profiles command describes the account’s user profiles.\n\naws opsworks --region us-east-1 describe-user-profiles\n\n\nOutput:\n\n{\n  \"UserProfiles\": [\n    {\n      \"IamUserArn\": \"arn:aws:iam::123456789012:user/someuser\",\n      \"SshPublicKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAkOuP7i80q3Cko...\",\n      \"AllowSelfManagement\": true,\n      \"Name\": \"someuser\",\n      \"SshUsername\": \"someuser\"\n    },\n    {\n      \"IamUserArn\": \"arn:aws:iam::123456789012:user/cli-user-test\",\n      \"AllowSelfManagement\": true,\n      \"Name\": \"cli-user-test\",\n      \"SshUsername\": \"myusername\"\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Managing AWS OpsWorks Users in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "describe-volumes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/describe-volumes.html",
      "command_description": "Description\n\nDescribes an instance’s Amazon EBS volumes.\n\nNote\n\nThis call accepts only one resource-identifying parameter.\n\nRequired Permissions : To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-volumes\n[--instance-id <value>]\n[--stack-id <value>]\n[--raid-array-id <value>]\n[--volume-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--instance-id <value>]",
        "[--stack-id <value>]",
        "[--raid-array-id <value>]",
        "[--volume-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID. If you use this parameter, DescribeVolumes returns descriptions of the volumes associated with the specified instance.\n\n--stack-id (string)\n\nA stack ID. The action describes the stack’s registered Amazon EBS volumes.\n\n--raid-array-id (string)\n\nThe RAID array ID. If you use this parameter, DescribeVolumes returns descriptions of the volumes associated with the specified RAID array.\n\n--volume-ids (list)\n\nAm array of volume IDs. If you use this parameter, DescribeVolumes returns descriptions of the specified volumes. Otherwise, it returns a description of every volume.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVolumes -> (list)\n\nAn array of volume IDs.\n\n(structure)\n\nDescribes an instance’s Amazon EBS volume.\n\nVolumeId -> (string)\n\nThe volume ID.\n\nEc2VolumeId -> (string)\n\nThe Amazon EC2 volume ID.\n\nName -> (string)\n\nThe volume name.\n\nRaidArrayId -> (string)\n\nThe RAID array ID.\n\nInstanceId -> (string)\n\nThe instance ID.\n\nStatus -> (string)\n\nThe value returned by DescribeVolumes .\n\nSize -> (integer)\n\nThe volume size.\n\nDevice -> (string)\n\nThe device name.\n\nMountPoint -> (string)\n\nThe volume mount point. For example, “/mnt/disk1”.\n\nRegion -> (string)\n\nThe AWS region. For more information about AWS regions, see Regions and Endpoints .\n\nAvailabilityZone -> (string)\n\nThe volume Availability Zone. For more information, see Regions and Endpoints .\n\nVolumeType -> (string)\n\nThe volume type. For more information, see Amazon EBS Volume Types .\n\nstandard - Magnetic. Magnetic volumes must have a minimum size of 1 GiB and a maximum size of 1024 GiB.\n\nio1 - Provisioned IOPS (SSD). PIOPS volumes must have a minimum size of 4 GiB and a maximum size of 16384 GiB.\n\ngp2 - General Purpose (SSD). General purpose volumes must have a minimum size of 1 GiB and a maximum size of 16384 GiB.\n\nst1 - Throughput Optimized hard disk drive (HDD). Throughput optimized HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nsc1 - Cold HDD. Cold HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nIops -> (integer)\n\nFor PIOPS volumes, the IOPS per disk.\n\nEncrypted -> (boolean)\n\nSpecifies whether an Amazon EBS volume is encrypted. For more information, see Amazon EBS Encryption .",
      "command_examples": "Examples\n\nTo describe a stack’s volumes\n\nThe following example describes a stack’s EBS volumes.\n\naws opsworks --region us-east-1 describe-volumes --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8\n\n\nOutput:\n\n{\n  \"Volumes\": [\n    {\n      \"Status\": \"in-use\",\n      \"AvailabilityZone\": \"us-west-2a\",\n      \"Name\": \"CLITest\",\n      \"InstanceId\": \"dfe18b02-5327-493d-91a4-c5c0c448927f\",\n      \"VolumeType\": \"standard\",\n      \"VolumeId\": \"56b66fbd-e1a1-4aff-9227-70f77118d4c5\",\n      \"Device\": \"/dev/sdi\",\n      \"Ec2VolumeId\": \"vol-295c1638\",\n      \"MountPoint\": \"/mnt/myvolume\",\n      \"Size\": 1\n    }\n  ]\n}\n\n\nMore Information\n\nFor more information, see Resource Management in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "detach-elastic-load-balancer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/detach-elastic-load-balancer.html",
      "command_description": "Description\n\nDetaches a specified Elastic Load Balancing instance from its layer.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  detach-elastic-load-balancer\n--elastic-load-balancer-name <value>\n--layer-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-load-balancer-name <value>",
        "--layer-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-load-balancer-name (string)\n\nThe Elastic Load Balancing instance’s name.\n\n--layer-id (string)\n\nThe ID of the layer that the Elastic Load Balancing instance is attached to.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo detach a load balancer from its layer\n\nThe following example detaches a load balancer, identified by its name, from its layer.\n\naws opsworks --region us-east-1 detach-elastic-load-balancer --elastic-load-balancer-name Java-LB --layer-id 888c5645-09a5-4d0e-95a8-812ef1db76a4\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Elastic Load Balancing in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "disassociate-elastic-ip",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/disassociate-elastic-ip.html",
      "command_description": "Description\n\nDisassociates an Elastic IP address from its instance. The address remains registered with the stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-elastic-ip\n--elastic-ip <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-ip <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-ip (string)\n\nThe Elastic IP address.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo disassociate an Elastic IP address from an instance\n\nThe following example disassociates an Elastic IP address from a specified instance.\n\naws opsworks --region us-east-1 disassociate-elastic-ip --elastic-ip 54.148.130.96\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Resource Management in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "get-hostname-suggestion",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/get-hostname-suggestion.html",
      "command_description": "Description\n\nGets a generated host name for the specified layer, based on the current host name theme.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-hostname-suggestion\n--layer-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-id (string)\n\nThe layer ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLayerId -> (string)\n\nThe layer ID.\n\nHostname -> (string)\n\nThe generated host name.",
      "command_examples": "Examples\n\nTo get the next hostname for a layer\n\nThe following example gets the next generated hostname for a specified layer. The layer used for this example is a Java Application Server layer with one instance. The stack’s hostname theme is the default, Layer_Dependent.\n\naws opsworks --region us-east-1 get-hostname-suggestion --layer-id 888c5645-09a5-4d0e-95a8-812ef1db76a4\n\n\nOutput:\n\n{\n  \"Hostname\": \"java-app2\",\n  \"LayerId\": \"888c5645-09a5-4d0e-95a8-812ef1db76a4\"\n}\n\n\nMore Information\n\nFor more information, see Create a New Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "grant-access",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/grant-access.html",
      "command_description": "Description\n\nNote\n\nThis action can be used only with Windows stacks.\n\nGrants RDP access to a Windows instance for a specified time period.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  grant-access\n--instance-id <value>\n[--valid-for-in-minutes <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--valid-for-in-minutes <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance’s AWS OpsWorks Stacks ID.\n\n--valid-for-in-minutes (integer)\n\nThe length of time (in minutes) that the grant is valid. When the grant expires at the end of this period, the user will no longer be able to use the credentials to log in. If the user is logged in at the time, he or she automatically will be logged out.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTemporaryCredential -> (structure)\n\nA TemporaryCredential object that contains the data needed to log in to the instance by RDP clients, such as the Microsoft Remote Desktop Connection.\n\nUsername -> (string)\n\nThe user name.\n\nPassword -> (string)\n\nThe password.\n\nValidForInMinutes -> (integer)\n\nThe length of time (in minutes) that the grant is valid. When the grant expires, at the end of this period, the user will no longer be able to use the credentials to log in. If they are logged in at the time, they will be automatically logged out.\n\nInstanceId -> (string)\n\nThe instance’s AWS OpsWorks Stacks ID."
    },
    {
      "command_name": "list-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/list-tags.html",
      "command_description": "Description\n\nReturns a list of tags that are applied to the specified stack or layer.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags\n--resource-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe stack or layer’s Amazon Resource Number (ARN).\n\n--max-results (integer)\n\nDo not use. A validation exception occurs if you add a MaxResults parameter to a ListTagsRequest call.\n\n--next-token (string)\n\nDo not use. A validation exception occurs if you add a NextToken parameter to a ListTagsRequest call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nA set of key-value pairs that contain tag keys and tag values that are attached to a stack or layer.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nIf a paginated request does not return all of the remaining results, this parameter is set to a token that you can assign to the request object’s NextToken parameter to get the next set of results. If the previous paginated request returned all of the remaining results, this parameter is set to null ."
    },
    {
      "command_name": "reboot-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/reboot-instance.html",
      "command_description": "Description\n\nReboots a specified instance. For more information, see Starting, Stopping, and Rebooting Instances .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reboot-instance\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo reboot an instance\n\nThe following example reboots an instance.\n\naws opsworks --region us-east-1 reboot-instance --instance-id dfe18b02-5327-493d-91a4-c5c0c448927f\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Rebooting an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "register",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register.html",
      "command_description": "Description\n\nRegisters an EC2 instance or machine with AWS OpsWorks.\n\nRegistering a machine using this command will install the AWS OpsWorks agent on the target machine and register it with an existing OpsWorks stack.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register\n--stack-id <value>\n--infrastructure-class <value>\n[--override-hostname <value>]\n[--override-private-ip <value>]\n[--override-public-ip <value>]\n[--override-ssh <value>]\n[--ssh-username <value>]\n[--ssh-private-key <value>]\n[--local]\n[--use-instance-profile]\n[<target>]\n",
      "command_options": [
        "--stack-id <value>",
        "--infrastructure-class <value>",
        "[--override-hostname <value>]",
        "[--override-private-ip <value>]",
        "[--override-public-ip <value>]",
        "[--override-ssh <value>]",
        "[--ssh-username <value>]",
        "[--ssh-private-key <value>]",
        "[--local]",
        "[--use-instance-profile]",
        "[<target>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string) A stack ID. The instance will be registered with the given stack.\n\n--infrastructure-class (string) Specifies whether to register an EC2 instance (ec2) or an on-premises instance (on-premises).\n\n--override-hostname (string) The instance hostname. If not provided, the current hostname of the machine will be used.\n\n--override-private-ip (string) An IP address. If you set this parameter, the given IP address will be used as the private IP address within OpsWorks. Otherwise the private IP address will be determined automatically. Not to be used with EC2 instances.\n\n--override-public-ip (string) An IP address. If you set this parameter, the given IP address will be used as the public IP address within OpsWorks. Otherwise the public IP address will be determined automatically. Not to be used with EC2 instances.\n\n--override-ssh (string) If you set this parameter, the given command will be used to connect to the machine.\n\n--ssh-username (string) If provided, this username will be used to connect to the host.\n\n--ssh-private-key (string) If provided, the given private key file will be used to connect to the machine.\n\n--local (boolean) If given, instead of a remote machine, the local machine will be imported. Cannot be used together with target.\n\n--use-instance-profile (boolean) Use the instance profile instead of creating an IAM user.\n\ntarget (string) Either the EC2 instance ID or the hostname of the instance or machine to be registered with OpsWorks. Cannot be used together with –local.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo register instances with a stack\n\nThe following examples show a variety of ways to register instances with a stack that were created outside of AWS Opsworks. You can run register from the instance to be registered, or from a separate workstation. For more information, see Registering Amazon EC2 and On-premises Instances in the AWS OpsWorks User Guide.\n\nNote: For brevity, the examples omit the region argument.\n\nTo register an Amazon EC2 instance\n\nTo indicate that you are registering an EC2 instance, set the --infrastructure-class argument to ec2.\n\nThe following example registers an EC2 instance with the specified stack from a separate workstation. The instance is identified by its EC2 ID, i-12345678. The example uses the workstation’s default SSH username and attempts to log in to the instance using authentication techniques that do not require a password, such as a default private SSH key. If that fails, register queries for the password.\n\naws opsworks register --infrastructure-class=ec2 --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb i-12345678\n\n\nThe following example registers an EC2 instance with the specifed stack from a separate workstation. It uses the --ssh-username and --ssh-private-key arguments to explicitly specify the SSH username and private key file that the command uses to log into the instance. ec2-user is the standard username for Amazon Linux instances. Use ubuntu for Ubuntu instances.\n\naws opsworks register --infrastructure-class=ec2 --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --ssh-username ec2-user --ssh-private-key ssh_private_key i-12345678\n\n\nThe following example registers the EC2 instance that is running the register command. Log in to the instance with SSH and run register with the --local argument instead of an instance ID or hostname.\n\naws opsworks register --infrastructure-class ec2 --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --local\n\n\nTo register an on-premises instance\n\nTo indicate that you are registering an on-premises instance, set the --infrastructure-class argument to on-premises.\n\nThe following example registers an existing on-premises instance with a specified stack from a separate workstation. The instance is identified by its IP address, 192.0.2.3. The example uses the workstation’s default SSH username and attempts to log in to the instance using authentication techniques that do not require a password, such as a default private SSH key. If that fails, register queries for the password.\n\naws opsworks register --infrastructure-class on-premises --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb 192.0.2.3\n\n\nThe following example registers an on-premises instance with a specified stack from a separate workstation. The instance is identified by its hostname, host1. The --override-... arguments direct AWS OpsWorks to display webserver1 as the host name and 192.0.2.3 and 10.0.0.2 as the instance’s public and private IP addresses, respectively.\n\naws opsworks register --infrastructure-class on-premises --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --override-hostname webserver1 --override-public-ip 192.0.2.3 --override-private-ip 10.0.0.2 host1\n\n\nThe following example registers an on-premises instance with a specified stack from a separate workstation. The instance is identified by its IP address. register logs into the instance using the specified SSH username and private key file.\n\naws opsworks register --infrastructure-class on-premises --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --ssh-username admin --ssh-private-key ssh_private_key 192.0.2.3\n\n\nThe following example registers an existing on-premises instance with a specified stack from a separate workstation. The command logs into the instance using a custom SSH command string that specifies the SSH password and the instance’s IP address.\n\naws opsworks register --infrastructure-class on-premises --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --override-ssh \"sshpass -p 'mypassword' ssh your-user@192.0.2.3\"\n\n\nThe following example registers the on-premises instance that is running the register command. Log in to the instance with SSH and run register with the --local argument instead of an instance ID or hostname.\n\naws opsworks register --infrastructure-class on-premises --stack-id 935450cc-61e0-4b03-a3e0-160ac817d2bb --local\n\n\nOutput: The following is typical output for registering an EC2 instance.\n\nWarning: Permanently added '52.11.41.206' (ECDSA) to the list of known hosts.\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                               Dload  Upload   Total   Spent    Left  Speed\n100 6403k  100 6403k    0     0  2121k      0  0:00:03  0:00:03 --:--:-- 2121k\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Initializing AWS OpsWorks environment\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Running on Ubuntu\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Checking if OS is supported\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Running on supported OS\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Setup motd\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Executing: ln -sf --backup /etc/motd.opsworks-static /etc/motd\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Enabling multiverse repositories\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Customizing APT environment\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Installing system packages\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Executing: dpkg --configure -a\n[Tue, 24 Feb 2015 20:48:37 +0000] opsworks-init: Executing with retry: apt-get update\n[Tue, 24 Feb 2015 20:49:13 +0000] opsworks-init: Executing: apt-get install -y ruby ruby-dev libicu-dev libssl-dev libxslt-dev libxml2-dev libyaml-dev monit\n[Tue, 24 Feb 2015 20:50:13 +0000] opsworks-init: Using assets bucket from environment: 'opsworks-instance-assets-us-east-1.s3.amazonaws.com'.\n[Tue, 24 Feb 2015 20:50:13 +0000] opsworks-init: Installing Ruby for the agent\n[Tue, 24 Feb 2015 20:50:13 +0000] opsworks-init: Executing: /tmp/opsworks-agent-installer.YgGq8wF3UUre6yDy/opsworks-agent-installer/opsworks-agent/bin/installer_wrapper.sh -r -R opsworks-instance-assets-us-east-1.s3.amazonaws.com\n[Tue, 24 Feb 2015 20:50:44 +0000] opsworks-init: Starting the installer\nInstance successfully registered. Instance ID: 4d6d1710-ded9-42a1-b08e-b043ad7af1e2\nConnection to 52.11.41.206 closed.\n\n\nMore Information\n\nFor more information, see Registering an Instance with an AWS OpsWorks Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "register-ecs-cluster",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register-ecs-cluster.html",
      "command_description": "Description\n\nRegisters a specified Amazon ECS cluster with a stack. You can register only one cluster with a stack. A cluster can be registered with only one stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-ecs-cluster\n--ecs-cluster-arn <value>\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--ecs-cluster-arn <value>",
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ecs-cluster-arn (string)\n\nThe cluster’s ARN.\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEcsClusterArn -> (string)\n\nThe cluster’s ARN."
    },
    {
      "command_name": "register-elastic-ip",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register-elastic-ip.html",
      "command_description": "Description\n\nRegisters an Elastic IP address with a specified stack. An address can be registered with only one stack at a time. If the address is already registered, you must first deregister it by calling DeregisterElasticIp . For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-elastic-ip\n--elastic-ip <value>\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-ip <value>",
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-ip (string)\n\nThe Elastic IP address.\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nElasticIp -> (string)\n\nThe Elastic IP address.",
      "command_examples": "Examples\n\nTo register an Elastic IP address with a stack\n\nThe following example registers an Elastic IP address, identified by its IP address, with a specified stack.\n\nNote: The Elastic IP address must be in the same region as the stack.\n\naws opsworks register-elastic-ip --region us-east-1 --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06 --elastic-ip 54.148.130.96\n\n\nOutput\n\n{\n  \"ElasticIp\": \"54.148.130.96\"\n}\n\n\nMore Information\n\nFor more information, see Registering Elastic IP Addresses with a Stack in the OpsWorks User Guide."
    },
    {
      "command_name": "register-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register-instance.html",
      "command_description": "Description\n\nRegisters instances that were created outside of AWS OpsWorks Stacks with a specified stack.\n\nNote\n\nWe do not recommend using this action to register instances. The complete registration operation includes two tasks: installing the AWS OpsWorks Stacks agent on the instance, and registering the instance with the stack. RegisterInstance handles only the second step. You should instead use the AWS CLI register command, which performs the entire registration operation. For more information, see Registering an Instance with an AWS OpsWorks Stacks Stack .\n\nRegistered instances have the same requirements as instances that are created by using the CreateInstance API. For example, registered instances must be running a supported Linux-based operating system, and they must have a supported instance type. For more information about requirements for instances that you want to register, see Preparing the Instance .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-instance\n--stack-id <value>\n[--hostname <value>]\n[--public-ip <value>]\n[--private-ip <value>]\n[--rsa-public-key <value>]\n[--rsa-public-key-fingerprint <value>]\n[--instance-identity <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--hostname <value>]",
        "[--public-ip <value>]",
        "[--private-ip <value>]",
        "[--rsa-public-key <value>]",
        "[--rsa-public-key-fingerprint <value>]",
        "[--instance-identity <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe ID of the stack that the instance is to be registered with.\n\n--hostname (string)\n\nThe instance’s hostname.\n\n--public-ip (string)\n\nThe instance’s public IP address.\n\n--private-ip (string)\n\nThe instance’s private IP address.\n\n--rsa-public-key (string)\n\nThe instances public RSA key. This key is used to encrypt communication between the instance and the service.\n\n--rsa-public-key-fingerprint (string)\n\nThe instances public RSA key fingerprint.\n\n--instance-identity (structure)\n\nAn InstanceIdentity object that contains the instance’s identity.\n\nDocument -> (string)\n\nA JSON document that contains the metadata.\n\nSignature -> (string)\n\nA signature that can be used to verify the document’s accuracy and authenticity.\n\nShorthand Syntax:\n\nDocument=string,Signature=string\n\n\nJSON Syntax:\n\n{\n  \"Document\": \"string\",\n  \"Signature\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInstanceId -> (string)\n\nThe registered instance’s AWS OpsWorks Stacks ID."
    },
    {
      "command_name": "register-rds-db-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register-rds-db-instance.html",
      "command_description": "Description\n\nRegisters an Amazon RDS instance with a stack.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-rds-db-instance\n--stack-id <value>\n--rds-db-instance-arn <value>\n--db-user <value>\n--db-password <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "--rds-db-instance-arn <value>",
        "--db-user <value>",
        "--db-password <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--rds-db-instance-arn (string)\n\nThe Amazon RDS instance’s ARN.\n\n--db-user (string)\n\nThe database’s master user name.\n\n--db-password (string)\n\nThe database password.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo register an Amazon RDS instance with a stack\n\nThe following example registers an Amazon RDS DB instance, identified by its Amazon Resource Name (ARN), with a specified stack. It also specifies the instance’s master username and password. Note that AWS OpsWorks does not validate either of these values. If either one is incorrect, your application will not be able to connect to the database.\n\naws opsworks register-rds-db-instance --region us-east-1 --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06 --rds-db-instance-arn arn:aws:rds:us-west-2:123456789012:db:clitestdb  --db-user cliuser --db-password some23!pwd\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Registering Amazon RDS Instances with a Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "register-volume",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/register-volume.html",
      "command_description": "Description\n\nRegisters an Amazon EBS volume with a specified stack. A volume can be registered with only one stack at a time. If the volume is already registered, you must first deregister it by calling DeregisterVolume . For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-volume\n[--ec2-volume-id <value>]\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--ec2-volume-id <value>]",
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ec2-volume-id (string)\n\nThe Amazon EBS volume ID.\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nVolumeId -> (string)\n\nThe volume ID.",
      "command_examples": "Examples\n\nTo register an Amazon EBS volume with a stack\n\nThe following example registers an Amazon EBS volume, identified by its volume ID, with a specified stack.\n\naws opsworks register-volume --region us-east-1 --stack-id d72553d4-8727-448c-9b00-f024f0ba1b06 --ec-2-volume-id vol-295c1638\n\n\nOutput:\n\n{\n  \"VolumeId\": \"ee08039c-7cb7-469f-be10-40fb7f0c05e8\"\n}\n\n\nMore Information\n\nFor more information, see Registering Amazon EBS Volumes with a Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "set-load-based-auto-scaling",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/set-load-based-auto-scaling.html",
      "command_description": "Description\n\nSpecify the load-based auto scaling configuration for a specified layer. For more information, see Managing Load with Time-based and Load-based Instances .\n\nNote\n\nTo use load-based auto scaling, you must create a set of load-based auto scaling instances. Load-based auto scaling operates only on the instances from that set, so you must ensure that you have created enough instances to handle the maximum anticipated load.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-load-based-auto-scaling\n--layer-id <value>\n[--enable | --no-enable]\n[--up-scaling <value>]\n[--down-scaling <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-id <value>",
        "[--enable | --no-enable]",
        "[--up-scaling <value>]",
        "[--down-scaling <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-id (string)\n\nThe layer ID.\n\n--enable | --no-enable (boolean)\n\nEnables load-based auto scaling for the layer.\n\n--up-scaling (structure)\n\nAn AutoScalingThresholds object with the upscaling threshold configuration. If the load exceeds these thresholds for a specified amount of time, AWS OpsWorks Stacks starts a specified number of instances.\n\nInstanceCount -> (integer)\n\nThe number of instances to add or remove when the load exceeds a threshold.\n\nThresholdsWaitTime -> (integer)\n\nThe amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.\n\nIgnoreMetricsTime -> (integer)\n\nThe amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events. For example, AWS OpsWorks Stacks adds new instances following an upscaling event but the instances won’t start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks to suppress scaling events long enough to get the new instances online.\n\nCpuThreshold -> (double)\n\nThe CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.\n\nMemoryThreshold -> (double)\n\nThe memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.\n\nLoadThreshold -> (double)\n\nThe load threshold. A value of -1 disables the threshold. For more information about how load is computed, see Load (computing) .\n\nAlarms -> (list)\n\nCustom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.\n\nNote\n\nTo use custom alarms, you must update your service role to allow cloudwatch:DescribeAlarms . You can either have AWS OpsWorks Stacks update the role for you when you first use this feature or you can edit the role manually. For more information, see Allowing AWS OpsWorks Stacks to Act on Your Behalf .\n\n(string)\n\nShorthand Syntax:\n\nInstanceCount=integer,ThresholdsWaitTime=integer,IgnoreMetricsTime=integer,CpuThreshold=double,MemoryThreshold=double,LoadThreshold=double,Alarms=string,string\n\n\nJSON Syntax:\n\n{\n  \"InstanceCount\": integer,\n  \"ThresholdsWaitTime\": integer,\n  \"IgnoreMetricsTime\": integer,\n  \"CpuThreshold\": double,\n  \"MemoryThreshold\": double,\n  \"LoadThreshold\": double,\n  \"Alarms\": [\"string\", ...]\n}\n\n\n--down-scaling (structure)\n\nAn AutoScalingThresholds object with the downscaling threshold configuration. If the load falls below these thresholds for a specified amount of time, AWS OpsWorks Stacks stops a specified number of instances.\n\nInstanceCount -> (integer)\n\nThe number of instances to add or remove when the load exceeds a threshold.\n\nThresholdsWaitTime -> (integer)\n\nThe amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.\n\nIgnoreMetricsTime -> (integer)\n\nThe amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events. For example, AWS OpsWorks Stacks adds new instances following an upscaling event but the instances won’t start reducing the load until they have been booted and configured. There is no point in raising additional scaling events during that operation, which typically takes several minutes. IgnoreMetricsTime allows you to direct AWS OpsWorks Stacks to suppress scaling events long enough to get the new instances online.\n\nCpuThreshold -> (double)\n\nThe CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.\n\nMemoryThreshold -> (double)\n\nThe memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.\n\nLoadThreshold -> (double)\n\nThe load threshold. A value of -1 disables the threshold. For more information about how load is computed, see Load (computing) .\n\nAlarms -> (list)\n\nCustom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.\n\nNote\n\nTo use custom alarms, you must update your service role to allow cloudwatch:DescribeAlarms . You can either have AWS OpsWorks Stacks update the role for you when you first use this feature or you can edit the role manually. For more information, see Allowing AWS OpsWorks Stacks to Act on Your Behalf .\n\n(string)\n\nShorthand Syntax:\n\nInstanceCount=integer,ThresholdsWaitTime=integer,IgnoreMetricsTime=integer,CpuThreshold=double,MemoryThreshold=double,LoadThreshold=double,Alarms=string,string\n\n\nJSON Syntax:\n\n{\n  \"InstanceCount\": integer,\n  \"ThresholdsWaitTime\": integer,\n  \"IgnoreMetricsTime\": integer,\n  \"CpuThreshold\": double,\n  \"MemoryThreshold\": double,\n  \"LoadThreshold\": double,\n  \"Alarms\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set the load-based scaling configuration for a layer\n\nThe following example enables load-based scaling for a specified layer and sets the configuration for that layer. You must use create-instance to add load-based instances to the layer.\n\naws opsworks --region us-east-1 set-load-based-auto-scaling --layer-id 523569ae-2faf-47ac-b39e-f4c4b381f36d --enable --up-scaling file://upscale.json --down-scaling file://downscale.json\n\n\nThe example puts the upscaling threshold settings in a separate file in the working directory named upscale.json, which contains the following.\n\n{\n  \"InstanceCount\": 2,\n  \"ThresholdsWaitTime\": 3,\n  \"IgnoreMetricsTime\": 3,\n  \"CpuThreshold\": 85,\n  \"MemoryThreshold\": 85,\n  \"LoadThreshold\": 85\n}\n\n\nThe example puts the downscaling threshold settings in a separate file in the working directory named downscale.json, which contains the following.\n\n{\n\"InstanceCount\": 2,\n\"ThresholdsWaitTime\": 3,\n\"IgnoreMetricsTime\": 3,\n\"CpuThreshold\": 35,\n\"MemoryThreshold\": 30,\n\"LoadThreshold\": 30\n}\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Using Automatic Load-based Scaling in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "set-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/set-permission.html",
      "command_description": "Description\n\nSpecifies a user’s permissions. For more information, see Security and Permissions .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-permission\n--stack-id <value>\n--iam-user-arn <value>\n[--allow-ssh | --no-allow-ssh]\n[--allow-sudo | --no-allow-sudo]\n[--level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "--iam-user-arn <value>",
        "[--allow-ssh | --no-allow-ssh]",
        "[--allow-sudo | --no-allow-sudo]",
        "[--level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--iam-user-arn (string)\n\nThe user’s IAM ARN. This can also be a federated user’s ARN.\n\n--allow-ssh | --no-allow-ssh (boolean)\n\nThe user is allowed to use SSH to communicate with the instance.\n\n--allow-sudo | --no-allow-sudo (boolean)\n\nThe user is allowed to use sudo to elevate privileges.\n\n--level (string)\n\nThe user’s permission level, which must be set to one of the following strings. You cannot set your own permissions level.\n\ndeny\n\nshow\n\ndeploy\n\nmanage\n\niam_only\n\nFor more information about the permissions associated with these levels, see Managing User Permissions .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo grant per-stack AWS OpsWorks permission levels\n\nWhen you import an AWS Identity and Access Management (IAM) user into AWS OpsWorks by calling create-user-profile, the user has only those permissions that are granted by the attached IAM policies. You can grant AWS OpsWorks permissions by modifying a user’s policies. However, it is often easier to import a user and then use the set-permission command to grant the user one of the standard permission levels for each stack to which the user will need access.\n\nThe following example grants permission for the specified stack for a user, who is identified by Amazon Resource Name (ARN). The example grants the user a Manage permissions level, with sudo and SSH privileges on the stack’s instances.\n\naws opsworks set-permission --region us-east-1 --stack-id 71c7ca72-55ae-4b6a-8ee1-a8dcded3fa0f --level manage  --iam-user-arn arn:aws:iam::123456789102:user/cli-user-test --allow-ssh --allow-sudo\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Granting AWS OpsWorks Users Per-Stack Permissions in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "set-time-based-auto-scaling",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/set-time-based-auto-scaling.html",
      "command_description": "Description\n\nSpecify the time-based auto scaling configuration for a specified instance. For more information, see Managing Load with Time-based and Load-based Instances .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  set-time-based-auto-scaling\n--instance-id <value>\n[--auto-scaling-schedule <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--auto-scaling-schedule <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--auto-scaling-schedule (structure)\n\nAn AutoScalingSchedule with the instance schedule.\n\nMonday -> (map)\n\nThe schedule for Monday.\n\nkey -> (string)\n\nvalue -> (string)\n\nTuesday -> (map)\n\nThe schedule for Tuesday.\n\nkey -> (string)\n\nvalue -> (string)\n\nWednesday -> (map)\n\nThe schedule for Wednesday.\n\nkey -> (string)\n\nvalue -> (string)\n\nThursday -> (map)\n\nThe schedule for Thursday.\n\nkey -> (string)\n\nvalue -> (string)\n\nFriday -> (map)\n\nThe schedule for Friday.\n\nkey -> (string)\n\nvalue -> (string)\n\nSaturday -> (map)\n\nThe schedule for Saturday.\n\nkey -> (string)\n\nvalue -> (string)\n\nSunday -> (map)\n\nThe schedule for Sunday.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nMonday={KeyName1=string,KeyName2=string},Tuesday={KeyName1=string,KeyName2=string},Wednesday={KeyName1=string,KeyName2=string},Thursday={KeyName1=string,KeyName2=string},Friday={KeyName1=string,KeyName2=string},Saturday={KeyName1=string,KeyName2=string},Sunday={KeyName1=string,KeyName2=string}\n\n\nJSON Syntax:\n\n{\n  \"Monday\": {\"string\": \"string\"\n    ...},\n  \"Tuesday\": {\"string\": \"string\"\n    ...},\n  \"Wednesday\": {\"string\": \"string\"\n    ...},\n  \"Thursday\": {\"string\": \"string\"\n    ...},\n  \"Friday\": {\"string\": \"string\"\n    ...},\n  \"Saturday\": {\"string\": \"string\"\n    ...},\n  \"Sunday\": {\"string\": \"string\"\n    ...}\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo set the time-based scaling configuration for a layer\n\nThe following example sets the time-based configuration for a specified instance. You must first use create-instance to add the instance to the layer.\n\naws opsworks --region us-east-1 set-time-based-auto-scaling --instance-id 69b6237c-08c0-4edb-a6af-78f3d01cedf2 --auto-scaling-schedule file://schedule.json\n\n\nThe example puts the schedule in a separate file in the working directory named schedule.json. For this example, the instance is on for a few hours around midday UTC (Coordinated Universal Time) on Monday and Tuesday.\n\n{\n  \"Monday\": {\n    \"10\": \"on\",\n    \"11\": \"on\",\n    \"12\": \"on\",\n    \"13\": \"on\"\n  },\n  \"Tuesday\": {\n    \"10\": \"on\",\n    \"11\": \"on\",\n    \"12\": \"on\",\n    \"13\": \"on\"\n  }\n}\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Using Automatic Time-based Scaling in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "start-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/start-instance.html",
      "command_description": "Description\n\nStarts a specified instance. For more information, see Starting, Stopping, and Rebooting Instances .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-instance\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo start an instance\n\nThe following start-instance command starts a specified 24/7 instance.\n\naws opsworks start-instance --instance-id f705ee48-9000-4890-8bd3-20eb05825aaf\n\n\nOutput: None. Use describe-instances to check the instance’s status.\n\nTip You can start every offline instance in a stack with one command by calling start-stack.\n\nMore Information\n\nFor more information, see Manually Starting, Stopping, and Rebooting 24/7 Instances in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "start-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/start-stack.html",
      "command_description": "Description\n\nStarts a stack’s instances.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-stack\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo start a stack’s instances\n\nThe following example starts all of a stack’s 24/7 instances. To start a particular instance, use start-instance.\n\naws opsworks --region us-east-1 start-stack --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Starting an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "stop-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/stop-instance.html",
      "command_description": "Description\n\nStops a specified instance. When you stop a standard instance, the data disappears and must be reinstalled when you restart the instance. You can stop an Amazon EBS-backed instance without losing data. For more information, see Starting, Stopping, and Rebooting Instances .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-instance\n--instance-id <value>\n[--force | --no-force]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--force | --no-force]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--force | --no-force (boolean)\n\nSpecifies whether to force an instance to stop. If the instance’s root device type is ebs , or EBS-backed, adding the Force parameter to the StopInstances API call disassociates the AWS OpsWorks Stacks instance from EC2, and forces deletion of only the OpsWorks Stacks instance. You must also delete the formerly-associated instance in EC2 after troubleshooting and replacing the AWS OpsWorks Stacks instance with a new one.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo stop an instance\n\nThe following example stops a specified instance, which is identified by its instance ID. You can obtain an instance ID by going to the instance’s details page on the AWS OpsWorks console or by running the describe-instances command.\n\naws opsworks stop-instance --region us-east-1 --instance-id 3a21cfac-4a1f-4ce2-a921-b2cfba6f7771\n\n\nYou can restart a stopped instance by calling start-instance or by deleting the instance by calling delete-instance.\n\nOutput: None.\n\nMore Information\n\nFor more information, see Stopping an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "stop-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/stop-stack.html",
      "command_description": "Description\n\nStops a specified stack.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-stack\n--stack-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo stop a stack’s instances\n\nThe following example stops all of a stack’s 24/7 instances. To stop a particular instance, use stop-instance.\n\naws opsworks --region us-east-1 stop-stack --stack-id 8c428b08-a1a1-46ce-a5f8-feddc43771b8\n\n\nOutput: No output.\n\nMore Information\n\nFor more information, see Stopping an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/tag-resource.html",
      "command_description": "Description\n\nApply cost-allocation tags to a specified stack or layer in AWS OpsWorks Stacks. For more information about how tagging works, see Tags in the AWS OpsWorks User Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe stack or layer’s Amazon Resource Number (ARN).\n\n--tags (map)\n\nA map that contains tag keys and tag values that are attached to a stack or layer.\n\nThe key cannot be empty.\n\nThe key can be a maximum of 127 characters, and can contain only Unicode letters, numbers, or separators, or the following special characters: + - = . _ : /\n\nThe value can be a maximum 255 characters, and contain only Unicode letters, numbers, or separators, or the following special characters: + - = . _ : /\n\nLeading and trailing white spaces are trimmed from both the key and value.\n\nA maximum of 40 tags is allowed for any resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "unassign-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/unassign-instance.html",
      "command_description": "Description\n\nUnassigns a registered instance from all layers that are using the instance. The instance remains in the stack as an unassigned instance, and can be assigned to another layer as needed. You cannot use this action with instances that were created with AWS OpsWorks Stacks.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  unassign-instance\n--instance-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo unassign a registered instance from its layers\n\nThe following unassign-instance command unassigns an instance from its attached layers.\n\naws opsworks --region us-east-1 unassign-instance --instance-id 4d6d1710-ded9-42a1-b08e-b043ad7af1e2\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Unassigning a Registered Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "unassign-volume",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/unassign-volume.html",
      "command_description": "Description\n\nUnassigns an assigned Amazon EBS volume. The volume remains registered with the stack. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  unassign-volume\n--volume-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--volume-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--volume-id (string)\n\nThe volume ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo unassign a volume from its instance\n\nThe following example unassigns a registered Amazon Elastic Block Store (Amazon EBS) volume from its instance. The volume is identified by its volume ID, which is the GUID that AWS OpsWorks assigns when you register the volume with a stack, not the Amazon Elastic Compute Cloud (Amazon EC2) volume ID.\n\naws opsworks --region us-east-1 unassign-volume --volume-id 8430177d-52b7-4948-9c62-e195af4703df\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Unassigning Amazon EBS Volumes in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from a specified stack or layer.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe stack or layer’s Amazon Resource Number (ARN).\n\n--tag-keys (list)\n\nA list of the keys of tags to be removed from a stack or layer.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-app",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-app.html",
      "command_description": "Description\n\nUpdates a specified app.\n\nRequired Permissions : To use this action, an IAM user must have a Deploy or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-app\n--app-id <value>\n[--name <value>]\n[--description <value>]\n[--data-sources <value>]\n[--type <value>]\n[--app-source <value>]\n[--domains <value>]\n[--enable-ssl | --no-enable-ssl]\n[--ssl-configuration <value>]\n[--attributes <value>]\n[--environment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--app-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--data-sources <value>]",
        "[--type <value>]",
        "[--app-source <value>]",
        "[--domains <value>]",
        "[--enable-ssl | --no-enable-ssl]",
        "[--ssl-configuration <value>]",
        "[--attributes <value>]",
        "[--environment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--app-id (string)\n\nThe app ID.\n\n--name (string)\n\nThe app name.\n\n--description (string)\n\nA description of the app.\n\n--data-sources (list)\n\nThe app’s data sources.\n\n(structure)\n\nDescribes an app’s data source.\n\nType -> (string)\n\nThe data source’s type, AutoSelectOpsworksMysqlInstance , OpsworksMysqlInstance , RdsDbInstance , or None .\n\nArn -> (string)\n\nThe data source’s ARN.\n\nDatabaseName -> (string)\n\nThe database name.\n\nShorthand Syntax:\n\nType=string,Arn=string,DatabaseName=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"string\",\n    \"Arn\": \"string\",\n    \"DatabaseName\": \"string\"\n  }\n  ...\n]\n\n\n--type (string)\n\nThe app type.\n\nPossible values:\n\naws-flow-ruby\n\njava\n\nrails\n\nphp\n\nnodejs\n\nstatic\n\nother\n\n--app-source (structure)\n\nA Source object that specifies the app repository.\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nShorthand Syntax:\n\nType=string,Url=string,Username=string,Password=string,SshKey=string,Revision=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"git\"|\"svn\"|\"archive\"|\"s3\",\n  \"Url\": \"string\",\n  \"Username\": \"string\",\n  \"Password\": \"string\",\n  \"SshKey\": \"string\",\n  \"Revision\": \"string\"\n}\n\n\n--domains (list)\n\nThe app’s virtual host settings, with multiple domains separated by commas. For example: 'www.example.com, example.com'\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--enable-ssl | --no-enable-ssl (boolean)\n\nWhether SSL is enabled for the app.\n\n--ssl-configuration (structure)\n\nAn SslConfiguration object with the SSL configuration.\n\nCertificate -> (string)\n\nThe contents of the certificate’s domain.crt file.\n\nPrivateKey -> (string)\n\nThe private key; the contents of the certificate’s domain.kex file.\n\nChain -> (string)\n\nOptional. Can be used to specify an intermediate certificate authority key or client authentication.\n\nShorthand Syntax:\n\nCertificate=string,PrivateKey=string,Chain=string\n\n\nJSON Syntax:\n\n{\n  \"Certificate\": \"string\",\n  \"PrivateKey\": \"string\",\n  \"Chain\": \"string\"\n}\n\n\n--attributes (map)\n\nOne or more user-defined key/value pairs to be added to the stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  DocumentRoot\n  RailsEnv\n  AutoBundleOnDeploy\n  AwsFlowRubySettings\n\n\nJSON Syntax:\n\n{\"DocumentRoot\"|\"RailsEnv\"|\"AutoBundleOnDeploy\"|\"AwsFlowRubySettings\": \"string\"\n  ...}\n\n\n--environment (list)\n\nAn array of EnvironmentVariable objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instances.For more information, see Environment Variables .\n\nThere is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variables’ names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases. Exceeding it will cause an exception with the message, “Environment: is too large (maximum is 20 KB).”\n\nNote\n\nIf you have specified one or more environment variables, you cannot modify the stack’s Chef version.\n\n(structure)\n\nRepresents an app’s environment variable.\n\nKey -> (string)\n\n(Required) The environment variable’s name, which can consist of up to 64 characters and must be specified. The name can contain upper- and lowercase letters, numbers, and underscores (_), but it must start with a letter or underscore.\n\nValue -> (string)\n\n(Optional) The environment variable’s value, which can be left empty. If you specify a value, it can contain up to 256 characters, which must all be printable.\n\nSecure -> (boolean)\n\n(Optional) Whether the variable’s value will be returned by the DescribeApps action. To conceal an environment variable’s value, set Secure to true . DescribeApps then returns *****FILTERED***** instead of the actual value. The default value for Secure is false .\n\nShorthand Syntax:\n\nKey=string,Value=string,Secure=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\",\n    \"Secure\": true|false\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update an app\n\nThe following example updates a specified app to change its name.\n\naws opsworks --region us-east-1 update-app --app-id 26a61ead-d201-47e3-b55c-2a7c666942f8 --name NewAppName\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Editing Apps in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-elastic-ip",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-elastic-ip.html",
      "command_description": "Description\n\nUpdates a registered Elastic IP address’s name. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-elastic-ip\n--elastic-ip <value>\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--elastic-ip <value>",
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--elastic-ip (string)\n\nThe IP address for which you want to update the name.\n\n--name (string)\n\nThe new name.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update an Elastic IP address name\n\nThe following example updates the name of a specified Elastic IP address.\n\naws opsworks --region us-east-1 update-elastic-ip --elastic-ip 54.148.130.96 --name NewIPName\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Resource Management in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-instance.html",
      "command_description": "Description\n\nUpdates a specified instance.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-instance\n--instance-id <value>\n[--layer-ids <value>]\n[--instance-type <value>]\n[--auto-scaling-type <value>]\n[--hostname <value>]\n[--os <value>]\n[--ami-id <value>]\n[--ssh-key-name <value>]\n[--architecture <value>]\n[--install-updates-on-boot | --no-install-updates-on-boot]\n[--ebs-optimized | --no-ebs-optimized]\n[--agent-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--instance-id <value>",
        "[--layer-ids <value>]",
        "[--instance-type <value>]",
        "[--auto-scaling-type <value>]",
        "[--hostname <value>]",
        "[--os <value>]",
        "[--ami-id <value>]",
        "[--ssh-key-name <value>]",
        "[--architecture <value>]",
        "[--install-updates-on-boot | --no-install-updates-on-boot]",
        "[--ebs-optimized | --no-ebs-optimized]",
        "[--agent-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--instance-id (string)\n\nThe instance ID.\n\n--layer-ids (list)\n\nThe instance’s layer IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--instance-type (string)\n\nThe instance type, such as t2.micro . For a list of supported instance types, open the stack in the console, choose Instances , and choose + Instance . The Size list contains the currently supported types. For more information, see Instance Families and Types . The parameter values that you use to specify the various types are in the API Name column of the Available Instance Types table.\n\n--auto-scaling-type (string)\n\nFor load-based or time-based instances, the type. Windows stacks can use only time-based instances.\n\nPossible values:\n\nload\n\ntimer\n\n--hostname (string)\n\nThe instance host name.\n\n--os (string)\n\nThe instance’s operating system, which must be set to one of the following. You cannot update an instance that is using a custom AMI.\n\nA supported Linux operating system: An Amazon Linux version, such as Amazon Linux 2018.03 , Amazon Linux 2017.09 , Amazon Linux 2017.03 , Amazon Linux 2016.09 , Amazon Linux 2016.03 , Amazon Linux 2015.09 , or Amazon Linux 2015.03 .\n\nA supported Ubuntu operating system, such as Ubuntu 16.04 LTS , Ubuntu 14.04 LTS , or Ubuntu 12.04 LTS .\n\nCentOS Linux 7\n\nRed Hat Enterprise Linux 7\n\nA supported Windows operating system, such as Microsoft Windows Server 2012 R2 Base , Microsoft Windows Server 2012 R2 with SQL Server Express , Microsoft Windows Server 2012 R2 with SQL Server Standard , or Microsoft Windows Server 2012 R2 with SQL Server Web .\n\nFor more information about supported operating systems, see AWS OpsWorks Stacks Operating Systems .\n\nThe default option is the current Amazon Linux version. If you set this parameter to Custom , you must use the AmiId parameter to specify the custom AMI that you want to use. For more information about supported operating systems, see Operating Systems . For more information about how to use custom AMIs with OpsWorks, see Using Custom AMIs .\n\nNote\n\nYou can specify a different Linux operating system for the updated stack, but you cannot change from Linux to Windows or Windows to Linux.\n\n--ami-id (string)\n\nThe ID of the AMI that was used to create the instance. The value of this parameter must be the same AMI ID that the instance is already using. You cannot apply a new AMI to an instance by running UpdateInstance. UpdateInstance does not work on instances that are using custom AMIs.\n\n--ssh-key-name (string)\n\nThe instance’s Amazon EC2 key name.\n\n--architecture (string)\n\nThe instance architecture. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see Instance Families and Types .\n\nPossible values:\n\nx86_64\n\ni386\n\n--install-updates-on-boot | --no-install-updates-on-boot (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . To control when updates are installed, set this value to false . You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or by manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nWe strongly recommend using the default value of true , to ensure that your instances have the latest security updates.\n\n--ebs-optimized | --no-ebs-optimized (boolean)\n\nThis property cannot be updated.\n\n--agent-version (string)\n\nThe default AWS OpsWorks Stacks agent version. You have the following options:\n\nINHERIT - Use the stack’s default agent version setting.\n\nversion_number - Use the specified agent version. This value overrides the stack’s default setting. To update the agent version, you must edit the instance configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the instance.\n\nThe default setting is INHERIT . To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions .\n\nAgentVersion cannot be set to Chef 12.2.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update an instance\n\nThe following example updates a specified instance’s type.\n\naws opsworks --region us-east-1 update-instance --instance-id dfe18b02-5327-493d-91a4-c5c0c448927f --instance-type c3.xlarge\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Editing the Instance Configuration in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-layer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-layer.html",
      "command_description": "Description\n\nUpdates a specified layer.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-layer\n--layer-id <value>\n[--name <value>]\n[--shortname <value>]\n[--attributes <value>]\n[--cloud-watch-logs-configuration <value>]\n[--custom-instance-profile-arn <value>]\n[--custom-json <value>]\n[--custom-security-group-ids <value>]\n[--packages <value>]\n[--volume-configurations <value>]\n[--enable-auto-healing | --no-enable-auto-healing]\n[--auto-assign-elastic-ips | --no-auto-assign-elastic-ips]\n[--auto-assign-public-ips | --no-auto-assign-public-ips]\n[--custom-recipes <value>]\n[--install-updates-on-boot | --no-install-updates-on-boot]\n[--use-ebs-optimized-instances | --no-use-ebs-optimized-instances]\n[--lifecycle-event-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--layer-id <value>",
        "[--name <value>]",
        "[--shortname <value>]",
        "[--attributes <value>]",
        "[--cloud-watch-logs-configuration <value>]",
        "[--custom-instance-profile-arn <value>]",
        "[--custom-json <value>]",
        "[--custom-security-group-ids <value>]",
        "[--packages <value>]",
        "[--volume-configurations <value>]",
        "[--enable-auto-healing | --no-enable-auto-healing]",
        "[--auto-assign-elastic-ips | --no-auto-assign-elastic-ips]",
        "[--auto-assign-public-ips | --no-auto-assign-public-ips]",
        "[--custom-recipes <value>]",
        "[--install-updates-on-boot | --no-install-updates-on-boot]",
        "[--use-ebs-optimized-instances | --no-use-ebs-optimized-instances]",
        "[--lifecycle-event-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--layer-id (string)\n\nThe layer ID.\n\n--name (string)\n\nThe layer name, which is used by the console.\n\n--shortname (string)\n\nFor custom layers only, use this parameter to specify the layer’s short name, which is used internally by AWS OpsWorks Stacks and by Chef. The short name is also used as the name for the directory where your app files are installed. It can have a maximum of 200 characters and must be in the following format: /A[a-z0-9-_.]+Z/.\n\nThe built-in layers’ short names are defined by AWS OpsWorks Stacks. For more information, see the Layer Reference\n\n--attributes (map)\n\nOne or more user-defined key/value pairs to be added to the stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  EcsClusterArn\n  EnableHaproxyStats\n  HaproxyStatsUrl\n  HaproxyStatsUser\n  HaproxyStatsPassword\n  HaproxyHealthCheckUrl\n  HaproxyHealthCheckMethod\n  MysqlRootPassword\n  MysqlRootPasswordUbiquitous\n  GangliaUrl\n  GangliaUser\n  GangliaPassword\n  MemcachedMemory\n  NodejsVersion\n  RubyVersion\n  RubygemsVersion\n  ManageBundler\n  BundlerVersion\n  RailsStack\n  PassengerVersion\n  Jvm\n  JvmVersion\n  JvmOptions\n  JavaAppServer\n  JavaAppServerVersion\n\n\nJSON Syntax:\n\n{\"EcsClusterArn\"|\"EnableHaproxyStats\"|\"HaproxyStatsUrl\"|\"HaproxyStatsUser\"|\"HaproxyStatsPassword\"|\"HaproxyHealthCheckUrl\"|\"HaproxyHealthCheckMethod\"|\"MysqlRootPassword\"|\"MysqlRootPasswordUbiquitous\"|\"GangliaUrl\"|\"GangliaUser\"|\"GangliaPassword\"|\"MemcachedMemory\"|\"NodejsVersion\"|\"RubyVersion\"|\"RubygemsVersion\"|\"ManageBundler\"|\"BundlerVersion\"|\"RailsStack\"|\"PassengerVersion\"|\"Jvm\"|\"JvmVersion\"|\"JvmOptions\"|\"JavaAppServer\"|\"JavaAppServerVersion\": \"string\"\n  ...}\n\n\n--cloud-watch-logs-configuration (structure)\n\nSpecifies CloudWatch Logs configuration options for the layer. For more information, see CloudWatchLogsLogStream .\n\nEnabled -> (boolean)\n\nWhether CloudWatch Logs is enabled for a layer.\n\nLogStreams -> (list)\n\nA list of configuration options for CloudWatch Logs.\n\n(structure)\n\nDescribes the Amazon CloudWatch logs configuration for a layer. For detailed information about members of this data type, see the CloudWatch Logs Agent Reference .\n\nLogGroupName -> (string)\n\nSpecifies the destination log group. A log group is created automatically if it doesn’t already exist. Log group names can be between 1 and 512 characters long. Allowed characters include a-z, A-Z, 0-9, ‘_’ (underscore), ‘-‘ (hyphen), ‘/’ (forward slash), and ‘.’ (period).\n\nDatetimeFormat -> (string)\n\nSpecifies how the time stamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference .\n\nTimeZone -> (string)\n\nSpecifies the time zone of log event time stamps.\n\nFile -> (string)\n\nSpecifies log files that you want to push to CloudWatch Logs.\n\nFile can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log* ). Only the latest file is pushed to CloudWatch Logs, based on file modification time. We recommend that you use wild card characters to specify a series of files of the same type, such as access_log.2014-06-01-01 , access_log.2014-06-01-02 , and so on by using a pattern like access_log.* . Don’t use a wildcard to match multiple file types, such as access_log_80 and access_log_443 . To specify multiple, different file types, add another log stream entry to the configuration file, so that each log file type is stored in a different log group.\n\nZipped files are not supported.\n\nFileFingerprintLines -> (string)\n\nSpecifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as ‘1’, ‘2-5’. The default value is ‘1’, meaning the first line is used to calculate the fingerprint. Fingerprint lines are not sent to CloudWatch Logs unless all specified lines are available.\n\nMultiLineStartPattern -> (string)\n\nSpecifies the pattern for identifying the start of a log message.\n\nInitialPosition -> (string)\n\nSpecifies where to start to read data (start_of_file or end_of_file). The default is start_of_file. This setting is only used if there is no state persisted for that log stream.\n\nEncoding -> (string)\n\nSpecifies the encoding of the log file so that the file can be read correctly. The default is utf_8 . Encodings supported by Python codecs.decode() can be used here.\n\nBufferDuration -> (integer)\n\nSpecifies the time duration for the batching of log events. The minimum value is 5000ms and default value is 5000ms.\n\nBatchCount -> (integer)\n\nSpecifies the max number of log events in a batch, up to 10000. The default value is 1000.\n\nBatchSize -> (integer)\n\nSpecifies the maximum size of log events in a batch, in bytes, up to 1048576 bytes. The default value is 32768 bytes. This size is calculated as the sum of all event messages in UTF-8, plus 26 bytes for each log event.\n\nShorthand Syntax:\n\nEnabled=boolean,LogStreams=[{LogGroupName=string,DatetimeFormat=string,TimeZone=string,File=string,FileFingerprintLines=string,MultiLineStartPattern=string,InitialPosition=string,Encoding=string,BufferDuration=integer,BatchCount=integer,BatchSize=integer},{LogGroupName=string,DatetimeFormat=string,TimeZone=string,File=string,FileFingerprintLines=string,MultiLineStartPattern=string,InitialPosition=string,Encoding=string,BufferDuration=integer,BatchCount=integer,BatchSize=integer}]\n\n\nJSON Syntax:\n\n{\n  \"Enabled\": true|false,\n  \"LogStreams\": [\n    {\n      \"LogGroupName\": \"string\",\n      \"DatetimeFormat\": \"string\",\n      \"TimeZone\": \"LOCAL\"|\"UTC\",\n      \"File\": \"string\",\n      \"FileFingerprintLines\": \"string\",\n      \"MultiLineStartPattern\": \"string\",\n      \"InitialPosition\": \"start_of_file\"|\"end_of_file\",\n      \"Encoding\": \"ascii\"|\"big5\"|\"big5hkscs\"|\"cp037\"|\"cp424\"|\"cp437\"|\"cp500\"|\"cp720\"|\"cp737\"|\"cp775\"|\"cp850\"|\"cp852\"|\"cp855\"|\"cp856\"|\"cp857\"|\"cp858\"|\"cp860\"|\"cp861\"|\"cp862\"|\"cp863\"|\"cp864\"|\"cp865\"|\"cp866\"|\"cp869\"|\"cp874\"|\"cp875\"|\"cp932\"|\"cp949\"|\"cp950\"|\"cp1006\"|\"cp1026\"|\"cp1140\"|\"cp1250\"|\"cp1251\"|\"cp1252\"|\"cp1253\"|\"cp1254\"|\"cp1255\"|\"cp1256\"|\"cp1257\"|\"cp1258\"|\"euc_jp\"|\"euc_jis_2004\"|\"euc_jisx0213\"|\"euc_kr\"|\"gb2312\"|\"gbk\"|\"gb18030\"|\"hz\"|\"iso2022_jp\"|\"iso2022_jp_1\"|\"iso2022_jp_2\"|\"iso2022_jp_2004\"|\"iso2022_jp_3\"|\"iso2022_jp_ext\"|\"iso2022_kr\"|\"latin_1\"|\"iso8859_2\"|\"iso8859_3\"|\"iso8859_4\"|\"iso8859_5\"|\"iso8859_6\"|\"iso8859_7\"|\"iso8859_8\"|\"iso8859_9\"|\"iso8859_10\"|\"iso8859_13\"|\"iso8859_14\"|\"iso8859_15\"|\"iso8859_16\"|\"johab\"|\"koi8_r\"|\"koi8_u\"|\"mac_cyrillic\"|\"mac_greek\"|\"mac_iceland\"|\"mac_latin2\"|\"mac_roman\"|\"mac_turkish\"|\"ptcp154\"|\"shift_jis\"|\"shift_jis_2004\"|\"shift_jisx0213\"|\"utf_32\"|\"utf_32_be\"|\"utf_32_le\"|\"utf_16\"|\"utf_16_be\"|\"utf_16_le\"|\"utf_7\"|\"utf_8\"|\"utf_8_sig\",\n      \"BufferDuration\": integer,\n      \"BatchCount\": integer,\n      \"BatchSize\": integer\n    }\n    ...\n  ]\n}\n\n\n--custom-instance-profile-arn (string)\n\nThe ARN of an IAM profile to be used for all of the layer’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\n--custom-json (string)\n\nA JSON-formatted string containing custom stack configuration and deployment attributes to be installed on the layer’s instances. For more information, see Using Custom JSON .\n\n--custom-security-group-ids (list)\n\nAn array containing the layer’s custom security group IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--packages (list)\n\nAn array of Package objects that describe the layer’s packages.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--volume-configurations (list)\n\nA VolumeConfigurations object that describes the layer’s Amazon EBS volumes.\n\n(structure)\n\nDescribes an Amazon EBS volume configuration.\n\nMountPoint -> (string)\n\nThe volume mount point. For example “/dev/sdh”.\n\nRaidLevel -> (integer)\n\nThe volume RAID level .\n\nNumberOfDisks -> (integer)\n\nThe number of disks in the volume.\n\nSize -> (integer)\n\nThe volume size.\n\nVolumeType -> (string)\n\nThe volume type. For more information, see Amazon EBS Volume Types .\n\nstandard - Magnetic. Magnetic volumes must have a minimum size of 1 GiB and a maximum size of 1024 GiB.\n\nio1 - Provisioned IOPS (SSD). PIOPS volumes must have a minimum size of 4 GiB and a maximum size of 16384 GiB.\n\ngp2 - General Purpose (SSD). General purpose volumes must have a minimum size of 1 GiB and a maximum size of 16384 GiB.\n\nst1 - Throughput Optimized hard disk drive (HDD). Throughput optimized HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nsc1 - Cold HDD. Cold HDD volumes must have a minimum size of 500 GiB and a maximum size of 16384 GiB.\n\nIops -> (integer)\n\nFor PIOPS volumes, the IOPS per disk.\n\nEncrypted -> (boolean)\n\nSpecifies whether an Amazon EBS volume is encrypted. For more information, see Amazon EBS Encryption .\n\nShorthand Syntax:\n\nMountPoint=string,RaidLevel=integer,NumberOfDisks=integer,Size=integer,VolumeType=string,Iops=integer,Encrypted=boolean ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"MountPoint\": \"string\",\n    \"RaidLevel\": integer,\n    \"NumberOfDisks\": integer,\n    \"Size\": integer,\n    \"VolumeType\": \"string\",\n    \"Iops\": integer,\n    \"Encrypted\": true|false\n  }\n  ...\n]\n\n\n--enable-auto-healing | --no-enable-auto-healing (boolean)\n\nWhether to disable auto healing for the layer.\n\n--auto-assign-elastic-ips | --no-auto-assign-elastic-ips (boolean)\n\nWhether to automatically assign an Elastic IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\n--auto-assign-public-ips | --no-auto-assign-public-ips (boolean)\n\nFor stacks that are running in a VPC, whether to automatically assign a public IP address to the layer’s instances. For more information, see How to Edit a Layer .\n\n--custom-recipes (structure)\n\nA LayerCustomRecipes object that specifies the layer’s custom recipes.\n\nSetup -> (list)\n\nAn array of custom recipe names to be run following a setup event.\n\n(string)\n\nConfigure -> (list)\n\nAn array of custom recipe names to be run following a configure event.\n\n(string)\n\nDeploy -> (list)\n\nAn array of custom recipe names to be run following a deploy event.\n\n(string)\n\nUndeploy -> (list)\n\nAn array of custom recipe names to be run following a undeploy event.\n\n(string)\n\nShutdown -> (list)\n\nAn array of custom recipe names to be run following a shutdown event.\n\n(string)\n\nShorthand Syntax:\n\nSetup=string,string,Configure=string,string,Deploy=string,string,Undeploy=string,string,Shutdown=string,string\n\n\nJSON Syntax:\n\n{\n  \"Setup\": [\"string\", ...],\n  \"Configure\": [\"string\", ...],\n  \"Deploy\": [\"string\", ...],\n  \"Undeploy\": [\"string\", ...],\n  \"Shutdown\": [\"string\", ...]\n}\n\n\n--install-updates-on-boot | --no-install-updates-on-boot (boolean)\n\nWhether to install operating system and package updates when the instance boots. The default value is true . To control when updates are installed, set this value to false . You must then update your instances manually by using CreateDeployment to run the update_dependencies stack command or manually running yum (Amazon Linux) or apt-get (Ubuntu) on the instances.\n\nNote\n\nWe strongly recommend using the default value of true , to ensure that your instances have the latest security updates.\n\n--use-ebs-optimized-instances | --no-use-ebs-optimized-instances (boolean)\n\nWhether to use Amazon EBS-optimized instances.\n\n--lifecycle-event-configuration (structure)\n\nShutdown -> (structure)\n\nA ShutdownEventConfiguration object that specifies the Shutdown event configuration.\n\nExecutionTimeout -> (integer)\n\nThe time, in seconds, that AWS OpsWorks Stacks will wait after triggering a Shutdown event before shutting down an instance.\n\nDelayUntilElbConnectionsDrained -> (boolean)\n\nWhether to enable Elastic Load Balancing connection draining. For more information, see Connection Draining\n\nShorthand Syntax:\n\nShutdown={ExecutionTimeout=integer,DelayUntilElbConnectionsDrained=boolean}\n\n\nJSON Syntax:\n\n{\n  \"Shutdown\": {\n    \"ExecutionTimeout\": integer,\n    \"DelayUntilElbConnectionsDrained\": true|false\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a layer\n\nThe following example updates a specified layer to use Amazon EBS-optimized instances.\n\naws opsworks --region us-east-1 update-layer --layer-id 888c5645-09a5-4d0e-95a8-812ef1db76a4 --use-ebs-optimized-instances\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Editing an OpsWorks Layer’s Configuration in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-my-user-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-my-user-profile.html",
      "command_description": "Description\n\nUpdates a user’s SSH public key.\n\nRequired Permissions : To use this action, an IAM user must have self-management enabled or an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-my-user-profile\n[--ssh-public-key <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--ssh-public-key <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--ssh-public-key (string)\n\nThe user’s SSH public key.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a user’s profile\n\nThe following example updates the development user’s profile to use a specified SSH public key. The user’s AWS credentials are represented by the development profile in the credentials file (~\\.aws\\credentials), and the key is in a .pem file in the working directory.\n\naws opsworks --region us-east-1 --profile development update-my-user-profile --ssh-public-key file://development_key.pem\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Editing AWS OpsWorks User Settings in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-rds-db-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-rds-db-instance.html",
      "command_description": "Description\n\nUpdates an Amazon RDS instance.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-rds-db-instance\n--rds-db-instance-arn <value>\n[--db-user <value>]\n[--db-password <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rds-db-instance-arn <value>",
        "[--db-user <value>]",
        "[--db-password <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rds-db-instance-arn (string)\n\nThe Amazon RDS instance’s ARN.\n\n--db-user (string)\n\nThe master user name.\n\n--db-password (string)\n\nThe database password.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a registered Amazon RDS DB instance\n\nThe following example updates an Amazon RDS instance’s master password value. Note that this command does not change the RDS instance’s master password, just the password that you provide to AWS OpsWorks. If this password does not match the RDS instance’s password, your application will not be able to connect to the database.\n\naws opsworks --region us-east-1 update-rds-db-instance --db-password 123456789\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Registering Amazon RDS Instances with a Stack in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "update-stack",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-stack.html",
      "command_description": "Description\n\nUpdates a specified stack.\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-stack\n--stack-id <value>\n[--name <value>]\n[--attributes <value>]\n[--service-role-arn <value>]\n[--default-instance-profile-arn <value>]\n[--default-os <value>]\n[--hostname-theme <value>]\n[--default-availability-zone <value>]\n[--default-subnet-id <value>]\n[--custom-json <value>]\n[--configuration-manager <value>]\n[--chef-configuration <value>]\n[--use-custom-cookbooks | --no-use-custom-cookbooks]\n[--custom-cookbooks-source <value>]\n[--default-ssh-key-name <value>]\n[--default-root-device-type <value>]\n[--use-opsworks-security-groups | --no-use-opsworks-security-groups]\n[--agent-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--stack-id <value>",
        "[--name <value>]",
        "[--attributes <value>]",
        "[--service-role-arn <value>]",
        "[--default-instance-profile-arn <value>]",
        "[--default-os <value>]",
        "[--hostname-theme <value>]",
        "[--default-availability-zone <value>]",
        "[--default-subnet-id <value>]",
        "[--custom-json <value>]",
        "[--configuration-manager <value>]",
        "[--chef-configuration <value>]",
        "[--use-custom-cookbooks | --no-use-custom-cookbooks]",
        "[--custom-cookbooks-source <value>]",
        "[--default-ssh-key-name <value>]",
        "[--default-root-device-type <value>]",
        "[--use-opsworks-security-groups | --no-use-opsworks-security-groups]",
        "[--agent-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--stack-id (string)\n\nThe stack ID.\n\n--name (string)\n\nThe stack’s new name.\n\n--attributes (map)\n\nOne or more user-defined key-value pairs to be added to the stack attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\n  KeyName1=string,KeyName2=string\n\nWhere valid key names are:\n  Color\n\n\nJSON Syntax:\n\n{\"Color\": \"string\"\n  ...}\n\n\n--service-role-arn (string)\n\nDo not use this parameter. You cannot update a stack’s service role.\n\n--default-instance-profile-arn (string)\n\nThe ARN of an IAM profile that is the default profile for all of the stack’s EC2 instances. For more information about IAM ARNs, see Using Identifiers .\n\n--default-os (string)\n\nThe stack’s operating system, which must be set to one of the following:\n\nA supported Linux operating system: An Amazon Linux version, such as Amazon Linux 2018.03 , Amazon Linux 2017.09 , Amazon Linux 2017.03 , Amazon Linux 2016.09 , Amazon Linux 2016.03 , Amazon Linux 2015.09 , or Amazon Linux 2015.03 .\n\nA supported Ubuntu operating system, such as Ubuntu 16.04 LTS , Ubuntu 14.04 LTS , or Ubuntu 12.04 LTS .\n\nCentOS Linux 7\n\nRed Hat Enterprise Linux 7\n\nA supported Windows operating system, such as Microsoft Windows Server 2012 R2 Base , Microsoft Windows Server 2012 R2 with SQL Server Express , Microsoft Windows Server 2012 R2 with SQL Server Standard , or Microsoft Windows Server 2012 R2 with SQL Server Web .\n\nA custom AMI: Custom . You specify the custom AMI you want to use when you create instances. For more information about how to use custom AMIs with OpsWorks, see Using Custom AMIs .\n\nThe default option is the stack’s current operating system. For more information about supported operating systems, see AWS OpsWorks Stacks Operating Systems .\n\n--hostname-theme (string)\n\nThe stack’s new host name theme, with spaces replaced by underscores. The theme is used to generate host names for the stack’s instances. By default, HostnameTheme is set to Layer_Dependent , which creates host names by appending integers to the layer’s short name. The other themes are:\n\nBaked_Goods\n\nClouds\n\nEurope_Cities\n\nFruits\n\nGreek_Deities_and_Titans\n\nLegendary_creatures_from_Japan\n\nPlanets_and_Moons\n\nRoman_Deities\n\nScottish_Islands\n\nUS_Cities\n\nWild_Cats\n\nTo obtain a generated host name, call GetHostNameSuggestion , which returns a host name based on the current theme.\n\n--default-availability-zone (string)\n\nThe stack’s default Availability Zone, which must be in the stack’s region. For more information, see Regions and Endpoints . If you also specify a value for DefaultSubnetId , the subnet must be in the same zone. For more information, see CreateStack .\n\n--default-subnet-id (string)\n\nThe stack’s default VPC subnet ID. This parameter is required if you specify a value for the VpcId parameter. All instances are launched into this subnet unless you specify otherwise when you create the instance. If you also specify a value for DefaultAvailabilityZone , the subnet must be in that zone. For information on default values and when this parameter is required, see the VpcId parameter description.\n\n--custom-json (string)\n\nA string that contains user-defined, custom JSON. It can be used to override the corresponding default stack configuration JSON values or to pass data to recipes. The string should be in the following format:\n\n\"{\\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\",...}\"\n\nFor more information about custom JSON, see Use Custom JSON to Modify the Stack Configuration Attributes .\n\n--configuration-manager (structure)\n\nThe configuration manager. When you update a stack, we recommend that you use the configuration manager to specify the Chef version: 12, 11.10, or 11.4 for Linux stacks, or 12.2 for Windows stacks. The default value for Linux stacks is currently 12.\n\nName -> (string)\n\nThe name. This parameter must be set to “Chef”.\n\nVersion -> (string)\n\nThe Chef version. This parameter must be set to 12, 11.10, or 11.4 for Linux stacks, and to 12.2 for Windows stacks. The default value for Linux stacks is 11.4.\n\nShorthand Syntax:\n\nName=string,Version=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Version\": \"string\"\n}\n\n\n--chef-configuration (structure)\n\nA ChefConfiguration object that specifies whether to enable Berkshelf and the Berkshelf version on Chef 11.10 stacks. For more information, see Create a New Stack .\n\nManageBerkshelf -> (boolean)\n\nWhether to enable Berkshelf.\n\nBerkshelfVersion -> (string)\n\nThe Berkshelf version.\n\nShorthand Syntax:\n\nManageBerkshelf=boolean,BerkshelfVersion=string\n\n\nJSON Syntax:\n\n{\n  \"ManageBerkshelf\": true|false,\n  \"BerkshelfVersion\": \"string\"\n}\n\n\n--use-custom-cookbooks | --no-use-custom-cookbooks (boolean)\n\nWhether the stack uses custom cookbooks.\n\n--custom-cookbooks-source (structure)\n\nContains the information required to retrieve an app or cookbook from a repository. For more information, see Adding Apps or Cookbooks and Recipes .\n\nType -> (string)\n\nThe repository type.\n\nUrl -> (string)\n\nThe source URL. The following is an example of an Amazon S3 source URL: https://s3.amazonaws.com/opsworks-demo-bucket/opsworks_cookbook_demo.tar.gz .\n\nUsername -> (string)\n\nThis parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Username to the appropriate IAM access key ID.\n\nFor HTTP bundles, Git repositories, and Subversion repositories, set Username to the user name.\n\nPassword -> (string)\n\nWhen included in a request, the parameter depends on the repository type.\n\nFor Amazon S3 bundles, set Password to the appropriate IAM secret access key.\n\nFor HTTP bundles and Subversion repositories, set Password to the password.\n\nFor more information on how to safely handle IAM credentials, see https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html .\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nSshKey -> (string)\n\nIn requests, the repository’s SSH key.\n\nIn responses, AWS OpsWorks Stacks returns *****FILTERED***** instead of the actual value.\n\nRevision -> (string)\n\nThe application’s version. AWS OpsWorks Stacks enables you to easily deploy new versions of an application. One of the simplest approaches is to have branches or revisions in your repository that represent different versions that can potentially be deployed.\n\nShorthand Syntax:\n\nType=string,Url=string,Username=string,Password=string,SshKey=string,Revision=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"git\"|\"svn\"|\"archive\"|\"s3\",\n  \"Url\": \"string\",\n  \"Username\": \"string\",\n  \"Password\": \"string\",\n  \"SshKey\": \"string\",\n  \"Revision\": \"string\"\n}\n\n\n--default-ssh-key-name (string)\n\nA default Amazon EC2 key-pair name. The default value is none . If you specify a key-pair name, AWS OpsWorks Stacks installs the public key on the instance and you can use the private key with an SSH client to log in to the instance. For more information, see Using SSH to Communicate with an Instance and Managing SSH Access . You can override this setting by specifying a different key pair, or no key pair, when you create an instance .\n\n--default-root-device-type (string)\n\nThe default root device type. This value is used by default for all instances in the stack, but you can override it when you create an instance. For more information, see Storage for the Root Device .\n\nPossible values:\n\nebs\n\ninstance-store\n\n--use-opsworks-security-groups | --no-use-opsworks-security-groups (boolean)\n\nWhether to associate the AWS OpsWorks Stacks built-in security groups with the stack’s layers.\n\nAWS OpsWorks Stacks provides a standard set of built-in security groups, one for each layer, which are associated with layers by default. UseOpsworksSecurityGroups allows you to provide your own custom security groups instead of using the built-in groups. UseOpsworksSecurityGroups has the following settings:\n\nTrue - AWS OpsWorks Stacks automatically associates the appropriate built-in security group with each layer (default setting). You can associate additional security groups with a layer after you create it, but you cannot delete the built-in security group.\n\nFalse - AWS OpsWorks Stacks does not associate built-in security groups with layers. You must create appropriate EC2 security groups and associate a security group with each layer that you create. However, you can still manually associate a built-in security group with a layer on. Custom security groups are required only for those layers that need custom settings.\n\nFor more information, see Create a New Stack .\n\n--agent-version (string)\n\nThe default AWS OpsWorks Stacks agent version. You have the following options:\n\nAuto-update - Set this parameter to LATEST . AWS OpsWorks Stacks automatically installs new agent versions on the stack’s instances as soon as they are available.\n\nFixed version - Set this parameter to your preferred agent version. To update the agent version, you must edit the stack configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the stack’s instances.\n\nThe default setting is LATEST . To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions . AgentVersion cannot be set to Chef 12.2.\n\nNote\n\nYou can also specify an agent version when you create or update an instance, which overrides the stack’s default setting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-user-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-user-profile.html",
      "command_description": "Description\n\nUpdates a specified user profile.\n\nRequired Permissions : To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-user-profile\n--iam-user-arn <value>\n[--ssh-username <value>]\n[--ssh-public-key <value>]\n[--allow-self-management | --no-allow-self-management]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--iam-user-arn <value>",
        "[--ssh-username <value>]",
        "[--ssh-public-key <value>]",
        "[--allow-self-management | --no-allow-self-management]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--iam-user-arn (string)\n\nThe user IAM ARN. This can also be a federated user’s ARN.\n\n--ssh-username (string)\n\nThe user’s SSH user name. The allowable characters are [a-z], [A-Z], [0-9], ‘-‘, and ‘_’. If the specified name includes other punctuation marks, AWS OpsWorks Stacks removes them. For example, my.name will be changed to myname . If you do not specify an SSH user name, AWS OpsWorks Stacks generates one from the IAM user name.\n\n--ssh-public-key (string)\n\nThe user’s new SSH public key.\n\n--allow-self-management | --no-allow-self-management (boolean)\n\nWhether users can specify their own SSH public key through the My Settings page. For more information, see Managing User Permissions .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-volume",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/update-volume.html",
      "command_description": "Description\n\nUpdates an Amazon EBS volume’s name or mount point. For more information, see Resource Management .\n\nRequired Permissions : To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see Managing User Permissions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-volume\n--volume-id <value>\n[--name <value>]\n[--mount-point <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--volume-id <value>",
        "[--name <value>]",
        "[--mount-point <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--volume-id (string)\n\nThe volume ID.\n\n--name (string)\n\nThe new name.\n\n--mount-point (string)\n\nThe new mount point.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update a registered volume\n\nThe following example updates a registered Amazon Elastic Block Store (Amazon EBS) volume’s mount point. The volume is identified by its volume ID, which is the GUID that AWS OpsWorks assigns to the volume when you register it with a stack, not the Amazon Elastic Compute Cloud (Amazon EC2) volume ID.:\n\naws opsworks --region us-east-1 update-volume --volume-id 8430177d-52b7-4948-9c62-e195af4703df --mount-point /mnt/myvol\n\n\nOutput: None.\n\nMore Information\n\nFor more information, see Assigning Amazon EBS Volumes to an Instance in the AWS OpsWorks User Guide."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/opsworks/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nWelcome to the AWS OpsWorks Stacks API Reference . This guide provides descriptions, syntax, and usage examples for AWS OpsWorks Stacks actions and data types, including common parameters and error codes.\n\nAWS OpsWorks Stacks is an application management service that provides an integrated experience for overseeing the complete application lifecycle. For information about this product, go to the AWS OpsWorks details page.\n\nSDKs and CLI\n\nThe most common way to use the AWS OpsWorks Stacks API is by using the AWS Command Line Interface (CLI) or by using one of the AWS SDKs to implement applications in your preferred language. For more information, see:\n\nAWS CLI\n\nAWS SDK for Java\n\nAWS SDK for .NET\n\nAWS SDK for PHP 2\n\nAWS SDK for Ruby\n\nAWS SDK for Node.js\n\nAWS SDK for Python(Boto)\n\nEndpoints\n\nAWS OpsWorks Stacks supports the following endpoints, all HTTPS. You must connect to one of the following endpoints. Stacks can only be accessed or managed within the endpoint in which they are created.\n\nopsworks.us-east-1.amazonaws.com\n\nopsworks.us-east-2.amazonaws.com\n\nopsworks.us-west-1.amazonaws.com\n\nopsworks.us-west-2.amazonaws.com\n\nopsworks.ca-central-1.amazonaws.com (API only; not available in the AWS console)\n\nopsworks.eu-west-1.amazonaws.com\n\nopsworks.eu-west-2.amazonaws.com\n\nopsworks.eu-west-3.amazonaws.com\n\nopsworks.eu-central-1.amazonaws.com\n\nopsworks.ap-northeast-1.amazonaws.com\n\nopsworks.ap-northeast-2.amazonaws.com\n\nopsworks.ap-south-1.amazonaws.com\n\nopsworks.ap-southeast-1.amazonaws.com\n\nopsworks.ap-southeast-2.amazonaws.com\n\nopsworks.sa-east-1.amazonaws.com\n\nChef Versions\n\nWhen you call CreateStack , CloneStack , or UpdateStack we recommend you use the ConfigurationManager parameter to specify the Chef version. The recommended and default value for Linux stacks is currently 12. Windows stacks use Chef 12.2. For more information, see Chef Versions .\n\nNote\n\nYou can specify Chef 12, 11.10, or 11.4 for your Linux stack. We recommend migrating your existing Linux stacks to Chef 12 as soon as possible."
}