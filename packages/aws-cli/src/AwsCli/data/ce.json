{
  "service_name": "ce",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/index.html",
  "service_commands": [
    {
      "command_name": "create-anomaly-monitor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/create-anomaly-monitor.html",
      "command_description": "Description\n\nCreates a new cost anomaly detection monitor with the requested type and monitor specification.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-anomaly-monitor\n--anomaly-monitor <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--anomaly-monitor <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--anomaly-monitor (structure)\n\nThe cost anomaly detection monitor object that you want to create.\n\nMonitorArn -> (string)\n\nThe Amazon Resource Name (ARN) value.\n\nMonitorName -> (string)\n\nThe name of the monitor.\n\nCreationDate -> (string)\n\nThe date when the monitor was created.\n\nLastUpdatedDate -> (string)\n\nThe date when the monitor was last updated.\n\nLastEvaluatedDate -> (string)\n\nThe date when the monitor last evaluated for anomalies.\n\nMonitorType -> (string)\n\nThe possible type values.\n\nMonitorDimension -> (string)\n\nThe dimensions to evaluate.\n\nMonitorSpecification -> (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensionalValueCount -> (integer)\n\nThe value for evaluated dimensions.\n\nJSON Syntax:\n\n{\n  \"MonitorArn\": \"string\",\n  \"MonitorName\": \"string\",\n  \"CreationDate\": \"string\",\n  \"LastUpdatedDate\": \"string\",\n  \"LastEvaluatedDate\": \"string\",\n  \"MonitorType\": \"DIMENSIONAL\"|\"CUSTOM\",\n  \"MonitorDimension\": \"SERVICE\",\n  \"MonitorSpecification\": {\n    \"Or\": [\n      {\n        \"Or\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"And\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"Not\": { ... recursive ... },\n        \"Dimensions\": {\n          \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"Tags\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"CostCategories\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        }\n      }\n      ...\n    ],\n    \"And\": [\n      {\n        \"Or\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"And\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"Not\": { ... recursive ... },\n        \"Dimensions\": {\n          \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"Tags\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"CostCategories\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        }\n      }\n      ...\n    ],\n    \"Not\": {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"DimensionalValueCount\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMonitorArn -> (string)\n\nThe unique identifier of your newly created cost anomaly detection monitor."
    },
    {
      "command_name": "create-anomaly-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/create-anomaly-subscription.html",
      "command_description": "Description\n\nAdds a subscription to a cost anomaly detection monitor. You can use each subscription to define subscribers with email or SNS notifications. Email subscribers can set a dollar threshold and a time frequency for receiving notifications.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-anomaly-subscription\n--anomaly-subscription <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--anomaly-subscription <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--anomaly-subscription (structure)\n\nThe cost anomaly subscription object that you want to create.\n\nSubscriptionArn -> (string)\n\nThe AnomalySubscription Amazon Resource Name (ARN).\n\nAccountId -> (string)\n\nYour unique account identifier.\n\nMonitorArnList -> (list)\n\nA list of cost anomaly monitors.\n\n(string)\n\nSubscribers -> (list)\n\nA list of subscribers to notify.\n\n(structure)\n\nThe recipient of AnomalySubscription notifications.\n\nAddress -> (string)\n\nThe email address or SNS Amazon Resource Name (ARN). This depends on the Type .\n\nType -> (string)\n\nThe notification delivery channel.\n\nStatus -> (string)\n\nIndicates if the subscriber accepts the notifications.\n\nThreshold -> (double)\n\nThe dollar value that triggers a notification if the threshold is exceeded.\n\nFrequency -> (string)\n\nThe frequency that anomaly reports are sent over email.\n\nSubscriptionName -> (string)\n\nThe name for the subscription.\n\nShorthand Syntax:\n\nSubscriptionArn=string,AccountId=string,MonitorArnList=string,string,Subscribers=[{Address=string,Type=string,Status=string},{Address=string,Type=string,Status=string}],Threshold=double,Frequency=string,SubscriptionName=string\n\n\nJSON Syntax:\n\n{\n  \"SubscriptionArn\": \"string\",\n  \"AccountId\": \"string\",\n  \"MonitorArnList\": [\"string\", ...],\n  \"Subscribers\": [\n    {\n      \"Address\": \"string\",\n      \"Type\": \"EMAIL\"|\"SNS\",\n      \"Status\": \"CONFIRMED\"|\"DECLINED\"\n    }\n    ...\n  ],\n  \"Threshold\": double,\n  \"Frequency\": \"DAILY\"|\"IMMEDIATE\"|\"WEEKLY\",\n  \"SubscriptionName\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubscriptionArn -> (string)\n\nThe unique identifier of your newly created cost anomaly subscription."
    },
    {
      "command_name": "create-cost-category-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/create-cost-category-definition.html",
      "command_description": "Description\n\nCreates a new Cost Category with the requested name and rules.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cost-category-definition\n--name <value>\n--rule-version <value>\n--rules <value>\n[--default-value <value>]\n[--split-charge-rules <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--rule-version <value>",
        "--rules <value>",
        "[--default-value <value>]",
        "[--split-charge-rules <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe unique name of the Cost Category.\n\n--rule-version (string)\n\nThe rule schema version in this particular Cost Category.\n\nPossible values:\n\nCostCategoryExpression.v1\n\n--rules (list)\n\nThe Cost Category rules used to categorize costs. For more information, see CostCategoryRule .\n\n(structure)\n\nRules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.\n\nValue -> (string)\n\nThe default value for the cost category.\n\nRule -> (structure)\n\nAn Expression object used to categorize costs. This supports dimensions, tags, and nested expressions. Currently the only dimensions supported are LINKED_ACCOUNT , SERVICE_CODE , RECORD_TYPE , and LINKED_ACCOUNT_NAME .\n\nRoot level OR isn’t supported. We recommend that you create a separate rule instead.\n\nRECORD_TYPE is a dimension used for Cost Explorer APIs, and is also supported for Cost Category expressions. This dimension uses different terms, depending on whether you’re using the console or API/JSON editor. For a detailed comparison, see Term Comparisons in the Billing and Cost Management User Guide .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nInheritedValue -> (structure)\n\nThe value the line item is categorized as if the line item contains the matched dimension.\n\nDimensionName -> (string)\n\nThe name of the dimension that’s used to group costs.\n\nIf you specify LINKED_ACCOUNT_NAME , the cost category value is based on account name. If you specify TAG , the cost category value will be based on the value of the specified tag key.\n\nDimensionKey -> (string)\n\nThe key to extract cost category values.\n\nType -> (string)\n\nYou can define the CostCategoryRule rule type as either REGULAR or INHERITED_VALUE . The INHERITED_VALUE rule type adds the flexibility of defining a rule that dynamically inherits the cost category value from the dimension value defined by CostCategoryInheritedValueDimension . For example, if you want to dynamically group costs based on the value of a specific tag key, first choose an inherited value rule type, then choose the tag dimension and specify the tag key to use.\n\nJSON Syntax:\n\n[\n  {\n    \"Value\": \"string\",\n    \"Rule\": {\n      \"Or\": [\n        {\n          \"Or\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"And\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"Not\": { ... recursive ... },\n          \"Dimensions\": {\n            \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"Tags\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"CostCategories\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          }\n        }\n        ...\n      ],\n      \"And\": [\n        {\n          \"Or\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"And\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"Not\": { ... recursive ... },\n          \"Dimensions\": {\n            \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"Tags\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"CostCategories\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          }\n        }\n        ...\n      ],\n      \"Not\": {\n        \"Or\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"And\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"Not\": { ... recursive ... },\n        \"Dimensions\": {\n          \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"Tags\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"CostCategories\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        }\n      },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    },\n    \"InheritedValue\": {\n      \"DimensionName\": \"LINKED_ACCOUNT_NAME\"|\"TAG\",\n      \"DimensionKey\": \"string\"\n    },\n    \"Type\": \"REGULAR\"|\"INHERITED_VALUE\"\n  }\n  ...\n]\n\n\n--default-value (string)\n\nThe default value for the cost category.\n\n--split-charge-rules (list)\n\nThe split charge rules used to allocate your charges between your Cost Category values.\n\n(structure)\n\nUse the split charge rule to split the cost of one Cost Category value across several other target values.\n\nSource -> (string)\n\nThe Cost Category value that you want to split. That value can’t be used as a source or a target in other split charge rules. To indicate uncategorized costs, you can use an empty string as the source.\n\nTargets -> (list)\n\nThe Cost Category values that you want to split costs across. These values can’t be used as a source in other split charge rules.\n\n(string)\n\nMethod -> (string)\n\nThe method that’s used to define how to split your source costs across your targets.\n\nProportional - Allocates charges across your targets based on the proportional weighted cost of each target.\n\nFixed - Allocates charges across your targets based on your defined allocation percentage.\n\n>``Even`` - Allocates costs evenly across all targets.\n\nParameters -> (list)\n\nThe parameters for a split charge method. This is only required for the FIXED method.\n\n(structure)\n\nThe parameters for a split charge method.\n\nType -> (string)\n\nThe parameter type.\n\nValues -> (list)\n\nThe parameter values.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"Source\": \"string\",\n    \"Targets\": [\"string\", ...],\n    \"Method\": \"FIXED\"|\"PROPORTIONAL\"|\"EVEN\",\n    \"Parameters\": [\n      {\n        \"Type\": \"ALLOCATION_PERCENTAGES\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCostCategoryArn -> (string)\n\nThe unique identifier for your newly created Cost Category.\n\nEffectiveStart -> (string)\n\nThe Cost Category’s effective start date."
    },
    {
      "command_name": "delete-anomaly-monitor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/delete-anomaly-monitor.html",
      "command_description": "Description\n\nDeletes a cost anomaly monitor.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-anomaly-monitor\n--monitor-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--monitor-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--monitor-arn (string)\n\nThe unique identifier of the cost anomaly monitor that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-anomaly-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/delete-anomaly-subscription.html",
      "command_description": "Description\n\nDeletes a cost anomaly subscription.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-anomaly-subscription\n--subscription-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subscription-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-arn (string)\n\nThe unique identifier of the cost anomaly subscription that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-cost-category-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/delete-cost-category-definition.html",
      "command_description": "Description\n\nDeletes a Cost Category. Expenses from this month going forward will no longer be categorized with this Cost Category.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-cost-category-definition\n--cost-category-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cost-category-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cost-category-arn (string)\n\nThe unique identifier for your Cost Category.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCostCategoryArn -> (string)\n\nThe unique identifier for your Cost Category.\n\nEffectiveEnd -> (string)\n\nThe effective end date of the Cost Category as a result of deleting it. No costs after this date will be categorized by the deleted Cost Category."
    },
    {
      "command_name": "describe-cost-category-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/describe-cost-category-definition.html",
      "command_description": "Description\n\nReturns the name, ARN, rules, definition, and effective dates of a Cost Category that’s defined in the account.\n\nYou have the option to use EffectiveOn to return a Cost Category that is active on a specific date. If there is no EffectiveOn specified, you’ll see a Cost Category that is effective on the current date. If Cost Category is still effective, EffectiveEnd is omitted in the response.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-cost-category-definition\n--cost-category-arn <value>\n[--effective-on <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cost-category-arn <value>",
        "[--effective-on <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cost-category-arn (string)\n\nThe unique identifier for your Cost Category.\n\n--effective-on (string)\n\nThe date when the Cost Category was effective.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCostCategory -> (structure)\n\nThe structure of Cost Categories. This includes detailed metadata and the set of rules for the CostCategory object.\n\nCostCategoryArn -> (string)\n\nThe unique identifier for your Cost Category.\n\nEffectiveStart -> (string)\n\nThe effective state data of your Cost Category.\n\nEffectiveEnd -> (string)\n\nThe effective end data of your Cost Category.\n\nName -> (string)\n\nThe unique name of the Cost Category.\n\nRuleVersion -> (string)\n\nThe rule schema version in this particular Cost Category.\n\nRules -> (list)\n\nThe rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.\n\n(structure)\n\nRules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.\n\nValue -> (string)\n\nThe default value for the cost category.\n\nRule -> (structure)\n\nAn Expression object used to categorize costs. This supports dimensions, tags, and nested expressions. Currently the only dimensions supported are LINKED_ACCOUNT , SERVICE_CODE , RECORD_TYPE , and LINKED_ACCOUNT_NAME .\n\nRoot level OR isn’t supported. We recommend that you create a separate rule instead.\n\nRECORD_TYPE is a dimension used for Cost Explorer APIs, and is also supported for Cost Category expressions. This dimension uses different terms, depending on whether you’re using the console or API/JSON editor. For a detailed comparison, see Term Comparisons in the Billing and Cost Management User Guide .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nInheritedValue -> (structure)\n\nThe value the line item is categorized as if the line item contains the matched dimension.\n\nDimensionName -> (string)\n\nThe name of the dimension that’s used to group costs.\n\nIf you specify LINKED_ACCOUNT_NAME , the cost category value is based on account name. If you specify TAG , the cost category value will be based on the value of the specified tag key.\n\nDimensionKey -> (string)\n\nThe key to extract cost category values.\n\nType -> (string)\n\nYou can define the CostCategoryRule rule type as either REGULAR or INHERITED_VALUE . The INHERITED_VALUE rule type adds the flexibility of defining a rule that dynamically inherits the cost category value from the dimension value defined by CostCategoryInheritedValueDimension . For example, if you want to dynamically group costs based on the value of a specific tag key, first choose an inherited value rule type, then choose the tag dimension and specify the tag key to use.\n\nSplitChargeRules -> (list)\n\nThe split charge rules that are used to allocate your charges between your Cost Category values.\n\n(structure)\n\nUse the split charge rule to split the cost of one Cost Category value across several other target values.\n\nSource -> (string)\n\nThe Cost Category value that you want to split. That value can’t be used as a source or a target in other split charge rules. To indicate uncategorized costs, you can use an empty string as the source.\n\nTargets -> (list)\n\nThe Cost Category values that you want to split costs across. These values can’t be used as a source in other split charge rules.\n\n(string)\n\nMethod -> (string)\n\nThe method that’s used to define how to split your source costs across your targets.\n\nProportional - Allocates charges across your targets based on the proportional weighted cost of each target.\n\nFixed - Allocates charges across your targets based on your defined allocation percentage.\n\n>``Even`` - Allocates costs evenly across all targets.\n\nParameters -> (list)\n\nThe parameters for a split charge method. This is only required for the FIXED method.\n\n(structure)\n\nThe parameters for a split charge method.\n\nType -> (string)\n\nThe parameter type.\n\nValues -> (list)\n\nThe parameter values.\n\n(string)\n\nProcessingStatus -> (list)\n\nThe list of processing statuses for Cost Management products for a specific cost category.\n\n(structure)\n\nThe list of processing statuses for Cost Management products for a specific cost category.\n\nComponent -> (string)\n\nThe Cost Management product name of the applied status.\n\nStatus -> (string)\n\nThe process status for a specific cost category.\n\nDefaultValue -> (string)\n\nThe default value for the cost category."
    },
    {
      "command_name": "get-anomalies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-anomalies.html",
      "command_description": "Description\n\nRetrieves all of the cost anomalies detected on your account during the time period that’s specified by the DateInterval object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-anomalies\n[--monitor-arn <value>]\n--date-interval <value>\n[--feedback <value>]\n[--total-impact <value>]\n[--next-page-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--monitor-arn <value>]",
        "--date-interval <value>",
        "[--feedback <value>]",
        "[--total-impact <value>]",
        "[--next-page-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--monitor-arn (string)\n\nRetrieves all of the cost anomalies detected for a specific cost anomaly monitor Amazon Resource Name (ARN).\n\n--date-interval (structure)\n\nAssigns the start and end dates for retrieving cost anomalies. The returned anomaly object will have an AnomalyEndDate in the specified time range.\n\nStartDate -> (string)\n\nThe first date an anomaly was observed.\n\nEndDate -> (string)\n\nThe last date an anomaly was observed.\n\nShorthand Syntax:\n\nStartDate=string,EndDate=string\n\n\nJSON Syntax:\n\n{\n  \"StartDate\": \"string\",\n  \"EndDate\": \"string\"\n}\n\n\n--feedback (string)\n\nFilters anomaly results by the feedback field on the anomaly object.\n\nPossible values:\n\nYES\n\nNO\n\nPLANNED_ACTIVITY\n\n--total-impact (structure)\n\nFilters anomaly results by the total impact field on the anomaly object. For example, you can filter anomalies GREATER_THAN 200.00 to retrieve anomalies, with an estimated dollar impact greater than 200.\n\nNumericOperator -> (string)\n\nThe comparing value that’s used in the filter.\n\nStartValue -> (double)\n\nThe lower bound dollar value that’s used in the filter.\n\nEndValue -> (double)\n\nThe upper bound dollar value that’s used in the filter.\n\nShorthand Syntax:\n\nNumericOperator=string,StartValue=double,EndValue=double\n\n\nJSON Syntax:\n\n{\n  \"NumericOperator\": \"EQUAL\"|\"GREATER_THAN_OR_EQUAL\"|\"LESS_THAN_OR_EQUAL\"|\"GREATER_THAN\"|\"LESS_THAN\"|\"BETWEEN\",\n  \"StartValue\": double,\n  \"EndValue\": double\n}\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of entries a paginated response contains.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnomalies -> (list)\n\nA list of cost anomalies.\n\n(structure)\n\nAn unusual cost pattern. This consists of the detailed metadata and the current status of the anomaly object.\n\nAnomalyId -> (string)\n\nThe unique identifier for the anomaly.\n\nAnomalyStartDate -> (string)\n\nThe first day the anomaly is detected.\n\nAnomalyEndDate -> (string)\n\nThe last day the anomaly is detected.\n\nDimensionValue -> (string)\n\nThe dimension for the anomaly (for example, an Amazon Web Services service in a service monitor).\n\nRootCauses -> (list)\n\nThe list of identified root causes for the anomaly.\n\n(structure)\n\nThe combination of Amazon Web Services service, linked account, Region, and usage type where a cost anomaly is observed.\n\nService -> (string)\n\nThe Amazon Web Services service name that’s associated with the cost anomaly.\n\nRegion -> (string)\n\nThe Amazon Web Services Region that’s associated with the cost anomaly.\n\nLinkedAccount -> (string)\n\nThe member account value that’s associated with the cost anomaly.\n\nUsageType -> (string)\n\nThe UsageType value that’s associated with the cost anomaly.\n\nAnomalyScore -> (structure)\n\nThe latest and maximum score for the anomaly.\n\nMaxScore -> (double)\n\nThe maximum score that’s observed during the AnomalyDateInterval .\n\nCurrentScore -> (double)\n\nThe last observed score.\n\nImpact -> (structure)\n\nThe dollar impact for the anomaly.\n\nMaxImpact -> (double)\n\nThe maximum dollar value that’s observed for an anomaly.\n\nTotalImpact -> (double)\n\nThe cumulative dollar value that’s observed for an anomaly.\n\nMonitorArn -> (string)\n\nThe Amazon Resource Name (ARN) for the cost monitor that generated this anomaly.\n\nFeedback -> (string)\n\nThe feedback value.\n\nNextPageToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-anomaly-monitors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-anomaly-monitors.html",
      "command_description": "Description\n\nRetrieves the cost anomaly monitor definitions for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-anomaly-monitors\n[--monitor-arn-list <value>]\n[--next-page-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--monitor-arn-list <value>]",
        "[--next-page-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--monitor-arn-list (list)\n\nA list of cost anomaly monitor ARNs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of entries that a paginated response contains.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnomalyMonitors -> (list)\n\nA list of cost anomaly monitors that includes the detailed metadata for each monitor.\n\n(structure)\n\nThis object continuously inspects your account’s cost data for anomalies. It’s based on MonitorType and MonitorSpecification . The content consists of detailed metadata and the current status of the monitor object.\n\nMonitorArn -> (string)\n\nThe Amazon Resource Name (ARN) value.\n\nMonitorName -> (string)\n\nThe name of the monitor.\n\nCreationDate -> (string)\n\nThe date when the monitor was created.\n\nLastUpdatedDate -> (string)\n\nThe date when the monitor was last updated.\n\nLastEvaluatedDate -> (string)\n\nThe date when the monitor last evaluated for anomalies.\n\nMonitorType -> (string)\n\nThe possible type values.\n\nMonitorDimension -> (string)\n\nThe dimensions to evaluate.\n\nMonitorSpecification -> (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensionalValueCount -> (integer)\n\nThe value for evaluated dimensions.\n\nNextPageToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-anomaly-subscriptions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-anomaly-subscriptions.html",
      "command_description": "Description\n\nRetrieves the cost anomaly subscription objects for your account. You can filter using a list of cost anomaly monitor Amazon Resource Names (ARNs).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-anomaly-subscriptions\n[--subscription-arn-list <value>]\n[--monitor-arn <value>]\n[--next-page-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--subscription-arn-list <value>]",
        "[--monitor-arn <value>]",
        "[--next-page-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-arn-list (list)\n\nA list of cost anomaly subscription ARNs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--monitor-arn (string)\n\nCost anomaly monitor ARNs.\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of entries a paginated response contains.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnomalySubscriptions -> (list)\n\nA list of cost anomaly subscriptions that includes the detailed metadata for each one.\n\n(structure)\n\nThe association between a monitor, threshold, and list of subscribers used to deliver notifications about anomalies detected by a monitor that exceeds a threshold. The content consists of the detailed metadata and the current status of the AnomalySubscription object.\n\nSubscriptionArn -> (string)\n\nThe AnomalySubscription Amazon Resource Name (ARN).\n\nAccountId -> (string)\n\nYour unique account identifier.\n\nMonitorArnList -> (list)\n\nA list of cost anomaly monitors.\n\n(string)\n\nSubscribers -> (list)\n\nA list of subscribers to notify.\n\n(structure)\n\nThe recipient of AnomalySubscription notifications.\n\nAddress -> (string)\n\nThe email address or SNS Amazon Resource Name (ARN). This depends on the Type .\n\nType -> (string)\n\nThe notification delivery channel.\n\nStatus -> (string)\n\nIndicates if the subscriber accepts the notifications.\n\nThreshold -> (double)\n\nThe dollar value that triggers a notification if the threshold is exceeded.\n\nFrequency -> (string)\n\nThe frequency that anomaly reports are sent over email.\n\nSubscriptionName -> (string)\n\nThe name for the subscription.\n\nNextPageToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-cost-and-usage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-cost-and-usage.html",
      "command_description": "Description\n\nRetrieves cost and usage metrics for your account. You can specify which cost and usage-related metric that you want the request to return. For example, you can specify BlendedCosts or UsageQuantity . You can also filter and group your data by various dimensions, such as SERVICE or AZ , in a specific time range. For a complete list of valid dimensions, see the GetDimensionValues operation. Management account in an organization in Organizations have access to all member accounts.\n\nFor information about filter limitations, see Quotas and restrictions in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cost-and-usage\n--time-period <value>\n--granularity <value>\n[--filter <value>]\n--metrics <value>\n[--group-by <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "--granularity <value>",
        "[--filter <value>]",
        "--metrics <value>",
        "[--group-by <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nSets the start date and end date for retrieving Amazon Web Services costs. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--granularity (string)\n\nSets the Amazon Web Services cost granularity to MONTHLY or DAILY , or HOURLY . If Granularity isn’t set, the response object doesn’t include the Granularity , either MONTHLY or DAILY , or HOURLY .\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters Amazon Web Services costs by different dimensions. For example, you can specify SERVICE and LINKED_ACCOUNT and get the costs that are associated with that account’s usage of that service. You can nest Expression objects to define any combination of dimension filters. For more information, see Expression .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--metrics (list)\n\nWhich metrics are returned in the query. For more information about blended and unblended rates, see Why does the “blended” annotation appear on some line items in my bill? .\n\nValid values are AmortizedCost , BlendedCost , NetAmortizedCost , NetUnblendedCost , NormalizedUsageAmount , UnblendedCost , and UsageQuantity .\n\nNote\n\nIf you return the UsageQuantity metric, the service aggregates all usage numbers without taking into account the units. For example, if you aggregate usageQuantity across all of Amazon EC2, the results aren’t meaningful because Amazon EC2 compute hours and data transfer are measured in different units (for example, hours and GB). To get more meaningful UsageQuantity metrics, filter by UsageType or UsageTypeGroups .\n\nMetrics is required for GetCostAndUsage requests.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--group-by (list)\n\nYou can group Amazon Web Services costs using up to two different groups, either dimensions, tag keys, cost categories, or any two group by types.\n\nValid values for the DIMENSION type are AZ , INSTANCE_TYPE , LEGAL_ENTITY_NAME , LINKED_ACCOUNT , OPERATION , PLATFORM , PURCHASE_TYPE , SERVICE , TENANCY , RECORD_TYPE , and USAGE_TYPE .\n\nWhen you group by the TAG type and include a valid tag key, you get all tag values, including empty strings.\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nShorthand Syntax:\n\nType=string,Key=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\",\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\nGroupDefinitions -> (list)\n\nThe groups that are specified by the Filter or GroupBy parameters in the request.\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nResultsByTime -> (list)\n\nThe time period that’s covered by the results in the response.\n\n(structure)\n\nThe result that’s associated with a time period.\n\nTimePeriod -> (structure)\n\nThe time period that the result covers.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nTotal -> (map)\n\nThe total amount of cost or usage accrued during the time period.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe aggregated value for a metric.\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nGroups -> (list)\n\nThe groups that this time period includes.\n\n(structure)\n\nOne level of grouped data in the results.\n\nKeys -> (list)\n\nThe keys that are included in this group.\n\n(string)\n\nMetrics -> (map)\n\nThe metrics that are included in this group.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe aggregated value for a metric.\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nEstimated -> (boolean)\n\nDetermines whether the result is estimated.\n\nDimensionValueAttributes -> (list)\n\nThe attributes that apply to a specific dimension value. For example, if the value is a linked account, the attribute is that account name.\n\n(structure)\n\nThe metadata of a specific type that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\nValue -> (string)\n\nThe value of a dimension with a specific attribute.\n\nAttributes -> (map)\n\nThe attribute that applies to a specific Dimension .\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo retrieve the S3 usage of an account for the month of September 2017\n\nThe following get-cost-and-usage example retrieves the S3 usage of an account for the month of September 2017.\n\naws ce get-cost-and-usage \\\n    --time-period Start=2017-09-01,End=2017-10-01 \\\n    --granularity MONTHLY \\\n    --metrics \"BlendedCost\" \"UnblendedCost\" \"UsageQuantity\" \\\n    --group-by Type=DIMENSION,Key=SERVICE Type=TAG,Key=Environment \\\n    --filter file://filters.json\n\n\nContents of filters.json:\n\n{\n    \"Dimensions\": {\n        \"Key\": \"SERVICE\",\n        \"Values\": [\n            \"Amazon Simple Storage Service\"\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"GroupDefinitions\": [\n        {\n            \"Type\": \"DIMENSION\",\n            \"Key\": \"SERVICE\"\n        },\n        {\n            \"Type\": \"TAG\",\n            \"Key\": \"Environment\"\n        }\n    ],\n    \"ResultsByTime\": [\n        {\n            \"Estimated\": false,\n            \"TimePeriod\": {\n                \"Start\": \"2017-09-01\",\n                \"End\": \"2017-10-01\"\n            },\n            \"Total\": {},\n            \"Groups\": [\n                {\n                    \"Keys\": [\n                        \"Amazon Simple Storage Service\",\n                        \"Environment$\"\n                    ],\n                    \"Metrics\": {\n                        \"BlendedCost\": {\n                            \"Amount\": \"40.3527508453\",\n                            \"Unit\": \"USD\"\n                        },\n                        \"UnblendedCost\": {\n                            \"Amount\": \"40.3543773134\",\n                            \"Unit\": \"USD\"\n                        },\n                        \"UsageQuantity\": {\n                            \"Amount\": \"9312771.098461578\",\n                            \"Unit\": \"N/A\"\n                        }\n                    }\n                },\n                {\n                    \"Keys\": [\n                        \"Amazon Simple Storage Service\",\n                        \"Environment$Dev\"\n                    ],\n                    \"Metrics\": {\n                        \"BlendedCost\": {\n                            \"Amount\": \"0.2682364644\",\n                            \"Unit\": \"USD\"\n                        },\n                        \"UnblendedCost\": {\n                            \"Amount\": \"0.2682364644\",\n                            \"Unit\": \"USD\"\n                        },\n                        \"UsageQuantity\": {\n                            \"Amount\": \"22403.4395271182\",\n                            \"Unit\": \"N/A\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}\n"
    },
    {
      "command_name": "get-cost-and-usage-with-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-cost-and-usage-with-resources.html",
      "command_description": "Description\n\nRetrieves cost and usage metrics with resources for your account. You can specify which cost and usage-related metric, such as BlendedCosts or UsageQuantity , that you want the request to return. You can also filter and group your data by various dimensions, such as SERVICE or AZ , in a specific time range. For a complete list of valid dimensions, see the GetDimensionValues operation. Management account in an organization in Organizations have access to all member accounts. This API is currently available for the Amazon Elastic Compute Cloud – Compute service only.\n\nNote\n\nThis is an opt-in only feature. You can enable this feature from the Cost Explorer Settings page. For information on how to access the Settings page, see Controlling Access for Cost Explorer in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cost-and-usage-with-resources\n--time-period <value>\n--granularity <value>\n--filter <value>\n[--metrics <value>]\n[--group-by <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "--granularity <value>",
        "--filter <value>",
        "[--metrics <value>]",
        "[--group-by <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nSets the start and end dates for retrieving Amazon Web Services costs. The range must be within the last 14 days (the start date cannot be earlier than 14 days ago). The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--granularity (string)\n\nSets the Amazon Web Services cost granularity to MONTHLY , DAILY , or HOURLY . If Granularity isn’t set, the response object doesn’t include the Granularity , MONTHLY , DAILY , or HOURLY .\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters Amazon Web Services costs by different dimensions. For example, you can specify SERVICE and LINKED_ACCOUNT and get the costs that are associated with that account’s usage of that service. You can nest Expression objects to define any combination of dimension filters. For more information, see Expression .\n\nThe GetCostAndUsageWithResources operation requires that you either group by or filter by a ResourceId . It requires the Expression \"SERVICE = Amazon Elastic Compute Cloud - Compute\" in the filter.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--metrics (list)\n\nWhich metrics are returned in the query. For more information about blended and unblended rates, see Why does the “blended” annotation appear on some line items in my bill? .\n\nValid values are AmortizedCost , BlendedCost , NetAmortizedCost , NetUnblendedCost , NormalizedUsageAmount , UnblendedCost , and UsageQuantity .\n\nNote\n\nIf you return the UsageQuantity metric, the service aggregates all usage numbers without taking the units into account. For example, if you aggregate usageQuantity across all of Amazon EC2, the results aren’t meaningful because Amazon EC2 compute hours and data transfer are measured in different units (for example, hours vs. GB). To get more meaningful UsageQuantity metrics, filter by UsageType or UsageTypeGroups .\n\nMetrics is required for GetCostAndUsageWithResources requests.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--group-by (list)\n\nYou can group Amazon Web Services costs using up to two different groups: DIMENSION , TAG , COST_CATEGORY .\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nShorthand Syntax:\n\nType=string,Key=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\",\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\nGroupDefinitions -> (list)\n\nThe groups that are specified by the Filter or GroupBy parameters in the request.\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nResultsByTime -> (list)\n\nThe time period that is covered by the results in the response.\n\n(structure)\n\nThe result that’s associated with a time period.\n\nTimePeriod -> (structure)\n\nThe time period that the result covers.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nTotal -> (map)\n\nThe total amount of cost or usage accrued during the time period.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe aggregated value for a metric.\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nGroups -> (list)\n\nThe groups that this time period includes.\n\n(structure)\n\nOne level of grouped data in the results.\n\nKeys -> (list)\n\nThe keys that are included in this group.\n\n(string)\n\nMetrics -> (map)\n\nThe metrics that are included in this group.\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe aggregated value for a metric.\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nEstimated -> (boolean)\n\nDetermines whether the result is estimated.\n\nDimensionValueAttributes -> (list)\n\nThe attributes that apply to a specific dimension value. For example, if the value is a linked account, the attribute is that account name.\n\n(structure)\n\nThe metadata of a specific type that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\nValue -> (string)\n\nThe value of a dimension with a specific attribute.\n\nAttributes -> (map)\n\nThe attribute that applies to a specific Dimension .\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "get-cost-categories",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-cost-categories.html",
      "command_description": "Description\n\nRetrieves an array of Cost Category names and values incurred cost.\n\nNote\n\nIf some Cost Category names and values are not associated with any cost, they will not be returned by this API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cost-categories\n[--search-string <value>]\n--time-period <value>\n[--cost-category-name <value>]\n[--filter <value>]\n[--sort-by <value>]\n[--max-results <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--search-string <value>]",
        "--time-period <value>",
        "[--cost-category-name <value>]",
        "[--filter <value>]",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--search-string (string)\n\nThe value that you want to search the filter values for.\n\nIf you do not specify a CostCategoryName , SearchString will be used to filter Cost Category names that match the SearchString pattern. If you do specifiy a CostCategoryName , SearchString will be used to filter Cost Category values that match the SearchString pattern.\n\n--time-period (structure)\n\nThe time period of the request.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--cost-category-name (string)\n\nThe unique name of the Cost Category.\n\n--filter (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--sort-by (list)\n\nThe value by which you want to sort the data.\n\nThe key represents cost and usage metrics. The following values are supported:\n\nBlendedCost\n\nUnblendedCost\n\nAmortizedCost\n\nNetAmortizedCost\n\nNetUnblendedCost\n\nUsageQuantity\n\nNormalizedUsageAmount\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nWhen using SortBy , NextPageToken and SearchString are not supported.\n\n(structure)\n\nThe details of how to sort the data.\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThis field is only used when SortBy is provided in the request.\n\nThe maximum number of objects that to be returned for this request. If MaxResults is not specified with SortBy , the request will return 1000 results as the default value for this parameter.\n\nFor GetCostCategories , MaxResults has an upper limit of 1000.\n\n--next-page-token (string)\n\nIf the number of objects that are still available for retrieval exceeds the limit, Amazon Web Services returns a NextPageToken value in the response. To retrieve the next batch of objects, provide the NextPageToken from the prior call in your next request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextPageToken -> (string)\n\nIf the number of objects that are still available for retrieval exceeds the limit, Amazon Web Services returns a NextPageToken value in the response. To retrieve the next batch of objects, provide the marker from the prior call in your next request.\n\nCostCategoryNames -> (list)\n\nThe names of the Cost Categories.\n\n(string)\n\nThe unique name of the Cost Category.\n\nCostCategoryValues -> (list)\n\nThe Cost Category values.\n\nCostCategoryValues are not returned if CostCategoryName is not specified in the request.\n\n(string)\n\nThe default value for the cost category.\n\nReturnSize -> (integer)\n\nThe number of objects returned.\n\nTotalSize -> (integer)\n\nThe total number of objects."
    },
    {
      "command_name": "get-cost-forecast",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-cost-forecast.html",
      "command_description": "Description\n\nRetrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cost-forecast\n--time-period <value>\n--metric <value>\n--granularity <value>\n[--filter <value>]\n[--prediction-interval-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "--metric <value>",
        "--granularity <value>",
        "[--filter <value>]",
        "[--prediction-interval-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe period of time that you want the forecast to cover. The start date must be equal to or no later than the current date to avoid a validation error.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--metric (string)\n\nWhich metric Cost Explorer uses to create your forecast. For more information about blended and unblended rates, see Why does the “blended” annotation appear on some line items in my bill? .\n\nValid values for a GetCostForecast call are the following:\n\nAMORTIZED_COST\n\nBLENDED_COST\n\nNET_AMORTIZED_COST\n\nNET_UNBLENDED_COST\n\nUNBLENDED_COST\n\nPossible values:\n\nBLENDED_COST\n\nUNBLENDED_COST\n\nAMORTIZED_COST\n\nNET_UNBLENDED_COST\n\nNET_AMORTIZED_COST\n\nUSAGE_QUANTITY\n\nNORMALIZED_USAGE_AMOUNT\n\n--granularity (string)\n\nHow granular you want the forecast to be. You can get 3 months of DAILY forecasts or 12 months of MONTHLY forecasts.\n\nThe GetCostForecast operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nThe filters that you want to use to filter your forecast. The GetCostForecast API supports filtering by the following dimensions:\n\nAZ\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nLINKED_ACCOUNT_NAME\n\nOPERATION\n\nPURCHASE_TYPE\n\nREGION\n\nSERVICE\n\nUSAGE_TYPE\n\nUSAGE_TYPE_GROUP\n\nRECORD_TYPE\n\nOPERATING_SYSTEM\n\nTENANCY\n\nSCOPE\n\nPLATFORM\n\nSUBSCRIPTION_ID\n\nLEGAL_ENTITY_NAME\n\nDEPLOYMENT_OPTION\n\nDATABASE_ENGINE\n\nINSTANCE_TYPE_FAMILY\n\nBILLING_ENTITY\n\nRESERVATION_ID\n\nSAVINGS_PLAN_ARN\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--prediction-interval-level (integer)\n\nCost Explorer always returns the mean forecast as a single point. You can request a prediction interval around the mean by specifying a confidence level. The higher the confidence level, the more confident Cost Explorer is about the actual value falling in the prediction interval. Higher confidence levels result in wider prediction intervals.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTotal -> (structure)\n\nHow much you are forecasted to spend over the forecast period, in USD .\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nForecastResultsByTime -> (list)\n\nThe forecasts for your query, in order. For DAILY forecasts, this is a list of days. For MONTHLY forecasts, this is a list of months.\n\n(structure)\n\nThe forecast that’s created for your query.\n\nTimePeriod -> (structure)\n\nThe period of time that the forecast covers.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nMeanValue -> (string)\n\nThe mean value of the forecast.\n\nPredictionIntervalLowerBound -> (string)\n\nThe lower limit for the prediction interval.\n\nPredictionIntervalUpperBound -> (string)\n\nThe upper limit for the prediction interval."
    },
    {
      "command_name": "get-dimension-values",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-dimension-values.html",
      "command_description": "Description\n\nRetrieves all available filter values for a specified filter over a period of time. You can search the dimension values for an arbitrary string.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-dimension-values\n[--search-string <value>]\n--time-period <value>\n--dimension <value>\n[--context <value>]\n[--filter <value>]\n[--sort-by <value>]\n[--max-results <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--search-string <value>]",
        "--time-period <value>",
        "--dimension <value>",
        "[--context <value>]",
        "[--filter <value>]",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--search-string (string)\n\nThe value that you want to search the filter values for.\n\n--time-period (structure)\n\nThe start date and end date for retrieving the dimension values. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--dimension (string)\n\nThe name of the dimension. Each Dimension is available for a different Context . For more information, see Context .\n\nPossible values:\n\nAZ\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nLINKED_ACCOUNT_NAME\n\nOPERATION\n\nPURCHASE_TYPE\n\nREGION\n\nSERVICE\n\nSERVICE_CODE\n\nUSAGE_TYPE\n\nUSAGE_TYPE_GROUP\n\nRECORD_TYPE\n\nOPERATING_SYSTEM\n\nTENANCY\n\nSCOPE\n\nPLATFORM\n\nSUBSCRIPTION_ID\n\nLEGAL_ENTITY_NAME\n\nDEPLOYMENT_OPTION\n\nDATABASE_ENGINE\n\nCACHE_ENGINE\n\nINSTANCE_TYPE_FAMILY\n\nBILLING_ENTITY\n\nRESERVATION_ID\n\nRESOURCE_ID\n\nRIGHTSIZING_TYPE\n\nSAVINGS_PLANS_TYPE\n\nSAVINGS_PLAN_ARN\n\nPAYMENT_OPTION\n\nAGREEMENT_END_DATE_TIME_AFTER\n\nAGREEMENT_END_DATE_TIME_BEFORE\n\n--context (string)\n\nThe context for the call to GetDimensionValues . This can be RESERVATIONS or COST_AND_USAGE . The default value is COST_AND_USAGE . If the context is set to RESERVATIONS , the resulting dimension values can be used in the GetReservationUtilization operation. If the context is set to COST_AND_USAGE , the resulting dimension values can be used in the GetCostAndUsage operation.\n\nIf you set the context to COST_AND_USAGE , you can use the following dimensions for searching:\n\nAZ - The Availability Zone. An example is us-east-1a .\n\nDATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.\n\nINSTANCE_TYPE - The type of Amazon EC2 instance. An example is m4.xlarge .\n\nLEGAL_ENTITY_NAME - The name of the organization that sells you Amazon Web Services services, such as Amazon Web Services.\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nOPERATING_SYSTEM - The operating system. Examples are Windows or Linux.\n\nOPERATION - The action performed. Examples include RunInstance and CreateBucket .\n\nPLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.\n\nPURCHASE_TYPE - The reservation type of the purchase to which this usage is related. Examples include On-Demand Instances and Standard Reserved Instances.\n\nSERVICE - The Amazon Web Services service such as Amazon DynamoDB.\n\nUSAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the GetDimensionValues operation includes a unit attribute. Examples include GB and Hrs.\n\nUSAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.\n\nREGION - The Amazon Web Services Region.\n\nRECORD_TYPE - The different types of charges such as RI fees, usage costs, tax refunds, and credits.\n\nRESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service.\n\nIf you set the context to RESERVATIONS , you can use the following dimensions for searching:\n\nAZ - The Availability Zone. An example is us-east-1a .\n\nCACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.\n\nDEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are SingleAZ and MultiAZ .\n\nINSTANCE_TYPE - The type of Amazon EC2 instance. An example is m4.xlarge .\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nPLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.\n\nREGION - The Amazon Web Services Region.\n\nSCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.\n\nTAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).\n\nTENANCY - The tenancy of a resource. Examples are shared or dedicated.\n\nIf you set the context to SAVINGS_PLANS , you can use the following dimensions for searching:\n\nSAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)\n\nPAYMENT_OPTION - Payment option for the given Savings Plans (for example, All Upfront)\n\nREGION - The Amazon Web Services Region.\n\nINSTANCE_TYPE_FAMILY - The family of instances (For example, m5 )\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nSAVINGS_PLAN_ARN - The unique identifier for your Savings Plan\n\nPossible values:\n\nCOST_AND_USAGE\n\nRESERVATIONS\n\nSAVINGS_PLANS\n\n--filter (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--sort-by (list)\n\nThe value by which you want to sort the data.\n\nThe key represents cost and usage metrics. The following values are supported:\n\nBlendedCost\n\nUnblendedCost\n\nAmortizedCost\n\nNetAmortizedCost\n\nNetUnblendedCost\n\nUsageQuantity\n\nNormalizedUsageAmount\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nWhen you specify a SortBy paramater, the context must be COST_AND_USAGE . Further, when using SortBy , NextPageToken and SearchString are not supported.\n\n(structure)\n\nThe details of how to sort the data.\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThis field is only used when SortBy is provided in the request. The maximum number of objects that to be returned for this request. If MaxResults is not specified with SortBy, the request will return 1000 results as the default value for this parameter.\n\nFor GetDimensionValues , MaxResults has an upper limit of 1000.\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDimensionValues -> (list)\n\nThe filters that you used to filter your request. Some dimensions are available only for a specific context.\n\nIf you set the context to COST_AND_USAGE , you can use the following dimensions for searching:\n\nAZ - The Availability Zone. An example is us-east-1a .\n\nDATABASE_ENGINE - The Amazon Relational Database Service database. Examples are Aurora or MySQL.\n\nINSTANCE_TYPE - The type of Amazon EC2 instance. An example is m4.xlarge .\n\nLEGAL_ENTITY_NAME - The name of the organization that sells you Amazon Web Services services, such as Amazon Web Services.\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nOPERATING_SYSTEM - The operating system. Examples are Windows or Linux.\n\nOPERATION - The action performed. Examples include RunInstance and CreateBucket .\n\nPLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.\n\nPURCHASE_TYPE - The reservation type of the purchase to which this usage is related. Examples include On-Demand Instances and Standard Reserved Instances.\n\nSERVICE - The Amazon Web Services service such as Amazon DynamoDB.\n\nUSAGE_TYPE - The type of usage. An example is DataTransfer-In-Bytes. The response for the GetDimensionValues operation includes a unit attribute. Examples include GB and Hrs.\n\nUSAGE_TYPE_GROUP - The grouping of common usage types. An example is Amazon EC2: CloudWatch – Alarms. The response for this operation includes a unit attribute.\n\nRECORD_TYPE - The different types of charges such as RI fees, usage costs, tax refunds, and credits.\n\nRESOURCE_ID - The unique identifier of the resource. ResourceId is an opt-in feature only available for last 14 days for EC2-Compute Service.\n\nIf you set the context to RESERVATIONS , you can use the following dimensions for searching:\n\nAZ - The Availability Zone. An example is us-east-1a .\n\nCACHE_ENGINE - The Amazon ElastiCache operating system. Examples are Windows or Linux.\n\nDEPLOYMENT_OPTION - The scope of Amazon Relational Database Service deployments. Valid values are SingleAZ and MultiAZ .\n\nINSTANCE_TYPE - The type of Amazon EC2 instance. An example is m4.xlarge .\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nPLATFORM - The Amazon EC2 operating system. Examples are Windows or Linux.\n\nREGION - The Amazon Web Services Region.\n\nSCOPE (Utilization only) - The scope of a Reserved Instance (RI). Values are regional or a single Availability Zone.\n\nTAG (Coverage only) - The tags that are associated with a Reserved Instance (RI).\n\nTENANCY - The tenancy of a resource. Examples are shared or dedicated.\n\nIf you set the context to SAVINGS_PLANS , you can use the following dimensions for searching:\n\nSAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance or Compute)\n\nPAYMENT_OPTION - Payment option for the given Savings Plans (for example, All Upfront)\n\nREGION - The Amazon Web Services Region.\n\nINSTANCE_TYPE_FAMILY - The family of instances (For example, m5 )\n\nLINKED_ACCOUNT - The description in the attribute map that includes the full name of the member account. The value field contains the Amazon Web Services ID of the member account.\n\nSAVINGS_PLAN_ARN - The unique identifier for your Savings Plan\n\n(structure)\n\nThe metadata of a specific type that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\nValue -> (string)\n\nThe value of a dimension with a specific attribute.\n\nAttributes -> (map)\n\nThe attribute that applies to a specific Dimension .\n\nkey -> (string)\n\nvalue -> (string)\n\nReturnSize -> (integer)\n\nThe number of results that Amazon Web Services returned at one time.\n\nTotalSize -> (integer)\n\nThe total number of search results.\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.",
      "command_examples": "Examples\n\nTo retrieve the tags for the dimension SERVICE, with a value of “Elastic”\n\nThis example retrieves the tags for the dimension SERVICE, with a value of “Elastic” for January 01 2017 through May 18 2017.\n\nCommand:\n\naws ce get-dimension-values --search-string Elastic --time-period Start=2017-01-01,End=2017-05-18 --dimension SERVICE\n\n\nOutput:\n\n{\n   \"TotalSize\": 6,\n   \"DimensionValues\": [\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon ElastiCache\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"EC2 - Other\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic Compute Cloud - Compute\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic Load Balancing\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic MapReduce\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elasticsearch Service\"\n       }\n   ],\n   \"ReturnSize\": 6\n}\n"
    },
    {
      "command_name": "get-reservation-coverage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-reservation-coverage.html",
      "command_description": "Description\n\nRetrieves the reservation coverage for your account. This enables you to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation. An organization’s management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data about reservation usage by the following dimensions:\n\nAZ\n\nCACHE_ENGINE\n\nDATABASE_ENGINE\n\nDEPLOYMENT_OPTION\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nOPERATING_SYSTEM\n\nPLATFORM\n\nREGION\n\nSERVICE\n\nTAG\n\nTENANCY\n\nTo determine valid values for a dimension, use the GetDimensionValues operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-reservation-coverage\n--time-period <value>\n[--group-by <value>]\n[--granularity <value>]\n[--filter <value>]\n[--metrics <value>]\n[--next-page-token <value>]\n[--sort-by <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "[--group-by <value>]",
        "[--granularity <value>]",
        "[--filter <value>]",
        "[--metrics <value>]",
        "[--next-page-token <value>]",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe start and end dates of the period that you want to retrieve data about reservation coverage for. You can retrieve data for a maximum of 13 months: the last 12 months and the current month. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--group-by (list)\n\nYou can group the data by the following attributes:\n\nAZ\n\nCACHE_ENGINE\n\nDATABASE_ENGINE\n\nDEPLOYMENT_OPTION\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nOPERATING_SYSTEM\n\nPLATFORM\n\nREGION\n\nTENANCY\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nShorthand Syntax:\n\nType=string,Key=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\",\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--granularity (string)\n\nThe granularity of the Amazon Web Services cost data for the reservation. Valid values are MONTHLY and DAILY .\n\nIf GroupBy is set, Granularity can’t be set. If Granularity isn’t set, the response object doesn’t include Granularity , either MONTHLY or DAILY .\n\nThe GetReservationCoverage operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters utilization data by dimensions. You can filter by the following dimensions:\n\nAZ\n\nCACHE_ENGINE\n\nDATABASE_ENGINE\n\nDEPLOYMENT_OPTION\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nOPERATING_SYSTEM\n\nPLATFORM\n\nREGION\n\nSERVICE\n\nTAG\n\nTENANCY\n\nGetReservationCoverage uses the same Expression object as the other operations, but only AND is supported among each dimension. You can nest only one level deep. If there are multiple values for a dimension, they are OR’d together.\n\nIf you don’t provide a SERVICE filter, Cost Explorer defaults to EC2.\n\nCost category is also supported.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--metrics (list)\n\nThe measurement that you want your reservation coverage reported in.\n\nValid values are Hour , Unit , and Cost . You can use multiple values in a request.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--sort-by (structure)\n\nThe value by which you want to sort the data.\n\nThe following values are supported for Key :\n\nOnDemandCost\n\nCoverageHoursPercentage\n\nOnDemandHours\n\nReservedHours\n\nTotalRunningHours\n\nCoverageNormalizedUnitsPercentage\n\nOnDemandNormalizedUnits\n\nReservedNormalizedUnits\n\nTotalRunningNormalizedUnits\n\nTime\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string\n\n\nJSON Syntax:\n\n{\n  \"Key\": \"string\",\n  \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n}\n\n\n--max-results (integer)\n\nThe maximum number of objects that you returned for this request. If more objects are available, in the response, Amazon Web Services provides a NextPageToken value that you can use in a subsequent call to get the next batch of objects.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCoveragesByTime -> (list)\n\nThe amount of time that your reservations covered.\n\n(structure)\n\nReservation coverage for a specified period, in hours.\n\nTimePeriod -> (structure)\n\nThe period that this coverage was used over.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nGroups -> (list)\n\nThe groups of instances that the reservation covered.\n\n(structure)\n\nA group of reservations that share a set of attributes.\n\nAttributes -> (map)\n\nThe attributes for this group of reservations.\n\nkey -> (string)\n\nvalue -> (string)\n\nCoverage -> (structure)\n\nHow much instance usage this group of reservations covered.\n\nCoverageHours -> (structure)\n\nThe amount of instance usage that the reservation covered, in hours.\n\nOnDemandHours -> (string)\n\nThe number of instance running hours that On-Demand Instances covered.\n\nReservedHours -> (string)\n\nThe number of instance running hours that reservations covered.\n\nTotalRunningHours -> (string)\n\nThe total instance usage, in hours.\n\nCoverageHoursPercentage -> (string)\n\nThe percentage of instance hours that a reservation covered.\n\nCoverageNormalizedUnits -> (structure)\n\nThe amount of instance usage that the reservation covered, in normalized units.\n\nOnDemandNormalizedUnits -> (string)\n\nThe number of normalized units that are covered by On-Demand Instances instead of a reservation.\n\nReservedNormalizedUnits -> (string)\n\nThe number of normalized units that a reservation covers.\n\nTotalRunningNormalizedUnits -> (string)\n\nThe total number of normalized units that you used.\n\nCoverageNormalizedUnitsPercentage -> (string)\n\nThe percentage of your used instance normalized units that a reservation covers.\n\nCoverageCost -> (structure)\n\nThe amount of cost that the reservation covered.\n\nOnDemandCost -> (string)\n\nHow much an On-Demand Instance costs.\n\nTotal -> (structure)\n\nThe total reservation coverage, in hours.\n\nCoverageHours -> (structure)\n\nThe amount of instance usage that the reservation covered, in hours.\n\nOnDemandHours -> (string)\n\nThe number of instance running hours that On-Demand Instances covered.\n\nReservedHours -> (string)\n\nThe number of instance running hours that reservations covered.\n\nTotalRunningHours -> (string)\n\nThe total instance usage, in hours.\n\nCoverageHoursPercentage -> (string)\n\nThe percentage of instance hours that a reservation covered.\n\nCoverageNormalizedUnits -> (structure)\n\nThe amount of instance usage that the reservation covered, in normalized units.\n\nOnDemandNormalizedUnits -> (string)\n\nThe number of normalized units that are covered by On-Demand Instances instead of a reservation.\n\nReservedNormalizedUnits -> (string)\n\nThe number of normalized units that a reservation covers.\n\nTotalRunningNormalizedUnits -> (string)\n\nThe total number of normalized units that you used.\n\nCoverageNormalizedUnitsPercentage -> (string)\n\nThe percentage of your used instance normalized units that a reservation covers.\n\nCoverageCost -> (structure)\n\nThe amount of cost that the reservation covered.\n\nOnDemandCost -> (string)\n\nHow much an On-Demand Instance costs.\n\nTotal -> (structure)\n\nThe total amount of instance usage that a reservation covered.\n\nCoverageHours -> (structure)\n\nThe amount of instance usage that the reservation covered, in hours.\n\nOnDemandHours -> (string)\n\nThe number of instance running hours that On-Demand Instances covered.\n\nReservedHours -> (string)\n\nThe number of instance running hours that reservations covered.\n\nTotalRunningHours -> (string)\n\nThe total instance usage, in hours.\n\nCoverageHoursPercentage -> (string)\n\nThe percentage of instance hours that a reservation covered.\n\nCoverageNormalizedUnits -> (structure)\n\nThe amount of instance usage that the reservation covered, in normalized units.\n\nOnDemandNormalizedUnits -> (string)\n\nThe number of normalized units that are covered by On-Demand Instances instead of a reservation.\n\nReservedNormalizedUnits -> (string)\n\nThe number of normalized units that a reservation covers.\n\nTotalRunningNormalizedUnits -> (string)\n\nThe total number of normalized units that you used.\n\nCoverageNormalizedUnitsPercentage -> (string)\n\nThe percentage of your used instance normalized units that a reservation covers.\n\nCoverageCost -> (structure)\n\nThe amount of cost that the reservation covered.\n\nOnDemandCost -> (string)\n\nHow much an On-Demand Instance costs.\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.",
      "command_examples": "Examples\n\nTo retrieve the reservation coverage for EC2 t2.nano instances in the us-east-1 region\n\nThis example retrieves the reservation coverage for EC2 t2.nano instances in the us-east-1 region for July-September of 2017.\n\nCommand:\n\naws ce get-reservation-coverage --time-period Start=2017-07-01,End=2017-10-01 --group-by Type=Dimension,Key=REGION --filter file://filters.json\n\n\nfilters.json:\n\n{\n   \"And\": [\n     {\n       \"Dimensions\": {\n         \"Key\": \"INSTANCE_TYPE\",\n         \"Values\": [\n           \"t2.nano\"\n         ]\n       },\n       \"Dimensions\": {\n         \"Key\": \"REGION\",\n         \"Values\": [\n           \"us-east-1\"\n         ]\n       }\n     }\n   ]\n }\n\n\nOutput:\n\n{\n   \"TotalSize\": 6,\n   \"DimensionValues\": [\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon ElastiCache\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"EC2 - Other\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic Compute Cloud - Compute\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic Load Balancing\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elastic MapReduce\"\n       },\n       {\n           \"Attributes\": {},\n           \"Value\": \"Amazon Elasticsearch Service\"\n       }\n   ],\n   \"ReturnSize\": 6\n}\n"
    },
    {
      "command_name": "get-reservation-purchase-recommendation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-reservation-purchase-recommendation.html",
      "command_description": "Description\n\nGets recommendations for which reservations to purchase. These recommendations could help you reduce your costs. Reservations provide a discounted hourly rate (up to 75%) compared to On-Demand pricing.\n\nAmazon Web Services generates your recommendations by identifying your On-Demand usage during a specific time period and collecting your usage into categories that are eligible for a reservation. After Amazon Web Services has these categories, it simulates every combination of reservations in each category of usage to identify the best number of each type of RI to purchase to maximize your estimated savings.\n\nFor example, Amazon Web Services automatically aggregates your Amazon EC2 Linux, shared tenancy, and c4 family usage in the US West (Oregon) Region and recommends that you buy size-flexible regional reservations to apply to the c4 family usage. Amazon Web Services recommends the smallest size instance in an instance family. This makes it easier to purchase a size-flexible RI. Amazon Web Services also shows the equal number of normalized units so that you can purchase any instance size that you want. For this example, your RI recommendation would be for c4.large because that is the smallest size instance in the c4 instance family.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-reservation-purchase-recommendation\n[--account-id <value>]\n--service <value>\n[--filter <value>]\n[--account-scope <value>]\n[--lookback-period-in-days <value>]\n[--term-in-years <value>]\n[--payment-option <value>]\n[--service-specification <value>]\n[--page-size <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--account-id <value>]",
        "--service <value>",
        "[--filter <value>]",
        "[--account-scope <value>]",
        "[--lookback-period-in-days <value>]",
        "[--term-in-years <value>]",
        "[--payment-option <value>]",
        "[--service-specification <value>]",
        "[--page-size <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--account-id (string)\n\nThe account ID that is associated with the recommendation.\n\n--service (string)\n\nThe specific service that you want recommendations for.\n\n--filter (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--account-scope (string)\n\nThe account scope that you want your recommendations for. Amazon Web Services calculates recommendations including the management account and member accounts if the value is set to PAYER . If the value is LINKED , recommendations are calculated for individual member accounts only.\n\nPossible values:\n\nPAYER\n\nLINKED\n\n--lookback-period-in-days (string)\n\nThe number of previous days that you want Amazon Web Services to consider when it calculates your recommendations.\n\nPossible values:\n\nSEVEN_DAYS\n\nTHIRTY_DAYS\n\nSIXTY_DAYS\n\n--term-in-years (string)\n\nThe reservation term that you want recommendations for.\n\nPossible values:\n\nONE_YEAR\n\nTHREE_YEARS\n\n--payment-option (string)\n\nThe reservation purchase option that you want recommendations for.\n\nPossible values:\n\nNO_UPFRONT\n\nPARTIAL_UPFRONT\n\nALL_UPFRONT\n\nLIGHT_UTILIZATION\n\nMEDIUM_UTILIZATION\n\nHEAVY_UTILIZATION\n\n--service-specification (structure)\n\nThe hardware specifications for the service instances that you want recommendations for, such as standard or convertible Amazon EC2 instances.\n\nEC2Specification -> (structure)\n\nThe Amazon EC2 hardware specifications that you want Amazon Web Services to provide recommendations for.\n\nOfferingClass -> (string)\n\nIndicates whether you want a recommendation for standard or convertible reservations.\n\nShorthand Syntax:\n\nEC2Specification={OfferingClass=string}\n\n\nJSON Syntax:\n\n{\n  \"EC2Specification\": {\n    \"OfferingClass\": \"STANDARD\"|\"CONVERTIBLE\"\n  }\n}\n\n\n--page-size (integer)\n\nThe number of recommendations that you want returned in a single response object.\n\n--next-page-token (string)\n\nThe pagination token that indicates the next set of results that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMetadata -> (structure)\n\nInformation about this specific recommendation call, such as the time stamp for when Cost Explorer generated this recommendation.\n\nRecommendationId -> (string)\n\nThe ID for this specific recommendation.\n\nGenerationTimestamp -> (string)\n\nThe timestamp for when Amazon Web Services made this recommendation.\n\nRecommendations -> (list)\n\nRecommendations for reservations to purchase.\n\n(structure)\n\nA specific reservation that Amazon Web Services recommends for purchase.\n\nAccountScope -> (string)\n\nThe account scope that Amazon Web Services recommends that you purchase this instance for. For example, you can purchase this reservation for an entire organization in Amazon Web Services Organizations.\n\nLookbackPeriodInDays -> (string)\n\nHow many days of previous usage that Amazon Web Services considers when making this recommendation.\n\nTermInYears -> (string)\n\nThe term of the reservation that you want recommendations for, in years.\n\nPaymentOption -> (string)\n\nThe payment option for the reservation (for example, AllUpfront or NoUpfront ).\n\nServiceSpecification -> (structure)\n\nHardware specifications for the service that you want recommendations for.\n\nEC2Specification -> (structure)\n\nThe Amazon EC2 hardware specifications that you want Amazon Web Services to provide recommendations for.\n\nOfferingClass -> (string)\n\nIndicates whether you want a recommendation for standard or convertible reservations.\n\nRecommendationDetails -> (list)\n\nDetails about the recommended purchases.\n\n(structure)\n\nDetails about your recommended reservation purchase.\n\nAccountId -> (string)\n\nThe account that this RI recommendation is for.\n\nInstanceDetails -> (structure)\n\nDetails about the instances that Amazon Web Services recommends that you purchase.\n\nEC2InstanceDetails -> (structure)\n\nThe Amazon EC2 instances that Amazon Web Services recommends that you purchase.\n\nFamily -> (string)\n\nThe instance family of the recommended reservation.\n\nInstanceType -> (string)\n\nThe type of instance that Amazon Web Services recommends.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the recommended reservation.\n\nAvailabilityZone -> (string)\n\nThe Availability Zone of the recommended reservation.\n\nPlatform -> (string)\n\nThe platform of the recommended reservation. The platform is the specific combination of operating system, license model, and software on an instance.\n\nTenancy -> (string)\n\nDetermines whether the recommended reservation is dedicated or shared.\n\nCurrentGeneration -> (boolean)\n\nDetermines whether the recommendation is for a current-generation instance.\n\nSizeFlexEligible -> (boolean)\n\nDetermines whether the recommended reservation is size flexible.\n\nRDSInstanceDetails -> (structure)\n\nThe Amazon RDS instances that Amazon Web Services recommends that you purchase.\n\nFamily -> (string)\n\nThe instance family of the recommended reservation.\n\nInstanceType -> (string)\n\nThe type of instance that Amazon Web Services recommends.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the recommended reservation.\n\nDatabaseEngine -> (string)\n\nThe database engine that the recommended reservation supports.\n\nDatabaseEdition -> (string)\n\nThe database edition that the recommended reservation supports.\n\nDeploymentOption -> (string)\n\nDetermines whether the recommendation is for a reservation in a single Availability Zone or a reservation with a backup in a second Availability Zone.\n\nLicenseModel -> (string)\n\nThe license model that the recommended reservation supports.\n\nCurrentGeneration -> (boolean)\n\nDetermines whether the recommendation is for a current-generation instance.\n\nSizeFlexEligible -> (boolean)\n\nDetermines whether the recommended reservation is size flexible.\n\nRedshiftInstanceDetails -> (structure)\n\nThe Amazon Redshift instances that Amazon Web Services recommends that you purchase.\n\nFamily -> (string)\n\nThe instance family of the recommended reservation.\n\nNodeType -> (string)\n\nThe type of node that Amazon Web Services recommends.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the recommended reservation.\n\nCurrentGeneration -> (boolean)\n\nDetermines whether the recommendation is for a current-generation instance.\n\nSizeFlexEligible -> (boolean)\n\nDetermines whether the recommended reservation is size flexible.\n\nElastiCacheInstanceDetails -> (structure)\n\nThe ElastiCache instances that Amazon Web Services recommends that you purchase.\n\nFamily -> (string)\n\nThe instance family of the recommended reservation.\n\nNodeType -> (string)\n\nThe type of node that Amazon Web Services recommends.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the recommended reservation.\n\nProductDescription -> (string)\n\nThe description of the recommended reservation.\n\nCurrentGeneration -> (boolean)\n\nDetermines whether the recommendation is for a current generation instance.\n\nSizeFlexEligible -> (boolean)\n\nDetermines whether the recommended reservation is size flexible.\n\nESInstanceDetails -> (structure)\n\nThe Amazon ES instances that Amazon Web Services recommends that you purchase.\n\nInstanceClass -> (string)\n\nThe class of instance that Amazon Web Services recommends.\n\nInstanceSize -> (string)\n\nThe size of instance that Amazon Web Services recommends.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the recommended reservation.\n\nCurrentGeneration -> (boolean)\n\nDetermines whether the recommendation is for a current-generation instance.\n\nSizeFlexEligible -> (boolean)\n\nDetermines whether the recommended reservation is size flexible.\n\nRecommendedNumberOfInstancesToPurchase -> (string)\n\nThe number of instances that Amazon Web Services recommends that you purchase.\n\nRecommendedNormalizedUnitsToPurchase -> (string)\n\nThe number of normalized units that Amazon Web Services recommends that you purchase.\n\nMinimumNumberOfInstancesUsedPerHour -> (string)\n\nThe minimum number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nMinimumNormalizedUnitsUsedPerHour -> (string)\n\nThe minimum number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nMaximumNumberOfInstancesUsedPerHour -> (string)\n\nThe maximum number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nMaximumNormalizedUnitsUsedPerHour -> (string)\n\nThe maximum number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nAverageNumberOfInstancesUsedPerHour -> (string)\n\nThe average number of instances that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nAverageNormalizedUnitsUsedPerHour -> (string)\n\nThe average number of normalized units that you used in an hour during the historical period. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nAverageUtilization -> (string)\n\nThe average utilization of your instances. Amazon Web Services uses this to calculate your recommended reservation purchases.\n\nEstimatedBreakEvenInMonths -> (string)\n\nHow long Amazon Web Services estimates that it takes for this instance to start saving you money, in months.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to calculate the costs for this instance.\n\nEstimatedMonthlySavingsAmount -> (string)\n\nHow much Amazon Web Services estimates that this specific recommendation could save you in a month.\n\nEstimatedMonthlySavingsPercentage -> (string)\n\nHow much Amazon Web Services estimates that this specific recommendation could save you in a month, as a percentage of your overall costs.\n\nEstimatedMonthlyOnDemandCost -> (string)\n\nHow much Amazon Web Services estimates that you spend on On-Demand Instances in a month.\n\nEstimatedReservationCostForLookbackPeriod -> (string)\n\nHow much Amazon Web Services estimates that you would have spent for all usage during the specified historical period if you had a reservation.\n\nUpfrontCost -> (string)\n\nHow much purchasing this instance costs you upfront.\n\nRecurringStandardMonthlyCost -> (string)\n\nHow much purchasing this instance costs you on a monthly basis.\n\nRecommendationSummary -> (structure)\n\nA summary about the recommended purchase.\n\nTotalEstimatedMonthlySavingsAmount -> (string)\n\nThe total amount that Amazon Web Services estimates that this recommendation could save you in a month.\n\nTotalEstimatedMonthlySavingsPercentage -> (string)\n\nThe total amount that Amazon Web Services estimates that this recommendation could save you in a month, as a percentage of your costs.\n\nCurrencyCode -> (string)\n\nThe currency code used for this recommendation.\n\nNextPageToken -> (string)\n\nThe pagination token for the next set of retrievable results.",
      "command_examples": "Examples\n\nTo retrieve the reservation recommendations for Partial Upfront EC2 RIs with a three year term\n\nThe following get-reservation-purchase-recommendation example retrieves recommendations for Partial Upfront EC2 instances with a three-year term, based on the last 60 days of EC2 usage.\n\naws ce get-reservation-purchase-recommendation \\\n    --service \"Amazon Redshift\" \\\n    --lookback-period-in-days SIXTY_DAYS \\\n    --term-in-years THREE_YEARS \\\n    --payment-option PARTIAL_UPFRONT\n\n\nOutput:\n\n{\n    \"Recommendations\": [],\n    \"Metadata\": {\n        \"GenerationTimestamp\": \"2018-08-08T15:20:57Z\",\n        \"RecommendationId\": \"00d59dde-a1ad-473f-8ff2-iexample3330b\"\n    }\n}\n"
    },
    {
      "command_name": "get-reservation-utilization",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-reservation-utilization.html",
      "command_description": "Description\n\nRetrieves the reservation utilization for your account. Management account in an organization have access to member accounts. You can filter data by dimensions in a time period. You can use GetDimensionValues to determine the possible dimension values. Currently, you can group only by SUBSCRIPTION_ID .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-reservation-utilization\n--time-period <value>\n[--group-by <value>]\n[--granularity <value>]\n[--filter <value>]\n[--sort-by <value>]\n[--next-page-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "[--group-by <value>]",
        "[--granularity <value>]",
        "[--filter <value>]",
        "[--sort-by <value>]",
        "[--next-page-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nSets the start and end dates for retrieving RI utilization. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--group-by (list)\n\nGroups only by SUBSCRIPTION_ID . Metadata is included.\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nShorthand Syntax:\n\nType=string,Key=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\",\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--granularity (string)\n\nIf GroupBy is set, Granularity can’t be set. If Granularity isn’t set, the response object doesn’t include Granularity , either MONTHLY or DAILY . If both GroupBy and Granularity aren’t set, GetReservationUtilization defaults to DAILY .\n\nThe GetReservationUtilization operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters utilization data by dimensions. You can filter by the following dimensions:\n\nAZ\n\nCACHE_ENGINE\n\nDEPLOYMENT_OPTION\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nOPERATING_SYSTEM\n\nPLATFORM\n\nREGION\n\nSERVICE\n\nSCOPE\n\nTENANCY\n\nGetReservationUtilization uses the same Expression object as the other operations, but only AND is supported among each dimension, and nesting is supported up to only one level deep. If there are multiple values for a dimension, they are OR’d together.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--sort-by (structure)\n\nThe value by which you want to sort the data.\n\nThe following values are supported for Key :\n\nUtilizationPercentage\n\nUtilizationPercentageInUnits\n\nPurchasedHours\n\nPurchasedUnits\n\nTotalActualHours\n\nTotalActualUnits\n\nUnusedHours\n\nUnusedUnits\n\nOnDemandCostOfRIHoursUsed\n\nNetRISavings\n\nTotalPotentialRISavings\n\nAmortizedUpfrontFee\n\nAmortizedRecurringFee\n\nTotalAmortizedFee\n\nRICostForUnusedHours\n\nRealizedSavings\n\nUnrealizedSavings\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string\n\n\nJSON Syntax:\n\n{\n  \"Key\": \"string\",\n  \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n}\n\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe maximum number of objects that you returned for this request. If more objects are available, in the response, Amazon Web Services provides a NextPageToken value that you can use in a subsequent call to get the next batch of objects.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nUtilizationsByTime -> (list)\n\nThe amount of time that you used your RIs.\n\n(structure)\n\nThe amount of utilization, in hours.\n\nTimePeriod -> (structure)\n\nThe period of time that this utilization was used for.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nGroups -> (list)\n\nThe groups that this utilization result uses.\n\n(structure)\n\nA group of reservations that share a set of attributes.\n\nKey -> (string)\n\nThe key for a specific reservation attribute.\n\nValue -> (string)\n\nThe value of a specific reservation attribute.\n\nAttributes -> (map)\n\nThe attributes for this group of reservations.\n\nkey -> (string)\n\nvalue -> (string)\n\nUtilization -> (structure)\n\nHow much you used this group of reservations.\n\nUtilizationPercentage -> (string)\n\nThe percentage of reservation time that you used.\n\nUtilizationPercentageInUnits -> (string)\n\nThe percentage of Amazon EC2 reservation time that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nPurchasedHours -> (string)\n\nHow many reservation hours that you purchased.\n\nPurchasedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you purchased. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nTotalActualHours -> (string)\n\nThe total number of reservation hours that you used.\n\nTotalActualUnits -> (string)\n\nThe total number of Amazon EC2 reservation hours that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nUnusedHours -> (string)\n\nThe number of reservation hours that you didn’t use.\n\nUnusedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you didn’t use. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nOnDemandCostOfRIHoursUsed -> (string)\n\nHow much your reservation costs if charged On-Demand rates.\n\nNetRISavings -> (string)\n\nHow much you saved due to purchasing and utilizing reservation. Amazon Web Services calculates this by subtracting TotalAmortizedFee from OnDemandCostOfRIHoursUsed .\n\nTotalPotentialRISavings -> (string)\n\nHow much you might save if you use your entire reservation.\n\nAmortizedUpfrontFee -> (string)\n\nThe upfront cost of your reservation. It’s amortized over the reservation period.\n\nAmortizedRecurringFee -> (string)\n\nThe monthly cost of your reservation. It’s amortized over the reservation period.\n\nTotalAmortizedFee -> (string)\n\nThe total cost of your reservation. It’s amortized over the reservation period.\n\nRICostForUnusedHours -> (string)\n\nThe cost of unused hours for your reservation.\n\nRealizedSavings -> (string)\n\nThe realized savings because of purchasing and using a reservation.\n\nUnrealizedSavings -> (string)\n\nThe unrealized savings because of purchasing and using a reservation.\n\nTotal -> (structure)\n\nThe total number of reservation hours that were used.\n\nUtilizationPercentage -> (string)\n\nThe percentage of reservation time that you used.\n\nUtilizationPercentageInUnits -> (string)\n\nThe percentage of Amazon EC2 reservation time that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nPurchasedHours -> (string)\n\nHow many reservation hours that you purchased.\n\nPurchasedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you purchased. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nTotalActualHours -> (string)\n\nThe total number of reservation hours that you used.\n\nTotalActualUnits -> (string)\n\nThe total number of Amazon EC2 reservation hours that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nUnusedHours -> (string)\n\nThe number of reservation hours that you didn’t use.\n\nUnusedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you didn’t use. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nOnDemandCostOfRIHoursUsed -> (string)\n\nHow much your reservation costs if charged On-Demand rates.\n\nNetRISavings -> (string)\n\nHow much you saved due to purchasing and utilizing reservation. Amazon Web Services calculates this by subtracting TotalAmortizedFee from OnDemandCostOfRIHoursUsed .\n\nTotalPotentialRISavings -> (string)\n\nHow much you might save if you use your entire reservation.\n\nAmortizedUpfrontFee -> (string)\n\nThe upfront cost of your reservation. It’s amortized over the reservation period.\n\nAmortizedRecurringFee -> (string)\n\nThe monthly cost of your reservation. It’s amortized over the reservation period.\n\nTotalAmortizedFee -> (string)\n\nThe total cost of your reservation. It’s amortized over the reservation period.\n\nRICostForUnusedHours -> (string)\n\nThe cost of unused hours for your reservation.\n\nRealizedSavings -> (string)\n\nThe realized savings because of purchasing and using a reservation.\n\nUnrealizedSavings -> (string)\n\nThe unrealized savings because of purchasing and using a reservation.\n\nTotal -> (structure)\n\nThe total amount of time that you used your RIs.\n\nUtilizationPercentage -> (string)\n\nThe percentage of reservation time that you used.\n\nUtilizationPercentageInUnits -> (string)\n\nThe percentage of Amazon EC2 reservation time that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nPurchasedHours -> (string)\n\nHow many reservation hours that you purchased.\n\nPurchasedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you purchased. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nTotalActualHours -> (string)\n\nThe total number of reservation hours that you used.\n\nTotalActualUnits -> (string)\n\nThe total number of Amazon EC2 reservation hours that you used. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nUnusedHours -> (string)\n\nThe number of reservation hours that you didn’t use.\n\nUnusedUnits -> (string)\n\nThe number of Amazon EC2 reservation hours that you didn’t use. It’s converted to normalized units. Normalized units are available only for Amazon EC2 usage after November 11, 2017.\n\nOnDemandCostOfRIHoursUsed -> (string)\n\nHow much your reservation costs if charged On-Demand rates.\n\nNetRISavings -> (string)\n\nHow much you saved due to purchasing and utilizing reservation. Amazon Web Services calculates this by subtracting TotalAmortizedFee from OnDemandCostOfRIHoursUsed .\n\nTotalPotentialRISavings -> (string)\n\nHow much you might save if you use your entire reservation.\n\nAmortizedUpfrontFee -> (string)\n\nThe upfront cost of your reservation. It’s amortized over the reservation period.\n\nAmortizedRecurringFee -> (string)\n\nThe monthly cost of your reservation. It’s amortized over the reservation period.\n\nTotalAmortizedFee -> (string)\n\nThe total cost of your reservation. It’s amortized over the reservation period.\n\nRICostForUnusedHours -> (string)\n\nThe cost of unused hours for your reservation.\n\nRealizedSavings -> (string)\n\nThe realized savings because of purchasing and using a reservation.\n\nUnrealizedSavings -> (string)\n\nThe unrealized savings because of purchasing and using a reservation.\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.",
      "command_examples": "Examples\n\nTo retrieve the reservation utilization for your account\n\nThe following get-reservation-utilization example retrieves the RI utilization for all t2.nano instance types from 2018-03-01 to 2018-08-01 for the account.\n\naws ce get-reservation-utilization \\\n    --time-period Start=2018-03-01,End=2018-08-01 \\\n    --filter file://filters.json\n\n\nContents of filters.json:\n\n{\n    \"Dimensions\": {\n        \"Key\": \"INSTANCE_TYPE\",\n        \"Values\": [\n            \"t2.nano\"\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"Total\": {\n        \"TotalAmortizedFee\": \"0\",\n        \"UtilizationPercentage\": \"0\",\n        \"PurchasedHours\": \"0\",\n        \"NetRISavings\": \"0\",\n        \"TotalActualHours\": \"0\",\n        \"AmortizedRecurringFee\": \"0\",\n        \"UnusedHours\": \"0\",\n        \"TotalPotentialRISavings\": \"0\",\n        \"OnDemandCostOfRIHoursUsed\": \"0\",\n        \"AmortizedUpfrontFee\": \"0\"\n    },\n    \"UtilizationsByTime\": []\n}\n"
    },
    {
      "command_name": "get-rightsizing-recommendation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-rightsizing-recommendation.html",
      "command_description": "Description\n\nCreates recommendations that help you save cost by identifying idle and underutilized Amazon EC2 instances.\n\nRecommendations are generated to either downsize or terminate instances, along with providing savings detail and metrics. For details on calculation and function, see Optimizing Your Cost with Rightsizing Recommendations in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-rightsizing-recommendation\n[--filter <value>]\n[--configuration <value>]\n--service <value>\n[--page-size <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filter <value>]",
        "[--configuration <value>]",
        "--service <value>",
        "[--page-size <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filter (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--configuration (structure)\n\nEnables you to customize recommendations across two attributes. You can choose to view recommendations for instances within the same instance families or across different instance families. You can also choose to view your estimated savings associated with recommendations with consideration of existing Savings Plans or RI benefits, or neither.\n\nRecommendationTarget -> (string)\n\nThe option to see recommendations within the same instance family or recommendations for instances across other families. The default value is SAME_INSTANCE_FAMILY .\n\nBenefitsConsidered -> (boolean)\n\nThe option to consider RI or Savings Plans discount benefits in your savings calculation. The default value is TRUE .\n\nShorthand Syntax:\n\nRecommendationTarget=string,BenefitsConsidered=boolean\n\n\nJSON Syntax:\n\n{\n  \"RecommendationTarget\": \"SAME_INSTANCE_FAMILY\"|\"CROSS_INSTANCE_FAMILY\",\n  \"BenefitsConsidered\": true|false\n}\n\n\n--service (string)\n\nThe specific service that you want recommendations for. The only valid value for GetRightsizingRecommendation is “AmazonEC2 “.\n\n--page-size (integer)\n\nThe number of recommendations that you want returned in a single response object.\n\n--next-page-token (string)\n\nThe pagination token that indicates the next set of results that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMetadata -> (structure)\n\nInformation regarding this specific recommendation set.\n\nRecommendationId -> (string)\n\nThe ID for this specific recommendation.\n\nGenerationTimestamp -> (string)\n\nThe timestamp for when Amazon Web Services made this recommendation.\n\nLookbackPeriodInDays -> (string)\n\nThe number of days of previous usage that Amazon Web Services considers when making this recommendation.\n\nAdditionalMetadata -> (string)\n\nAdditional metadata that might be applicable to the recommendation.\n\nSummary -> (structure)\n\nSummary of this recommendation set.\n\nTotalRecommendationCount -> (string)\n\nThe total number of instance recommendations.\n\nEstimatedTotalMonthlySavingsAmount -> (string)\n\nThe estimated total savings resulting from modifications, on a monthly basis.\n\nSavingsCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to calculate the savings.\n\nSavingsPercentage -> (string)\n\nThe savings percentage based on the recommended modifications. It’s relative to the total On-Demand costs that are associated with these instances.\n\nRightsizingRecommendations -> (list)\n\nRecommendations to rightsize resources.\n\n(structure)\n\nRecommendations to rightsize resources.\n\nAccountId -> (string)\n\nThe account that this recommendation is for.\n\nCurrentInstance -> (structure)\n\nContext regarding the current instance.\n\nResourceId -> (string)\n\nResource ID of the current instance.\n\nInstanceName -> (string)\n\nThe name that you given an instance. This field shows as blank if you haven’t given the instance a name.\n\nTags -> (list)\n\nCost allocation resource tags that are applied to the instance.\n\n(structure)\n\nThe values that are available for a tag.\n\nIf Values and Key aren’t specified, the ABSENT MatchOption is applied to all tags. That is, it’s filtered on resources with no tags.\n\nIf Values is provided and Key isn’t specified, the ABSENT MatchOption is applied to the tag Key only. That is, it’s filtered on resources without the given tag key.\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nResourceDetails -> (structure)\n\nDetails about the resource and utilization.\n\nEC2ResourceDetails -> (structure)\n\nDetails on the Amazon EC2 resource.\n\nHourlyOnDemandRate -> (string)\n\nThe hourly public On-Demand rate for the instance type.\n\nInstanceType -> (string)\n\nThe type of Amazon Web Services instance.\n\nPlatform -> (string)\n\nThe platform of the Amazon Web Services instance. The platform is the specific combination of operating system, license model, and software on an instance.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the instance.\n\nSku -> (string)\n\nThe SKU of the product.\n\nMemory -> (string)\n\nThe memory capacity of the Amazon Web Services instance.\n\nNetworkPerformance -> (string)\n\nThe network performance capacity of the Amazon Web Services instance.\n\nStorage -> (string)\n\nThe disk storage of the Amazon Web Services instance. This doesn’t include EBS storage.\n\nVcpu -> (string)\n\nThe number of VCPU cores in the Amazon Web Services instance type.\n\nResourceUtilization -> (structure)\n\nUtilization information of the current instance during the lookback period.\n\nEC2ResourceUtilization -> (structure)\n\nThe utilization of current Amazon EC2 instance.\n\nMaxCpuUtilizationPercentage -> (string)\n\nThe maximum observed or expected CPU utilization of the instance.\n\nMaxMemoryUtilizationPercentage -> (string)\n\nThe maximum observed or expected memory utilization of the instance.\n\nMaxStorageUtilizationPercentage -> (string)\n\nThe maximum observed or expected storage utilization of the instance. This doesn’t include EBS storage.\n\nEBSResourceUtilization -> (structure)\n\nThe EBS field that contains a list of EBS metrics that are associated with the current instance.\n\nEbsReadOpsPerSecond -> (string)\n\nThe maximum number of read operations per second.\n\nEbsWriteOpsPerSecond -> (string)\n\nThe maximum number of write operations per second.\n\nEbsReadBytesPerSecond -> (string)\n\nThe maximum size of read operations per second\n\nEbsWriteBytesPerSecond -> (string)\n\nThe maximum size of write operations per second.\n\nDiskResourceUtilization -> (structure)\n\nThe field that contains a list of disk (local storage) metrics that are associated with the current instance.\n\nDiskReadOpsPerSecond -> (string)\n\nThe maximum number of read operations per second.\n\nDiskWriteOpsPerSecond -> (string)\n\nThe maximum number of write operations per second.\n\nDiskReadBytesPerSecond -> (string)\n\nThe maximum read throughput operations per second.\n\nDiskWriteBytesPerSecond -> (string)\n\nThe maximum write throughput operations per second.\n\nNetworkResourceUtilization -> (structure)\n\nThe network field that contains a list of network metrics that are associated with the current instance.\n\nNetworkInBytesPerSecond -> (string)\n\nThe network inbound throughput utilization measured in Bytes per second.\n\nNetworkOutBytesPerSecond -> (string)\n\nThe network outbound throughput utilization measured in Bytes per second.\n\nNetworkPacketsInPerSecond -> (string)\n\nThe network ingress packets that are measured in packets per second.\n\nNetworkPacketsOutPerSecond -> (string)\n\nThe network outgress packets that are measured in packets per second.\n\nReservationCoveredHoursInLookbackPeriod -> (string)\n\nThe number of hours during the lookback period that’s covered by reservations.\n\nSavingsPlansCoveredHoursInLookbackPeriod -> (string)\n\nThe number of hours during the lookback period that’s covered by Savings Plans.\n\nOnDemandHoursInLookbackPeriod -> (string)\n\nThe number of hours during the lookback period that’s billed at On-Demand rates.\n\nTotalRunningHoursInLookbackPeriod -> (string)\n\nThe total number of hours that the instance ran during the lookback period.\n\nMonthlyCost -> (string)\n\nThe current On-Demand cost of operating this instance on a monthly basis.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to calculate the costs for this instance.\n\nRightsizingType -> (string)\n\nA recommendation to either terminate or modify the resource.\n\nModifyRecommendationDetail -> (structure)\n\nThe details for the modification recommendations.\n\nTargetInstances -> (list)\n\nDetermines whether this instance type is the Amazon Web Services default recommendation.\n\n(structure)\n\nDetails on recommended instance.\n\nEstimatedMonthlyCost -> (string)\n\nThe expected cost to operate this instance type on a monthly basis.\n\nEstimatedMonthlySavings -> (string)\n\nThe estimated savings that result from modification, on a monthly basis.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to calculate the costs for this instance.\n\nDefaultTargetInstance -> (boolean)\n\nDetermines whether this recommendation is the defaulted Amazon Web Services recommendation.\n\nResourceDetails -> (structure)\n\nDetails on the target instance type.\n\nEC2ResourceDetails -> (structure)\n\nDetails on the Amazon EC2 resource.\n\nHourlyOnDemandRate -> (string)\n\nThe hourly public On-Demand rate for the instance type.\n\nInstanceType -> (string)\n\nThe type of Amazon Web Services instance.\n\nPlatform -> (string)\n\nThe platform of the Amazon Web Services instance. The platform is the specific combination of operating system, license model, and software on an instance.\n\nRegion -> (string)\n\nThe Amazon Web Services Region of the instance.\n\nSku -> (string)\n\nThe SKU of the product.\n\nMemory -> (string)\n\nThe memory capacity of the Amazon Web Services instance.\n\nNetworkPerformance -> (string)\n\nThe network performance capacity of the Amazon Web Services instance.\n\nStorage -> (string)\n\nThe disk storage of the Amazon Web Services instance. This doesn’t include EBS storage.\n\nVcpu -> (string)\n\nThe number of VCPU cores in the Amazon Web Services instance type.\n\nExpectedResourceUtilization -> (structure)\n\nThe expected utilization metrics for target instance type.\n\nEC2ResourceUtilization -> (structure)\n\nThe utilization of current Amazon EC2 instance.\n\nMaxCpuUtilizationPercentage -> (string)\n\nThe maximum observed or expected CPU utilization of the instance.\n\nMaxMemoryUtilizationPercentage -> (string)\n\nThe maximum observed or expected memory utilization of the instance.\n\nMaxStorageUtilizationPercentage -> (string)\n\nThe maximum observed or expected storage utilization of the instance. This doesn’t include EBS storage.\n\nEBSResourceUtilization -> (structure)\n\nThe EBS field that contains a list of EBS metrics that are associated with the current instance.\n\nEbsReadOpsPerSecond -> (string)\n\nThe maximum number of read operations per second.\n\nEbsWriteOpsPerSecond -> (string)\n\nThe maximum number of write operations per second.\n\nEbsReadBytesPerSecond -> (string)\n\nThe maximum size of read operations per second\n\nEbsWriteBytesPerSecond -> (string)\n\nThe maximum size of write operations per second.\n\nDiskResourceUtilization -> (structure)\n\nThe field that contains a list of disk (local storage) metrics that are associated with the current instance.\n\nDiskReadOpsPerSecond -> (string)\n\nThe maximum number of read operations per second.\n\nDiskWriteOpsPerSecond -> (string)\n\nThe maximum number of write operations per second.\n\nDiskReadBytesPerSecond -> (string)\n\nThe maximum read throughput operations per second.\n\nDiskWriteBytesPerSecond -> (string)\n\nThe maximum write throughput operations per second.\n\nNetworkResourceUtilization -> (structure)\n\nThe network field that contains a list of network metrics that are associated with the current instance.\n\nNetworkInBytesPerSecond -> (string)\n\nThe network inbound throughput utilization measured in Bytes per second.\n\nNetworkOutBytesPerSecond -> (string)\n\nThe network outbound throughput utilization measured in Bytes per second.\n\nNetworkPacketsInPerSecond -> (string)\n\nThe network ingress packets that are measured in packets per second.\n\nNetworkPacketsOutPerSecond -> (string)\n\nThe network outgress packets that are measured in packets per second.\n\nPlatformDifferences -> (list)\n\nExplains the actions you might need to take in order to successfully migrate your workloads from the current instance type to the recommended instance type.\n\n(string)\n\nTerminateRecommendationDetail -> (structure)\n\nThe details for termination recommendations.\n\nEstimatedMonthlySavings -> (string)\n\nThe estimated savings that result from modification, on a monthly basis.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to calculate the costs for this instance.\n\nFindingReasonCodes -> (list)\n\nThe list of possible reasons why the recommendation is generated such as under or over utilization of specific metrics (for example, CPU, Memory, Network).\n\n(string)\n\nNextPageToken -> (string)\n\nThe token to retrieve the next set of results.\n\nConfiguration -> (structure)\n\nEnables you to customize recommendations across two attributes. You can choose to view recommendations for instances within the same instance families or across different instance families. You can also choose to view your estimated savings associated with recommendations with consideration of existing Savings Plans or RI benefits, or neither.\n\nRecommendationTarget -> (string)\n\nThe option to see recommendations within the same instance family or recommendations for instances across other families. The default value is SAME_INSTANCE_FAMILY .\n\nBenefitsConsidered -> (boolean)\n\nThe option to consider RI or Savings Plans discount benefits in your savings calculation. The default value is TRUE ."
    },
    {
      "command_name": "get-savings-plans-coverage",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-savings-plans-coverage.html",
      "command_description": "Description\n\nRetrieves the Savings Plans covered for your account. This enables you to see how much of your cost is covered by a Savings Plan. An organization’s management account can see the coverage of the associated member accounts. This supports dimensions, Cost Categories, and nested expressions. For any time period, you can filter data for Savings Plans usage with the following dimensions:\n\nLINKED_ACCOUNT\n\nREGION\n\nSERVICE\n\nINSTANCE_FAMILY\n\nTo determine valid values for a dimension, use the GetDimensionValues operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-savings-plans-coverage\n--time-period <value>\n[--group-by <value>]\n[--granularity <value>]\n[--filter <value>]\n[--metrics <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "[--group-by <value>]",
        "[--granularity <value>]",
        "[--filter <value>]",
        "[--metrics <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe time period that you want the usage and costs for. The Start date must be within 13 months. The End date must be after the Start date, and before the current date. Future dates can’t be used as an End date.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--group-by (list)\n\nYou can group the data using the attributes INSTANCE_FAMILY , REGION , or SERVICE .\n\n(structure)\n\nRepresents a group when you specify a group by criteria or in the response to a query with a specific grouping.\n\nType -> (string)\n\nThe string that represents the type of group.\n\nKey -> (string)\n\nThe string that represents a key for a specified group.\n\nShorthand Syntax:\n\nType=string,Key=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Type\": \"DIMENSION\"|\"TAG\"|\"COST_CATEGORY\",\n    \"Key\": \"string\"\n  }\n  ...\n]\n\n\n--granularity (string)\n\nThe granularity of the Amazon Web Services cost data for your Savings Plans. Granularity can’t be set if GroupBy is set.\n\nThe GetSavingsPlansCoverage operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters Savings Plans coverage data by dimensions. You can filter data for Savings Plans usage with the following dimensions:\n\nLINKED_ACCOUNT\n\nREGION\n\nSERVICE\n\nINSTANCE_FAMILY\n\nGetSavingsPlansCoverage uses the same Expression object as the other operations, but only AND is supported among each dimension. If there are multiple values for a dimension, they are OR’d together.\n\nCost category is also supported.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--metrics (list)\n\nThe measurement that you want your Savings Plans coverage reported in. The only valid value is SpendCoveredBySavingsPlans .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--next-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of items to be returned in a response. The default is 20 , with a minimum value of 1 .\n\n--sort-by (structure)\n\nThe value by which you want to sort the data.\n\nThe following values are supported for Key :\n\nSpendCoveredBySavingsPlan\n\nOnDemandCost\n\nCoveragePercentage\n\nTotalCost\n\nInstanceFamily\n\nRegion\n\nService\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string\n\n\nJSON Syntax:\n\n{\n  \"Key\": \"string\",\n  \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSavingsPlansCoverages -> (list)\n\nThe amount of spend that your Savings Plans covered.\n\n(structure)\n\nThe amount of Savings Plans eligible usage that is covered by Savings Plans. All calculations consider the On-Demand equivalent of your Savings Plans usage.\n\nAttributes -> (map)\n\nThe attribute that applies to a specific Dimension .\n\nkey -> (string)\n\nvalue -> (string)\n\nCoverage -> (structure)\n\nThe amount of Savings Plans eligible usage that the Savings Plans covered.\n\nSpendCoveredBySavingsPlans -> (string)\n\nThe amount of your Amazon Web Services usage that is covered by a Savings Plans.\n\nOnDemandCost -> (string)\n\nThe cost of your Amazon Web Services usage at the public On-Demand rate.\n\nTotalCost -> (string)\n\nThe total cost of your Amazon Web Services usage, regardless of your purchase option.\n\nCoveragePercentage -> (string)\n\nThe percentage of your existing Savings Plans covered usage, divided by all of your eligible Savings Plans usage in an account (or set of accounts).\n\nTimePeriod -> (structure)\n\nThe time period of the request.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nNextToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-savings-plans-purchase-recommendation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-savings-plans-purchase-recommendation.html",
      "command_description": "Description\n\nRetrieves your request parameters, Savings Plan Recommendations Summary and Details.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-savings-plans-purchase-recommendation\n--savings-plans-type <value>\n--term-in-years <value>\n--payment-option <value>\n[--account-scope <value>]\n[--next-page-token <value>]\n[--page-size <value>]\n--lookback-period-in-days <value>\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--savings-plans-type <value>",
        "--term-in-years <value>",
        "--payment-option <value>",
        "[--account-scope <value>]",
        "[--next-page-token <value>]",
        "[--page-size <value>]",
        "--lookback-period-in-days <value>",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--savings-plans-type (string)\n\nThe Savings Plans recommendation type requested.\n\nPossible values:\n\nCOMPUTE_SP\n\nEC2_INSTANCE_SP\n\nSAGEMAKER_SP\n\n--term-in-years (string)\n\nThe savings plan recommendation term used to generate these recommendations.\n\nPossible values:\n\nONE_YEAR\n\nTHREE_YEARS\n\n--payment-option (string)\n\nThe payment option used to generate these recommendations.\n\nPossible values:\n\nNO_UPFRONT\n\nPARTIAL_UPFRONT\n\nALL_UPFRONT\n\nLIGHT_UTILIZATION\n\nMEDIUM_UTILIZATION\n\nHEAVY_UTILIZATION\n\n--account-scope (string)\n\nThe account scope that you want your recommendations for. Amazon Web Services calculates recommendations including the management account and member accounts if the value is set to PAYER . If the value is LINKED , recommendations are calculated for individual member accounts only.\n\nPossible values:\n\nPAYER\n\nLINKED\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--page-size (integer)\n\nThe number of recommendations that you want returned in a single response object.\n\n--lookback-period-in-days (string)\n\nThe lookback period used to generate the recommendation.\n\nPossible values:\n\nSEVEN_DAYS\n\nTHIRTY_DAYS\n\nSIXTY_DAYS\n\n--filter (structure)\n\nYou can filter your recommendations by Account ID with the LINKED_ACCOUNT dimension. To filter your recommendations by Account ID, specify Key as LINKED_ACCOUNT and Value as the comma-separated Acount ID(s) for which you want to see Savings Plans purchase recommendations.\n\nFor GetSavingsPlansPurchaseRecommendation, the Filter does not include CostCategories or Tags . It only includes Dimensions . With Dimensions , Key must be LINKED_ACCOUNT and Value can be a single Account ID or multiple comma-separated Account IDs for which you want to see Savings Plans Purchase Recommendations. AND and OR operators are not supported.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMetadata -> (structure)\n\nInformation regarding this specific recommendation set.\n\nRecommendationId -> (string)\n\nThe unique identifier for the recommendation set.\n\nGenerationTimestamp -> (string)\n\nThe timestamp showing when the recommendations were generated.\n\nAdditionalMetadata -> (string)\n\nAdditional metadata that might be applicable to the recommendation.\n\nSavingsPlansPurchaseRecommendation -> (structure)\n\nContains your request parameters, Savings Plan Recommendations Summary, and Details.\n\nAccountScope -> (string)\n\nThe account scope that you want your recommendations for. Amazon Web Services calculates recommendations that include the management account and member accounts if the value is set to PAYER . If the value is LINKED , recommendations are calculated for individual member accounts only.\n\nSavingsPlansType -> (string)\n\nThe requested Savings Plans recommendation type.\n\nTermInYears -> (string)\n\nThe Savings Plans recommendation term in years. It’s used to generate the recommendation.\n\nPaymentOption -> (string)\n\nThe payment option used to generate the recommendation.\n\nLookbackPeriodInDays -> (string)\n\nThe lookback period in days, used to generate the recommendation.\n\nSavingsPlansPurchaseRecommendationDetails -> (list)\n\nDetails for the Savings Plans we recommend that you purchase to cover existing Savings Plans eligible workloads.\n\n(structure)\n\nDetails for your recommended Savings Plans.\n\nSavingsPlansDetails -> (structure)\n\nDetails for your recommended Savings Plans.\n\nRegion -> (string)\n\nA collection of Amazon Web Services resources in a geographic area. Each Amazon Web Services Region is isolated and independent of the other Regions.\n\nInstanceFamily -> (string)\n\nA group of instance types that Savings Plans applies to.\n\nOfferingId -> (string)\n\nThe unique ID that’s used to distinguish Savings Plans from one another.\n\nAccountId -> (string)\n\nThe AccountID the recommendation is generated for.\n\nUpfrontCost -> (string)\n\nThe upfront cost of the recommended Savings Plans, based on the selected payment option.\n\nEstimatedROI -> (string)\n\nThe estimated return on investment that’s based on the recommended Savings Plans that you purchased. This is calculated as estimatedSavingsAmount / estimatedSPCost *100.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to generate the recommendations and present potential savings.\n\nEstimatedSPCost -> (string)\n\nThe cost of the recommended Savings Plans over the length of the lookback period.\n\nEstimatedOnDemandCost -> (string)\n\nThe remaining On-Demand cost estimated to not be covered by the recommended Savings Plans, over the length of the lookback period.\n\nEstimatedOnDemandCostWithCurrentCommitment -> (string)\n\nThe estimated On-Demand costs you would expect with no additional commitment, based on your usage of the selected time period and the Savings Plans you own.\n\nEstimatedSavingsAmount -> (string)\n\nThe estimated savings amount that’s based on the recommended Savings Plans over the length of the lookback period.\n\nEstimatedSavingsPercentage -> (string)\n\nThe estimated savings percentage relative to the total cost of applicable On-Demand usage over the lookback period.\n\nHourlyCommitmentToPurchase -> (string)\n\nThe recommended hourly commitment level for the Savings Plans type and the configuration that’s based on the usage during the lookback period.\n\nEstimatedAverageUtilization -> (string)\n\nThe estimated utilization of the recommended Savings Plans.\n\nEstimatedMonthlySavingsAmount -> (string)\n\nThe estimated monthly savings amount based on the recommended Savings Plans.\n\nCurrentMinimumHourlyOnDemandSpend -> (string)\n\nThe lowest value of hourly On-Demand spend over the lookback period of the applicable usage type.\n\nCurrentMaximumHourlyOnDemandSpend -> (string)\n\nThe highest value of hourly On-Demand spend over the lookback period of the applicable usage type.\n\nCurrentAverageHourlyOnDemandSpend -> (string)\n\nThe average value of hourly On-Demand spend over the lookback period of the applicable usage type.\n\nSavingsPlansPurchaseRecommendationSummary -> (structure)\n\nSummary metrics for your Savings Plans Recommendations.\n\nEstimatedROI -> (string)\n\nThe estimated return on investment that’s based on the recommended Savings Plans and estimated savings.\n\nCurrencyCode -> (string)\n\nThe currency code that Amazon Web Services used to generate the recommendations and present potential savings.\n\nEstimatedTotalCost -> (string)\n\nThe estimated total cost of the usage after purchasing the recommended Savings Plans. This is a sum of the cost of Savings Plans during this term, and the remaining On-Demand usage.\n\nCurrentOnDemandSpend -> (string)\n\nThe current total on demand spend of the applicable usage types over the lookback period.\n\nEstimatedSavingsAmount -> (string)\n\nThe estimated total savings over the lookback period, based on the purchase of the recommended Savings Plans.\n\nTotalRecommendationCount -> (string)\n\nThe aggregate number of Savings Plans recommendations that exist for your account.\n\nDailyCommitmentToPurchase -> (string)\n\nThe recommended Savings Plans cost on a daily (24 hourly) basis.\n\nHourlyCommitmentToPurchase -> (string)\n\nThe recommended hourly commitment that’s based on the recommendation parameters.\n\nEstimatedSavingsPercentage -> (string)\n\nThe estimated savings relative to the total cost of On-Demand usage, over the lookback period. This is calculated as estimatedSavingsAmount / CurrentOnDemandSpend *100.\n\nEstimatedMonthlySavingsAmount -> (string)\n\nThe estimated monthly savings amount that’s based on the recommended Savings Plans purchase.\n\nEstimatedOnDemandCostWithCurrentCommitment -> (string)\n\nThe estimated On-Demand costs you would expect with no additional commitment. It’s based on your usage of the selected time period and the Savings Plans you own.\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-savings-plans-utilization",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-savings-plans-utilization.html",
      "command_description": "Description\n\nRetrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity. Management account in an organization have access to member accounts. You can use GetDimensionValues in SAVINGS_PLANS to determine the possible dimension values.\n\nNote\n\nYou cannot group by any dimension values for GetSavingsPlansUtilization .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-savings-plans-utilization\n--time-period <value>\n[--granularity <value>]\n[--filter <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "[--granularity <value>]",
        "[--filter <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe time period that you want the usage and costs for. The Start date must be within 13 months. The End date must be after the Start date, and before the current date. Future dates can’t be used as an End date.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--granularity (string)\n\nThe granularity of the Amazon Web Services utillization data for your Savings Plans.\n\nThe GetSavingsPlansUtilization operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nFilters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:\n\nLINKED_ACCOUNT\n\nSAVINGS_PLAN_ARN\n\nSAVINGS_PLANS_TYPE\n\nREGION\n\nPAYMENT_OPTION\n\nINSTANCE_TYPE_FAMILY\n\nGetSavingsPlansUtilization uses the same Expression object as the other operations, but only AND is supported among each dimension.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--sort-by (structure)\n\nThe value by which you want to sort the data.\n\nThe following values are supported for Key :\n\nUtilizationPercentage\n\nTotalCommitment\n\nUsedCommitment\n\nUnusedCommitment\n\nNetSavings\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string\n\n\nJSON Syntax:\n\n{\n  \"Key\": \"string\",\n  \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSavingsPlansUtilizationsByTime -> (list)\n\nThe amount of cost/commitment you used your Savings Plans. This allows you to specify date ranges.\n\n(structure)\n\nThe amount of Savings Plans utilization, in hours.\n\nTimePeriod -> (structure)\n\nThe time period of the request.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nUtilization -> (structure)\n\nA ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.\n\nTotalCommitment -> (string)\n\nThe total amount of Savings Plans commitment that’s been purchased in an account (or set of accounts).\n\nUsedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that was consumed from Savings Plans eligible usage in a specific period.\n\nUnusedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that wasn’t consumed from Savings Plans eligible usage in a specific period.\n\nUtilizationPercentage -> (string)\n\nThe amount of UsedCommitment divided by the TotalCommitment for your Savings Plans.\n\nSavings -> (structure)\n\nThe amount saved by using existing Savings Plans. Savings returns both net savings from Savings Plans as well as the onDemandCostEquivalent of the Savings Plans when considering the utilization rate.\n\nNetSavings -> (string)\n\nThe savings amount that you’re accumulating for the usage that’s covered by a Savings Plans, when compared to the On-Demand equivalent of the same usage.\n\nOnDemandCostEquivalent -> (string)\n\nHow much the amount that the usage would have cost if it was accrued at the On-Demand rate.\n\nAmortizedCommitment -> (structure)\n\nThe total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.\n\nAmortizedRecurringCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with either a Partial or a NoUpfront .\n\nAmortizedUpfrontCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with an Upfront or PartialUpfront Savings Plans.\n\nTotalAmortizedCommitment -> (string)\n\nThe total amortized amount of your Savings Plans commitment, regardless of your Savings Plans purchase method.\n\nTotal -> (structure)\n\nThe total amount of cost/commitment that you used your Savings Plans, regardless of date ranges.\n\nUtilization -> (structure)\n\nA ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.\n\nTotalCommitment -> (string)\n\nThe total amount of Savings Plans commitment that’s been purchased in an account (or set of accounts).\n\nUsedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that was consumed from Savings Plans eligible usage in a specific period.\n\nUnusedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that wasn’t consumed from Savings Plans eligible usage in a specific period.\n\nUtilizationPercentage -> (string)\n\nThe amount of UsedCommitment divided by the TotalCommitment for your Savings Plans.\n\nSavings -> (structure)\n\nThe amount saved by using existing Savings Plans. Savings returns both net savings from Savings Plans, as well as the onDemandCostEquivalent of the Savings Plans when considering the utilization rate.\n\nNetSavings -> (string)\n\nThe savings amount that you’re accumulating for the usage that’s covered by a Savings Plans, when compared to the On-Demand equivalent of the same usage.\n\nOnDemandCostEquivalent -> (string)\n\nHow much the amount that the usage would have cost if it was accrued at the On-Demand rate.\n\nAmortizedCommitment -> (structure)\n\nThe total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.\n\nAmortizedRecurringCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with either a Partial or a NoUpfront .\n\nAmortizedUpfrontCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with an Upfront or PartialUpfront Savings Plans.\n\nTotalAmortizedCommitment -> (string)\n\nThe total amortized amount of your Savings Plans commitment, regardless of your Savings Plans purchase method."
    },
    {
      "command_name": "get-savings-plans-utilization-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-savings-plans-utilization-details.html",
      "command_description": "Description\n\nRetrieves attribute data along with aggregate utilization and savings data for a given time period. This doesn’t support granular or grouped data (daily/monthly) in response. You can’t retrieve data by dates in a single response similar to GetSavingsPlanUtilization , but you have the option to make multiple calls to GetSavingsPlanUtilizationDetails by providing individual dates. You can use GetDimensionValues in SAVINGS_PLANS to determine the possible dimension values.\n\nNote\n\nGetSavingsPlanUtilizationDetails internally groups data by SavingsPlansArn .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-savings-plans-utilization-details\n--time-period <value>\n[--filter <value>]\n[--data-type <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--sort-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "[--filter <value>]",
        "[--data-type <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--sort-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe time period that you want the usage and costs for. The Start date must be within 13 months. The End date must be after the Start date, and before the current date. Future dates can’t be used as an End date.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--filter (structure)\n\nFilters Savings Plans utilization coverage data for active Savings Plans dimensions. You can filter data with the following dimensions:\n\nLINKED_ACCOUNT\n\nSAVINGS_PLAN_ARN\n\nREGION\n\nPAYMENT_OPTION\n\nINSTANCE_TYPE_FAMILY\n\nGetSavingsPlansUtilizationDetails uses the same Expression object as the other operations, but only AND is supported among each dimension.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--data-type (list)\n\nThe data type.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  ATTRIBUTES\n  UTILIZATION\n  AMORTIZED_COMMITMENT\n  SAVINGS\n\n\n--next-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of items to be returned in a response. The default is 20 , with a minimum value of 1 .\n\n--sort-by (structure)\n\nThe value by which you want to sort the data.\n\nThe following values are supported for Key :\n\nUtilizationPercentage\n\nTotalCommitment\n\nUsedCommitment\n\nUnusedCommitment\n\nNetSavings\n\nAmortizedRecurringCommitment\n\nAmortizedUpfrontCommitment\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string\n\n\nJSON Syntax:\n\n{\n  \"Key\": \"string\",\n  \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSavingsPlansUtilizationDetails -> (list)\n\nRetrieves a single daily or monthly Savings Plans utilization rate and details for your account.\n\n(structure)\n\nA single daily or monthly Savings Plans utilization rate, and details for your account. A management account in an organization have access to member accounts. You can use GetDimensionValues to determine the possible dimension values.\n\nSavingsPlanArn -> (string)\n\nThe unique Amazon Resource Name (ARN) for a particular Savings Plan.\n\nAttributes -> (map)\n\nThe attribute that applies to a specific Dimension .\n\nkey -> (string)\n\nvalue -> (string)\n\nUtilization -> (structure)\n\nA ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.\n\nTotalCommitment -> (string)\n\nThe total amount of Savings Plans commitment that’s been purchased in an account (or set of accounts).\n\nUsedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that was consumed from Savings Plans eligible usage in a specific period.\n\nUnusedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that wasn’t consumed from Savings Plans eligible usage in a specific period.\n\nUtilizationPercentage -> (string)\n\nThe amount of UsedCommitment divided by the TotalCommitment for your Savings Plans.\n\nSavings -> (structure)\n\nThe amount saved by using existing Savings Plans. Savings returns both net savings from savings plans as well as the onDemandCostEquivalent of the Savings Plans when considering the utilization rate.\n\nNetSavings -> (string)\n\nThe savings amount that you’re accumulating for the usage that’s covered by a Savings Plans, when compared to the On-Demand equivalent of the same usage.\n\nOnDemandCostEquivalent -> (string)\n\nHow much the amount that the usage would have cost if it was accrued at the On-Demand rate.\n\nAmortizedCommitment -> (structure)\n\nThe total amortized commitment for a Savings Plans. Includes the sum of the upfront and recurring Savings Plans fees.\n\nAmortizedRecurringCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with either a Partial or a NoUpfront .\n\nAmortizedUpfrontCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with an Upfront or PartialUpfront Savings Plans.\n\nTotalAmortizedCommitment -> (string)\n\nThe total amortized amount of your Savings Plans commitment, regardless of your Savings Plans purchase method.\n\nTotal -> (structure)\n\nThe total Savings Plans utilization, regardless of time period.\n\nUtilization -> (structure)\n\nA ratio of your effectiveness of using existing Savings Plans to apply to workloads that are Savings Plans eligible.\n\nTotalCommitment -> (string)\n\nThe total amount of Savings Plans commitment that’s been purchased in an account (or set of accounts).\n\nUsedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that was consumed from Savings Plans eligible usage in a specific period.\n\nUnusedCommitment -> (string)\n\nThe amount of your Savings Plans commitment that wasn’t consumed from Savings Plans eligible usage in a specific period.\n\nUtilizationPercentage -> (string)\n\nThe amount of UsedCommitment divided by the TotalCommitment for your Savings Plans.\n\nSavings -> (structure)\n\nThe amount saved by using existing Savings Plans. Savings returns both net savings from Savings Plans, as well as the onDemandCostEquivalent of the Savings Plans when considering the utilization rate.\n\nNetSavings -> (string)\n\nThe savings amount that you’re accumulating for the usage that’s covered by a Savings Plans, when compared to the On-Demand equivalent of the same usage.\n\nOnDemandCostEquivalent -> (string)\n\nHow much the amount that the usage would have cost if it was accrued at the On-Demand rate.\n\nAmortizedCommitment -> (structure)\n\nThe total amortized commitment for a Savings Plans. This includes the sum of the upfront and recurring Savings Plans fees.\n\nAmortizedRecurringCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with either a Partial or a NoUpfront .\n\nAmortizedUpfrontCommitment -> (string)\n\nThe amortized amount of your Savings Plans commitment that was purchased with an Upfront or PartialUpfront Savings Plans.\n\nTotalAmortizedCommitment -> (string)\n\nThe total amortized amount of your Savings Plans commitment, regardless of your Savings Plans purchase method.\n\nTimePeriod -> (structure)\n\nThe time period of the request.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nNextToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "get-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-tags.html",
      "command_description": "Description\n\nQueries for available tag keys and tag values for a specified period. You can search the tag values for an arbitrary string.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-tags\n[--search-string <value>]\n--time-period <value>\n[--tag-key <value>]\n[--filter <value>]\n[--sort-by <value>]\n[--max-results <value>]\n[--next-page-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--search-string <value>]",
        "--time-period <value>",
        "[--tag-key <value>]",
        "[--filter <value>]",
        "[--sort-by <value>]",
        "[--max-results <value>]",
        "[--next-page-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--search-string (string)\n\nThe value that you want to search for.\n\n--time-period (structure)\n\nThe start and end dates for retrieving the dimension values. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 .\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--tag-key (string)\n\nThe key of the tag that you want to return values for.\n\n--filter (structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--sort-by (list)\n\nThe value by which you want to sort the data.\n\nThe key represents cost and usage metrics. The following values are supported:\n\nBlendedCost\n\nUnblendedCost\n\nAmortizedCost\n\nNetAmortizedCost\n\nNetUnblendedCost\n\nUsageQuantity\n\nNormalizedUsageAmount\n\nSupported values for SortOrder are ASCENDING or DESCENDING .\n\nWhen using SortBy , NextPageToken and SearchString are not supported.\n\n(structure)\n\nThe details of how to sort the data.\n\nKey -> (string)\n\nThe key that’s used to sort the data.\n\nSortOrder -> (string)\n\nThe order that’s used to sort the data.\n\nShorthand Syntax:\n\nKey=string,SortOrder=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"SortOrder\": \"ASCENDING\"|\"DESCENDING\"\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThis field is only used when SortBy is provided in the request. The maximum number of objects that to be returned for this request. If MaxResults is not specified with SortBy, the request will return 1000 results as the default value for this parameter.\n\nFor GetTags , MaxResults has an upper limit of 1000.\n\n--next-page-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNextPageToken -> (string)\n\nThe token for the next set of retrievable results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\nTags -> (list)\n\nThe tags that match your request.\n\n(string)\n\nReturnSize -> (integer)\n\nThe number of query results that Amazon Web Services returns at a time.\n\nTotalSize -> (integer)\n\nThe total number of query results.",
      "command_examples": "Examples\n\nTo retrieve keys and values for a cost allocation tag\n\nThis example retrieves all cost allocation tags with a key of “Project” and a value that contains “secretProject”.\n\nCommand:\n\naws ce get-tags --search-string secretProject --time-period Start=2017-01-01,End=2017-05-18 --tag-key Project\n\n\nOutput:\n\n{\n  \"ReturnSize\": 2,\n  \"Tags\": [\n    \"secretProject1\",\n    \"secretProject2\"\n  ],\n  \"TotalSize\": 2\n}\n"
    },
    {
      "command_name": "get-usage-forecast",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/get-usage-forecast.html",
      "command_description": "Description\n\nRetrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-usage-forecast\n--time-period <value>\n--metric <value>\n--granularity <value>\n[--filter <value>]\n[--prediction-interval-level <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--time-period <value>",
        "--metric <value>",
        "--granularity <value>",
        "[--filter <value>]",
        "[--prediction-interval-level <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--time-period (structure)\n\nThe start and end dates of the period that you want to retrieve usage forecast for. The start date is inclusive, but the end date is exclusive. For example, if start is 2017-01-01 and end is 2017-05-01 , then the cost and usage data is retrieved from 2017-01-01 up to and including 2017-04-30 but not including 2017-05-01 . The start date must be equal to or later than the current date to avoid a validation error.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nShorthand Syntax:\n\nStart=string,End=string\n\n\nJSON Syntax:\n\n{\n  \"Start\": \"string\",\n  \"End\": \"string\"\n}\n\n\n--metric (string)\n\nWhich metric Cost Explorer uses to create your forecast.\n\nValid values for a GetUsageForecast call are the following:\n\nUSAGE_QUANTITY\n\nNORMALIZED_USAGE_AMOUNT\n\nPossible values:\n\nBLENDED_COST\n\nUNBLENDED_COST\n\nAMORTIZED_COST\n\nNET_UNBLENDED_COST\n\nNET_AMORTIZED_COST\n\nUSAGE_QUANTITY\n\nNORMALIZED_USAGE_AMOUNT\n\n--granularity (string)\n\nHow granular you want the forecast to be. You can get 3 months of DAILY forecasts or 12 months of MONTHLY forecasts.\n\nThe GetUsageForecast operation supports only DAILY and MONTHLY granularities.\n\nPossible values:\n\nDAILY\n\nMONTHLY\n\nHOURLY\n\n--filter (structure)\n\nThe filters that you want to use to filter your forecast. The GetUsageForecast API supports filtering by the following dimensions:\n\nAZ\n\nINSTANCE_TYPE\n\nLINKED_ACCOUNT\n\nLINKED_ACCOUNT_NAME\n\nOPERATION\n\nPURCHASE_TYPE\n\nREGION\n\nSERVICE\n\nUSAGE_TYPE\n\nUSAGE_TYPE_GROUP\n\nRECORD_TYPE\n\nOPERATING_SYSTEM\n\nTENANCY\n\nSCOPE\n\nPLATFORM\n\nSUBSCRIPTION_ID\n\nLEGAL_ENTITY_NAME\n\nDEPLOYMENT_OPTION\n\nDATABASE_ENGINE\n\nINSTANCE_TYPE_FAMILY\n\nBILLING_ENTITY\n\nRESERVATION_ID\n\nSAVINGS_PLAN_ARN\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Or\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"And\": [\n    {\n      \"Or\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"And\": [\n        { ... recursive ... }\n        ...\n      ],\n      \"Not\": { ... recursive ... },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    }\n    ...\n  ],\n  \"Not\": {\n    \"Or\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"And\": [\n      { ... recursive ... }\n      ...\n    ],\n    \"Not\": { ... recursive ... },\n    \"Dimensions\": {\n      \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"Tags\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    },\n    \"CostCategories\": {\n      \"Key\": \"string\",\n      \"Values\": [\"string\", ...],\n      \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n    }\n  },\n  \"Dimensions\": {\n    \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"Tags\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  },\n  \"CostCategories\": {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...],\n    \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n  }\n}\n\n\n--prediction-interval-level (integer)\n\nCost Explorer always returns the mean forecast as a single point. You can request a prediction interval around the mean by specifying a confidence level. The higher the confidence level, the more confident Cost Explorer is about the actual value falling in the prediction interval. Higher confidence levels result in wider prediction intervals.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTotal -> (structure)\n\nHow much you’re forecasted to use over the forecast period.\n\nAmount -> (string)\n\nThe actual number that represents the metric.\n\nUnit -> (string)\n\nThe unit that the metric is given in.\n\nForecastResultsByTime -> (list)\n\nThe forecasts for your query, in order. For DAILY forecasts, this is a list of days. For MONTHLY forecasts, this is a list of months.\n\n(structure)\n\nThe forecast that’s created for your query.\n\nTimePeriod -> (structure)\n\nThe period of time that the forecast covers.\n\nStart -> (string)\n\nThe beginning of the time period. The start date is inclusive. For example, if start is 2017-01-01 , Amazon Web Services retrieves cost and usage data starting at 2017-01-01 up to the end date. The start date must be equal to or no later than the current date to avoid a validation error.\n\nEnd -> (string)\n\nThe end of the time period. The end date is exclusive. For example, if end is 2017-05-01 , Amazon Web Services retrieves cost and usage data from the start date up to, but not including, 2017-05-01 .\n\nMeanValue -> (string)\n\nThe mean value of the forecast.\n\nPredictionIntervalLowerBound -> (string)\n\nThe lower limit for the prediction interval.\n\nPredictionIntervalUpperBound -> (string)\n\nThe upper limit for the prediction interval."
    },
    {
      "command_name": "list-cost-category-definitions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/list-cost-category-definitions.html",
      "command_description": "Description\n\nReturns the name, ARN, NumberOfRules and effective dates of all Cost Categories defined in the account. You have the option to use EffectiveOn to return a list of Cost Categories that were active on a specific date. If there is no EffectiveOn specified, you’ll see Cost Categories that are effective on the current date. If Cost Category is still effective, EffectiveEnd is omitted in the response. ListCostCategoryDefinitions supports pagination. The request can have a MaxResults range up to 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-cost-category-definitions\n[--effective-on <value>]\n[--next-token <value>]\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--effective-on <value>]",
        "[--next-token <value>]",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--effective-on (string)\n\nThe date when the Cost Category was effective.\n\n--next-token (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.\n\n--max-results (integer)\n\nThe number of entries a paginated response contains.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCostCategoryReferences -> (list)\n\nA reference to a Cost Category containing enough information to identify the Cost Category.\n\n(structure)\n\nA reference to a Cost Category containing only enough information to identify the Cost Category.\n\nYou can use this information to retrieve the full Cost Category information using DescribeCostCategory .\n\nCostCategoryArn -> (string)\n\nThe unique identifier for your Cost Category.\n\nName -> (string)\n\nThe unique name of the Cost Category.\n\nEffectiveStart -> (string)\n\nThe Cost Category’s effective start date.\n\nEffectiveEnd -> (string)\n\nThe Cost Category’s effective end date.\n\nNumberOfRules -> (integer)\n\nThe number of rules that are associated with a specific Cost Category.\n\nProcessingStatus -> (list)\n\nThe list of processing statuses for Cost Management products for a specific cost category.\n\n(structure)\n\nThe list of processing statuses for Cost Management products for a specific cost category.\n\nComponent -> (string)\n\nThe Cost Management product name of the applied status.\n\nStatus -> (string)\n\nThe process status for a specific cost category.\n\nValues -> (list)\n\nA list of unique cost category values in a specific cost category.\n\n(string)\n\nThe default value for the cost category.\n\nDefaultValue -> (string)\n\nThe default value for the cost category.\n\nNextToken -> (string)\n\nThe token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size."
    },
    {
      "command_name": "provide-anomaly-feedback",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/provide-anomaly-feedback.html",
      "command_description": "Description\n\nModifies the feedback property of a given cost anomaly.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  provide-anomaly-feedback\n--anomaly-id <value>\n--feedback <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--anomaly-id <value>",
        "--feedback <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--anomaly-id (string)\n\nA cost anomaly ID.\n\n--feedback (string)\n\nDescribes whether the cost anomaly was a planned activity or you considered it an anomaly.\n\nPossible values:\n\nYES\n\nNO\n\nPLANNED_ACTIVITY\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAnomalyId -> (string)\n\nThe ID of the modified cost anomaly."
    },
    {
      "command_name": "update-anomaly-monitor",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/update-anomaly-monitor.html",
      "command_description": "Description\n\nUpdates an existing cost anomaly monitor. The changes made are applied going forward, and doesn’tt change anomalies detected in the past.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-anomaly-monitor\n--monitor-arn <value>\n[--monitor-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--monitor-arn <value>",
        "[--monitor-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--monitor-arn (string)\n\nCost anomaly monitor Amazon Resource Names (ARNs).\n\n--monitor-name (string)\n\nThe new name for the cost anomaly monitor.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMonitorArn -> (string)\n\nA cost anomaly monitor ARN."
    },
    {
      "command_name": "update-anomaly-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/update-anomaly-subscription.html",
      "command_description": "Description\n\nUpdates an existing cost anomaly monitor subscription.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-anomaly-subscription\n--subscription-arn <value>\n[--threshold <value>]\n[--frequency <value>]\n[--monitor-arn-list <value>]\n[--subscribers <value>]\n[--subscription-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--subscription-arn <value>",
        "[--threshold <value>]",
        "[--frequency <value>]",
        "[--monitor-arn-list <value>]",
        "[--subscribers <value>]",
        "[--subscription-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--subscription-arn (string)\n\nA cost anomaly subscription Amazon Resource Name (ARN).\n\n--threshold (double)\n\nThe update to the threshold value for receiving notifications.\n\n--frequency (string)\n\nThe update to the frequency value that subscribers receive notifications.\n\nPossible values:\n\nDAILY\n\nIMMEDIATE\n\nWEEKLY\n\n--monitor-arn-list (list)\n\nA list of cost anomaly monitor ARNs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subscribers (list)\n\nThe update to the subscriber list.\n\n(structure)\n\nThe recipient of AnomalySubscription notifications.\n\nAddress -> (string)\n\nThe email address or SNS Amazon Resource Name (ARN). This depends on the Type .\n\nType -> (string)\n\nThe notification delivery channel.\n\nStatus -> (string)\n\nIndicates if the subscriber accepts the notifications.\n\nShorthand Syntax:\n\nAddress=string,Type=string,Status=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Address\": \"string\",\n    \"Type\": \"EMAIL\"|\"SNS\",\n    \"Status\": \"CONFIRMED\"|\"DECLINED\"\n  }\n  ...\n]\n\n\n--subscription-name (string)\n\nThe new name of the subscription.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSubscriptionArn -> (string)\n\nA cost anomaly subscription ARN."
    },
    {
      "command_name": "update-cost-category-definition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ce/update-cost-category-definition.html",
      "command_description": "Description\n\nUpdates an existing Cost Category. Changes made to the Cost Category rules will be used to categorize the current month’s expenses and future expenses. This won’t change categorization for the previous months.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-cost-category-definition\n--cost-category-arn <value>\n--rule-version <value>\n--rules <value>\n[--default-value <value>]\n[--split-charge-rules <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cost-category-arn <value>",
        "--rule-version <value>",
        "--rules <value>",
        "[--default-value <value>]",
        "[--split-charge-rules <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cost-category-arn (string)\n\nThe unique identifier for your Cost Category.\n\n--rule-version (string)\n\nThe rule schema version in this particular Cost Category.\n\nPossible values:\n\nCostCategoryExpression.v1\n\n--rules (list)\n\nThe Expression object used to categorize costs. For more information, see CostCategoryRule .\n\n(structure)\n\nRules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.\n\nValue -> (string)\n\nThe default value for the cost category.\n\nRule -> (structure)\n\nAn Expression object used to categorize costs. This supports dimensions, tags, and nested expressions. Currently the only dimensions supported are LINKED_ACCOUNT , SERVICE_CODE , RECORD_TYPE , and LINKED_ACCOUNT_NAME .\n\nRoot level OR isn’t supported. We recommend that you create a separate rule instead.\n\nRECORD_TYPE is a dimension used for Cost Explorer APIs, and is also supported for Cost Category expressions. This dimension uses different terms, depending on whether you’re using the console or API/JSON editor. For a detailed comparison, see Term Comparisons in the Billing and Cost Management User Guide .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n(structure)\n\nUse Expression to filter by cost or by usage. There are two patterns:\n\nSimple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for REGION==us-east-1 OR REGION==us-west-1 . For GetRightsizingRecommendation , the Region is a full name (for example, REGION==US East (N. Virginia) . The Expression example is as follows: { \"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", “us-west-1” ] } } The list of dimension values are OR’d together to retrieve cost or usage data. You can create Expression and DimensionValues objects using either with* methods or set* methods in multiple lines.\n\nCompound dimension values with logical operations - You can use multiple Expression types and the logical operators AND/OR/NOT to create a list of one or more Expression objects. By doing this, you can filter on more advanced options. For example, you can filter on ((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer) . The Expression for that is as follows: { \"And\": [ {\"Or\": [ {\"Dimensions\": { \"Key\": \"REGION\", \"Values\": [ \"us-east-1\", \"us-west-1\" ] }}, {\"Tags\": { \"Key\": \"TagName\", \"Values\": [\"Value1\"] } } ]}, {\"Not\": {\"Dimensions\": { \"Key\": \"USAGE_TYPE\", \"Values\": [\"DataTransfer\"] }}} ] }\n\nNote\n\nBecause each Expression can have only one operator, the service returns an error if more than one is specified. The following example shows an Expression object that creates an error.\n\n{ \"And\": [ ... ], \"DimensionValues\": { \"Dimension\": \"USAGE_TYPE\", \"Values\": [ \"DataTransfer\" ] } }\n\nNote\n\nFor the GetRightsizingRecommendation action, a combination of OR and NOT isn’t supported. OR isn’t supported between different dimensions, or dimensions and tags. NOT operators aren’t supported. Dimensions are also limited to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .\n\nFor the GetReservationPurchaseRecommendation action, only NOT is supported. AND and OR aren’t supported. Dimensions are limited to LINKED_ACCOUNT .\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nNot -> (structure)\n\nReturn results that don’t match a Dimension object.\n\nOr -> (list)\n\nReturn results that match either Dimension object.\n\n( … recursive … )\n\nAnd -> (list)\n\nReturn results that match both Dimension objects.\n\n( … recursive … )\n\n( … recursive … )Dimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nDimensions -> (structure)\n\nThe specific Dimension to use for Expression .\n\nKey -> (string)\n\nThe names of the metadata types that you can use to filter and group your results. For example, AZ returns a list of Availability Zones.\n\nValues -> (list)\n\nThe metadata values that you can use to filter and group your results. You can use GetDimensionValues to find specific values.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nTags -> (structure)\n\nThe specific Tag to use for Expression .\n\nKey -> (string)\n\nThe key for the tag.\n\nValues -> (list)\n\nThe specific value of the tag.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to Cost Category. The default values for MatchOptions are EQUALS and CASE_SENSITIVE .\n\n(string)\n\nCostCategories -> (structure)\n\nThe filter that’s based on CostCategory values.\n\nKey -> (string)\n\nThe unique name of the Cost Category.\n\nValues -> (list)\n\nThe specific value of the Cost Category.\n\n(string)\n\nMatchOptions -> (list)\n\nThe match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is EQUALS and CASE_SENSITIVE .\n\n(string)\n\nInheritedValue -> (structure)\n\nThe value the line item is categorized as if the line item contains the matched dimension.\n\nDimensionName -> (string)\n\nThe name of the dimension that’s used to group costs.\n\nIf you specify LINKED_ACCOUNT_NAME , the cost category value is based on account name. If you specify TAG , the cost category value will be based on the value of the specified tag key.\n\nDimensionKey -> (string)\n\nThe key to extract cost category values.\n\nType -> (string)\n\nYou can define the CostCategoryRule rule type as either REGULAR or INHERITED_VALUE . The INHERITED_VALUE rule type adds the flexibility of defining a rule that dynamically inherits the cost category value from the dimension value defined by CostCategoryInheritedValueDimension . For example, if you want to dynamically group costs based on the value of a specific tag key, first choose an inherited value rule type, then choose the tag dimension and specify the tag key to use.\n\nJSON Syntax:\n\n[\n  {\n    \"Value\": \"string\",\n    \"Rule\": {\n      \"Or\": [\n        {\n          \"Or\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"And\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"Not\": { ... recursive ... },\n          \"Dimensions\": {\n            \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"Tags\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"CostCategories\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          }\n        }\n        ...\n      ],\n      \"And\": [\n        {\n          \"Or\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"And\": [\n            { ... recursive ... }\n            ...\n          ],\n          \"Not\": { ... recursive ... },\n          \"Dimensions\": {\n            \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"Tags\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          },\n          \"CostCategories\": {\n            \"Key\": \"string\",\n            \"Values\": [\"string\", ...],\n            \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n          }\n        }\n        ...\n      ],\n      \"Not\": {\n        \"Or\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"And\": [\n          { ... recursive ... }\n          ...\n        ],\n        \"Not\": { ... recursive ... },\n        \"Dimensions\": {\n          \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"Tags\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        },\n        \"CostCategories\": {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...],\n          \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n        }\n      },\n      \"Dimensions\": {\n        \"Key\": \"AZ\"|\"INSTANCE_TYPE\"|\"LINKED_ACCOUNT\"|\"LINKED_ACCOUNT_NAME\"|\"OPERATION\"|\"PURCHASE_TYPE\"|\"REGION\"|\"SERVICE\"|\"SERVICE_CODE\"|\"USAGE_TYPE\"|\"USAGE_TYPE_GROUP\"|\"RECORD_TYPE\"|\"OPERATING_SYSTEM\"|\"TENANCY\"|\"SCOPE\"|\"PLATFORM\"|\"SUBSCRIPTION_ID\"|\"LEGAL_ENTITY_NAME\"|\"DEPLOYMENT_OPTION\"|\"DATABASE_ENGINE\"|\"CACHE_ENGINE\"|\"INSTANCE_TYPE_FAMILY\"|\"BILLING_ENTITY\"|\"RESERVATION_ID\"|\"RESOURCE_ID\"|\"RIGHTSIZING_TYPE\"|\"SAVINGS_PLANS_TYPE\"|\"SAVINGS_PLAN_ARN\"|\"PAYMENT_OPTION\"|\"AGREEMENT_END_DATE_TIME_AFTER\"|\"AGREEMENT_END_DATE_TIME_BEFORE\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"Tags\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      },\n      \"CostCategories\": {\n        \"Key\": \"string\",\n        \"Values\": [\"string\", ...],\n        \"MatchOptions\": [\"EQUALS\"|\"ABSENT\"|\"STARTS_WITH\"|\"ENDS_WITH\"|\"CONTAINS\"|\"CASE_SENSITIVE\"|\"CASE_INSENSITIVE\", ...]\n      }\n    },\n    \"InheritedValue\": {\n      \"DimensionName\": \"LINKED_ACCOUNT_NAME\"|\"TAG\",\n      \"DimensionKey\": \"string\"\n    },\n    \"Type\": \"REGULAR\"|\"INHERITED_VALUE\"\n  }\n  ...\n]\n\n\n--default-value (string)\n\nThe default value for the cost category.\n\n--split-charge-rules (list)\n\nThe split charge rules used to allocate your charges between your Cost Category values.\n\n(structure)\n\nUse the split charge rule to split the cost of one Cost Category value across several other target values.\n\nSource -> (string)\n\nThe Cost Category value that you want to split. That value can’t be used as a source or a target in other split charge rules. To indicate uncategorized costs, you can use an empty string as the source.\n\nTargets -> (list)\n\nThe Cost Category values that you want to split costs across. These values can’t be used as a source in other split charge rules.\n\n(string)\n\nMethod -> (string)\n\nThe method that’s used to define how to split your source costs across your targets.\n\nProportional - Allocates charges across your targets based on the proportional weighted cost of each target.\n\nFixed - Allocates charges across your targets based on your defined allocation percentage.\n\n>``Even`` - Allocates costs evenly across all targets.\n\nParameters -> (list)\n\nThe parameters for a split charge method. This is only required for the FIXED method.\n\n(structure)\n\nThe parameters for a split charge method.\n\nType -> (string)\n\nThe parameter type.\n\nValues -> (list)\n\nThe parameter values.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"Source\": \"string\",\n    \"Targets\": [\"string\", ...],\n    \"Method\": \"FIXED\"|\"PROPORTIONAL\"|\"EVEN\",\n    \"Parameters\": [\n      {\n        \"Type\": \"ALLOCATION_PERCENTAGES\",\n        \"Values\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCostCategoryArn -> (string)\n\nThe unique identifier for your Cost Category.\n\nEffectiveStart -> (string)\n\nThe Cost Category’s effective start date."
    }
  ],
  "service_description": "Description\n\nYou can use the Cost Explorer API to programmatically query your cost and usage data. You can query for aggregated data such as total monthly costs or total daily usage. You can also query for granular data. This might include the number of daily write operations for Amazon DynamoDB database tables in your production environment.\n\nService Endpoint\n\nThe Cost Explorer API provides the following endpoint:\n\nhttps://ce.us-east-1.amazonaws.com\n\nFor information about the costs that are associated with the Cost Explorer API, see Amazon Web Services Cost Management Pricing ."
}