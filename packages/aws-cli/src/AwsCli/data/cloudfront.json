{
  "service_name": "cloudfront",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/index.html",
  "service_commands": [
    {
      "command_name": "associate-alias",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/associate-alias.html",
      "command_description": "Description\n\nAssociates an alias (also known as a CNAME or an alternate domain name) with a CloudFront distribution.\n\nWith this operation you can move an alias that’s already in use on a CloudFront distribution to a different distribution in one step. This prevents the downtime that could occur if you first remove the alias from one distribution and then separately add the alias to another distribution.\n\nTo use this operation to associate an alias with a distribution, you provide the alias and the ID of the target distribution for the alias. For more information, including how to set up the target distribution, prerequisites that you must complete, and other restrictions, see Moving an alternate domain name to a different distribution in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-alias\n--target-distribution-id <value>\n--alias <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--target-distribution-id <value>",
        "--alias <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--target-distribution-id (string)\n\nThe ID of the distribution that you’re associating the alias with.\n\n--alias (string)\n\nThe alias (also known as a CNAME) to add to the target distribution.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-cache-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-cache-policy.html",
      "command_description": "Description\n\nCreates a cache policy.\n\nAfter you create a cache policy, you can attach it to one or more cache behaviors. When it’s attached to a cache behavior, the cache policy determines the following:\n\nThe values that CloudFront includes in the cache key . These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.\n\nThe default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.\n\nThe headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find an object in its cache that matches the request’s cache key. If you want to send values to the origin but not include them in the cache key, use OriginRequestPolicy .\n\nFor more information about cache policies, see Controlling the cache key in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cache-policy\n--cache-policy-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cache-policy-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cache-policy-config (structure)\n\nA cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Name\": \"string\",\n  \"DefaultTTL\": long,\n  \"MaxTTL\": long,\n  \"MinTTL\": long,\n  \"ParametersInCacheKeyAndForwardedToOrigin\": {\n    \"EnableAcceptEncodingGzip\": true|false,\n    \"EnableAcceptEncodingBrotli\": true|false,\n    \"HeadersConfig\": {\n      \"HeaderBehavior\": \"none\"|\"whitelist\",\n      \"Headers\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"CookiesConfig\": {\n      \"CookieBehavior\": \"none\"|\"whitelist\"|\"allExcept\"|\"all\",\n      \"Cookies\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"QueryStringsConfig\": {\n      \"QueryStringBehavior\": \"none\"|\"whitelist\"|\"allExcept\"|\"all\",\n      \"QueryStrings\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCachePolicy -> (structure)\n\nA cache policy.\n\nId -> (string)\n\nThe unique identifier for the cache policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the cache policy was last modified.\n\nCachePolicyConfig -> (structure)\n\nThe cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nLocation -> (string)\n\nThe fully qualified URI of the cache policy just created.\n\nETag -> (string)\n\nThe current version of the cache policy."
    },
    {
      "command_name": "create-cloud-front-origin-access-identity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-cloud-front-origin-access-identity.html",
      "command_description": "Description\n\nCreates a new origin access identity. If you’re using Amazon S3 for your origin, you can use an origin access identity to require users to access your content using a CloudFront URL instead of the Amazon S3 URL. For more information about how to use origin access identities, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-cloud-front-origin-access-identity\n--cloud-front-origin-access-identity-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cloud-front-origin-access-identity-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cloud-front-origin-access-identity-config (structure)\n\nThe current configuration information for the identity.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nCallerReference=string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCloudFrontOriginAccessIdentity -> (structure)\n\nThe origin access identity’s information.\n\nId -> (string)\n\nThe ID for the origin access identity, for example, E74FTE3AJFJ256A .\n\nS3CanonicalUserId -> (string)\n\nThe Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3.\n\nCloudFrontOriginAccessIdentityConfig -> (structure)\n\nThe current configuration information for the identity.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nLocation -> (string)\n\nThe fully qualified URI of the new origin access identity just created.\n\nETag -> (string)\n\nThe current version of the origin access identity created.",
      "command_examples": "Examples\n\nTo create a CloudFront origin access identity\n\nThe following example creates a CloudFront origin access identity (OAI) by providing the OAI configuration as a command line argument:\n\naws cloudfront create-cloud-front-origin-access-identity \\\n    --cloud-front-origin-access-identity-config \\\n        CallerReference=\"cli-example\",Comment=\"Example OAI\"\n\n\nYou can accomplish the same thing by providing the OAI configuration in a JSON file, as shown in the following example:\n\naws cloudfront create-cloud-front-origin-access-identity \\\n    --cloud-front-origin-access-identity-config file://OAI-config.json\n\n\nThe file OAI-config.json is a JSON document in the current directory that contains the following:\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"Example OAI\"\n}\n\n\nWhether you provide the OAI configuration with a command line argument or a JSON file, the output is the same:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/origin-access-identity/cloudfront/E74FTE3AEXAMPLE\",\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"CloudFrontOriginAccessIdentity\": {\n        \"Id\": \"E74FTE3AEXAMPLE\",\n        \"S3CanonicalUserId\": \"cd13868f797c227fbea2830611a26fe0a21ba1b826ab4bed9b7771c9aEXAMPLE\",\n        \"CloudFrontOriginAccessIdentityConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Example OAI\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-distribution.html",
      "command_description": "Description\n\nCreates a new web distribution. You create a CloudFront distribution to tell CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery. Send a POST request to the /*CloudFront API version* /distribution /distribution ID resource.\n\nWarning\n\nWhen you update a distribution, there are more required fields than when you create a distribution. When you update your distribution by using UpdateDistribution , follow the steps included in the documentation to get the current configuration and then make your updates. This helps to make sure that you include all of the required fields. To view a summary, see Required Fields for Create Distribution and Update Distribution in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-distribution\n[--distribution-config <value>]\n[--origin-domain-name <value>]\n[--default-root-object <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--distribution-config <value>]",
        "[--origin-domain-name <value>]",
        "[--default-root-object <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-config (structure)\n\nThe distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Aliases\": {\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"DefaultRootObject\": \"string\",\n  \"Origins\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"Id\": \"string\",\n        \"DomainName\": \"string\",\n        \"OriginPath\": \"string\",\n        \"CustomHeaders\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"HeaderName\": \"string\",\n              \"HeaderValue\": \"string\"\n            }\n            ...\n          ]\n        },\n        \"S3OriginConfig\": {\n          \"OriginAccessIdentity\": \"string\"\n        },\n        \"CustomOriginConfig\": {\n          \"HTTPPort\": integer,\n          \"HTTPSPort\": integer,\n          \"OriginProtocolPolicy\": \"http-only\"|\"match-viewer\"|\"https-only\",\n          \"OriginSslProtocols\": {\n            \"Quantity\": integer,\n            \"Items\": [\"SSLv3\"|\"TLSv1\"|\"TLSv1.1\"|\"TLSv1.2\", ...]\n          },\n          \"OriginReadTimeout\": integer,\n          \"OriginKeepaliveTimeout\": integer\n        },\n        \"ConnectionAttempts\": integer,\n        \"ConnectionTimeout\": integer,\n        \"OriginShield\": {\n          \"Enabled\": true|false,\n          \"OriginShieldRegion\": \"string\"\n        }\n      }\n      ...\n    ]\n  },\n  \"OriginGroups\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"Id\": \"string\",\n        \"FailoverCriteria\": {\n          \"StatusCodes\": {\n            \"Quantity\": integer,\n            \"Items\": [integer, ...]\n          }\n        },\n        \"Members\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"OriginId\": \"string\"\n            }\n            ...\n          ]\n        }\n      }\n      ...\n    ]\n  },\n  \"DefaultCacheBehavior\": {\n    \"TargetOriginId\": \"string\",\n    \"TrustedSigners\": {\n      \"Enabled\": true|false,\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"TrustedKeyGroups\": {\n      \"Enabled\": true|false,\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n    \"AllowedMethods\": {\n      \"Quantity\": integer,\n      \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n      \"CachedMethods\": {\n        \"Quantity\": integer,\n        \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n      }\n    },\n    \"SmoothStreaming\": true|false,\n    \"Compress\": true|false,\n    \"LambdaFunctionAssociations\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"LambdaFunctionARN\": \"string\",\n          \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n          \"IncludeBody\": true|false\n        }\n        ...\n      ]\n    },\n    \"FunctionAssociations\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"FunctionARN\": \"string\",\n          \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n        }\n        ...\n      ]\n    },\n    \"FieldLevelEncryptionId\": \"string\",\n    \"RealtimeLogConfigArn\": \"string\",\n    \"CachePolicyId\": \"string\",\n    \"OriginRequestPolicyId\": \"string\",\n    \"ForwardedValues\": {\n      \"QueryString\": true|false,\n      \"Cookies\": {\n        \"Forward\": \"none\"|\"whitelist\"|\"all\",\n        \"WhitelistedNames\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        }\n      },\n      \"Headers\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      },\n      \"QueryStringCacheKeys\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"MinTTL\": long,\n    \"DefaultTTL\": long,\n    \"MaxTTL\": long\n  },\n  \"CacheBehaviors\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"PathPattern\": \"string\",\n        \"TargetOriginId\": \"string\",\n        \"TrustedSigners\": {\n          \"Enabled\": true|false,\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        },\n        \"TrustedKeyGroups\": {\n          \"Enabled\": true|false,\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        },\n        \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n        \"AllowedMethods\": {\n          \"Quantity\": integer,\n          \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n          \"CachedMethods\": {\n            \"Quantity\": integer,\n            \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n          }\n        },\n        \"SmoothStreaming\": true|false,\n        \"Compress\": true|false,\n        \"LambdaFunctionAssociations\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"LambdaFunctionARN\": \"string\",\n              \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n              \"IncludeBody\": true|false\n            }\n            ...\n          ]\n        },\n        \"FunctionAssociations\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"FunctionARN\": \"string\",\n              \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n            }\n            ...\n          ]\n        },\n        \"FieldLevelEncryptionId\": \"string\",\n        \"RealtimeLogConfigArn\": \"string\",\n        \"CachePolicyId\": \"string\",\n        \"OriginRequestPolicyId\": \"string\",\n        \"ForwardedValues\": {\n          \"QueryString\": true|false,\n          \"Cookies\": {\n            \"Forward\": \"none\"|\"whitelist\"|\"all\",\n            \"WhitelistedNames\": {\n              \"Quantity\": integer,\n              \"Items\": [\"string\", ...]\n            }\n          },\n          \"Headers\": {\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          },\n          \"QueryStringCacheKeys\": {\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          }\n        },\n        \"MinTTL\": long,\n        \"DefaultTTL\": long,\n        \"MaxTTL\": long\n      }\n      ...\n    ]\n  },\n  \"CustomErrorResponses\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"ErrorCode\": integer,\n        \"ResponsePagePath\": \"string\",\n        \"ResponseCode\": \"string\",\n        \"ErrorCachingMinTTL\": long\n      }\n      ...\n    ]\n  },\n  \"Comment\": \"string\",\n  \"Logging\": {\n    \"Enabled\": true|false,\n    \"IncludeCookies\": true|false,\n    \"Bucket\": \"string\",\n    \"Prefix\": \"string\"\n  },\n  \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n  \"Enabled\": true|false,\n  \"ViewerCertificate\": {\n    \"CloudFrontDefaultCertificate\": true|false,\n    \"IAMCertificateId\": \"string\",\n    \"ACMCertificateArn\": \"string\",\n    \"SSLSupportMethod\": \"sni-only\"|\"vip\"|\"static-ip\",\n    \"MinimumProtocolVersion\": \"SSLv3\"|\"TLSv1\"|\"TLSv1_2016\"|\"TLSv1.1_2016\"|\"TLSv1.2_2018\"|\"TLSv1.2_2019\"|\"TLSv1.2_2021\",\n    \"Certificate\": \"string\",\n    \"CertificateSource\": \"cloudfront\"|\"iam\"|\"acm\"\n  },\n  \"Restrictions\": {\n    \"GeoRestriction\": {\n      \"RestrictionType\": \"blacklist\"|\"whitelist\"|\"none\",\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"WebACLId\": \"string\",\n  \"HttpVersion\": \"http1.1\"|\"http2\",\n  \"IsIPV6Enabled\": true|false\n}\n\n\n--origin-domain-name (string) The domain name for your origin. This argument and –distribution-config are mututally exclusive.\n\n--default-root-object (string) The object that you want CloudFront to return (for example, index.html) when a viewer request points to your root URL. This argument and –distribution-config are mututally exclusive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistribution -> (structure)\n\nThe distribution’s information.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThis response element indicates the current status of the distribution. When the status is Deployed , the distribution’s information is fully propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nInProgressInvalidationBatches -> (integer)\n\nThe number of invalidation batches currently in progress.\n\nDomainName -> (string)\n\nThe domain name corresponding to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using trusted signers. This field contains a list of account IDs and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nActiveTrustedKeyGroups -> (structure)\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using key groups. This field contains a list of key groups and the public keys in each key group that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups, including the identifiers of the public keys in each key group that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of identifiers for the public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nKeyGroupId -> (string)\n\nThe identifier of the key group that contains the public keys.\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nDistributionConfig -> (structure)\n\nThe current configuration information for the distribution. Send a GET request to the /*CloudFront API version* /distribution ID/config resource.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.\n\nLocation -> (string)\n\nThe fully qualified URI of the new distribution resource just created.\n\nETag -> (string)\n\nThe current version of the distribution created.",
      "command_examples": "Examples\n\nTo create a CloudFront distribution\n\nThe following example creates a distribution for an S3 bucket named awsexamplebucket, and also specifies index.html as the default root object, using command line arguments:\n\naws cloudfront create-distribution \\\n    --origin-domain-name awsexamplebucket.s3.amazonaws.com \\\n    --default-root-object index.html\n\n\nInstead of using command line arguments, you can provide the distribution configuration in a JSON file, as shown in the following example:\n\naws cloudfront create-distribution \\\n    --distribution-config file://dist-config.json\n\n\nThe file dist-config.json is a JSON document in the current folder that contains the following:\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Aliases\": {\n        \"Quantity\": 0\n    },\n    \"DefaultRootObject\": \"index.html\",\n    \"Origins\": {\n        \"Quantity\": 1,\n        \"Items\": [\n            {\n                \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                \"OriginPath\": \"\",\n                \"CustomHeaders\": {\n                    \"Quantity\": 0\n                },\n                \"S3OriginConfig\": {\n                    \"OriginAccessIdentity\": \"\"\n                }\n            }\n        ]\n    },\n    \"OriginGroups\": {\n        \"Quantity\": 0\n    },\n    \"DefaultCacheBehavior\": {\n        \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n        \"ForwardedValues\": {\n            \"QueryString\": false,\n            \"Cookies\": {\n                \"Forward\": \"none\"\n            },\n            \"Headers\": {\n                \"Quantity\": 0\n            },\n            \"QueryStringCacheKeys\": {\n                \"Quantity\": 0\n            }\n        },\n        \"TrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"ViewerProtocolPolicy\": \"allow-all\",\n        \"MinTTL\": 0,\n        \"AllowedMethods\": {\n            \"Quantity\": 2,\n            \"Items\": [\n                \"HEAD\",\n                \"GET\"\n            ],\n            \"CachedMethods\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"HEAD\",\n                    \"GET\"\n                ]\n            }\n        },\n        \"SmoothStreaming\": false,\n        \"DefaultTTL\": 86400,\n        \"MaxTTL\": 31536000,\n        \"Compress\": false,\n        \"LambdaFunctionAssociations\": {\n            \"Quantity\": 0\n        },\n        \"FieldLevelEncryptionId\": \"\"\n    },\n    \"CacheBehaviors\": {\n        \"Quantity\": 0\n    },\n    \"CustomErrorResponses\": {\n        \"Quantity\": 0\n    },\n    \"Comment\": \"\",\n    \"Logging\": {\n        \"Enabled\": false,\n        \"IncludeCookies\": false,\n        \"Bucket\": \"\",\n        \"Prefix\": \"\"\n    },\n    \"PriceClass\": \"PriceClass_All\",\n    \"Enabled\": true,\n    \"ViewerCertificate\": {\n        \"CloudFrontDefaultCertificate\": true,\n        \"MinimumProtocolVersion\": \"TLSv1\",\n        \"CertificateSource\": \"cloudfront\"\n    },\n    \"Restrictions\": {\n        \"GeoRestriction\": {\n            \"RestrictionType\": \"none\",\n            \"Quantity\": 0\n        }\n    },\n    \"WebACLId\": \"\",\n    \"HttpVersion\": \"http2\",\n    \"IsIPV6Enabled\": true\n}\n\n\nWhether you provide the distribution information with a command line argument or a JSON file, the output is the same:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/distribution/EMLARXS9EXAMPLE\",\n    \"ETag\": \"E9LHASXEXAMPLE\",\n    \"Distribution\": {\n        \"Id\": \"EMLARXS9EXAMPLE\",\n        \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EMLARXS9EXAMPLE\",\n        \"Status\": \"InProgress\",\n        \"LastModifiedTime\": \"2019-11-22T00:55:15.705Z\",\n        \"InProgressInvalidationBatches\": 0,\n        \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n        \"ActiveTrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"DistributionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Aliases\": {\n                \"Quantity\": 0\n            },\n            \"DefaultRootObject\": \"index.html\",\n            \"Origins\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                        \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                        \"OriginPath\": \"\",\n                        \"CustomHeaders\": {\n                            \"Quantity\": 0\n                        },\n                        \"S3OriginConfig\": {\n                            \"OriginAccessIdentity\": \"\"\n                        }\n                    }\n                ]\n            },\n            \"OriginGroups\": {\n                \"Quantity\": 0\n            },\n            \"DefaultCacheBehavior\": {\n                \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                \"ForwardedValues\": {\n                    \"QueryString\": false,\n                    \"Cookies\": {\n                        \"Forward\": \"none\"\n                    },\n                    \"Headers\": {\n                        \"Quantity\": 0\n                    },\n                    \"QueryStringCacheKeys\": {\n                        \"Quantity\": 0\n                    }\n                },\n                \"TrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"ViewerProtocolPolicy\": \"allow-all\",\n                \"MinTTL\": 0,\n                \"AllowedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ],\n                    \"CachedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ]\n                    }\n                },\n                \"SmoothStreaming\": false,\n                \"DefaultTTL\": 86400,\n                \"MaxTTL\": 31536000,\n                \"Compress\": false,\n                \"LambdaFunctionAssociations\": {\n                    \"Quantity\": 0\n                },\n                \"FieldLevelEncryptionId\": \"\"\n            },\n            \"CacheBehaviors\": {\n                \"Quantity\": 0\n            },\n            \"CustomErrorResponses\": {\n                \"Quantity\": 0\n            },\n            \"Comment\": \"\",\n            \"Logging\": {\n                \"Enabled\": false,\n                \"IncludeCookies\": false,\n                \"Bucket\": \"\",\n                \"Prefix\": \"\"\n            },\n            \"PriceClass\": \"PriceClass_All\",\n            \"Enabled\": true,\n            \"ViewerCertificate\": {\n                \"CloudFrontDefaultCertificate\": true,\n                \"MinimumProtocolVersion\": \"TLSv1\",\n                \"CertificateSource\": \"cloudfront\"\n            },\n            \"Restrictions\": {\n                \"GeoRestriction\": {\n                    \"RestrictionType\": \"none\",\n                    \"Quantity\": 0\n                }\n            },\n            \"WebACLId\": \"\",\n            \"HttpVersion\": \"http2\",\n            \"IsIPV6Enabled\": true\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-distribution-with-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-distribution-with-tags.html",
      "command_description": "Description\n\nCreate a new distribution with tags.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-distribution-with-tags\n--distribution-config-with-tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-config-with-tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-config-with-tags (structure)\n\nThe distribution’s configuration information.\n\nDistributionConfig -> (structure)\n\nA distribution configuration.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nTags -> (structure)\n\nA complex type that contains zero or more Tag elements.\n\nItems -> (list)\n\nA complex type that contains Tag elements.\n\n(structure)\n\nA complex type that contains Tag key and Tag value.\n\nKey -> (string)\n\nA string that contains Tag key.\n\nThe string length should be between 1 and 128 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nValue -> (string)\n\nA string that contains an optional Tag value.\n\nThe string length should be between 0 and 256 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nJSON Syntax:\n\n{\n  \"DistributionConfig\": {\n    \"CallerReference\": \"string\",\n    \"Aliases\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"DefaultRootObject\": \"string\",\n    \"Origins\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"Id\": \"string\",\n          \"DomainName\": \"string\",\n          \"OriginPath\": \"string\",\n          \"CustomHeaders\": {\n            \"Quantity\": integer,\n            \"Items\": [\n              {\n                \"HeaderName\": \"string\",\n                \"HeaderValue\": \"string\"\n              }\n              ...\n            ]\n          },\n          \"S3OriginConfig\": {\n            \"OriginAccessIdentity\": \"string\"\n          },\n          \"CustomOriginConfig\": {\n            \"HTTPPort\": integer,\n            \"HTTPSPort\": integer,\n            \"OriginProtocolPolicy\": \"http-only\"|\"match-viewer\"|\"https-only\",\n            \"OriginSslProtocols\": {\n              \"Quantity\": integer,\n              \"Items\": [\"SSLv3\"|\"TLSv1\"|\"TLSv1.1\"|\"TLSv1.2\", ...]\n            },\n            \"OriginReadTimeout\": integer,\n            \"OriginKeepaliveTimeout\": integer\n          },\n          \"ConnectionAttempts\": integer,\n          \"ConnectionTimeout\": integer,\n          \"OriginShield\": {\n            \"Enabled\": true|false,\n            \"OriginShieldRegion\": \"string\"\n          }\n        }\n        ...\n      ]\n    },\n    \"OriginGroups\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"Id\": \"string\",\n          \"FailoverCriteria\": {\n            \"StatusCodes\": {\n              \"Quantity\": integer,\n              \"Items\": [integer, ...]\n            }\n          },\n          \"Members\": {\n            \"Quantity\": integer,\n            \"Items\": [\n              {\n                \"OriginId\": \"string\"\n              }\n              ...\n            ]\n          }\n        }\n        ...\n      ]\n    },\n    \"DefaultCacheBehavior\": {\n      \"TargetOriginId\": \"string\",\n      \"TrustedSigners\": {\n        \"Enabled\": true|false,\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      },\n      \"TrustedKeyGroups\": {\n        \"Enabled\": true|false,\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      },\n      \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n      \"AllowedMethods\": {\n        \"Quantity\": integer,\n        \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n        \"CachedMethods\": {\n          \"Quantity\": integer,\n          \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n        }\n      },\n      \"SmoothStreaming\": true|false,\n      \"Compress\": true|false,\n      \"LambdaFunctionAssociations\": {\n        \"Quantity\": integer,\n        \"Items\": [\n          {\n            \"LambdaFunctionARN\": \"string\",\n            \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n            \"IncludeBody\": true|false\n          }\n          ...\n        ]\n      },\n      \"FunctionAssociations\": {\n        \"Quantity\": integer,\n        \"Items\": [\n          {\n            \"FunctionARN\": \"string\",\n            \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n          }\n          ...\n        ]\n      },\n      \"FieldLevelEncryptionId\": \"string\",\n      \"RealtimeLogConfigArn\": \"string\",\n      \"CachePolicyId\": \"string\",\n      \"OriginRequestPolicyId\": \"string\",\n      \"ForwardedValues\": {\n        \"QueryString\": true|false,\n        \"Cookies\": {\n          \"Forward\": \"none\"|\"whitelist\"|\"all\",\n          \"WhitelistedNames\": {\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          }\n        },\n        \"Headers\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        },\n        \"QueryStringCacheKeys\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        }\n      },\n      \"MinTTL\": long,\n      \"DefaultTTL\": long,\n      \"MaxTTL\": long\n    },\n    \"CacheBehaviors\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"PathPattern\": \"string\",\n          \"TargetOriginId\": \"string\",\n          \"TrustedSigners\": {\n            \"Enabled\": true|false,\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          },\n          \"TrustedKeyGroups\": {\n            \"Enabled\": true|false,\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          },\n          \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n          \"AllowedMethods\": {\n            \"Quantity\": integer,\n            \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n            \"CachedMethods\": {\n              \"Quantity\": integer,\n              \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n            }\n          },\n          \"SmoothStreaming\": true|false,\n          \"Compress\": true|false,\n          \"LambdaFunctionAssociations\": {\n            \"Quantity\": integer,\n            \"Items\": [\n              {\n                \"LambdaFunctionARN\": \"string\",\n                \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n                \"IncludeBody\": true|false\n              }\n              ...\n            ]\n          },\n          \"FunctionAssociations\": {\n            \"Quantity\": integer,\n            \"Items\": [\n              {\n                \"FunctionARN\": \"string\",\n                \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n              }\n              ...\n            ]\n          },\n          \"FieldLevelEncryptionId\": \"string\",\n          \"RealtimeLogConfigArn\": \"string\",\n          \"CachePolicyId\": \"string\",\n          \"OriginRequestPolicyId\": \"string\",\n          \"ForwardedValues\": {\n            \"QueryString\": true|false,\n            \"Cookies\": {\n              \"Forward\": \"none\"|\"whitelist\"|\"all\",\n              \"WhitelistedNames\": {\n                \"Quantity\": integer,\n                \"Items\": [\"string\", ...]\n              }\n            },\n            \"Headers\": {\n              \"Quantity\": integer,\n              \"Items\": [\"string\", ...]\n            },\n            \"QueryStringCacheKeys\": {\n              \"Quantity\": integer,\n              \"Items\": [\"string\", ...]\n            }\n          },\n          \"MinTTL\": long,\n          \"DefaultTTL\": long,\n          \"MaxTTL\": long\n        }\n        ...\n      ]\n    },\n    \"CustomErrorResponses\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"ErrorCode\": integer,\n          \"ResponsePagePath\": \"string\",\n          \"ResponseCode\": \"string\",\n          \"ErrorCachingMinTTL\": long\n        }\n        ...\n      ]\n    },\n    \"Comment\": \"string\",\n    \"Logging\": {\n      \"Enabled\": true|false,\n      \"IncludeCookies\": true|false,\n      \"Bucket\": \"string\",\n      \"Prefix\": \"string\"\n    },\n    \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n    \"Enabled\": true|false,\n    \"ViewerCertificate\": {\n      \"CloudFrontDefaultCertificate\": true|false,\n      \"IAMCertificateId\": \"string\",\n      \"ACMCertificateArn\": \"string\",\n      \"SSLSupportMethod\": \"sni-only\"|\"vip\"|\"static-ip\",\n      \"MinimumProtocolVersion\": \"SSLv3\"|\"TLSv1\"|\"TLSv1_2016\"|\"TLSv1.1_2016\"|\"TLSv1.2_2018\"|\"TLSv1.2_2019\"|\"TLSv1.2_2021\",\n      \"Certificate\": \"string\",\n      \"CertificateSource\": \"cloudfront\"|\"iam\"|\"acm\"\n    },\n    \"Restrictions\": {\n      \"GeoRestriction\": {\n        \"RestrictionType\": \"blacklist\"|\"whitelist\"|\"none\",\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"WebACLId\": \"string\",\n    \"HttpVersion\": \"http1.1\"|\"http2\",\n    \"IsIPV6Enabled\": true|false\n  },\n  \"Tags\": {\n    \"Items\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\"\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistribution -> (structure)\n\nThe distribution’s information.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThis response element indicates the current status of the distribution. When the status is Deployed , the distribution’s information is fully propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nInProgressInvalidationBatches -> (integer)\n\nThe number of invalidation batches currently in progress.\n\nDomainName -> (string)\n\nThe domain name corresponding to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using trusted signers. This field contains a list of account IDs and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nActiveTrustedKeyGroups -> (structure)\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using key groups. This field contains a list of key groups and the public keys in each key group that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups, including the identifiers of the public keys in each key group that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of identifiers for the public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nKeyGroupId -> (string)\n\nThe identifier of the key group that contains the public keys.\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nDistributionConfig -> (structure)\n\nThe current configuration information for the distribution. Send a GET request to the /*CloudFront API version* /distribution ID/config resource.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.\n\nLocation -> (string)\n\nThe fully qualified URI of the new distribution resource just created.\n\nETag -> (string)\n\nThe current version of the distribution created.",
      "command_examples": "Examples\n\nTo create a CloudFront distribution with tags\n\nThe following example creates a distribution with two tags by providing the distribution configuration and tags in a JSON file named dist-config-with-tags.json:\n\naws cloudfront create-distribution-with-tags \\\n    --distribution-config-with-tags file://dist-config-with-tags.json\n\n\nThe file dist-config-with-tags.json is a JSON document in the current folder that contains the following. Note the Tags object at the top of the file, which contains two tags:\n\nName = ExampleDistribution\n\nProject = ExampleProject\n\n{\n    \"Tags\": {\n        \"Items\": [\n            {\n                \"Key\": \"Name\",\n                \"Value\": \"ExampleDistribution\"\n            },\n            {\n                \"Key\": \"Project\",\n                \"Value\": \"ExampleProject\"\n            }\n        ]\n    },\n    \"DistributionConfig\": {\n        \"CallerReference\": \"cli-example\",\n        \"Aliases\": {\n            \"Quantity\": 0\n        },\n        \"DefaultRootObject\": \"index.html\",\n        \"Origins\": {\n            \"Quantity\": 1,\n            \"Items\": [\n                {\n                    \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                    \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                    \"OriginPath\": \"\",\n                    \"CustomHeaders\": {\n                        \"Quantity\": 0\n                    },\n                    \"S3OriginConfig\": {\n                        \"OriginAccessIdentity\": \"\"\n                    }\n                }\n            ]\n        },\n        \"OriginGroups\": {\n            \"Quantity\": 0\n        },\n        \"DefaultCacheBehavior\": {\n            \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n            \"ForwardedValues\": {\n                \"QueryString\": false,\n                \"Cookies\": {\n                    \"Forward\": \"none\"\n                },\n                \"Headers\": {\n                    \"Quantity\": 0\n                },\n                \"QueryStringCacheKeys\": {\n                    \"Quantity\": 0\n                }\n            },\n            \"TrustedSigners\": {\n                \"Enabled\": false,\n                \"Quantity\": 0\n            },\n            \"ViewerProtocolPolicy\": \"allow-all\",\n            \"MinTTL\": 0,\n            \"AllowedMethods\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"HEAD\",\n                    \"GET\"\n                ],\n                \"CachedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ]\n                }\n            },\n            \"SmoothStreaming\": false,\n            \"DefaultTTL\": 86400,\n            \"MaxTTL\": 31536000,\n            \"Compress\": false,\n            \"LambdaFunctionAssociations\": {\n                \"Quantity\": 0\n            },\n            \"FieldLevelEncryptionId\": \"\"\n        },\n        \"CacheBehaviors\": {\n            \"Quantity\": 0\n        },\n        \"CustomErrorResponses\": {\n            \"Quantity\": 0\n        },\n        \"Comment\": \"\",\n        \"Logging\": {\n            \"Enabled\": false,\n            \"IncludeCookies\": false,\n            \"Bucket\": \"\",\n            \"Prefix\": \"\"\n        },\n        \"PriceClass\": \"PriceClass_All\",\n        \"Enabled\": true,\n        \"ViewerCertificate\": {\n            \"CloudFrontDefaultCertificate\": true,\n            \"MinimumProtocolVersion\": \"TLSv1\",\n            \"CertificateSource\": \"cloudfront\"\n        },\n        \"Restrictions\": {\n            \"GeoRestriction\": {\n                \"RestrictionType\": \"none\",\n                \"Quantity\": 0\n            }\n        },\n        \"WebACLId\": \"\",\n        \"HttpVersion\": \"http2\",\n        \"IsIPV6Enabled\": true\n    }\n}\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/distribution/EDFDVBD6EXAMPLE\",\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"Distribution\": {\n        \"Id\": \"EDFDVBD6EXAMPLE\",\n        \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE\",\n        \"Status\": \"InProgress\",\n        \"LastModifiedTime\": \"2019-12-04T23:35:41.433Z\",\n        \"InProgressInvalidationBatches\": 0,\n        \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n        \"ActiveTrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"DistributionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Aliases\": {\n                \"Quantity\": 0\n            },\n            \"DefaultRootObject\": \"index.html\",\n            \"Origins\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                        \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                        \"OriginPath\": \"\",\n                        \"CustomHeaders\": {\n                            \"Quantity\": 0\n                        },\n                        \"S3OriginConfig\": {\n                            \"OriginAccessIdentity\": \"\"\n                        }\n                    }\n                ]\n            },\n            \"OriginGroups\": {\n                \"Quantity\": 0\n            },\n            \"DefaultCacheBehavior\": {\n                \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                \"ForwardedValues\": {\n                    \"QueryString\": false,\n                    \"Cookies\": {\n                        \"Forward\": \"none\"\n                    },\n                    \"Headers\": {\n                        \"Quantity\": 0\n                    },\n                    \"QueryStringCacheKeys\": {\n                        \"Quantity\": 0\n                    }\n                },\n                \"TrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"ViewerProtocolPolicy\": \"allow-all\",\n                \"MinTTL\": 0,\n                \"AllowedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ],\n                    \"CachedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ]\n                    }\n                },\n                \"SmoothStreaming\": false,\n                \"DefaultTTL\": 86400,\n                \"MaxTTL\": 31536000,\n                \"Compress\": false,\n                \"LambdaFunctionAssociations\": {\n                    \"Quantity\": 0\n                },\n                \"FieldLevelEncryptionId\": \"\"\n            },\n            \"CacheBehaviors\": {\n                \"Quantity\": 0\n            },\n            \"CustomErrorResponses\": {\n                \"Quantity\": 0\n            },\n            \"Comment\": \"\",\n            \"Logging\": {\n                \"Enabled\": false,\n                \"IncludeCookies\": false,\n                \"Bucket\": \"\",\n                \"Prefix\": \"\"\n            },\n            \"PriceClass\": \"PriceClass_All\",\n            \"Enabled\": true,\n            \"ViewerCertificate\": {\n                \"CloudFrontDefaultCertificate\": true,\n                \"MinimumProtocolVersion\": \"TLSv1\",\n                \"CertificateSource\": \"cloudfront\"\n            },\n            \"Restrictions\": {\n                \"GeoRestriction\": {\n                    \"RestrictionType\": \"none\",\n                    \"Quantity\": 0\n                }\n            },\n            \"WebACLId\": \"\",\n            \"HttpVersion\": \"http2\",\n            \"IsIPV6Enabled\": true\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-field-level-encryption-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-field-level-encryption-config.html",
      "command_description": "Description\n\nCreate a new field-level encryption configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-field-level-encryption-config\n--field-level-encryption-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--field-level-encryption-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--field-level-encryption-config (structure)\n\nThe request to create a new field-level encryption configuration.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\",\n  \"QueryArgProfileConfig\": {\n    \"ForwardWhenQueryArgProfileIsUnknown\": true|false,\n    \"QueryArgProfiles\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"QueryArg\": \"string\",\n          \"ProfileId\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"ContentTypeProfileConfig\": {\n    \"ForwardWhenContentTypeIsUnknown\": true|false,\n    \"ContentTypeProfiles\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"Format\": \"URLEncoded\",\n          \"ProfileId\": \"string\",\n          \"ContentType\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryption -> (structure)\n\nReturned when you create a new field-level encryption configuration.\n\nId -> (string)\n\nThe configuration ID for a field-level encryption configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption configuration was changed.\n\nFieldLevelEncryptionConfig -> (structure)\n\nA complex data type that includes the profile configurations specified for field-level encryption.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nLocation -> (string)\n\nThe fully qualified URI of the new configuration resource just created.\n\nETag -> (string)\n\nThe current version of the field level encryption configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo create a CloudFront field-level encryption configuration\n\nThe following example creates a field-level encryption configuration by providing the configuration parameters in a JSON file named fle-config.json. Before you can create a field-level encryption configuration, you must have a field-level encryption profile. To create a profile, see the create-field-level-encryption-profile command.\n\nFor more information about CloudFront field-level encryption, see Using Field-Level Encryption to Help Protect Sensitive Data in the Amazon CloudFront Developer Guide.\n\naws cloudfront create-field-level-encryption-config \\\n    --field-level-encryption-config file://fle-config.json\n\n\nThe file fle-config.json is a JSON document in the current folder that contains the following:\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"Example FLE configuration\",\n    \"QueryArgProfileConfig\": {\n        \"ForwardWhenQueryArgProfileIsUnknown\": true,\n        \"QueryArgProfiles\": {\n            \"Quantity\": 0\n        }\n    },\n    \"ContentTypeProfileConfig\": {\n        \"ForwardWhenContentTypeIsUnknown\": true,\n        \"ContentTypeProfiles\": {\n            \"Quantity\": 1,\n            \"Items\": [\n                {\n                    \"Format\": \"URLEncoded\",\n                    \"ProfileId\": \"P280MFCLSYOCVU\",\n                    \"ContentType\": \"application/x-www-form-urlencoded\"\n                }\n            ]\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/field-level-encryption/C3KM2WVD605UAY\",\n    \"ETag\": \"E2P4Z4VU7TY5SG\",\n    \"FieldLevelEncryption\": {\n        \"Id\": \"C3KM2WVD605UAY\",\n        \"LastModifiedTime\": \"2019-12-10T21:30:18.974Z\",\n        \"FieldLevelEncryptionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Example FLE configuration\",\n            \"QueryArgProfileConfig\": {\n                \"ForwardWhenQueryArgProfileIsUnknown\": true,\n                \"QueryArgProfiles\": {\n                    \"Quantity\": 0,\n                    \"Items\": []\n                }\n            },\n            \"ContentTypeProfileConfig\": {\n                \"ForwardWhenContentTypeIsUnknown\": true,\n                \"ContentTypeProfiles\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"Format\": \"URLEncoded\",\n                            \"ProfileId\": \"P280MFCLSYOCVU\",\n                            \"ContentType\": \"application/x-www-form-urlencoded\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-field-level-encryption-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-field-level-encryption-profile.html",
      "command_description": "Description\n\nCreate a field-level encryption profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-field-level-encryption-profile\n--field-level-encryption-profile-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--field-level-encryption-profile-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--field-level-encryption-profile-config (structure)\n\nThe request to create a field-level encryption profile.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\",\n  \"EncryptionEntities\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"PublicKeyId\": \"string\",\n        \"ProviderId\": \"string\",\n        \"FieldPatterns\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        }\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionProfile -> (structure)\n\nReturned when you create a new field-level encryption profile.\n\nId -> (string)\n\nThe ID for a field-level encryption profile configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption profile was updated.\n\nFieldLevelEncryptionProfileConfig -> (structure)\n\nA complex data type that includes the profile name and the encryption entities for the field-level encryption profile.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nLocation -> (string)\n\nThe fully qualified URI of the new profile resource just created.\n\nETag -> (string)\n\nThe current version of the field level encryption profile. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo create a CloudFront field-level encryption profile\n\nThe following example creates a field-level encryption profile by providing the parameters in a JSON file named fle-profile-config.json. Before you can create a field-level encryption profile, you must have a CloudFront public key. To create a CloudFront public key, see the create-public-key command.\n\nFor more information about CloudFront field-level encryption, see Using Field-Level Encryption to Help Protect Sensitive Data in the Amazon CloudFront Developer Guide.\n\naws cloudfront create-field-level-encryption-profile \\\n    --field-level-encryption-profile-config file://fle-profile-config.json\n\n\nThe file fle-profile-config.json is a JSON document in the current folder that contains the following:\n\n{\n    \"Name\": \"ExampleFLEProfile\",\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"FLE profile for AWS CLI example\",\n    \"EncryptionEntities\": {\n        \"Quantity\": 1,\n        \"Items\": [\n            {\n                \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                \"ProviderId\": \"ExampleFLEProvider\",\n                \"FieldPatterns\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        \"ExampleSensitiveField\"\n                    ]\n                }\n            }\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/field-level-encryption-profile/PPK0UOSIF5WSV\",\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"FieldLevelEncryptionProfile\": {\n        \"Id\": \"PPK0UOSIF5WSV\",\n        \"LastModifiedTime\": \"2019-12-10T01:03:16.537Z\",\n        \"FieldLevelEncryptionProfileConfig\": {\n            \"Name\": \"ExampleFLEProfile\",\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"FLE profile for AWS CLI example\",\n            \"EncryptionEntities\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                        \"ProviderId\": \"ExampleFLEProvider\",\n                        \"FieldPatterns\": {\n                            \"Quantity\": 1,\n                            \"Items\": [\n                                \"ExampleSensitiveField\"\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-function.html",
      "command_description": "Description\n\nCreates a CloudFront function.\n\nTo create a function, you provide the function code and some configuration information about the function. The response contains an Amazon Resource Name (ARN) that uniquely identifies the function.\n\nWhen you create a function, it’s in the DEVELOPMENT stage. In this stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen you’re ready to use your function with a CloudFront distribution, use PublishFunction to copy the function from the DEVELOPMENT stage to LIVE . When it’s live, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-function\n--name <value>\n--function-config <value>\n--function-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--function-config <value>",
        "--function-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nA name to identify the function.\n\n--function-config (structure)\n\nConfiguration information about the function, including an optional comment and the function’s runtime.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nShorthand Syntax:\n\nComment=string,Runtime=string\n\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Runtime\": \"cloudfront-js-1.0\"\n}\n\n\n--function-code (blob)\n\nThe function code. For more information about writing a CloudFront function, see Writing function code for CloudFront Functions in the Amazon CloudFront Developer Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionSummary -> (structure)\n\nContains configuration information and metadata about a CloudFront function.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated.\n\nLocation -> (string)\n\nThe URL of the CloudFront function. Use the URL to manage the function with the CloudFront API.\n\nETag -> (string)\n\nThe version identifier for the current version of the CloudFront function."
    },
    {
      "command_name": "create-invalidation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-invalidation.html",
      "command_description": "Description\n\nCreate a new invalidation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-invalidation\n--distribution-id <value>\n[--invalidation-batch <value>]\n[--paths <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "[--invalidation-batch <value>]",
        "[--paths <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe distribution’s id.\n\n--invalidation-batch (structure)\n\nThe batch information for the invalidation.\n\nPaths -> (structure)\n\nA complex type that contains information about the objects that you want to invalidate. For more information, see Specifying the Objects to Invalidate in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of invalidation paths specified for the objects that you want to invalidate.\n\nItems -> (list)\n\nA complex type that contains a list of the paths that you want to invalidate.\n\n(string)\n\nCallerReference -> (string)\n\nA value that you specify to uniquely identify an invalidation request. CloudFront uses the value to prevent you from accidentally resubmitting an identical request. Whenever you create a new invalidation request, you must specify a new value for CallerReference and change other values in the request as applicable. One way to ensure that the value of CallerReference is unique is to use a timestamp , for example, 20120301090000 .\n\nIf you make a second invalidation request with the same value for CallerReference , and if the rest of the request is the same, CloudFront doesn’t create a new invalidation request. Instead, CloudFront returns information about the invalidation request that you previously created with the same CallerReference .\n\nIf CallerReference is a value you already sent in a previous invalidation batch request but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.\n\nShorthand Syntax:\n\nPaths={Quantity=integer,Items=[string,string]},CallerReference=string\n\n\nJSON Syntax:\n\n{\n  \"Paths\": {\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"CallerReference\": \"string\"\n}\n\n\n--paths (string) The space-separated paths to be invalidated. Note: –invalidation-batch and –paths are mututally exclusive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLocation -> (string)\n\nThe fully qualified URI of the distribution and invalidation batch request, including the Invalidation ID .\n\nInvalidation -> (structure)\n\nThe invalidation’s information.\n\nId -> (string)\n\nThe identifier for the invalidation request. For example: IDFDVBD632BHDS5 .\n\nStatus -> (string)\n\nThe status of the invalidation request. When the invalidation batch is finished, the status is Completed .\n\nCreateTime -> (timestamp)\n\nThe date and time the invalidation request was first made.\n\nInvalidationBatch -> (structure)\n\nThe current invalidation information for the batch request.\n\nPaths -> (structure)\n\nA complex type that contains information about the objects that you want to invalidate. For more information, see Specifying the Objects to Invalidate in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of invalidation paths specified for the objects that you want to invalidate.\n\nItems -> (list)\n\nA complex type that contains a list of the paths that you want to invalidate.\n\n(string)\n\nCallerReference -> (string)\n\nA value that you specify to uniquely identify an invalidation request. CloudFront uses the value to prevent you from accidentally resubmitting an identical request. Whenever you create a new invalidation request, you must specify a new value for CallerReference and change other values in the request as applicable. One way to ensure that the value of CallerReference is unique is to use a timestamp , for example, 20120301090000 .\n\nIf you make a second invalidation request with the same value for CallerReference , and if the rest of the request is the same, CloudFront doesn’t create a new invalidation request. Instead, CloudFront returns information about the invalidation request that you previously created with the same CallerReference .\n\nIf CallerReference is a value you already sent in a previous invalidation batch request but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
      "command_examples": "Examples\n\nTo create an invalidation for a CloudFront distribution\n\nThe following create-invalidation example creates an invalidation for the specified files in the specified CloudFront distribution:\n\naws cloudfront create-invalidation \\\n    --distribution-id EDFDVBD6EXAMPLE \\\n    --paths \"/example-path/example-file.jpg\" \"/example-path/example-file2.png\"\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/distribution/EDFDVBD6EXAMPLE/invalidation/I1JLWSDAP8FU89\",\n    \"Invalidation\": {\n        \"Id\": \"I1JLWSDAP8FU89\",\n        \"Status\": \"InProgress\",\n        \"CreateTime\": \"2019-12-05T18:24:51.407Z\",\n        \"InvalidationBatch\": {\n            \"Paths\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"/example-path/example-file2.png\",\n                    \"/example-path/example-file.jpg\"\n                ]\n            },\n            \"CallerReference\": \"cli-1575570291-670203\"\n        }\n    }\n}\n\n\nIn the previous example, the AWS CLI automatically generated a random CallerReference. To specify your own CallerReference, or to avoid passing the invalidation parameters as command line arguments, you can use a JSON file. The following example creates an invalidation for two files, by providing the invalidation parameters in a JSON file named inv-batch.json:\n\naws cloudfront create-invalidation \\\n    --distribution-id EDFDVBD6EXAMPLE \\\n    --invalidation-batch file://inv-batch.json\n\n\nContents of inv-batch.json:\n\n{\n    \"Paths\": {\n        \"Quantity\": 2,\n        \"Items\": [\n            \"/example-path/example-file.jpg\",\n            \"/example-path/example-file2.png\"\n        ]\n    },\n    \"CallerReference\": \"cli-example\"\n}\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/distribution/EDFDVBD6EXAMPLE/invalidation/I2J0I21PCUYOIK\",\n    \"Invalidation\": {\n        \"Id\": \"I2J0I21PCUYOIK\",\n        \"Status\": \"InProgress\",\n        \"CreateTime\": \"2019-12-05T18:40:49.413Z\",\n        \"InvalidationBatch\": {\n            \"Paths\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"/example-path/example-file.jpg\",\n                    \"/example-path/example-file2.png\"\n                ]\n            },\n            \"CallerReference\": \"cli-example\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-key-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-key-group.html",
      "command_description": "Description\n\nCreates a key group that you can use with CloudFront signed URLs and signed cookies .\n\nTo create a key group, you must specify at least one public key for the key group. After you create a key group, you can reference it from one or more cache behaviors. When you reference a key group in a cache behavior, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-key-group\n--key-group-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--key-group-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--key-group-config (structure)\n\nA key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nName=string,Items=string,string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Items\": [\"string\", ...],\n  \"Comment\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyGroup -> (structure)\n\nThe key group that was just created.\n\nId -> (string)\n\nThe identifier for the key group.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the key group was last modified.\n\nKeyGroupConfig -> (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nLocation -> (string)\n\nThe URL of the key group.\n\nETag -> (string)\n\nThe identifier for this version of the key group."
    },
    {
      "command_name": "create-monitoring-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-monitoring-subscription.html",
      "command_description": "Description\n\nEnables additional CloudWatch metrics for the specified CloudFront distribution. The additional metrics incur an additional cost.\n\nFor more information, see Viewing additional CloudFront distribution metrics in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-monitoring-subscription\n--distribution-id <value>\n--monitoring-subscription <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "--monitoring-subscription <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe ID of the distribution that you are enabling metrics for.\n\n--monitoring-subscription (structure)\n\nA monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.\n\nRealtimeMetricsSubscriptionConfig -> (structure)\n\nA subscription configuration for additional CloudWatch metrics.\n\nRealtimeMetricsSubscriptionStatus -> (string)\n\nA flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution.\n\nShorthand Syntax:\n\nRealtimeMetricsSubscriptionConfig={RealtimeMetricsSubscriptionStatus=string}\n\n\nJSON Syntax:\n\n{\n  \"RealtimeMetricsSubscriptionConfig\": {\n    \"RealtimeMetricsSubscriptionStatus\": \"Enabled\"|\"Disabled\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMonitoringSubscription -> (structure)\n\nA monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.\n\nRealtimeMetricsSubscriptionConfig -> (structure)\n\nA subscription configuration for additional CloudWatch metrics.\n\nRealtimeMetricsSubscriptionStatus -> (string)\n\nA flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution."
    },
    {
      "command_name": "create-origin-request-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-origin-request-policy.html",
      "command_description": "Description\n\nCreates an origin request policy.\n\nAfter you create an origin request policy, you can attach it to one or more cache behaviors. When it’s attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:\n\nThe request body and the URL path (without the domain name) from the viewer request.\n\nThe headers that CloudFront automatically includes in every origin request, including Host , User-Agent , and X-Amz-Cf-Id .\n\nAll HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.\n\nCloudFront sends a request when it can’t find a valid object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use CachePolicy .\n\nFor more information about origin request policies, see Controlling origin requests in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-origin-request-policy\n--origin-request-policy-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--origin-request-policy-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--origin-request-policy-config (structure)\n\nAn origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Name\": \"string\",\n  \"HeadersConfig\": {\n    \"HeaderBehavior\": \"none\"|\"whitelist\"|\"allViewer\"|\"allViewerAndWhitelistCloudFront\",\n    \"Headers\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"CookiesConfig\": {\n    \"CookieBehavior\": \"none\"|\"whitelist\"|\"all\",\n    \"Cookies\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"QueryStringsConfig\": {\n    \"QueryStringBehavior\": \"none\"|\"whitelist\"|\"all\",\n    \"QueryStrings\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOriginRequestPolicy -> (structure)\n\nAn origin request policy.\n\nId -> (string)\n\nThe unique identifier for the origin request policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the origin request policy was last modified.\n\nOriginRequestPolicyConfig -> (structure)\n\nThe origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nLocation -> (string)\n\nThe fully qualified URI of the origin request policy just created.\n\nETag -> (string)\n\nThe current version of the origin request policy."
    },
    {
      "command_name": "create-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-public-key.html",
      "command_description": "Description\n\nUploads a public key to CloudFront that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-public-key\n--public-key-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--public-key-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--public-key-config (structure)\n\nA CloudFront public key configuration.\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nCallerReference=string,Name=string,EncodedKey=string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Name\": \"string\",\n  \"EncodedKey\": \"string\",\n  \"Comment\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublicKey -> (structure)\n\nThe public key.\n\nId -> (string)\n\nThe identifier of the public key.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the public key was uploaded.\n\nPublicKeyConfig -> (structure)\n\nConfiguration information about a public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nLocation -> (string)\n\nThe URL of the public key.\n\nETag -> (string)\n\nThe identifier for this version of the public key.",
      "command_examples": "Examples\n\nTo create a CloudFront public key\n\nThe following example creates a CloudFront public key by providing the parameters in a JSON file named pub-key-config.json. Before you can use this command, you must have a PEM-encoded public key. For more information, see Create an RSA Key Pair in the Amazon CloudFront Developer Guide.\n\naws cloudfront create-public-key \\\n    --public-key-config file://pub-key-config.json\n\n\nThe file pub-key-config.json is a JSON document in the current folder that contains the following. Note that the public key is encoded in PEM format.\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Name\": \"ExampleKey\",\n    \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxPMbCA2Ks0lnd7IR+3pw\\nwd3H/7jPGwj8bLUmore7bX+oeGpZ6QmLAe/1UOWcmZX2u70dYcSIzB1ofZtcn4cJ\\nenHBAzO3ohBY/L1tQGJfS2A+omnN6H16VZE1JCK8XSJyfze7MDLcUyHZETdxuvRb\\nA9X343/vMAuQPnhinFJ8Wdy8YBXSPpy7r95ylUQd9LfYTBzVZYG2tSesplcOkjM3\\n2Uu+oMWxQAw1NINnSLPinMVsutJy6ZqlV3McWNWe4T+STGtWhrPNqJEn45sIcCx4\\nq+kGZ2NQ0FyIyT2eiLKOX5Rgb/a36E/aMk4VoDsaenBQgG7WLTnstb9sr7MIhS6A\\nrwIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n    \"Comment\": \"example public key\"\n}\n\n\nOutput:\n\n{\n    \"Location\": \"https://cloudfront.amazonaws.com/2019-03-26/public-key/KDFB19YGCR002\",\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"PublicKey\": {\n        \"Id\": \"KDFB19YGCR002\",\n        \"CreatedTime\": \"2019-12-05T18:51:43.781Z\",\n        \"PublicKeyConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Name\": \"ExampleKey\",\n            \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxPMbCA2Ks0lnd7IR+3pw\\nwd3H/7jPGwj8bLUmore7bX+oeGpZ6QmLAe/1UOWcmZX2u70dYcSIzB1ofZtcn4cJ\\nenHBAzO3ohBY/L1tQGJfS2A+omnN6H16VZE1JCK8XSJyfze7MDLcUyHZETdxuvRb\\nA9X343/vMAuQPnhinFJ8Wdy8YBXSPpy7r95ylUQd9LfYTBzVZYG2tSesplcOkjM3\\n2Uu+oMWxQAw1NINnSLPinMVsutJy6ZqlV3McWNWe4T+STGtWhrPNqJEn45sIcCx4\\nq+kGZ2NQ0FyIyT2eiLKOX5Rgb/a36E/aMk4VoDsaenBQgG7WLTnstb9sr7MIhS6A\\nrwIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n            \"Comment\": \"example public key\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "create-realtime-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-realtime-log-config.html",
      "command_description": "Description\n\nCreates a real-time log configuration.\n\nAfter you create a real-time log configuration, you can attach it to one or more cache behaviors to send real-time log data to the specified Amazon Kinesis data stream.\n\nFor more information about real-time log configurations, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-realtime-log-config\n--end-points <value>\n--fields <value>\n--name <value>\n--sampling-rate <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--end-points <value>",
        "--fields <value>",
        "--name <value>",
        "--sampling-rate <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--end-points (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nShorthand Syntax:\n\nStreamType=string,KinesisStreamConfig={RoleARN=string,StreamARN=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"StreamType\": \"string\",\n    \"KinesisStreamConfig\": {\n      \"RoleARN\": \"string\",\n      \"StreamARN\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--fields (list)\n\nA list of fields to include in each real-time log record.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--name (string)\n\nA unique name to identify this real-time log configuration.\n\n--sampling-rate (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRealtimeLogConfig -> (structure)\n\nA real-time log configuration.\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of this real-time log configuration.\n\nName -> (string)\n\nThe unique name of this real-time log configuration.\n\nSamplingRate -> (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.\n\nEndPoints -> (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nFields -> (list)\n\nA list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)"
    },
    {
      "command_name": "create-streaming-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-streaming-distribution.html",
      "command_description": "Description\n\nThis API is deprecated. Amazon CloudFront is deprecating real-time messaging protocol (RTMP) distributions on December 31, 2020. For more information, read the announcement on the Amazon CloudFront discussion forum.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-streaming-distribution\n--streaming-distribution-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--streaming-distribution-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--streaming-distribution-config (structure)\n\nThe streaming distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nShorthand Syntax:\n\nCallerReference=string,S3Origin={DomainName=string,OriginAccessIdentity=string},Aliases={Quantity=integer,Items=[string,string]},Comment=string,Logging={Enabled=boolean,Bucket=string,Prefix=string},TrustedSigners={Enabled=boolean,Quantity=integer,Items=[string,string]},PriceClass=string,Enabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"S3Origin\": {\n    \"DomainName\": \"string\",\n    \"OriginAccessIdentity\": \"string\"\n  },\n  \"Aliases\": {\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"Comment\": \"string\",\n  \"Logging\": {\n    \"Enabled\": true|false,\n    \"Bucket\": \"string\",\n    \"Prefix\": \"string\"\n  },\n  \"TrustedSigners\": {\n    \"Enabled\": true|false,\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n  \"Enabled\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistribution -> (structure)\n\nThe streaming distribution’s information.\n\nId -> (string)\n\nThe identifier for the RTMP distribution. For example: EGTXBD79EXAMPLE .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the RTMP distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the streaming distribution, for example, s5c39gqb8ow64r.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nA complex type that lists the accounts, if any, that you included in the TrustedSigners complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.\n\nThe Signer complex type lists the account number of the trusted signer or self if the signer is the account that created the distribution. The Signer element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer’s account. If no KeyPairId element appears for a Signer , that signer can’t create signed URLs.\n\nFor more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nStreamingDistributionConfig -> (structure)\n\nThe current configuration information for the RTMP distribution.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nLocation -> (string)\n\nThe fully qualified URI of the new streaming distribution resource just created.\n\nETag -> (string)\n\nThe current version of the streaming distribution created."
    },
    {
      "command_name": "create-streaming-distribution-with-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/create-streaming-distribution-with-tags.html",
      "command_description": "Description\n\nThis API is deprecated. Amazon CloudFront is deprecating real-time messaging protocol (RTMP) distributions on December 31, 2020. For more information, read the announcement on the Amazon CloudFront discussion forum.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-streaming-distribution-with-tags\n--streaming-distribution-config-with-tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--streaming-distribution-config-with-tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--streaming-distribution-config-with-tags (structure)\n\nThe streaming distribution’s configuration information.\n\nStreamingDistributionConfig -> (structure)\n\nA streaming distribution Configuration.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nTags -> (structure)\n\nA complex type that contains zero or more Tag elements.\n\nItems -> (list)\n\nA complex type that contains Tag elements.\n\n(structure)\n\nA complex type that contains Tag key and Tag value.\n\nKey -> (string)\n\nA string that contains Tag key.\n\nThe string length should be between 1 and 128 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nValue -> (string)\n\nA string that contains an optional Tag value.\n\nThe string length should be between 0 and 256 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nJSON Syntax:\n\n{\n  \"StreamingDistributionConfig\": {\n    \"CallerReference\": \"string\",\n    \"S3Origin\": {\n      \"DomainName\": \"string\",\n      \"OriginAccessIdentity\": \"string\"\n    },\n    \"Aliases\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"Comment\": \"string\",\n    \"Logging\": {\n      \"Enabled\": true|false,\n      \"Bucket\": \"string\",\n      \"Prefix\": \"string\"\n    },\n    \"TrustedSigners\": {\n      \"Enabled\": true|false,\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n    \"Enabled\": true|false\n  },\n  \"Tags\": {\n    \"Items\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\"\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistribution -> (structure)\n\nThe streaming distribution’s information.\n\nId -> (string)\n\nThe identifier for the RTMP distribution. For example: EGTXBD79EXAMPLE .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the RTMP distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the streaming distribution, for example, s5c39gqb8ow64r.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nA complex type that lists the accounts, if any, that you included in the TrustedSigners complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.\n\nThe Signer complex type lists the account number of the trusted signer or self if the signer is the account that created the distribution. The Signer element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer’s account. If no KeyPairId element appears for a Signer , that signer can’t create signed URLs.\n\nFor more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nStreamingDistributionConfig -> (structure)\n\nThe current configuration information for the RTMP distribution.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nLocation -> (string)\n\nThe fully qualified URI of the new streaming distribution resource just created.\n\nETag -> (string)\n\nThe current version of the distribution created."
    },
    {
      "command_name": "delete-cache-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-cache-policy.html",
      "command_description": "Description\n\nDeletes a cache policy.\n\nYou cannot delete a cache policy if it’s attached to a cache behavior. First update your distributions to remove the cache policy from all cache behaviors, then delete the cache policy.\n\nTo delete a cache policy, you must provide the policy’s identifier and version. To get these values, you can use ListCachePolicies or GetCachePolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-cache-policy\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the cache policy that you are deleting. To get the identifier, you can use ListCachePolicies .\n\n--if-match (string)\n\nThe version of the cache policy that you are deleting. The version is the cache policy’s ETag value, which you can get using ListCachePolicies , GetCachePolicy , or GetCachePolicyConfig .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-cloud-front-origin-access-identity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-cloud-front-origin-access-identity.html",
      "command_description": "Description\n\nDelete an origin access identity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-cloud-front-origin-access-identity\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe origin access identity’s ID.\n\n--if-match (string)\n\nThe value of the ETag header you received from a previous GET or PUT request. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudFront origin access identity\n\nThe following example deletes the origin access identity (OAI) with the ID E74FTE3AEXAMPLE. To delete an OAI, you must have the OAI’s ID and ETag. The OAI ID is returned in the output of the create-cloud-front-origin-access-identity and list-cloud-front-origin-access-identities commands. To get the ETag, use the get-cloud-front-origin-access-identity or get-cloud-front-origin-access-identity-config command. Use the --if-match option to provide the OAI’s ETag.\n\naws cloudfront delete-cloud-front-origin-access-identity \\\n    --id E74FTE3AEXAMPLE \\\n    --if-match E2QWRUHEXAMPLE\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "delete-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-distribution.html",
      "command_description": "Description\n\nDelete a distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-distribution\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe distribution ID.\n\n--if-match (string)\n\nThe value of the ETag header that you received when you disabled the distribution. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudFront distribution\n\nThe following example deletes the CloudFront distribution with the ID EDFDVBD6EXAMPLE. Before you can delete a distribution, you must disable it. To disable a distribution, use the update-distribution command. For more information, see the update-distribution examples.\n\nWhen a distribution is disabled, you can delete it. To delete a distribution, you must use the --if-match option to provide the distribution’s ETag. To get the ETag, use the get-distribution or get-distribution-config command.\n\naws cloudfront delete-distribution \\\n    --id EDFDVBD6EXAMPLE \\\n    --if-match E2QWRUHEXAMPLE\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "delete-field-level-encryption-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-field-level-encryption-config.html",
      "command_description": "Description\n\nRemove a field-level encryption configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-field-level-encryption-config\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the configuration you want to delete from CloudFront.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the configuration identity to delete. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudFront field-level encryption configuration\n\nThe following example deletes the CloudFront field-level encryption configuration with the ID C3KM2WVD605UAY. To delete a field-level encryption configuration, you must have its ID and ETag. The ID is returned in the output of the create-field-level-encryption-config and list-field-level-encryption-configs commands. To get the ETag, use the get-field-level-encryption or get-field-level-encryption-config command. Use the --if-match option to provide the configuration’s ETag.\n\naws cloudfront delete-field-level-encryption-config \\\n    --id C3KM2WVD605UAY \\\n    --if-match E26M4BIAV81ZF6\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "delete-field-level-encryption-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-field-level-encryption-profile.html",
      "command_description": "Description\n\nRemove a field-level encryption profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-field-level-encryption-profile\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nRequest the ID of the profile you want to delete from CloudFront.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the profile to delete. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudFront field-level encryption profile\n\nThe following example deletes the CloudFront field-level encryption profile with the ID PPK0UOSIF5WSV. To delete a field-level encryption profile, you must have its ID and ETag. The ID is returned in the output of the create-field-level-encryption-profile and list-field-level-encryption-profiles commands. To get the ETag, use the get-field-level-encryption-profile or get-field-level-encryption-profile-config command. Use the --if-match option to provide the profile’s ETag.\n\naws cloudfront delete-field-level-encryption-profile \\\n    --id PPK0UOSIF5WSV \\\n    --if-match EJETYFJ9CL66D\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "delete-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-function.html",
      "command_description": "Description\n\nDeletes a CloudFront function.\n\nYou cannot delete a function if it’s associated with a cache behavior. First, update your distributions to remove the function association from all cache behaviors, then delete the function.\n\nTo delete a function, you must provide the function’s name and version (ETag value). To get these values, you can use ListFunctions and DescribeFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-function\n--name <value>\n--if-match <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--if-match <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function that you are deleting.\n\n--if-match (string)\n\nThe current version (ETag value) of the function that you are deleting, which you can get using DescribeFunction .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-key-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-key-group.html",
      "command_description": "Description\n\nDeletes a key group.\n\nYou cannot delete a key group that is referenced in a cache behavior. First update your distributions to remove the key group from all cache behaviors, then delete the key group.\n\nTo delete a key group, you must provide the key group’s identifier and version. To get these values, use ListKeyGroups followed by GetKeyGroup or GetKeyGroupConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-key-group\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the key group that you are deleting. To get the identifier, use ListKeyGroups .\n\n--if-match (string)\n\nThe version of the key group that you are deleting. The version is the key group’s ETag value. To get the ETag , use GetKeyGroup or GetKeyGroupConfig .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-monitoring-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-monitoring-subscription.html",
      "command_description": "Description\n\nDisables additional CloudWatch metrics for the specified CloudFront distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-monitoring-subscription\n--distribution-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe ID of the distribution that you are disabling metrics for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-origin-request-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-origin-request-policy.html",
      "command_description": "Description\n\nDeletes an origin request policy.\n\nYou cannot delete an origin request policy if it’s attached to any cache behaviors. First update your distributions to remove the origin request policy from all cache behaviors, then delete the origin request policy.\n\nTo delete an origin request policy, you must provide the policy’s identifier and version. To get the identifier, you can use ListOriginRequestPolicies or GetOriginRequestPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-origin-request-policy\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the origin request policy that you are deleting. To get the identifier, you can use ListOriginRequestPolicies .\n\n--if-match (string)\n\nThe version of the origin request policy that you are deleting. The version is the origin request policy’s ETag value, which you can get using ListOriginRequestPolicies , GetOriginRequestPolicy , or GetOriginRequestPolicyConfig .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-public-key.html",
      "command_description": "Description\n\nRemove a public key you previously added to CloudFront.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-public-key\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the public key you want to remove from CloudFront.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the public key identity to delete. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudFront public key\n\nThe following example deletes the CloudFront public key with the ID KDFB19YGCR002. To delete a public key, you must have its ID and ETag. The ID is returned in the output of the create-public-key and list-public-keys commands. To get the ETag, use the get-public-key or get-public-key-config command. Use the --if-match option to provide the public key’s ETag.\n\naws cloudfront delete-public-key \\\n    --id KDFB19YGCR002 \\\n    --if-match E2QWRUHEXAMPLE\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "delete-realtime-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-realtime-log-config.html",
      "command_description": "Description\n\nDeletes a real-time log configuration.\n\nYou cannot delete a real-time log configuration if it’s attached to a cache behavior. First update your distributions to remove the real-time log configuration from all cache behaviors, then delete the real-time log configuration.\n\nTo delete a real-time log configuration, you can provide the configuration’s name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to delete.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-realtime-log-config\n[--name <value>]\n[--arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name <value>]",
        "[--arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the real-time log configuration to delete.\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-streaming-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/delete-streaming-distribution.html",
      "command_description": "Description\n\nDelete a streaming distribution. To delete an RTMP distribution using the CloudFront API, perform the following steps.\n\nTo delete an RTMP distribution using the CloudFront API :\n\nDisable the RTMP distribution.\n\nSubmit a GET Streaming Distribution Config request to get the current configuration and the Etag header for the distribution.\n\nUpdate the XML document that was returned in the response to your GET Streaming Distribution Config request to change the value of Enabled to false .\n\nSubmit a PUT Streaming Distribution Config request to update the configuration for your distribution. In the request body, include the XML document that you updated in Step 3. Then set the value of the HTTP If-Match header to the value of the ETag header that CloudFront returned when you submitted the GET Streaming Distribution Config request in Step 2.\n\nReview the response to the PUT Streaming Distribution Config request to confirm that the distribution was successfully disabled.\n\nSubmit a GET Streaming Distribution Config request to confirm that your changes have propagated. When propagation is complete, the value of Status is Deployed .\n\nSubmit a DELETE Streaming Distribution request. Set the value of the HTTP If-Match header to the value of the ETag header that CloudFront returned when you submitted the GET Streaming Distribution Config request in Step 2.\n\nReview the response to your DELETE Streaming Distribution request to confirm that the distribution was successfully deleted.\n\nFor information about deleting a distribution using the CloudFront console, see Deleting a Distribution in the Amazon CloudFront Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-streaming-distribution\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe distribution ID.\n\n--if-match (string)\n\nThe value of the ETag header that you received when you disabled the streaming distribution. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/describe-function.html",
      "command_description": "Description\n\nGets configuration information and metadata about a CloudFront function, but not the function’s code. To get a function’s code, use GetFunction .\n\nTo get configuration information and metadata about a function, you must provide the function’s name and stage. To get these values, you can use ListFunctions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-function\n--name <value>\n[--stage <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--stage <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function that you are getting information about.\n\n--stage (string)\n\nThe function’s stage, either DEVELOPMENT or LIVE .\n\nPossible values:\n\nDEVELOPMENT\n\nLIVE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionSummary -> (structure)\n\nContains configuration information and metadata about a CloudFront function.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated.\n\nETag -> (string)\n\nThe version identifier for the current version of the CloudFront function."
    },
    {
      "command_name": "get-cache-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-cache-policy.html",
      "command_description": "Description\n\nGets a cache policy, including the following metadata:\n\nThe policy’s identifier.\n\nThe date and time when the policy was last modified.\n\nTo get a cache policy, you must provide the policy’s identifier. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the cache policy is not attached to a cache behavior, you can get the identifier using ListCachePolicies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cache-policy\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the cache policy. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the cache policy is not attached to a cache behavior, you can get the identifier using ListCachePolicies .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCachePolicy -> (structure)\n\nThe cache policy.\n\nId -> (string)\n\nThe unique identifier for the cache policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the cache policy was last modified.\n\nCachePolicyConfig -> (structure)\n\nThe cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the cache policy."
    },
    {
      "command_name": "get-cache-policy-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-cache-policy-config.html",
      "command_description": "Description\n\nGets a cache policy configuration.\n\nTo get a cache policy configuration, you must provide the policy’s identifier. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the cache policy is not attached to a cache behavior, you can get the identifier using ListCachePolicies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cache-policy-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the cache policy. If the cache policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the cache policy is not attached to a cache behavior, you can get the identifier using ListCachePolicies .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCachePolicyConfig -> (structure)\n\nThe cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the cache policy."
    },
    {
      "command_name": "get-cloud-front-origin-access-identity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-cloud-front-origin-access-identity.html",
      "command_description": "Description\n\nGet the information about an origin access identity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cloud-front-origin-access-identity\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identity’s ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCloudFrontOriginAccessIdentity -> (structure)\n\nThe origin access identity’s information.\n\nId -> (string)\n\nThe ID for the origin access identity, for example, E74FTE3AJFJ256A .\n\nS3CanonicalUserId -> (string)\n\nThe Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3.\n\nCloudFrontOriginAccessIdentityConfig -> (structure)\n\nThe current configuration information for the identity.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe current version of the origin access identity’s information. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront origin access identity\n\nThe following example gets the CloudFront origin access identity (OAI) with the ID E74FTE3AEXAMPLE, including its ETag and the associated S3 canonical ID. The OAI ID is returned in the output of the create-cloud-front-origin-access-identity and list-cloud-front-origin-access-identities commands.\n\naws cloudfront get-cloud-front-origin-access-identity --id E74FTE3AEXAMPLE\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"CloudFrontOriginAccessIdentity\": {\n        \"Id\": \"E74FTE3AEXAMPLE\",\n        \"S3CanonicalUserId\": \"cd13868f797c227fbea2830611a26fe0a21ba1b826ab4bed9b7771c9aEXAMPLE\",\n        \"CloudFrontOriginAccessIdentityConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Example OAI\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-cloud-front-origin-access-identity-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-cloud-front-origin-access-identity-config.html",
      "command_description": "Description\n\nGet the configuration information about an origin access identity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-cloud-front-origin-access-identity-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identity’s ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCloudFrontOriginAccessIdentityConfig -> (structure)\n\nThe origin access identity’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront origin access identity configuration\n\nThe following example gets metadata about the CloudFront origin access identity (OAI) with the ID E74FTE3AEXAMPLE, including its ETag. The OAI ID is returned in the output of the create-cloud-front-origin-access-identity and list-cloud-front-origin-access-identities commands.\n\naws cloudfront get-cloud-front-origin-access-identity-config --id E74FTE3AEXAMPLE\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"CloudFrontOriginAccessIdentityConfig\": {\n        \"CallerReference\": \"cli-example\",\n        \"Comment\": \"Example OAI\"\n    }\n}\n"
    },
    {
      "command_name": "get-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-distribution.html",
      "command_description": "Description\n\nGet the information about a distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-distribution\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe distribution’s ID. If the ID is empty, an empty distribution configuration is returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistribution -> (structure)\n\nThe distribution’s information.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThis response element indicates the current status of the distribution. When the status is Deployed , the distribution’s information is fully propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nInProgressInvalidationBatches -> (integer)\n\nThe number of invalidation batches currently in progress.\n\nDomainName -> (string)\n\nThe domain name corresponding to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using trusted signers. This field contains a list of account IDs and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nActiveTrustedKeyGroups -> (structure)\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using key groups. This field contains a list of key groups and the public keys in each key group that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups, including the identifiers of the public keys in each key group that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of identifiers for the public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nKeyGroupId -> (string)\n\nThe identifier of the key group that contains the public keys.\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nDistributionConfig -> (structure)\n\nThe current configuration information for the distribution. Send a GET request to the /*CloudFront API version* /distribution ID/config resource.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.\n\nETag -> (string)\n\nThe current version of the distribution’s information. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront distribution\n\nThe following example gets the CloudFront distribution with the ID EDFDVBD6EXAMPLE, including its ETag. The distribution ID is returned in the create-distribution and list-distributions commands.\n\naws cloudfront get-distribution --id EDFDVBD6EXAMPLE\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"Distribution\": {\n        \"Id\": \"EDFDVBD6EXAMPLE\",\n        \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE\",\n        \"Status\": \"Deployed\",\n        \"LastModifiedTime\": \"2019-12-04T23:35:41.433Z\",\n        \"InProgressInvalidationBatches\": 0,\n        \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n        \"ActiveTrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"DistributionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Aliases\": {\n                \"Quantity\": 0\n            },\n            \"DefaultRootObject\": \"index.html\",\n            \"Origins\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                        \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                        \"OriginPath\": \"\",\n                        \"CustomHeaders\": {\n                            \"Quantity\": 0\n                        },\n                        \"S3OriginConfig\": {\n                            \"OriginAccessIdentity\": \"\"\n                        }\n                    }\n                ]\n            },\n            \"OriginGroups\": {\n                \"Quantity\": 0\n            },\n            \"DefaultCacheBehavior\": {\n                \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                \"ForwardedValues\": {\n                    \"QueryString\": false,\n                    \"Cookies\": {\n                        \"Forward\": \"none\"\n                    },\n                    \"Headers\": {\n                        \"Quantity\": 0\n                    },\n                    \"QueryStringCacheKeys\": {\n                        \"Quantity\": 0\n                    }\n                },\n                \"TrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"ViewerProtocolPolicy\": \"allow-all\",\n                \"MinTTL\": 0,\n                \"AllowedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ],\n                    \"CachedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ]\n                    }\n                },\n                \"SmoothStreaming\": false,\n                \"DefaultTTL\": 86400,\n                \"MaxTTL\": 31536000,\n                \"Compress\": false,\n                \"LambdaFunctionAssociations\": {\n                    \"Quantity\": 0\n                },\n                \"FieldLevelEncryptionId\": \"\"\n            },\n            \"CacheBehaviors\": {\n                \"Quantity\": 0\n            },\n            \"CustomErrorResponses\": {\n                \"Quantity\": 0\n            },\n            \"Comment\": \"\",\n            \"Logging\": {\n                \"Enabled\": false,\n                \"IncludeCookies\": false,\n                \"Bucket\": \"\",\n                \"Prefix\": \"\"\n            },\n            \"PriceClass\": \"PriceClass_All\",\n            \"Enabled\": true,\n            \"ViewerCertificate\": {\n                \"CloudFrontDefaultCertificate\": true,\n                \"MinimumProtocolVersion\": \"TLSv1\",\n                \"CertificateSource\": \"cloudfront\"\n            },\n            \"Restrictions\": {\n                \"GeoRestriction\": {\n                    \"RestrictionType\": \"none\",\n                    \"Quantity\": 0\n                }\n            },\n            \"WebACLId\": \"\",\n            \"HttpVersion\": \"http2\",\n            \"IsIPV6Enabled\": true\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-distribution-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-distribution-config.html",
      "command_description": "Description\n\nGet the configuration information about a distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-distribution-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe distribution’s ID. If the ID is empty, an empty distribution configuration is returned.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionConfig -> (structure)\n\nThe distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront distribution configuration\n\nThe following example gets metadata about the CloudFront distribution with the ID EDFDVBD6EXAMPLE, including its ETag. The distribution ID is returned in the create-distribution and list-distributions commands.\n\naws cloudfront get-distribution-config --id EDFDVBD6EXAMPLE\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"DistributionConfig\": {\n        \"CallerReference\": \"cli-example\",\n        \"Aliases\": {\n            \"Quantity\": 0\n        },\n        \"DefaultRootObject\": \"index.html\",\n        \"Origins\": {\n            \"Quantity\": 1,\n            \"Items\": [\n                {\n                    \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                    \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                    \"OriginPath\": \"\",\n                    \"CustomHeaders\": {\n                        \"Quantity\": 0\n                    },\n                    \"S3OriginConfig\": {\n                        \"OriginAccessIdentity\": \"\"\n                    }\n                }\n            ]\n        },\n        \"OriginGroups\": {\n            \"Quantity\": 0\n        },\n        \"DefaultCacheBehavior\": {\n            \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n            \"ForwardedValues\": {\n                \"QueryString\": false,\n                \"Cookies\": {\n                    \"Forward\": \"none\"\n                },\n                \"Headers\": {\n                    \"Quantity\": 0\n                },\n                \"QueryStringCacheKeys\": {\n                    \"Quantity\": 0\n                }\n            },\n            \"TrustedSigners\": {\n                \"Enabled\": false,\n                \"Quantity\": 0\n            },\n            \"ViewerProtocolPolicy\": \"allow-all\",\n            \"MinTTL\": 0,\n            \"AllowedMethods\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"HEAD\",\n                    \"GET\"\n                ],\n                \"CachedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ]\n                }\n            },\n            \"SmoothStreaming\": false,\n            \"DefaultTTL\": 86400,\n            \"MaxTTL\": 31536000,\n            \"Compress\": false,\n            \"LambdaFunctionAssociations\": {\n                \"Quantity\": 0\n            },\n            \"FieldLevelEncryptionId\": \"\"\n        },\n        \"CacheBehaviors\": {\n            \"Quantity\": 0\n        },\n        \"CustomErrorResponses\": {\n            \"Quantity\": 0\n        },\n        \"Comment\": \"\",\n        \"Logging\": {\n            \"Enabled\": false,\n            \"IncludeCookies\": false,\n            \"Bucket\": \"\",\n            \"Prefix\": \"\"\n        },\n        \"PriceClass\": \"PriceClass_All\",\n        \"Enabled\": true,\n        \"ViewerCertificate\": {\n            \"CloudFrontDefaultCertificate\": true,\n            \"MinimumProtocolVersion\": \"TLSv1\",\n            \"CertificateSource\": \"cloudfront\"\n        },\n        \"Restrictions\": {\n            \"GeoRestriction\": {\n                \"RestrictionType\": \"none\",\n                \"Quantity\": 0\n            }\n        },\n        \"WebACLId\": \"\",\n        \"HttpVersion\": \"http2\",\n        \"IsIPV6Enabled\": true\n    }\n}\n"
    },
    {
      "command_name": "get-field-level-encryption",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-field-level-encryption.html",
      "command_description": "Description\n\nGet the field-level encryption configuration information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-field-level-encryption\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nRequest the ID for the field-level encryption configuration information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryption -> (structure)\n\nReturn the field-level encryption configuration information.\n\nId -> (string)\n\nThe configuration ID for a field-level encryption configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption configuration was changed.\n\nFieldLevelEncryptionConfig -> (structure)\n\nA complex data type that includes the profile configurations specified for field-level encryption.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nETag -> (string)\n\nThe current version of the field level encryption configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront field-level encryption configuration\n\nThe following example gets the CloudFront field-level encryption configuration with the ID C3KM2WVD605UAY, including its ETag:\n\naws cloudfront get-field-level-encryption --id C3KM2WVD605UAY\n\n\nOutput:\n\n{\n    \"ETag\": \"E2P4Z4VU7TY5SG\",\n    \"FieldLevelEncryption\": {\n        \"Id\": \"C3KM2WVD605UAY\",\n        \"LastModifiedTime\": \"2019-12-10T21:30:18.974Z\",\n        \"FieldLevelEncryptionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Example FLE configuration\",\n            \"QueryArgProfileConfig\": {\n                \"ForwardWhenQueryArgProfileIsUnknown\": true,\n                \"QueryArgProfiles\": {\n                    \"Quantity\": 0,\n                    \"Items\": []\n                }\n            },\n            \"ContentTypeProfileConfig\": {\n                \"ForwardWhenContentTypeIsUnknown\": true,\n                \"ContentTypeProfiles\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"Format\": \"URLEncoded\",\n                            \"ProfileId\": \"P280MFCLSYOCVU\",\n                            \"ContentType\": \"application/x-www-form-urlencoded\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-field-level-encryption-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-field-level-encryption-config.html",
      "command_description": "Description\n\nGet the field-level encryption configuration information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-field-level-encryption-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nRequest the ID for the field-level encryption configuration information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionConfig -> (structure)\n\nReturn the field-level encryption configuration information.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nETag -> (string)\n\nThe current version of the field level encryption configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get metadata about a CloudFront field-level encryption configuration\n\nThe following example gets metadata about the CloudFront field-level encryption configuration with the ID C3KM2WVD605UAY, including its ETag:\n\naws cloudfront get-field-level-encryption-config --id C3KM2WVD605UAY\n\n\nOutput:\n\n{\n    \"ETag\": \"E2P4Z4VU7TY5SG\",\n    \"FieldLevelEncryptionConfig\": {\n        \"CallerReference\": \"cli-example\",\n        \"Comment\": \"Example FLE configuration\",\n        \"QueryArgProfileConfig\": {\n            \"ForwardWhenQueryArgProfileIsUnknown\": true,\n            \"QueryArgProfiles\": {\n                \"Quantity\": 0,\n                \"Items\": []\n            }\n        },\n        \"ContentTypeProfileConfig\": {\n            \"ForwardWhenContentTypeIsUnknown\": true,\n            \"ContentTypeProfiles\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Format\": \"URLEncoded\",\n                        \"ProfileId\": \"P280MFCLSYOCVU\",\n                        \"ContentType\": \"application/x-www-form-urlencoded\"\n                    }\n                ]\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-field-level-encryption-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-field-level-encryption-profile.html",
      "command_description": "Description\n\nGet the field-level encryption profile information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-field-level-encryption-profile\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nGet the ID for the field-level encryption profile information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionProfile -> (structure)\n\nReturn the field-level encryption profile information.\n\nId -> (string)\n\nThe ID for a field-level encryption profile configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption profile was updated.\n\nFieldLevelEncryptionProfileConfig -> (structure)\n\nA complex data type that includes the profile name and the encryption entities for the field-level encryption profile.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nETag -> (string)\n\nThe current version of the field level encryption profile. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront field-level encryption profile\n\nThe following example gets the CloudFront field-level encryption profile with ID PPK0UOSIF5WSV , including its ETag:\n\naws cloudfront get-field-level-encryption-profile --id PPK0UOSIF5WSV\n\n\nOutput:\n\n{\n    \"ETag\": \"E1QQG65FS2L2GC\",\n    \"FieldLevelEncryptionProfile\": {\n        \"Id\": \"PPK0UOSIF5WSV\",\n        \"LastModifiedTime\": \"2019-12-10T01:03:16.537Z\",\n        \"FieldLevelEncryptionProfileConfig\": {\n            \"Name\": \"ExampleFLEProfile\",\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"FLE profile for AWS CLI example\",\n            \"EncryptionEntities\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                        \"ProviderId\": \"ExampleFLEProvider\",\n                        \"FieldPatterns\": {\n                            \"Quantity\": 1,\n                            \"Items\": [\n                                \"ExampleSensitiveField\"\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-field-level-encryption-profile-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-field-level-encryption-profile-config.html",
      "command_description": "Description\n\nGet the field-level encryption profile configuration information.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-field-level-encryption-profile-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nGet the ID for the field-level encryption profile configuration information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionProfileConfig -> (structure)\n\nReturn the field-level encryption profile configuration information.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nETag -> (string)\n\nThe current version of the field-level encryption profile configuration result. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo get a CloudFront field-level encryption profile configuration\n\nThe following example gets metadata about the CloudFront field-level encryption profile with ID PPK0UOSIF5WSV , including its ETag:\n\naws cloudfront get-field-level-encryption-profile-config --id PPK0UOSIF5WSV\n\n\nOutput:\n\n{\n    \"ETag\": \"E1QQG65FS2L2GC\",\n    \"FieldLevelEncryptionProfileConfig\": {\n        \"Name\": \"ExampleFLEProfile\",\n        \"CallerReference\": \"cli-example\",\n        \"Comment\": \"FLE profile for AWS CLI example\",\n        \"EncryptionEntities\": {\n            \"Quantity\": 1,\n            \"Items\": [\n                {\n                    \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                    \"ProviderId\": \"ExampleFLEProvider\",\n                    \"FieldPatterns\": {\n                        \"Quantity\": 1,\n                        \"Items\": [\n                            \"ExampleSensitiveField\"\n                        ]\n                    }\n                }\n            ]\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-function.html",
      "command_description": "Description\n\nGets the code of a CloudFront function. To get configuration information and metadata about a function, use DescribeFunction .\n\nTo get a function’s code, you must provide the function’s name and stage. To get these values, you can use ListFunctions .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-function\n--name <value>\n[--stage <value>]\n<outfile>\n",
      "command_options": [
        "--name <value>",
        "[--stage <value>]",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function whose code you are getting.\n\n--stage (string)\n\nThe function’s stage, either DEVELOPMENT or LIVE .\n\nPossible values:\n\nDEVELOPMENT\n\nLIVE\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionCode -> (blob)\n\nThe function code of a CloudFront function.\n\nETag -> (string)\n\nThe version identifier for the current version of the CloudFront function.\n\nContentType -> (string)\n\nThe content type (media type) of the response."
    },
    {
      "command_name": "get-invalidation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-invalidation.html",
      "command_description": "Description\n\nGet the information about an invalidation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-invalidation\n--distribution-id <value>\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe distribution’s ID.\n\n--id (string)\n\nThe identifier for the invalidation request, for example, IDFDVBD632BHDS5 .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInvalidation -> (structure)\n\nThe invalidation’s information. For more information, see Invalidation Complex Type .\n\nId -> (string)\n\nThe identifier for the invalidation request. For example: IDFDVBD632BHDS5 .\n\nStatus -> (string)\n\nThe status of the invalidation request. When the invalidation batch is finished, the status is Completed .\n\nCreateTime -> (timestamp)\n\nThe date and time the invalidation request was first made.\n\nInvalidationBatch -> (structure)\n\nThe current invalidation information for the batch request.\n\nPaths -> (structure)\n\nA complex type that contains information about the objects that you want to invalidate. For more information, see Specifying the Objects to Invalidate in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of invalidation paths specified for the objects that you want to invalidate.\n\nItems -> (list)\n\nA complex type that contains a list of the paths that you want to invalidate.\n\n(string)\n\nCallerReference -> (string)\n\nA value that you specify to uniquely identify an invalidation request. CloudFront uses the value to prevent you from accidentally resubmitting an identical request. Whenever you create a new invalidation request, you must specify a new value for CallerReference and change other values in the request as applicable. One way to ensure that the value of CallerReference is unique is to use a timestamp , for example, 20120301090000 .\n\nIf you make a second invalidation request with the same value for CallerReference , and if the rest of the request is the same, CloudFront doesn’t create a new invalidation request. Instead, CloudFront returns information about the invalidation request that you previously created with the same CallerReference .\n\nIf CallerReference is a value you already sent in a previous invalidation batch request but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
      "command_examples": "Examples\n\nTo get a CloudFront invalidation\n\nThe following example gets the invalidation with the ID I2J0I21PCUYOIK for the CloudFront distribution with the ID EDFDVBD6EXAMPLE:\n\naws cloudfront get-invalidation --id I2J0I21PCUYOIK --distribution-id EDFDVBD6EXAMPLE\n\n\nOutput:\n\n{\n    \"Invalidation\": {\n        \"Status\": \"Completed\",\n        \"InvalidationBatch\": {\n            \"Paths\": {\n                \"Items\": [\n                    \"/example-path/example-file.jpg\",\n                    \"/example-path/example-file-2.jpg\"\n                ],\n                \"Quantity\": 2\n            },\n            \"CallerReference\": \"cli-example\"\n        },\n        \"Id\": \"I2J0I21PCUYOIK\",\n        \"CreateTime\": \"2019-12-05T18:40:49.413Z\"\n    }\n}\n"
    },
    {
      "command_name": "get-key-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-key-group.html",
      "command_description": "Description\n\nGets a key group, including the date and time when the key group was last modified.\n\nTo get a key group, you must provide the key group’s identifier. If the key group is referenced in a distribution’s cache behavior, you can get the key group’s identifier using ListDistributions or GetDistribution . If the key group is not referenced in a cache behavior, you can get the identifier using ListKeyGroups .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-key-group\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the key group that you are getting. To get the identifier, use ListKeyGroups .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyGroup -> (structure)\n\nThe key group.\n\nId -> (string)\n\nThe identifier for the key group.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the key group was last modified.\n\nKeyGroupConfig -> (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier for this version of the key group."
    },
    {
      "command_name": "get-key-group-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-key-group-config.html",
      "command_description": "Description\n\nGets a key group configuration.\n\nTo get a key group configuration, you must provide the key group’s identifier. If the key group is referenced in a distribution’s cache behavior, you can get the key group’s identifier using ListDistributions or GetDistribution . If the key group is not referenced in a cache behavior, you can get the identifier using ListKeyGroups .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-key-group-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the key group whose configuration you are getting. To get the identifier, use ListKeyGroups .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyGroupConfig -> (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier for this version of the key group."
    },
    {
      "command_name": "get-monitoring-subscription",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-monitoring-subscription.html",
      "command_description": "Description\n\nGets information about whether additional CloudWatch metrics are enabled for the specified CloudFront distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-monitoring-subscription\n--distribution-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe ID of the distribution that you are getting metrics information for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nMonitoringSubscription -> (structure)\n\nA monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.\n\nRealtimeMetricsSubscriptionConfig -> (structure)\n\nA subscription configuration for additional CloudWatch metrics.\n\nRealtimeMetricsSubscriptionStatus -> (string)\n\nA flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution."
    },
    {
      "command_name": "get-origin-request-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-origin-request-policy.html",
      "command_description": "Description\n\nGets an origin request policy, including the following metadata:\n\nThe policy’s identifier.\n\nThe date and time when the policy was last modified.\n\nTo get an origin request policy, you must provide the policy’s identifier. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the origin request policy is not attached to a cache behavior, you can get the identifier using ListOriginRequestPolicies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-origin-request-policy\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the origin request policy. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the origin request policy is not attached to a cache behavior, you can get the identifier using ListOriginRequestPolicies .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOriginRequestPolicy -> (structure)\n\nThe origin request policy.\n\nId -> (string)\n\nThe unique identifier for the origin request policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the origin request policy was last modified.\n\nOriginRequestPolicyConfig -> (structure)\n\nThe origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the origin request policy."
    },
    {
      "command_name": "get-origin-request-policy-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-origin-request-policy-config.html",
      "command_description": "Description\n\nGets an origin request policy configuration.\n\nTo get an origin request policy configuration, you must provide the policy’s identifier. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the origin request policy is not attached to a cache behavior, you can get the identifier using ListOriginRequestPolicies .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-origin-request-policy-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe unique identifier for the origin request policy. If the origin request policy is attached to a distribution’s cache behavior, you can get the policy’s identifier using ListDistributions or GetDistribution . If the origin request policy is not attached to a cache behavior, you can get the identifier using ListOriginRequestPolicies .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOriginRequestPolicyConfig -> (structure)\n\nThe origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the origin request policy."
    },
    {
      "command_name": "get-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-public-key.html",
      "command_description": "Description\n\nGets a public key.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-public-key\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the public key you are getting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublicKey -> (structure)\n\nThe public key.\n\nId -> (string)\n\nThe identifier of the public key.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the public key was uploaded.\n\nPublicKeyConfig -> (structure)\n\nConfiguration information about a public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier for this version of the public key.",
      "command_examples": "Examples\n\nTo get a CloudFront public key\n\nThe following example gets the CloudFront public key with the ID KDFB19YGCR002, including its ETag. The public key ID is returned in the create-public-key and list-public-keys commands.\n\naws cloudfront get-public-key --id KDFB19YGCR002\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"PublicKey\": {\n        \"Id\": \"KDFB19YGCR002\",\n        \"CreatedTime\": \"2019-12-05T18:51:43.781Z\",\n        \"PublicKeyConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Name\": \"ExampleKey\",\n            \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxPMbCA2Ks0lnd7IR+3pw\\nwd3H/7jPGwj8bLUmore7bX+oeGpZ6QmLAe/1UOWcmZX2u70dYcSIzB1ofZtcn4cJ\\nenHBAzO3ohBY/L1tQGJfS2A+omnN6H16VZE1JCK8XSJyfze7MDLcUyHZETdxuvRb\\nA9X343/vMAuQPnhinFJ8Wdy8YBXSPpy7r95ylUQd9LfYTBzVZYG2tSesplcOkjM3\\n2Uu+oMWxQAw1NINnSLPinMVsutJy6ZqlV3McWNWe4T+STGtWhrPNqJEn45sIcCx4\\nq+kGZ2NQ0FyIyT2eiLKOX5Rgb/a36E/aMk4VoDsaenBQgG7WLTnstb9sr7MIhS6A\\nrwIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n            \"Comment\": \"example public key\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "get-public-key-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-public-key-config.html",
      "command_description": "Description\n\nGets a public key configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-public-key-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe identifier of the public key whose configuration you are getting.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublicKeyConfig -> (structure)\n\nA public key configuration.\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier for this version of the public key configuration.",
      "command_examples": "Examples\n\nTo get a CloudFront public key configuration\n\nThe following example gets metadata about the CloudFront public key with the ID KDFB19YGCR002, including its ETag. The public key ID is returned in the create-public-key and list-public-keys commands.\n\naws cloudfront get-public-key-config --id KDFB19YGCR002\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"PublicKeyConfig\": {\n        \"CallerReference\": \"cli-example\",\n        \"Name\": \"ExampleKey\",\n        \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxPMbCA2Ks0lnd7IR+3pw\\nwd3H/7jPGwj8bLUmore7bX+oeGpZ6QmLAe/1UOWcmZX2u70dYcSIzB1ofZtcn4cJ\\nenHBAzO3ohBY/L1tQGJfS2A+omnN6H16VZE1JCK8XSJyfze7MDLcUyHZETdxuvRb\\nA9X343/vMAuQPnhinFJ8Wdy8YBXSPpy7r95ylUQd9LfYTBzVZYG2tSesplcOkjM3\\n2Uu+oMWxQAw1NINnSLPinMVsutJy6ZqlV3McWNWe4T+STGtWhrPNqJEn45sIcCx4\\nq+kGZ2NQ0FyIyT2eiLKOX5Rgb/a36E/aMk4VoDsaenBQgG7WLTnstb9sr7MIhS6A\\nrwIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n        \"Comment\": \"example public key\"\n    }\n}\n"
    },
    {
      "command_name": "get-realtime-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-realtime-log-config.html",
      "command_description": "Description\n\nGets a real-time log configuration.\n\nTo get a real-time log configuration, you can provide the configuration’s name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to get.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-realtime-log-config\n[--name <value>]\n[--arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name <value>]",
        "[--arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the real-time log configuration to get.\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRealtimeLogConfig -> (structure)\n\nA real-time log configuration.\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of this real-time log configuration.\n\nName -> (string)\n\nThe unique name of this real-time log configuration.\n\nSamplingRate -> (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.\n\nEndPoints -> (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nFields -> (list)\n\nA list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)"
    },
    {
      "command_name": "get-streaming-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-streaming-distribution.html",
      "command_description": "Description\n\nGets information about a specified RTMP distribution, including the distribution configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-streaming-distribution\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe streaming distribution’s ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistribution -> (structure)\n\nThe streaming distribution’s information.\n\nId -> (string)\n\nThe identifier for the RTMP distribution. For example: EGTXBD79EXAMPLE .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the RTMP distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the streaming distribution, for example, s5c39gqb8ow64r.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nA complex type that lists the accounts, if any, that you included in the TrustedSigners complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.\n\nThe Signer complex type lists the account number of the trusted signer or self if the signer is the account that created the distribution. The Signer element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer’s account. If no KeyPairId element appears for a Signer , that signer can’t create signed URLs.\n\nFor more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nStreamingDistributionConfig -> (structure)\n\nThe current configuration information for the RTMP distribution.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nETag -> (string)\n\nThe current version of the streaming distribution’s information. For example: E2QWRUHAPOMQZL ."
    },
    {
      "command_name": "get-streaming-distribution-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/get-streaming-distribution-config.html",
      "command_description": "Description\n\nGet the configuration information about a streaming distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-streaming-distribution-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe streaming distribution’s ID.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistributionConfig -> (structure)\n\nThe streaming distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL ."
    },
    {
      "command_name": "list-cache-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-cache-policies.html",
      "command_description": "Description\n\nGets a list of cache policies.\n\nYou can optionally apply a filter to return only the managed policies created by Amazon Web Services, or only the custom policies created in your account.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-cache-policies\n[--type <value>]\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--type <value>]",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--type (string)\n\nA filter to return only the specified kinds of cache policies. Valid values are:\n\nmanaged – Returns only the managed policies created by Amazon Web Services.\n\ncustom – Returns only the custom policies created in your account.\n\nPossible values:\n\nmanaged\n\ncustom\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of cache policies. The response includes cache policies in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of cache policies that you want in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCachePolicyList -> (structure)\n\nA list of cache policies.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing cache policies where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of cache policies requested.\n\nQuantity -> (integer)\n\nThe total number of cache policies returned in the response.\n\nItems -> (list)\n\nContains the cache policies in the list.\n\n(structure)\n\nContains a cache policy.\n\nType -> (string)\n\nThe type of cache policy, either managed (created by Amazon Web Services) or custom (created in this account).\n\nCachePolicy -> (structure)\n\nThe cache policy.\n\nId -> (string)\n\nThe unique identifier for the cache policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the cache policy was last modified.\n\nCachePolicyConfig -> (structure)\n\nThe cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)"
    },
    {
      "command_name": "list-cloud-front-origin-access-identities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-cloud-front-origin-access-identities.html",
      "command_description": "Description\n\nLists origin access identities.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-cloud-front-origin-access-identities is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: CloudFrontOriginAccessIdentityList.Items",
      "command_synopsis": "Synopsis\n  list-cloud-front-origin-access-identities\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCloudFrontOriginAccessIdentityList -> (structure)\n\nThe CloudFrontOriginAccessIdentityList type.\n\nMarker -> (string)\n\nUse this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page’s response (which is also the ID of the last identity on that page).\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off.\n\nMaxItems -> (integer)\n\nThe maximum number of origin access identities you want in the response body.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list.\n\nQuantity -> (integer)\n\nThe number of CloudFront origin access identities that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current account.\n\n(structure)\n\nSummary of the information about a CloudFront origin access identity.\n\nId -> (string)\n\nThe ID for the origin access identity. For example: E74FTE3AJFJ256A .\n\nS3CanonicalUserId -> (string)\n\nThe Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.\n\nComment -> (string)\n\nThe comment for this origin access identity, as originally specified when created.",
      "command_examples": "Examples\n\nTo list CloudFront origin access identities\n\nThe following example gets a list of the CloudFront origin access identities (OAIs) in your AWS account:\n\naws cloudfront list-cloud-front-origin-access-identities\n\n\nOutput:\n\n{\n    \"CloudFrontOriginAccessIdentityList\": {\n        \"Items\": [\n            {\n                \"Id\": \"E74FTE3AEXAMPLE\",\n                \"S3CanonicalUserId\": \"cd13868f797c227fbea2830611a26fe0a21ba1b826ab4bed9b7771c9aEXAMPLE\",\n                \"Comment\": \"Example OAI\"\n            },\n            {\n                \"Id\": \"EH1HDMBEXAMPLE\",\n                \"S3CanonicalUserId\": \"1489f6f2e6faacaae7ff64c4c3e6956c24f78788abfc1718c3527c263bf7a17EXAMPLE\",\n                \"Comment\": \"Test OAI\"\n            },\n            {\n                \"Id\": \"E2X2C9TEXAMPLE\",\n                \"S3CanonicalUserId\": \"cbfeebb915a64749f9be546a45b3fcfd3a31c779673c13c4dd460911ae402c2EXAMPLE\",\n                \"Comment\": \"Example OAI #2\"\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "list-conflicting-aliases",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-conflicting-aliases.html",
      "command_description": "Description\n\nGets a list of aliases (also called CNAMEs or alternate domain names) that conflict or overlap with the provided alias, and the associated CloudFront distributions and Amazon Web Services accounts for each conflicting alias. In the returned list, the distribution and account IDs are partially hidden, which allows you to identify the distributions and accounts that you own, but helps to protect the information of ones that you don’t own.\n\nUse this operation to find aliases that are in use in CloudFront that conflict or overlap with the provided alias. For example, if you provide www.example.com as input, the returned list can include www.example.com and the overlapping wildcard alternate domain name (*.example.com ), if they exist. If you provide *.example.com as input, the returned list can include *.example.com and any alternate domain names covered by that wildcard (for example, www.example.com , test.example.com , dev.example.com , and so on), if they exist.\n\nTo list conflicting aliases, you provide the alias to search and the ID of a distribution in your account that has an attached SSL/TLS certificate that includes the provided alias. For more information, including how to set up the distribution and certificate, see Moving an alternate domain name to a different distribution in the Amazon CloudFront Developer Guide .\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-conflicting-aliases\n--distribution-id <value>\n--alias <value>\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "--alias <value>",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe ID of a distribution in your account that has an attached SSL/TLS certificate that includes the provided alias.\n\n--alias (string)\n\nThe alias (also called a CNAME) to search for conflicting aliases.\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in the list of conflicting aliases. The response includes conflicting aliases in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (integer)\n\nThe maximum number of conflicting aliases that you want in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConflictingAliasesList -> (structure)\n\nA list of conflicting aliases.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing conflicting aliases where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of conflicting aliases requested.\n\nQuantity -> (integer)\n\nThe number of conflicting aliases returned in the response.\n\nItems -> (list)\n\nContains the conflicting aliases in the list.\n\n(structure)\n\nAn alias (also called a CNAME) and the CloudFront distribution and Amazon Web Services account ID that it’s associated with. The distribution and account IDs are partially hidden, which allows you to identify the distributions and accounts that you own, but helps to protect the information of ones that you don’t own.\n\nAlias -> (string)\n\nAn alias (also called a CNAME).\n\nDistributionId -> (string)\n\nThe (partially hidden) ID of the CloudFront distribution associated with the alias.\n\nAccountId -> (string)\n\nThe (partially hidden) ID of the Amazon Web Services account that owns the distribution that’s associated with the alias."
    },
    {
      "command_name": "list-distributions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions.html",
      "command_description": "Description\n\nList CloudFront distributions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-distributions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: DistributionList.Items",
      "command_synopsis": "Synopsis\n  list-distributions\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionList -> (structure)\n\nThe DistributionList type.\n\nMarker -> (string)\n\nThe value you provided for the Marker request parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.\n\nMaxItems -> (integer)\n\nThe value you provided for the MaxItems request parameter.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.\n\nQuantity -> (integer)\n\nThe number of distributions that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one DistributionSummary element for each distribution that was created by the current account.\n\n(structure)\n\nA summary of the information about a CloudFront distribution.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that contains zero or more CustomErrorResponses elements.\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nThe comment originally specified when this distribution was created.\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the distribution is enabled to accept user requests for content.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nThe Web ACL Id (if any) associated with the distribution.\n\nHttpVersion -> (string)\n\nSpecify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2 . Viewers that don’t support HTTP/2 will automatically use an earlier version.\n\nIsIPV6Enabled -> (boolean)\n\nWhether CloudFront responds to IPv6 DNS requests with an IPv6 address for your distribution.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.",
      "command_examples": "Examples\n\nTo list CloudFront distributions\n\nThe following example gets a list of the CloudFront distributions in your AWS account:\n\naws cloudfront list-distributions\n\n\nOutput:\n\n{\n    \"DistributionList\": {\n        \"Items\": [\n            {\n                \"Id\": \"EMLARXS9EXAMPLE\",\n                \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EMLARXS9EXAMPLE\",\n                \"Status\": \"InProgress\",\n                \"LastModifiedTime\": \"2019-11-22T00:55:15.705Z\",\n                \"InProgressInvalidationBatches\": 0,\n                \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n                \"ActiveTrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"DistributionConfig\": {\n                    \"CallerReference\": \"cli-example\",\n                    \"Aliases\": {\n                        \"Quantity\": 0\n                    },\n                    \"DefaultRootObject\": \"index.html\",\n                    \"Origins\": {\n                        \"Quantity\": 1,\n                        \"Items\": [\n                            {\n                                \"Id\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                                \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                                \"OriginPath\": \"\",\n                                \"CustomHeaders\": {\n                                    \"Quantity\": 0\n                                },\n                                \"S3OriginConfig\": {\n                                    \"OriginAccessIdentity\": \"\"\n                                }\n                            }\n                        ]\n                    },\n                    \"OriginGroups\": {\n                        \"Quantity\": 0\n                    },\n                    \"DefaultCacheBehavior\": {\n                        \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-cli-example\",\n                        \"ForwardedValues\": {\n                            \"QueryString\": false,\n                            \"Cookies\": {\n                                \"Forward\": \"none\"\n                            },\n                            \"Headers\": {\n                                \"Quantity\": 0\n                            },\n                            \"QueryStringCacheKeys\": {\n                                \"Quantity\": 0\n                            }\n                        },\n                        \"TrustedSigners\": {\n                            \"Enabled\": false,\n                            \"Quantity\": 0\n                        },\n                        \"ViewerProtocolPolicy\": \"allow-all\",\n                        \"MinTTL\": 0,\n                        \"AllowedMethods\": {\n                            \"Quantity\": 2,\n                            \"Items\": [\n                                \"HEAD\",\n                                \"GET\"\n                            ],\n                            \"CachedMethods\": {\n                                \"Quantity\": 2,\n                                \"Items\": [\n                                    \"HEAD\",\n                                    \"GET\"\n                                ]\n                            }\n                        },\n                        \"SmoothStreaming\": false,\n                        \"DefaultTTL\": 86400,\n                        \"MaxTTL\": 31536000,\n                        \"Compress\": false,\n                        \"LambdaFunctionAssociations\": {\n                            \"Quantity\": 0\n                        },\n                        \"FieldLevelEncryptionId\": \"\"\n                    },\n                    \"CacheBehaviors\": {\n                        \"Quantity\": 0\n                    },\n                    \"CustomErrorResponses\": {\n                        \"Quantity\": 0\n                    },\n                    \"Comment\": \"\",\n                    \"Logging\": {\n                        \"Enabled\": false,\n                        \"IncludeCookies\": false,\n                        \"Bucket\": \"\",\n                        \"Prefix\": \"\"\n                    },\n                    \"PriceClass\": \"PriceClass_All\",\n                    \"Enabled\": true,\n                    \"ViewerCertificate\": {\n                        \"CloudFrontDefaultCertificate\": true,\n                        \"MinimumProtocolVersion\": \"TLSv1\",\n                        \"CertificateSource\": \"cloudfront\"\n                    },\n                    \"Restrictions\": {\n                        \"GeoRestriction\": {\n                            \"RestrictionType\": \"none\",\n                            \"Quantity\": 0\n                        }\n                    },\n                    \"WebACLId\": \"\",\n                    \"HttpVersion\": \"http2\",\n                    \"IsIPV6Enabled\": true\n                }\n            },\n            {\n                \"Id\": \"EDFDVBD6EXAMPLE\",\n                \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE\",\n                \"Status\": \"InProgress\",\n                \"LastModifiedTime\": \"2019-12-04T23:35:41.433Z\",\n                \"InProgressInvalidationBatches\": 0,\n                \"DomainName\": \"d930174dauwrn8.cloudfront.net\",\n                \"ActiveTrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"DistributionConfig\": {\n                    \"CallerReference\": \"cli-example\",\n                    \"Aliases\": {\n                        \"Quantity\": 0\n                    },\n                    \"DefaultRootObject\": \"index.html\",\n                    \"Origins\": {\n                        \"Quantity\": 1,\n                        \"Items\": [\n                            {\n                                \"Id\": \"awsexamplebucket1.s3.amazonaws.com-cli-example\",\n                                \"DomainName\": \"awsexamplebucket1.s3.amazonaws.com\",\n                                \"OriginPath\": \"\",\n                                \"CustomHeaders\": {\n                                    \"Quantity\": 0\n                                },\n                                \"S3OriginConfig\": {\n                                    \"OriginAccessIdentity\": \"\"\n                                }\n                            }\n                        ]\n                    },\n                    \"OriginGroups\": {\n                        \"Quantity\": 0\n                    },\n                    \"DefaultCacheBehavior\": {\n                        \"TargetOriginId\": \"awsexamplebucket1.s3.amazonaws.com-cli-example\",\n                        \"ForwardedValues\": {\n                            \"QueryString\": false,\n                            \"Cookies\": {\n                                \"Forward\": \"none\"\n                            },\n                            \"Headers\": {\n                                \"Quantity\": 0\n                            },\n                            \"QueryStringCacheKeys\": {\n                                \"Quantity\": 0\n                            }\n                        },\n                        \"TrustedSigners\": {\n                            \"Enabled\": false,\n                            \"Quantity\": 0\n                        },\n                        \"ViewerProtocolPolicy\": \"allow-all\",\n                        \"MinTTL\": 0,\n                        \"AllowedMethods\": {\n                            \"Quantity\": 2,\n                            \"Items\": [\n                                \"HEAD\",\n                                \"GET\"\n                            ],\n                            \"CachedMethods\": {\n                                \"Quantity\": 2,\n                                \"Items\": [\n                                    \"HEAD\",\n                                    \"GET\"\n                                ]\n                            }\n                        },\n                        \"SmoothStreaming\": false,\n                        \"DefaultTTL\": 86400,\n                        \"MaxTTL\": 31536000,\n                        \"Compress\": false,\n                        \"LambdaFunctionAssociations\": {\n                            \"Quantity\": 0\n                        },\n                        \"FieldLevelEncryptionId\": \"\"\n                    },\n                    \"CacheBehaviors\": {\n                        \"Quantity\": 0\n                    },\n                    \"CustomErrorResponses\": {\n                        \"Quantity\": 0\n                    },\n                    \"Comment\": \"\",\n                    \"Logging\": {\n                        \"Enabled\": false,\n                        \"IncludeCookies\": false,\n                        \"Bucket\": \"\",\n                        \"Prefix\": \"\"\n                    },\n                    \"PriceClass\": \"PriceClass_All\",\n                    \"Enabled\": true,\n                    \"ViewerCertificate\": {\n                        \"CloudFrontDefaultCertificate\": true,\n                        \"MinimumProtocolVersion\": \"TLSv1\",\n                        \"CertificateSource\": \"cloudfront\"\n                    },\n                    \"Restrictions\": {\n                        \"GeoRestriction\": {\n                            \"RestrictionType\": \"none\",\n                            \"Quantity\": 0\n                        }\n                    },\n                    \"WebACLId\": \"\",\n                    \"HttpVersion\": \"http2\",\n                    \"IsIPV6Enabled\": true\n                }\n            },\n            {\n                \"Id\": \"E1X5IZQEXAMPLE\",\n                \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/E1X5IZQEXAMPLE\",\n                \"Status\": \"Deployed\",\n                \"LastModifiedTime\": \"2019-11-06T21:31:48.864Z\",\n                \"DomainName\": \"d2e04y12345678.cloudfront.net\",\n                \"Aliases\": {\n                    \"Quantity\": 0\n                },\n                \"Origins\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"Id\": \"awsexamplebucket2\",\n                            \"DomainName\": \"awsexamplebucket2.s3.us-west-2.amazonaws.com\",\n                            \"OriginPath\": \"\",\n                            \"CustomHeaders\": {\n                                \"Quantity\": 0\n                            },\n                            \"S3OriginConfig\": {\n                                \"OriginAccessIdentity\": \"\"\n                            }\n                        }\n                    ]\n                },\n                \"OriginGroups\": {\n                    \"Quantity\": 0\n                },\n                \"DefaultCacheBehavior\": {\n                    \"TargetOriginId\": \"awsexamplebucket2\",\n                    \"ForwardedValues\": {\n                        \"QueryString\": false,\n                        \"Cookies\": {\n                            \"Forward\": \"none\"\n                        },\n                        \"Headers\": {\n                            \"Quantity\": 0\n                        },\n                        \"QueryStringCacheKeys\": {\n                            \"Quantity\": 0\n                        }\n                    },\n                    \"TrustedSigners\": {\n                        \"Enabled\": false,\n                        \"Quantity\": 0\n                    },\n                    \"ViewerProtocolPolicy\": \"allow-all\",\n                    \"MinTTL\": 0,\n                    \"AllowedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ],\n                        \"CachedMethods\": {\n                            \"Quantity\": 2,\n                            \"Items\": [\n                                \"HEAD\",\n                                \"GET\"\n                            ]\n                        }\n                    },\n                    \"SmoothStreaming\": false,\n                    \"DefaultTTL\": 86400,\n                    \"MaxTTL\": 31536000,\n                    \"Compress\": false,\n                    \"LambdaFunctionAssociations\": {\n                        \"Quantity\": 0\n                    },\n                    \"FieldLevelEncryptionId\": \"\"\n                },\n                \"CacheBehaviors\": {\n                    \"Quantity\": 0\n                },\n                \"CustomErrorResponses\": {\n                    \"Quantity\": 0\n                },\n                \"Comment\": \"\",\n                \"PriceClass\": \"PriceClass_All\",\n                \"Enabled\": true,\n                \"ViewerCertificate\": {\n                    \"CloudFrontDefaultCertificate\": true,\n                    \"MinimumProtocolVersion\": \"TLSv1\",\n                    \"CertificateSource\": \"cloudfront\"\n                },\n                \"Restrictions\": {\n                    \"GeoRestriction\": {\n                        \"RestrictionType\": \"none\",\n                        \"Quantity\": 0\n                    }\n                },\n                \"WebACLId\": \"\",\n                \"HttpVersion\": \"HTTP1_1\",\n                \"IsIPV6Enabled\": true\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "list-distributions-by-cache-policy-id",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions-by-cache-policy-id.html",
      "command_description": "Description\n\nGets a list of distribution IDs for distributions that have a cache behavior that’s associated with the specified cache policy.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributions-by-cache-policy-id\n[--marker <value>]\n[--max-items <value>]\n--cache-policy-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "--cache-policy-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of distribution IDs that you want in the response.\n\n--cache-policy-id (string)\n\nThe ID of the cache policy whose associated distribution IDs you want to list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionIdList -> (structure)\n\nA list of distribution IDs.\n\nMarker -> (string)\n\nThe value provided in the Marker request field.\n\nNextMarker -> (string)\n\nContains the value that you should use in the Marker field of a subsequent request to continue listing distribution IDs where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of distribution IDs requested.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distribution IDs remain to be listed. If your results were truncated, you can make a subsequent request using the Marker request field to retrieve more distribution IDs in the list.\n\nQuantity -> (integer)\n\nThe total number of distribution IDs returned in the response.\n\nItems -> (list)\n\nContains the distribution IDs in the list.\n\n(string)"
    },
    {
      "command_name": "list-distributions-by-key-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions-by-key-group.html",
      "command_description": "Description\n\nGets a list of distribution IDs for distributions that have a cache behavior that references the specified key group.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributions-by-key-group\n[--marker <value>]\n[--max-items <value>]\n--key-group-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "--key-group-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of distribution IDs that you want in the response.\n\n--key-group-id (string)\n\nThe ID of the key group whose associated distribution IDs you are listing.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionIdList -> (structure)\n\nA list of distribution IDs.\n\nMarker -> (string)\n\nThe value provided in the Marker request field.\n\nNextMarker -> (string)\n\nContains the value that you should use in the Marker field of a subsequent request to continue listing distribution IDs where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of distribution IDs requested.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distribution IDs remain to be listed. If your results were truncated, you can make a subsequent request using the Marker request field to retrieve more distribution IDs in the list.\n\nQuantity -> (integer)\n\nThe total number of distribution IDs returned in the response.\n\nItems -> (list)\n\nContains the distribution IDs in the list.\n\n(string)"
    },
    {
      "command_name": "list-distributions-by-origin-request-policy-id",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions-by-origin-request-policy-id.html",
      "command_description": "Description\n\nGets a list of distribution IDs for distributions that have a cache behavior that’s associated with the specified origin request policy.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributions-by-origin-request-policy-id\n[--marker <value>]\n[--max-items <value>]\n--origin-request-policy-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "--origin-request-policy-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of distribution IDs. The response includes distribution IDs in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of distribution IDs that you want in the response.\n\n--origin-request-policy-id (string)\n\nThe ID of the origin request policy whose associated distribution IDs you want to list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionIdList -> (structure)\n\nA list of distribution IDs.\n\nMarker -> (string)\n\nThe value provided in the Marker request field.\n\nNextMarker -> (string)\n\nContains the value that you should use in the Marker field of a subsequent request to continue listing distribution IDs where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of distribution IDs requested.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distribution IDs remain to be listed. If your results were truncated, you can make a subsequent request using the Marker request field to retrieve more distribution IDs in the list.\n\nQuantity -> (integer)\n\nThe total number of distribution IDs returned in the response.\n\nItems -> (list)\n\nContains the distribution IDs in the list.\n\n(string)"
    },
    {
      "command_name": "list-distributions-by-realtime-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions-by-realtime-log-config.html",
      "command_description": "Description\n\nGets a list of distributions that have a cache behavior that’s associated with the specified real-time log configuration.\n\nYou can specify the real-time log configuration by its name or its Amazon Resource Name (ARN). You must provide at least one. If you provide both, CloudFront uses the name to identify the real-time log configuration to list distributions for.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributions-by-realtime-log-config\n[--marker <value>]\n[--max-items <value>]\n[--realtime-log-config-name <value>]\n[--realtime-log-config-arn <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--realtime-log-config-name <value>]",
        "[--realtime-log-config-arn <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of distributions. The response includes distributions in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of distributions that you want in the response.\n\n--realtime-log-config-name (string)\n\nThe name of the real-time log configuration whose associated distributions you want to list.\n\n--realtime-log-config-arn (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration whose associated distributions you want to list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionList -> (structure)\n\nA distribution list.\n\nMarker -> (string)\n\nThe value you provided for the Marker request parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.\n\nMaxItems -> (integer)\n\nThe value you provided for the MaxItems request parameter.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.\n\nQuantity -> (integer)\n\nThe number of distributions that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one DistributionSummary element for each distribution that was created by the current account.\n\n(structure)\n\nA summary of the information about a CloudFront distribution.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that contains zero or more CustomErrorResponses elements.\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nThe comment originally specified when this distribution was created.\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the distribution is enabled to accept user requests for content.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nThe Web ACL Id (if any) associated with the distribution.\n\nHttpVersion -> (string)\n\nSpecify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2 . Viewers that don’t support HTTP/2 will automatically use an earlier version.\n\nIsIPV6Enabled -> (boolean)\n\nWhether CloudFront responds to IPv6 DNS requests with an IPv6 address for your distribution.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status."
    },
    {
      "command_name": "list-distributions-by-web-acl-id",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-distributions-by-web-acl-id.html",
      "command_description": "Description\n\nList the distributions that are associated with a specified WAF web ACL.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distributions-by-web-acl-id\n[--marker <value>]\n[--max-items <value>]\n--web-acl-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "--web-acl-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse Marker and MaxItems to control pagination of results. If you have more than MaxItems distributions that satisfy the request, the response includes a NextMarker element. To get the next page of results, submit another request. For the value of Marker , specify the value of NextMarker from the last response. (For the first request, omit Marker .)\n\n--max-items (string)\n\nThe maximum number of distributions that you want CloudFront to return in the response body. The maximum and default values are both 100.\n\n--web-acl-id (string)\n\nThe ID of the WAF web ACL that you want to list the associated distributions. If you specify “null” for the ID, the request returns a list of the distributions that aren’t associated with a web ACL.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistributionList -> (structure)\n\nThe DistributionList type.\n\nMarker -> (string)\n\nThe value you provided for the Marker request parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.\n\nMaxItems -> (integer)\n\nThe value you provided for the MaxItems request parameter.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.\n\nQuantity -> (integer)\n\nThe number of distributions that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one DistributionSummary element for each distribution that was created by the current account.\n\n(structure)\n\nA summary of the information about a CloudFront distribution.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that contains zero or more CustomErrorResponses elements.\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nThe comment originally specified when this distribution was created.\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the distribution is enabled to accept user requests for content.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nThe Web ACL Id (if any) associated with the distribution.\n\nHttpVersion -> (string)\n\nSpecify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2 . Viewers that don’t support HTTP/2 will automatically use an earlier version.\n\nIsIPV6Enabled -> (boolean)\n\nWhether CloudFront responds to IPv6 DNS requests with an IPv6 address for your distribution.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status."
    },
    {
      "command_name": "list-field-level-encryption-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-field-level-encryption-configs.html",
      "command_description": "Description\n\nList all field-level encryption configurations that have been created in CloudFront for this account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-field-level-encryption-configs\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this when paginating results to indicate where to begin in your list of configurations. The results include configurations in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page’s response (which is also the ID of the last configuration on that page).\n\n--max-items (string)\n\nThe maximum number of field-level encryption configurations you want in the response body.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionList -> (structure)\n\nReturns a list of all field-level encryption configurations that have been created in CloudFront for this account.\n\nNextMarker -> (string)\n\nIf there are more elements to be listed, this element is present and contains the value that you can use for the Marker request parameter to continue listing your configurations where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of elements you want in the response body.\n\nQuantity -> (integer)\n\nThe number of field-level encryption items.\n\nItems -> (list)\n\nAn array of field-level encryption items.\n\n(structure)\n\nA summary of a field-level encryption item.\n\nId -> (string)\n\nThe unique ID of a field-level encryption item.\n\nLastModifiedTime -> (timestamp)\n\nThe last time that the summary of field-level encryption items was modified.\n\nComment -> (string)\n\nAn optional comment about the field-level encryption item. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA summary of a query argument-profile mapping.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA summary of a content type-profile mapping.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.",
      "command_examples": "Examples\n\nTo list CloudFront field-level encryption configurations\n\nThe following example gets a list of the CloudFront field-level encryption configurations in your AWS account:\n\naws cloudfront list-field-level-encryption-configs\n\n\nOutput:\n\n{\n    \"FieldLevelEncryptionList\": {\n        \"MaxItems\": 100,\n        \"Quantity\": 1,\n        \"Items\": [\n            {\n                \"Id\": \"C3KM2WVD605UAY\",\n                \"LastModifiedTime\": \"2019-12-10T21:30:18.974Z\",\n                \"Comment\": \"Example FLE configuration\",\n                \"QueryArgProfileConfig\": {\n                    \"ForwardWhenQueryArgProfileIsUnknown\": true,\n                    \"QueryArgProfiles\": {\n                        \"Quantity\": 0,\n                        \"Items\": []\n                    }\n                },\n                \"ContentTypeProfileConfig\": {\n                    \"ForwardWhenContentTypeIsUnknown\": true,\n                    \"ContentTypeProfiles\": {\n                        \"Quantity\": 1,\n                        \"Items\": [\n                            {\n                                \"Format\": \"URLEncoded\",\n                                \"ProfileId\": \"P280MFCLSYOCVU\",\n                                \"ContentType\": \"application/x-www-form-urlencoded\"\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "list-field-level-encryption-profiles",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-field-level-encryption-profiles.html",
      "command_description": "Description\n\nRequest a list of field-level encryption profiles that have been created in CloudFront for this account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-field-level-encryption-profiles\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this when paginating results to indicate where to begin in your list of profiles. The results include profiles in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page’s response (which is also the ID of the last profile on that page).\n\n--max-items (string)\n\nThe maximum number of field-level encryption profiles you want in the response body.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionProfileList -> (structure)\n\nReturns a list of the field-level encryption profiles that have been created in CloudFront for this account.\n\nNextMarker -> (string)\n\nIf there are more elements to be listed, this element is present and contains the value that you can use for the Marker request parameter to continue listing your profiles where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of field-level encryption profiles you want in the response body.\n\nQuantity -> (integer)\n\nThe number of field-level encryption profiles.\n\nItems -> (list)\n\nThe field-level encryption profile items.\n\n(structure)\n\nThe field-level encryption profile summary.\n\nId -> (string)\n\nID for the field-level encryption profile summary.\n\nLastModifiedTime -> (timestamp)\n\nThe time when the the field-level encryption profile summary was last updated.\n\nName -> (string)\n\nName for the field-level encryption profile summary.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile summary. The comment cannot be longer than 128 characters.",
      "command_examples": "Examples\n\nTo list CloudFront field-level encryption profiles\n\nThe following example gets a list of the CloudFront field-level encryption profiles in your AWS account:\n\naws cloudfront list-field-level-encryption-profiles\n\n\nOutput:\n\n{\n    \"FieldLevelEncryptionProfileList\": {\n        \"MaxItems\": 100,\n        \"Quantity\": 2,\n        \"Items\": [\n            {\n                \"Id\": \"P280MFCLSYOCVU\",\n                \"LastModifiedTime\": \"2019-12-05T01:05:39.896Z\",\n                \"Name\": \"ExampleFLEProfile\",\n                \"EncryptionEntities\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                            \"ProviderId\": \"ExampleFLEProvider\",\n                            \"FieldPatterns\": {\n                                \"Quantity\": 1,\n                                \"Items\": [\n                                    \"ExampleSensitiveField\"\n                                ]\n                            }\n                        }\n                    ]\n                },\n                \"Comment\": \"FLE profile for AWS CLI example\"\n            },\n            {\n                \"Id\": \"PPK0UOSIF5WSV\",\n                \"LastModifiedTime\": \"2019-12-10T01:03:16.537Z\",\n                \"Name\": \"ExampleFLEProfile2\",\n                \"EncryptionEntities\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"PublicKeyId\": \"K2ABC10EXAMPLE\",\n                            \"ProviderId\": \"ExampleFLEProvider2\",\n                            \"FieldPatterns\": {\n                                \"Quantity\": 1,\n                                \"Items\": [\n                                    \"ExampleSensitiveField2\"\n                                ]\n                            }\n                        }\n                    ]\n                },\n                \"Comment\": \"FLE profile #2 for AWS CLI example\"\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "list-functions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-functions.html",
      "command_description": "Description\n\nGets a list of all CloudFront functions in your account.\n\nYou can optionally apply a filter to return only the functions that are in the specified stage, either DEVELOPMENT or LIVE .\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-functions\n[--marker <value>]\n[--max-items <value>]\n[--stage <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--stage <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of functions. The response includes functions in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of functions that you want in the response.\n\n--stage (string)\n\nAn optional filter to return only the functions that are in the specified stage, either DEVELOPMENT or LIVE .\n\nPossible values:\n\nDEVELOPMENT\n\nLIVE\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionList -> (structure)\n\nA list of CloudFront functions.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing functions where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of functions requested.\n\nQuantity -> (integer)\n\nThe number of functions returned in the response.\n\nItems -> (list)\n\nContains the functions in the list.\n\n(structure)\n\nContains configuration information and metadata about a CloudFront function.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated."
    },
    {
      "command_name": "list-invalidations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-invalidations.html",
      "command_description": "Description\n\nLists invalidation batches.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-invalidations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: InvalidationList.Items",
      "command_synopsis": "Synopsis\n  list-invalidations\n--distribution-id <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-id <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-id (string)\n\nThe distribution’s ID.\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nInvalidationList -> (structure)\n\nInformation about invalidation batches.\n\nMarker -> (string)\n\nThe value that you provided for the Marker request parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value that you can use for the Marker request parameter to continue listing your invalidation batches where they left off.\n\nMaxItems -> (integer)\n\nThe value that you provided for the MaxItems request parameter.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list.\n\nQuantity -> (integer)\n\nThe number of invalidation batches that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one InvalidationSummary element for each invalidation batch created by the current account.\n\n(structure)\n\nA summary of an invalidation request.\n\nId -> (string)\n\nThe unique ID for an invalidation request.\n\nCreateTime -> (timestamp)\n\nThe time that an invalidation request was created.\n\nStatus -> (string)\n\nThe status of an invalidation request.",
      "command_examples": "Examples\n\nTo list CloudFront invalidations\n\nThe following example gets a list of the invalidations for the CloudFront distribution with the ID EDFDVBD6EXAMPLE:\n\naws cloudfront list-invalidations --distribution-id EDFDVBD6EXAMPLE\n\n\nOutput:\n\n{\n    \"InvalidationList\": {\n        \"Marker\": \"\",\n        \"Items\": [\n            {\n                \"Status\": \"Completed\",\n                \"Id\": \"YNY2LI2BVJ4NJU\",\n                \"CreateTime\": \"2019-08-31T21:15:52.042Z\"\n            }\n        ],\n        \"IsTruncated\": false,\n        \"MaxItems\": 100,\n        \"Quantity\": 1\n    }\n}\n"
    },
    {
      "command_name": "list-key-groups",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-key-groups.html",
      "command_description": "Description\n\nGets a list of key groups.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-key-groups\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of key groups. The response includes key groups in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of key groups that you want in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyGroupList -> (structure)\n\nA list of key groups.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing key groups.\n\nMaxItems -> (integer)\n\nThe maximum number of key groups requested.\n\nQuantity -> (integer)\n\nThe number of key groups returned in the response.\n\nItems -> (list)\n\nA list of key groups.\n\n(structure)\n\nContains information about a key group.\n\nKeyGroup -> (structure)\n\nA key group.\n\nId -> (string)\n\nThe identifier for the key group.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the key group was last modified.\n\nKeyGroupConfig -> (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters."
    },
    {
      "command_name": "list-origin-request-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-origin-request-policies.html",
      "command_description": "Description\n\nGets a list of origin request policies.\n\nYou can optionally apply a filter to return only the managed policies created by Amazon Web Services, or only the custom policies created in your account.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-origin-request-policies\n[--type <value>]\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--type <value>]",
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--type (string)\n\nA filter to return only the specified kinds of origin request policies. Valid values are:\n\nmanaged – Returns only the managed policies created by Amazon Web Services.\n\ncustom – Returns only the custom policies created in your account.\n\nPossible values:\n\nmanaged\n\ncustom\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of origin request policies. The response includes origin request policies in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--max-items (string)\n\nThe maximum number of origin request policies that you want in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOriginRequestPolicyList -> (structure)\n\nA list of origin request policies.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing origin request policies where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of origin request policies requested.\n\nQuantity -> (integer)\n\nThe total number of origin request policies returned in the response.\n\nItems -> (list)\n\nContains the origin request policies in the list.\n\n(structure)\n\nContains an origin request policy.\n\nType -> (string)\n\nThe type of origin request policy, either managed (created by Amazon Web Services) or custom (created in this account).\n\nOriginRequestPolicy -> (structure)\n\nThe origin request policy.\n\nId -> (string)\n\nThe unique identifier for the origin request policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the origin request policy was last modified.\n\nOriginRequestPolicyConfig -> (structure)\n\nThe origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)"
    },
    {
      "command_name": "list-public-keys",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-public-keys.html",
      "command_description": "Description\n\nList all public keys that have been added to CloudFront for this account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-public-keys\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nUse this when paginating results to indicate where to begin in your list of public keys. The results include public keys in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page’s response (which is also the ID of the last public key on that page).\n\n--max-items (string)\n\nThe maximum number of public keys you want in the response body.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublicKeyList -> (structure)\n\nReturns a list of all public keys that have been added to CloudFront for this account.\n\nNextMarker -> (string)\n\nIf there are more elements to be listed, this element is present and contains the value that you can use for the Marker request parameter to continue listing your public keys where you left off.\n\nMaxItems -> (integer)\n\nThe maximum number of public keys you want in the response.\n\nQuantity -> (integer)\n\nThe number of public keys in the list.\n\nItems -> (list)\n\nA list of public keys.\n\n(structure)\n\nContains information about a public key.\n\nId -> (string)\n\nThe identifier of the public key.\n\nName -> (string)\n\nA name to help identify the public key.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the public key was uploaded.\n\nEncodedKey -> (string)\n\nThe public key.\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.",
      "command_examples": "Examples\n\nTo list CloudFront public keys\n\nThe following example gets a list of the CloudFront public keys in your AWS account:\n\naws cloudfront list-public-keys\n\n\nOutput:\n\n{\n    \"PublicKeyList\": {\n        \"MaxItems\": 100,\n        \"Quantity\": 2,\n        \"Items\": [\n            {\n                \"Id\": \"K2K8NC4HVFE3M0\",\n                \"Name\": \"ExampleKey\",\n                \"CreatedTime\": \"2019-12-05T01:04:28.818Z\",\n                \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxPMbCA2Ks0lnd7IR+3pw\\nwd3H/7jPGwj8bLUmore7bX+oeGpZ6QmLAe/1UOWcmZX2u70dYcSIzB1ofZtcn4cJ\\nenHBAzO3ohBY/L1tQGJfS2A+omnN6H16VZE1JCK8XSJyfze7MDLcUyHZETdxuvRb\\nA9X343/vMAuQPnhinFJ8Wdy8YBXSPpy7r95ylUQd9LfYTBzVZYG2tSesplcOkjM3\\n2Uu+oMWxQAw1NINnSLPinMVsutJy6ZqlV3McWNWe4T+STGtWhrPNqJEn45sIcCx4\\nq+kGZ2NQ0FyIyT2eiLKOX5Rgb/a36E/aMk4VoDsaenBQgG7WLTnstb9sr7MIhS6A\\nrwIDAQAB\\n-----END PUBLIC KEY-----\\n\",\n                \"Comment\": \"example public key\"\n            },\n            {\n                \"Id\": \"K1S0LWQ2L5HTBU\",\n                \"Name\": \"ExampleKey2\",\n                \"CreatedTime\": \"2019-12-09T23:28:11.110Z\",\n                \"EncodedKey\": \"-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApOCAg88A8+f4dujn9Izt\\n26LxtgAkn2opGgo/NKpMiaisyw5qlg3f1gol7FV6pYNl78iJg3EO8JBbwtlH+cR9\\nLGSf60NDeVhm76Oc39Np/vWgOdsGQcRbi9WmKZeSODqjQGzVZWqPmito3FzWVk6b\\nfVY5N36U/RdbVAJm95Km+qaMYlbIdF40t72bi3IkKYV5hlB2XoDjlQ9F6ajQKyTB\\nMHa3SN8q+3ZjQ4sJJ7D1V6r4wR8jDcFVD5NckWJmmgIVnkOQM37NYeoDnkaOuTpu\\nha/+3b8tOb2z3LBVHPkp85zJRAOXacSwf5rZtPYKBNFsixTa2n55k2r218mOkMC4\\nUwIDAQAB\\n-----END PUBLIC KEY-----\",\n                \"Comment\": \"example public key #2\"\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "list-realtime-log-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-realtime-log-configs.html",
      "command_description": "Description\n\nGets a list of real-time log configurations.\n\nYou can optionally specify the maximum number of items to receive in the response. If the total number of items in the list exceeds the maximum that you specify, or the default maximum, the response is paginated. To get the next page of items, send a subsequent request that specifies the NextMarker value from the current response as the Marker value in the subsequent request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-realtime-log-configs\n[--max-items <value>]\n[--marker <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--marker <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe maximum number of real-time log configurations that you want in the response.\n\n--marker (string)\n\nUse this field when paginating results to indicate where to begin in your list of real-time log configurations. The response includes real-time log configurations in the list that occur after the marker. To get the next page of the list, set this field’s value to the value of NextMarker from the current page’s response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRealtimeLogConfigs -> (structure)\n\nA list of real-time log configurations.\n\nMaxItems -> (integer)\n\nThe maximum number of real-time log configurations requested.\n\nItems -> (list)\n\nContains the list of real-time log configurations.\n\n(structure)\n\nA real-time log configuration.\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of this real-time log configuration.\n\nName -> (string)\n\nThe unique name of this real-time log configuration.\n\nSamplingRate -> (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.\n\nEndPoints -> (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nFields -> (list)\n\nA list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more real-time log configurations than are contained in this list.\n\nMarker -> (string)\n\nThis parameter indicates where this list of real-time log configurations begins. This list includes real-time log configurations that occur after the marker.\n\nNextMarker -> (string)\n\nIf there are more items in the list than are in this response, this element is present. It contains the value that you should use in the Marker field of a subsequent request to continue listing real-time log configurations where you left off."
    },
    {
      "command_name": "list-streaming-distributions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-streaming-distributions.html",
      "command_description": "Description\n\nList streaming distributions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-streaming-distributions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: StreamingDistributionList.Items",
      "command_synopsis": "Synopsis\n  list-streaming-distributions\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistributionList -> (structure)\n\nThe StreamingDistributionList type.\n\nMarker -> (string)\n\nThe value you provided for the Marker request parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , this element is present and contains the value you can use for the Marker request parameter to continue listing your RTMP distributions where they left off.\n\nMaxItems -> (integer)\n\nThe value you provided for the MaxItems request parameter.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.\n\nQuantity -> (integer)\n\nThe number of streaming distributions that were created by the current account.\n\nItems -> (list)\n\nA complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current account.\n\n(structure)\n\nA summary of the information for a CloudFront streaming distribution.\n\nId -> (string)\n\nThe identifier for the distribution, for example, EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the streaming distribution. For example: arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nIndicates the current status of the distribution. When the status is Deployed , the distribution’s information is fully propagated throughout the Amazon CloudFront system.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name corresponding to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nTrustedSigners -> (structure)\n\nA complex type that specifies the accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled , and specify the applicable values for Quantity and Items .If you don’t want to require signed URLs in requests for objects that match PathPattern , specify false for Enabled and 0 for Quantity . Omit Items . To add, change, or remove one or more trusted signers, change Enabled to true (if it’s currently false ), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.\n\nFor more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nComment -> (string)\n\nThe comment originally specified when this distribution was created.\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the distribution is enabled to accept end user requests for content."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/list-tags-for-resource.html",
      "command_description": "Description\n\nList tags for a CloudFront resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nAn ARN of a CloudFront resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (structure)\n\nA complex type that contains zero or more Tag elements.\n\nItems -> (list)\n\nA complex type that contains Tag elements.\n\n(structure)\n\nA complex type that contains Tag key and Tag value.\n\nKey -> (string)\n\nA string that contains Tag key.\n\nThe string length should be between 1 and 128 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nValue -> (string)\n\nA string that contains an optional Tag value.\n\nThe string length should be between 0 and 256 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .",
      "command_examples": "Examples\n\nTo list tags for a CloudFront distribution\n\nThe following example gets a list of the tags for a CloudFront distribution:\n\naws cloudfront list-tags-for-resource \\\n    --resource arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE\n\n\nOutput:\n\n{\n    \"Tags\": {\n        \"Items\": [\n            {\n                \"Key\": \"DateCreated\",\n                \"Value\": \"2019-12-04\"\n            },\n            {\n                \"Key\": \"Name\",\n                \"Value\": \"Example name\"\n            },\n            {\n                \"Key\": \"Project\",\n                \"Value\": \"Example project\"\n            }\n        ]\n    }\n}\n"
    },
    {
      "command_name": "publish-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/publish-function.html",
      "command_description": "Description\n\nPublishes a CloudFront function by copying the function code from the DEVELOPMENT stage to LIVE . This automatically updates all cache behaviors that are using this function to use the newly published copy in the LIVE stage.\n\nWhen a function is published to the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s Amazon Resource Name (ARN).\n\nTo publish a function, you must provide the function’s name and version (ETag value). To get these values, you can use ListFunctions and DescribeFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  publish-function\n--name <value>\n--if-match <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--if-match <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function that you are publishing.\n\n--if-match (string)\n\nThe current version (ETag value) of the function that you are publishing, which you can get using DescribeFunction .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionSummary -> (structure)\n\nContains configuration information and metadata about a CloudFront function.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated."
    },
    {
      "command_name": "sign",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/sign.html",
      "command_description": "Description\n\nSign a given url.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  sign\n--url <value>\n--key-pair-id <value>\n--private-key <value>\n--date-less-than <value>\n[--date-greater-than <value>]\n[--ip-address <value>]\n",
      "command_options": [
        "--url <value>",
        "--key-pair-id <value>",
        "--private-key <value>",
        "--date-less-than <value>",
        "[--date-greater-than <value>]",
        "[--ip-address <value>]"
      ],
      "command_options_description": "Options\n\n--url (string) The URL to be signed\n\n--key-pair-id (string) The active CloudFront key pair Id for the key pair that you’re using to generate the signature.\n\n--private-key (string) file://path/to/your/private-key.pem\n\n--date-less-than (string) The expiration date and time for the URL. Supported formats include: YYYY-MM-DD (which means 0AM UTC of that day), YYYY-MM-DDThh:mm:ss (with default timezone as UTC), YYYY-MM-DDThh:mm:ss+hh:mm or YYYY-MM-DDThh:mm:ss-hh:mm (with offset), or EpochTime (which always means UTC). Do NOT use YYYYMMDD, because it will be treated as EpochTime.\n\n--date-greater-than (string) An optional start date and time for the URL. Supported formats include: YYYY-MM-DD (which means 0AM UTC of that day), YYYY-MM-DDThh:mm:ss (with default timezone as UTC), YYYY-MM-DDThh:mm:ss+hh:mm or YYYY-MM-DDThh:mm:ss-hh:mm (with offset), or EpochTime (which always means UTC). Do NOT use YYYYMMDD, because it will be treated as EpochTime.\n\n--ip-address (string) An optional IP address or IP address range to allow client making the GET request from. Format: x.x.x.x/x or x.x.x.x\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_examples": "Examples\n\nTo sign a CloudFront URL\n\nThe following example signs a CloudFront URL. To sign a URL, you need the key pair ID (called the Access Key ID in the AWS Management Console) and the private key of the trusted signer’s CloudFront key pair. For more information about signed URLs, see Serving Private Content with Signed URLs and Signed Cookies in the Amazon CloudFront Developer Guide.\n\naws cloudfront sign \\\n    --url https://d111111abcdef8.cloudfront.net/private-content/private-file.html \\\n    --key-pair-id APKAEIBAERJR2EXAMPLE \\\n    --private-key file://cf-signer-priv-key.pem \\\n    --date-less-than 2020-01-01\n\n\nOutput:\n\nhttps://d111111abcdef8.cloudfront.net/private-content/private-file.html?Expires=1577836800&Signature=nEXK7Kby47XKeZQKVc6pwkif6oZc-JWSpDkH0UH7EBGGqvgurkecCbgL5VfUAXyLQuJxFwRQWscz-owcq9KpmewCXrXQbPaJZNi9XSNwf4YKurPDQYaRQawKoeenH0GFteRf9ELK-Bs3nljTLjtbgzIUt7QJNKXcWr8AuUYikzGdJ4-qzx6WnxXfH~fxg4-GGl6l2kgCpXUB6Jx6K~Y3kpVOdzUPOIqFLHAnJojbhxqrVejomZZ2XrquDvNUCCIbePGnR3d24UPaLXG4FKOqNEaWDIBXu7jUUPwOyQCvpt-GNvjRJxqWf93uMobeMOiVYahb-e0KItiQewGcm0eLZQ__&Key-Pair-Id=APKAEIBAERJR2EXAMPLE\n"
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/tag-resource.html",
      "command_description": "Description\n\nAdd tags to a CloudFront resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nAn ARN of a CloudFront resource.\n\n--tags (structure)\n\nA complex type that contains zero or more Tag elements.\n\nItems -> (list)\n\nA complex type that contains Tag elements.\n\n(structure)\n\nA complex type that contains Tag key and Tag value.\n\nKey -> (string)\n\nA string that contains Tag key.\n\nThe string length should be between 1 and 128 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nValue -> (string)\n\nA string that contains an optional Tag value.\n\nThe string length should be between 0 and 256 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nShorthand Syntax:\n\nItems=[{Key=string,Value=string},{Key=string,Value=string}]\n\n\nJSON Syntax:\n\n{\n  \"Items\": [\n    {\n      \"Key\": \"string\",\n      \"Value\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a CloudFront distribution\n\nThe following tag-resource example adds two tags to the specified CloudFront distribution.\n\naws cloudfront tag-resource \\\n    --resource arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE \\\n    --tags 'Items=[{Key=Name,Value=\"Example name\"},{Key=Project,Value=\"Example project\"}]'\n\n\nInstead of using command line arguments, you can provide the tags in a JSON file, as shown in the following example:\n\naws cloudfront tag-resource \\\n    --resource arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE \\\n    --tags file://tags.json\n\n\nContents of tags.json:\n\n{\n    \"Items\": [\n        {\n            \"Key\": \"Name\",\n            \"Value\": \"Example name\"\n        },\n        {\n            \"Key\": \"Project\",\n            \"Value\": \"Example project\"\n        }\n    ]\n}\n\n\nThis command produces no output."
    },
    {
      "command_name": "test-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/test-function.html",
      "command_description": "Description\n\nTests a CloudFront function.\n\nTo test a function, you provide an event object that represents an HTTP request or response that your CloudFront distribution could receive in production. CloudFront runs the function, passing it the event object that you provided, and returns the function’s result (the modified event object) in the response. The response also contains function logs and error messages, if any exist. For more information about testing functions, see Testing functions in the Amazon CloudFront Developer Guide .\n\nTo test a function, you provide the function’s name and version (ETag value) along with the event object. To get the function’s name and version, you can use ListFunctions and DescribeFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  test-function\n--name <value>\n--if-match <value>\n[--stage <value>]\n--event-object <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--if-match <value>",
        "[--stage <value>]",
        "--event-object <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function that you are testing.\n\n--if-match (string)\n\nThe current version (ETag value) of the function that you are testing, which you can get using DescribeFunction .\n\n--stage (string)\n\nThe stage of the function that you are testing, either DEVELOPMENT or LIVE .\n\nPossible values:\n\nDEVELOPMENT\n\nLIVE\n\n--event-object (blob)\n\nThe event object to test the function with. For more information about the structure of the event object, see Testing functions in the Amazon CloudFront Developer Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTestResult -> (structure)\n\nAn object that represents the result of running the function with the provided event object.\n\nFunctionSummary -> (structure)\n\nContains configuration information and metadata about the CloudFront function that was tested.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated.\n\nComputeUtilization -> (string)\n\nThe amount of time that the function took to run as a percentage of the maximum allowed time. For example, a compute utilization of 35 means that the function completed in 35% of the maximum allowed time.\n\nFunctionExecutionLogs -> (list)\n\nContains the log lines that the function wrote (if any) when running the test.\n\n(string)\n\nFunctionErrorMessage -> (string)\n\nIf the result of testing the function was an error, this field contains the error message.\n\nFunctionOutput -> (string)\n\nThe event object returned by the function. For more information about the structure of the event object, see Event object structure in the Amazon CloudFront Developer Guide ."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/untag-resource.html",
      "command_description": "Description\n\nRemove tags from a CloudFront resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource (string)\n\nAn ARN of a CloudFront resource.\n\n--tag-keys (structure)\n\nA complex type that contains zero or more Tag key elements.\n\nItems -> (list)\n\nA complex type that contains Tag key elements.\n\n(string)\n\nA string that contains Tag key.\n\nThe string length should be between 1 and 128 characters. Valid characters include a-z , A-Z , 0-9 , space, and the special characters _ - . : / = + @ .\n\nShorthand Syntax:\n\nItems=string,string\n\n\nJSON Syntax:\n\n{\n  \"Items\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a CloudFront distribution\n\nThe following example removes two tags from a CloudFront distribution by using command line arguments:\n\naws cloudfront untag-resource \\\n    --resource arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE \\\n    --tag-keys Items=Name,Project\n\n\nInstead of using command line arguments, you can provide the tag keys in a JSON file, as shown in the following example:\n\naws cloudfront untag-resource \\\n    --resource arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE \\\n    --tag-keys file://tag-keys.json\n\n\nThe file tag-keys.json is a JSON document in the current folder that contains the following:\n\n{\n    \"Items\": [\n        \"Name\",\n        \"Project\"\n    ]\n}\n\n\nWhen successful, this command has no output."
    },
    {
      "command_name": "update-cache-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-cache-policy.html",
      "command_description": "Description\n\nUpdates a cache policy configuration.\n\nWhen you update a cache policy configuration, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update a cache policy configuration:\n\nUse GetCachePolicyConfig to get the current configuration.\n\nLocally modify the fields in the cache policy configuration that you want to update.\n\nCall UpdateCachePolicy by providing the entire cache policy configuration, including the fields that you modified and those that you didn’t.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-cache-policy\n--cache-policy-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cache-policy-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cache-policy-config (structure)\n\nA cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Name\": \"string\",\n  \"DefaultTTL\": long,\n  \"MaxTTL\": long,\n  \"MinTTL\": long,\n  \"ParametersInCacheKeyAndForwardedToOrigin\": {\n    \"EnableAcceptEncodingGzip\": true|false,\n    \"EnableAcceptEncodingBrotli\": true|false,\n    \"HeadersConfig\": {\n      \"HeaderBehavior\": \"none\"|\"whitelist\",\n      \"Headers\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"CookiesConfig\": {\n      \"CookieBehavior\": \"none\"|\"whitelist\"|\"allExcept\"|\"all\",\n      \"Cookies\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"QueryStringsConfig\": {\n      \"QueryStringBehavior\": \"none\"|\"whitelist\"|\"allExcept\"|\"all\",\n      \"QueryStrings\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    }\n  }\n}\n\n\n--id (string)\n\nThe unique identifier for the cache policy that you are updating. The identifier is returned in a cache behavior’s CachePolicyId field in the response to GetDistributionConfig .\n\n--if-match (string)\n\nThe version of the cache policy that you are updating. The version is returned in the cache policy’s ETag field in the response to GetCachePolicyConfig .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCachePolicy -> (structure)\n\nA cache policy.\n\nId -> (string)\n\nThe unique identifier for the cache policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the cache policy was last modified.\n\nCachePolicyConfig -> (structure)\n\nThe cache policy configuration.\n\nComment -> (string)\n\nA comment to describe the cache policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the cache policy.\n\nDefaultTTL -> (long)\n\nThe default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object’s time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 86400 seconds (one day). If the value of MinTTL is more than 86400 seconds, then the default value for this field is the same as the value of MinTTL .\n\nMaxTTL -> (long)\n\nThe maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nThe default value for this field is 31536000 seconds (one year). If the value of MinTTL or DefaultTTL is more than 31536000 seconds, then the default value for this field is the same as the value of DefaultTTL .\n\nMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nParametersInCacheKeyAndForwardedToOrigin -> (structure)\n\nThe HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are automatically included in requests that CloudFront sends to the origin.\n\nEnableAcceptEncodingGzip -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingBrotli field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nEnableAcceptEncodingBrotli -> (boolean)\n\nA flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\nThis field is related to the EnableAcceptEncodingGzip field. If one or both of these fields is true and the viewer request includes the Accept-Encoding header, then CloudFront does the following:\n\nNormalizes the value of the viewer’s Accept-Encoding header\n\nIncludes the normalized header in the cache key\n\nIncludes the normalized header in the request to the origin, if a request is necessary\n\nFor more information, see Compression support in the Amazon CloudFront Developer Guide .\n\nIf you set this value to true , and this cache behavior also has an origin request policy attached, do not include the Accept-Encoding header in the origin request policy. CloudFront always includes the Accept-Encoding header in origin requests when the value of this field is true , so including this header in an origin request policy has no effect.\n\nIf both of these fields are false , then CloudFront treats the Accept-Encoding header the same as any other HTTP header in the viewer request. By default, it’s not included in the cache key and it’s not included in origin requests. In this case, you can manually add Accept-Encoding to the headers whitelist like any other HTTP header.\n\nHeadersConfig -> (structure)\n\nAn object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nAn object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nCookieBehavior -> (string)\n\nDetermines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All cookies in viewer requests that are * not * listed in the CookieNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nAn object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in the cache key and are not automatically included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in an OriginRequestPolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nallExcept – All query strings in viewer requests that are * not * listed in the QueryStringNames type are included in the cache key and automatically included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in the cache key and are automatically included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains the specific query strings in viewer requests that either * are * or * are not * included in the cache key and automatically included in requests that CloudFront sends to the origin. The behavior depends on whether the QueryStringBehavior field in the CachePolicyQueryStringsConfig type is set to whitelist (the listed query strings * are * included) or allExcept (the listed query strings * are not * included, but all other query strings are).\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the cache policy."
    },
    {
      "command_name": "update-cloud-front-origin-access-identity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-cloud-front-origin-access-identity.html",
      "command_description": "Description\n\nUpdate an origin access identity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-cloud-front-origin-access-identity\n--cloud-front-origin-access-identity-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--cloud-front-origin-access-identity-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cloud-front-origin-access-identity-config (structure)\n\nThe identity’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nCallerReference=string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\"\n}\n\n\n--id (string)\n\nThe identity’s id.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the identity’s configuration. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCloudFrontOriginAccessIdentity -> (structure)\n\nThe origin access identity’s information.\n\nId -> (string)\n\nThe ID for the origin access identity, for example, E74FTE3AJFJ256A .\n\nS3CanonicalUserId -> (string)\n\nThe Amazon S3 canonical user ID for the origin access identity, used when giving the origin access identity read permission to an object in Amazon S3.\n\nCloudFrontOriginAccessIdentityConfig -> (structure)\n\nThe current configuration information for the identity.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created.\n\nIf the CallerReference is a value already sent in a previous identity request, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request.\n\nIf the CallerReference is a value you already sent in a previous request to create an identity, but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.\n\nComment -> (string)\n\nA comment to describe the origin access identity. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo update a CloudFront origin access identity\n\nThe following example updates the origin access identity (OAI) with the ID E74FTE3AEXAMPLE. The only field that you can update is the OAI’s Comment.\n\nTo update an OAI, you must have the OAI’s ID and ETag. The OAI ID is returned in the output of the create-cloud-front-origin-access-identity and list-cloud-front-origin-access-identities commands. To get the ETag, use the get-cloud-front-origin-access-identity or get-cloud-front-origin-access-identity-config command. Use the --if-match option to provide the OAI’s ETag.\n\naws cloudfront update-cloud-front-origin-access-identity \\\n    --id E74FTE3AEXAMPLE \\\n    --if-match E2QWRUHEXAMPLE \\\n    --cloud-front-origin-access-identity-config \\\n        CallerReference=cli-example,Comment=\"Example OAI Updated\"\n\n\nYou can accomplish the same thing by providing the OAI configuration in a JSON file, as shown in the following example:\n\naws cloudfront update-cloud-front-origin-access-identity \\\n    --id E74FTE3AEXAMPLE \\\n    --if-match E2QWRUHEXAMPLE \\\n    --cloud-front-origin-access-identity-config file://OAI-config.json\n\n\nThe file OAI-config.json is a JSON document in the current directory that contains the following:\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"Example OAI Updated\"\n}\n\n\nWhether you provide the OAI configuration with a command line argument or a JSON file, the output is the same:\n\n{\n    \"ETag\": \"E9LHASXEXAMPLE\",\n    \"CloudFrontOriginAccessIdentity\": {\n        \"Id\": \"E74FTE3AEXAMPLE\",\n        \"S3CanonicalUserId\": \"cd13868f797c227fbea2830611a26fe0a21ba1b826ab4bed9b7771c9aEXAMPLE\",\n        \"CloudFrontOriginAccessIdentityConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Example OAI Updated\"\n        }\n    }\n}\n"
    },
    {
      "command_name": "update-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-distribution.html",
      "command_description": "Description\n\nUpdates the configuration for a web distribution.\n\nWarning\n\nWhen you update a distribution, there are more required fields than when you create a distribution. When you update your distribution by using this API action, follow the steps here to get the current configuration and then make your updates, to make sure that you include all of the required fields. To view a summary, see Required Fields for Create Distribution and Update Distribution in the Amazon CloudFront Developer Guide .\n\nThe update process includes getting the current distribution configuration, updating the XML document that is returned to make your changes, and then submitting an UpdateDistribution request to make the updates.\n\nFor information about updating a distribution using the CloudFront console instead, see Creating a Distribution in the Amazon CloudFront Developer Guide .\n\nTo update a web distribution using the CloudFront API\n\nSubmit a GetDistributionConfig request to get the current configuration and an Etag header for the distribution.\n\nNote\n\nIf you update the distribution again, you must get a new Etag header.\n\nUpdate the XML document that was returned in the response to your GetDistributionConfig request to include your changes.\n\nWarning\n\nWhen you edit the XML file, be aware of the following:\n\nYou must strip out the ETag parameter that is returned.\n\nAdditional fields are required when you update a distribution. There may be fields included in the XML file for features that you haven’t configured for your distribution. This is expected and required to successfully update the distribution.\n\nYou can’t change the value of CallerReference . If you try to change this value, CloudFront returns an IllegalUpdate error.\n\nThe new configuration replaces the existing configuration; the values that you specify in an UpdateDistribution request are not merged into your existing configuration. When you add, delete, or replace values in an element that allows multiple values (for example, CNAME ), you must specify all of the values that you want to appear in the updated distribution. In addition, you must update the corresponding Quantity element.\n\nSubmit an UpdateDistribution request to update the configuration for your distribution:\n\nIn the request body, include the XML document that you updated in Step 2. The request body must include an XML document with a DistributionConfig element.\n\nSet the value of the HTTP If-Match header to the value of the ETag header that CloudFront returned when you submitted the GetDistributionConfig request in Step 1.\n\nReview the response to the UpdateDistribution request to confirm that the configuration was successfully updated.\n\nOptional: Submit a GetDistribution request to confirm that your changes have propagated. When propagation is complete, the value of Status is Deployed .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-distribution\n[--distribution-config <value>]\n--id <value>\n[--if-match <value>]\n[--default-root-object <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--distribution-config <value>]",
        "--id <value>",
        "[--if-match <value>]",
        "[--default-root-object <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-config (structure)\n\nThe distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Aliases\": {\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"DefaultRootObject\": \"string\",\n  \"Origins\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"Id\": \"string\",\n        \"DomainName\": \"string\",\n        \"OriginPath\": \"string\",\n        \"CustomHeaders\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"HeaderName\": \"string\",\n              \"HeaderValue\": \"string\"\n            }\n            ...\n          ]\n        },\n        \"S3OriginConfig\": {\n          \"OriginAccessIdentity\": \"string\"\n        },\n        \"CustomOriginConfig\": {\n          \"HTTPPort\": integer,\n          \"HTTPSPort\": integer,\n          \"OriginProtocolPolicy\": \"http-only\"|\"match-viewer\"|\"https-only\",\n          \"OriginSslProtocols\": {\n            \"Quantity\": integer,\n            \"Items\": [\"SSLv3\"|\"TLSv1\"|\"TLSv1.1\"|\"TLSv1.2\", ...]\n          },\n          \"OriginReadTimeout\": integer,\n          \"OriginKeepaliveTimeout\": integer\n        },\n        \"ConnectionAttempts\": integer,\n        \"ConnectionTimeout\": integer,\n        \"OriginShield\": {\n          \"Enabled\": true|false,\n          \"OriginShieldRegion\": \"string\"\n        }\n      }\n      ...\n    ]\n  },\n  \"OriginGroups\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"Id\": \"string\",\n        \"FailoverCriteria\": {\n          \"StatusCodes\": {\n            \"Quantity\": integer,\n            \"Items\": [integer, ...]\n          }\n        },\n        \"Members\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"OriginId\": \"string\"\n            }\n            ...\n          ]\n        }\n      }\n      ...\n    ]\n  },\n  \"DefaultCacheBehavior\": {\n    \"TargetOriginId\": \"string\",\n    \"TrustedSigners\": {\n      \"Enabled\": true|false,\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"TrustedKeyGroups\": {\n      \"Enabled\": true|false,\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    },\n    \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n    \"AllowedMethods\": {\n      \"Quantity\": integer,\n      \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n      \"CachedMethods\": {\n        \"Quantity\": integer,\n        \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n      }\n    },\n    \"SmoothStreaming\": true|false,\n    \"Compress\": true|false,\n    \"LambdaFunctionAssociations\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"LambdaFunctionARN\": \"string\",\n          \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n          \"IncludeBody\": true|false\n        }\n        ...\n      ]\n    },\n    \"FunctionAssociations\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"FunctionARN\": \"string\",\n          \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n        }\n        ...\n      ]\n    },\n    \"FieldLevelEncryptionId\": \"string\",\n    \"RealtimeLogConfigArn\": \"string\",\n    \"CachePolicyId\": \"string\",\n    \"OriginRequestPolicyId\": \"string\",\n    \"ForwardedValues\": {\n      \"QueryString\": true|false,\n      \"Cookies\": {\n        \"Forward\": \"none\"|\"whitelist\"|\"all\",\n        \"WhitelistedNames\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        }\n      },\n      \"Headers\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      },\n      \"QueryStringCacheKeys\": {\n        \"Quantity\": integer,\n        \"Items\": [\"string\", ...]\n      }\n    },\n    \"MinTTL\": long,\n    \"DefaultTTL\": long,\n    \"MaxTTL\": long\n  },\n  \"CacheBehaviors\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"PathPattern\": \"string\",\n        \"TargetOriginId\": \"string\",\n        \"TrustedSigners\": {\n          \"Enabled\": true|false,\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        },\n        \"TrustedKeyGroups\": {\n          \"Enabled\": true|false,\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        },\n        \"ViewerProtocolPolicy\": \"allow-all\"|\"https-only\"|\"redirect-to-https\",\n        \"AllowedMethods\": {\n          \"Quantity\": integer,\n          \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...],\n          \"CachedMethods\": {\n            \"Quantity\": integer,\n            \"Items\": [\"GET\"|\"HEAD\"|\"POST\"|\"PUT\"|\"PATCH\"|\"OPTIONS\"|\"DELETE\", ...]\n          }\n        },\n        \"SmoothStreaming\": true|false,\n        \"Compress\": true|false,\n        \"LambdaFunctionAssociations\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"LambdaFunctionARN\": \"string\",\n              \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\",\n              \"IncludeBody\": true|false\n            }\n            ...\n          ]\n        },\n        \"FunctionAssociations\": {\n          \"Quantity\": integer,\n          \"Items\": [\n            {\n              \"FunctionARN\": \"string\",\n              \"EventType\": \"viewer-request\"|\"viewer-response\"|\"origin-request\"|\"origin-response\"\n            }\n            ...\n          ]\n        },\n        \"FieldLevelEncryptionId\": \"string\",\n        \"RealtimeLogConfigArn\": \"string\",\n        \"CachePolicyId\": \"string\",\n        \"OriginRequestPolicyId\": \"string\",\n        \"ForwardedValues\": {\n          \"QueryString\": true|false,\n          \"Cookies\": {\n            \"Forward\": \"none\"|\"whitelist\"|\"all\",\n            \"WhitelistedNames\": {\n              \"Quantity\": integer,\n              \"Items\": [\"string\", ...]\n            }\n          },\n          \"Headers\": {\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          },\n          \"QueryStringCacheKeys\": {\n            \"Quantity\": integer,\n            \"Items\": [\"string\", ...]\n          }\n        },\n        \"MinTTL\": long,\n        \"DefaultTTL\": long,\n        \"MaxTTL\": long\n      }\n      ...\n    ]\n  },\n  \"CustomErrorResponses\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"ErrorCode\": integer,\n        \"ResponsePagePath\": \"string\",\n        \"ResponseCode\": \"string\",\n        \"ErrorCachingMinTTL\": long\n      }\n      ...\n    ]\n  },\n  \"Comment\": \"string\",\n  \"Logging\": {\n    \"Enabled\": true|false,\n    \"IncludeCookies\": true|false,\n    \"Bucket\": \"string\",\n    \"Prefix\": \"string\"\n  },\n  \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n  \"Enabled\": true|false,\n  \"ViewerCertificate\": {\n    \"CloudFrontDefaultCertificate\": true|false,\n    \"IAMCertificateId\": \"string\",\n    \"ACMCertificateArn\": \"string\",\n    \"SSLSupportMethod\": \"sni-only\"|\"vip\"|\"static-ip\",\n    \"MinimumProtocolVersion\": \"SSLv3\"|\"TLSv1\"|\"TLSv1_2016\"|\"TLSv1.1_2016\"|\"TLSv1.2_2018\"|\"TLSv1.2_2019\"|\"TLSv1.2_2021\",\n    \"Certificate\": \"string\",\n    \"CertificateSource\": \"cloudfront\"|\"iam\"|\"acm\"\n  },\n  \"Restrictions\": {\n    \"GeoRestriction\": {\n      \"RestrictionType\": \"blacklist\"|\"whitelist\"|\"none\",\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"WebACLId\": \"string\",\n  \"HttpVersion\": \"http1.1\"|\"http2\",\n  \"IsIPV6Enabled\": true|false\n}\n\n\n--id (string)\n\nThe distribution’s id.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the distribution’s configuration. For example: E2QWRUHAPOMQZL .\n\n--default-root-object (string) The object that you want CloudFront to return (for example, index.html) when a viewer request points to your root URL. CLI will automatically make a get-distribution-config call to load and preserve your other settings. This argument and –distribution-config are mututally exclusive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDistribution -> (structure)\n\nThe distribution’s information.\n\nId -> (string)\n\nThe identifier for the distribution. For example: EDFDVBD632BHDS5 .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThis response element indicates the current status of the distribution. When the status is Deployed , the distribution’s information is fully propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time the distribution was last modified.\n\nInProgressInvalidationBatches -> (integer)\n\nThe number of invalidation batches currently in progress.\n\nDomainName -> (string)\n\nThe domain name corresponding to the distribution, for example, d111111abcdef8.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using trusted signers. This field contains a list of account IDs and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nActiveTrustedKeyGroups -> (structure)\n\nCloudFront automatically adds this field to the response if you’ve configured a cache behavior in this distribution to serve private content using key groups. This field contains a list of key groups and the public keys in each key group that CloudFront can use to verify the signatures of signed URLs or signed cookies.\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups, including the identifiers of the public keys in each key group that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of identifiers for the public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nKeyGroupId -> (string)\n\nThe identifier of the key group that contains the public keys.\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nDistributionConfig -> (structure)\n\nThe current configuration information for the distribution. Send a GET request to the /*CloudFront API version* /distribution ID/config resource.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the DistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nDefaultRootObject -> (string)\n\nThe object that you want CloudFront to request from your origin (for example, index.html ) when a viewer requests the root URL for your distribution (http://www.example.com ) instead of an object in your distribution (http://www.example.com/product-description.html ). Specifying a default root object avoids exposing the contents of your distribution.\n\nSpecify only the object name, for example, index.html . Don’t add a / before the object name.\n\nIf you don’t want to specify a default root object when you create a distribution, include an empty DefaultRootObject element.\n\nTo delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element.\n\nTo replace the default root object, update the distribution configuration and specify the new object.\n\nFor more information about the default root object, see Creating a Default Root Object in the Amazon CloudFront Developer Guide .\n\nOrigins -> (structure)\n\nA complex type that contains information about origins for this distribution.\n\nQuantity -> (integer)\n\nThe number of origins for this distribution.\n\nItems -> (list)\n\nA list of origins.\n\n(structure)\n\nAn origin.\n\nAn origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:\n\nUse S3OriginConfig to specify an Amazon S3 bucket that is not configured with static website hosting.\n\nUse CustomOriginConfig to specify all other kinds of origins, including:\n\nAn Amazon S3 bucket that is configured with static website hosting\n\nAn Elastic Load Balancing load balancer\n\nAn AWS Elemental MediaPackage endpoint\n\nAn AWS Elemental MediaStore container\n\nAny other HTTP server, running on an Amazon EC2 instance or any other kind of host\n\nFor the current maximum number of origins that you can specify per distribution, see General Quotas on Web Distributions in the Amazon CloudFront Developer Guide (quotas were formerly referred to as limits).\n\nId -> (string)\n\nA unique identifier for the origin. This value must be unique within the distribution.\n\nUse this value to specify the TargetOriginId in a CacheBehavior or DefaultCacheBehavior .\n\nDomainName -> (string)\n\nThe domain name for the origin.\n\nFor more information, see Origin Domain Name in the Amazon CloudFront Developer Guide .\n\nOriginPath -> (string)\n\nAn optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.\n\nFor more information, see Origin Path in the Amazon CloudFront Developer Guide .\n\nCustomHeaders -> (structure)\n\nA list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.\n\nFor more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of custom headers, if any, for this distribution.\n\nItems -> (list)\n\nOptional : A list that contains one OriginCustomHeader element for each custom header that you want CloudFront to forward to the origin. If Quantity is 0 , omit Items .\n\n(structure)\n\nA complex type that contains HeaderName and HeaderValue elements, if any, for this distribution.\n\nHeaderName -> (string)\n\nThe name of a header that you want CloudFront to send to your origin. For more information, see Adding Custom Headers to Origin Requests in the Amazon CloudFront Developer Guide .\n\nHeaderValue -> (string)\n\nThe value for the header that you specified in the HeaderName field.\n\nS3OriginConfig -> (structure)\n\nUse this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the CustomOriginConfig type instead.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can only access objects in an Amazon S3 bucket through CloudFront. The format of the value is:\n\norigin-access-identity/cloudfront/ID-of-origin-access-identity\n\nwhere `` ID-of-origin-access-identity `` is the value that CloudFront returned in the ID element when you created the origin access identity.\n\nIf you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information about the origin access identity, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nCustomOriginConfig -> (structure)\n\nUse this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the S3OriginConfig type instead.\n\nHTTPPort -> (integer)\n\nThe HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.\n\nHTTPSPort -> (integer)\n\nThe HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.\n\nOriginProtocolPolicy -> (string)\n\nSpecifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:\n\nhttp-only – CloudFront always uses HTTP to connect to the origin.\n\nmatch-viewer – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.\n\nhttps-only – CloudFront always uses HTTPS to connect to the origin.\n\nOriginSslProtocols -> (structure)\n\nSpecifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include SSLv3 , TLSv1 , TLSv1.1 , and TLSv1.2 .\n\nFor more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin.\n\nItems -> (list)\n\nA list that contains allowed SSL/TLS protocols for this distribution.\n\n(string)\n\nOriginReadTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the origin response timeout . The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 30 seconds.\n\nFor more information, see Origin Response Timeout in the Amazon CloudFront Developer Guide .\n\nOriginKeepaliveTimeout -> (integer)\n\nSpecifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don’t specify otherwise) is 5 seconds.\n\nFor more information, see Origin Keep-alive Timeout in the Amazon CloudFront Developer Guide .\n\nConnectionAttempts -> (integer)\n\nThe number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don’t specify otherwise) is 3.\n\nFor a custom origin (including an Amazon S3 bucket that’s configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an Origin Response Timeout .\n\nFor more information, see Origin Connection Attempts in the Amazon CloudFront Developer Guide .\n\nConnectionTimeout -> (integer)\n\nThe number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don’t specify otherwise) is 10 seconds.\n\nFor more information, see Origin Connection Timeout in the Amazon CloudFront Developer Guide .\n\nOriginShield -> (structure)\n\nCloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.\n\nFor more information, see Using Origin Shield in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nA flag that specifies whether Origin Shield is enabled.\n\nWhen it’s enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it’s disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.\n\nOriginShieldRegion -> (string)\n\nThe Region for Origin Shield.\n\nSpecify the Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2 .\n\nWhen you enable CloudFront Origin Shield, you must specify the Region for Origin Shield. For the list of Regions that you can specify, and for help choosing the best Region for your origin, see Choosing the Region for Origin Shield in the Amazon CloudFront Developer Guide .\n\nOriginGroups -> (structure)\n\nA complex type that contains information about origin groups for this distribution.\n\nQuantity -> (integer)\n\nThe number of origin groups.\n\nItems -> (list)\n\nThe items (origin groups) in a distribution.\n\n(structure)\n\nAn origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specifiy the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you’ve chosen.\n\nId -> (string)\n\nThe origin group’s ID.\n\nFailoverCriteria -> (structure)\n\nA complex type that contains information about the failover criteria for an origin group.\n\nStatusCodes -> (structure)\n\nThe status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.\n\nQuantity -> (integer)\n\nThe number of status codes.\n\nItems -> (list)\n\nThe items (status codes) for an origin group.\n\n(integer)\n\nMembers -> (structure)\n\nA complex type that contains information about the origins in an origin group.\n\nQuantity -> (integer)\n\nThe number of origins in an origin group.\n\nItems -> (list)\n\nItems (origins) in an origin group.\n\n(structure)\n\nAn origin in an origin group.\n\nOriginId -> (string)\n\nThe ID for an origin in an origin group.\n\nDefaultCacheBehavior -> (structure)\n\nA complex type that describes the default cache behavior if you don’t specify a CacheBehavior element or if files don’t match any of the values of PathPattern in CacheBehavior elements. You must create exactly one default cache behavior.\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they use the default cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true ; if not, specify false . For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to the default cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA DefaultCacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCacheBehaviors -> (structure)\n\nA complex type that contains zero or more CacheBehavior elements.\n\nQuantity -> (integer)\n\nThe number of cache behaviors for this distribution.\n\nItems -> (list)\n\nOptional: A complex type that contains cache behaviors for this distribution. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that describes how CloudFront processes requests.\n\nYou must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.\n\nFor the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see Quotas in the Amazon CloudFront Developer Guide .\n\nIf you don’t want to specify any cache behaviors, include only an empty CacheBehaviors element. Don’t include an empty CacheBehavior element because this is invalid.\n\nTo delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element.\n\nTo add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.\n\nFor more information about cache behaviors, see Cache Behavior Settings in the Amazon CloudFront Developer Guide .\n\nPathPattern -> (string)\n\nThe pattern (for example, images/*.jpg ) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.\n\nNote\n\nYou can optionally include a slash (/ ) at the beginning of the path pattern. For example, /images/*.jpg . CloudFront behavior is the same with or without the leading / .\n\nThe path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.\n\nFor more information, see Path Pattern in the Amazon CloudFront Developer Guide .\n\nTargetOriginId -> (string)\n\nThe value of ID for the origin that you want CloudFront to route requests to when they match this cache behavior.\n\nTrustedSigners -> (structure)\n\nWarning\n\nWe recommend using TrustedKeyGroups instead of TrustedSigners .\n\nA list of account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer’s account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nTrustedKeyGroups -> (structure)\n\nA list of key groups that CloudFront can use to validate signed URLs or signed cookies.\n\nWhen a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see Serving private content in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the key groups in the list have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of key groups in the list.\n\nItems -> (list)\n\nA list of key groups identifiers.\n\n(string)\n\nViewerProtocolPolicy -> (string)\n\nThe protocol that viewers can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern . You can specify the following options:\n\nallow-all : Viewers can use HTTP or HTTPS.\n\nredirect-to-https : If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.\n\nhttps-only : If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).\n\nFor more information about requiring the HTTPS protocol, see Requiring HTTPS Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nThe only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects’ cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see Managing Cache Expiration in the Amazon CloudFront Developer Guide .\n\nAllowedMethods -> (structure)\n\nA complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:\n\nCloudFront forwards only GET and HEAD requests.\n\nCloudFront forwards only GET , HEAD , and OPTIONS requests.\n\nCloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests.\n\nIf you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can’t perform operations that you don’t want them to. For example, you might not want users to have permissions to delete objects from your origin.\n\nQuantity -> (integer)\n\nThe number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET , HEAD , and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST , and DELETE requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.\n\n(string)\n\nCachedMethods -> (structure)\n\nA complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:\n\nCloudFront caches responses to GET and HEAD requests.\n\nCloudFront caches responses to GET , HEAD , and OPTIONS requests.\n\nIf you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.\n\nQuantity -> (integer)\n\nThe number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET , HEAD , and OPTIONS requests).\n\nItems -> (list)\n\nA complex type that contains the HTTP methods that you want CloudFront to cache responses to.\n\n(string)\n\nSmoothStreaming -> (boolean)\n\nIndicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true ; if not, specify false . If you specify true for SmoothStreaming , you can still distribute other content using this cache behavior if the content matches the value of PathPattern .\n\nCompress -> (boolean)\n\nWhether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see Serving Compressed Files in the Amazon CloudFront Developer Guide .\n\nLambdaFunctionAssociations -> (structure)\n\nA complex type that contains zero or more Lambda@Edge function associations for a cache behavior.\n\nQuantity -> (integer)\n\nThe number of Lambda@Edge function associations for this cache behavior.\n\nItems -> (list)\n\nOptional : A complex type that contains LambdaFunctionAssociation items for this cache behavior. If Quantity is 0 , you can omit Items .\n\n(structure)\n\nA complex type that contains a Lambda@Edge function association.\n\nLambdaFunctionARN -> (string)\n\nThe ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can’t specify an alias or $LATEST.\n\nEventType -> (string)\n\nSpecifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:\n\nviewer-request : The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.\n\norigin-request : The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn’t execute.\n\norigin-response : The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn’t execute.\n\nviewer-response : The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache. If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn’t execute.\n\nIncludeBody -> (boolean)\n\nA flag that allows a Lambda@Edge function to have read access to the body content. For more information, see Accessing the Request Body by Choosing the Include Body Option in the Amazon CloudFront Developer Guide.\n\nFunctionAssociations -> (structure)\n\nA list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\nQuantity -> (integer)\n\nThe number of CloudFront functions in the list.\n\nItems -> (list)\n\nThe CloudFront functions that are associated with a cache behavior in a CloudFront distribution. CloudFront functions must be published to the LIVE stage to associate them with a cache behavior.\n\n(structure)\n\nA CloudFront function that is associated with a cache behavior in a CloudFront distribution.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function.\n\nEventType -> (string)\n\nThe event type of the function, either viewer-request or viewer-response . You cannot use origin-facing event types (origin-request and origin-response ) with a CloudFront function.\n\nFieldLevelEncryptionId -> (string)\n\nThe value of ID for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.\n\nRealtimeLogConfigArn -> (string)\n\nThe Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see Real-time logs in the Amazon CloudFront Developer Guide .\n\nCachePolicyId -> (string)\n\nThe unique identifier of the cache policy that is attached to this cache behavior. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nOriginRequestPolicyId -> (string)\n\nThe unique identifier of the origin request policy that is attached to this cache behavior. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nForwardedValues -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see Working with policies in the Amazon CloudFront Developer Guide .\n\nIf you want to include values in the cache key, use a cache policy. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies or Using the managed origin request policies in the Amazon CloudFront Developer Guide .\n\nA CacheBehavior must include either a CachePolicyId or ForwardedValues . We recommend that you use a CachePolicyId .\n\nA complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.\n\nQueryString -> (boolean)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nIndicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys , if any:\n\nIf you specify true for QueryString and you don’t specify any values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.\n\nIf you specify true for QueryString and you specify one or more values for QueryStringCacheKeys , CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.\n\nIf you specify false for QueryString , CloudFront doesn’t forward any query string parameters to the origin, and doesn’t cache based on query string parameters.\n\nFor more information, see Configuring CloudFront to Cache Based on Query String Parameters in the Amazon CloudFront Developer Guide .\n\nCookies -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see How CloudFront Forwards, Caches, and Logs Cookies in the Amazon CloudFront Developer Guide .\n\nForward -> (string)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nSpecifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the WhitelistedNames complex type.\n\nAmazon S3 doesn’t process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the Forward element.\n\nWhitelistedNames -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include cookies in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nRequired if you specify whitelist for the value of Forward . A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.\n\nIf you specify all or none for the value of Forward , omit WhitelistedNames . If you change the value of Forward from whitelist to all or none and you don’t delete the WhitelistedNames element and its child elements, CloudFront deletes them automatically.\n\nFor the current limit on the number of cookie names that you can whitelist for each cache behavior, see CloudFront Limits in the Amazon Web Services General Reference .\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nHeaders -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include headers in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that specifies the Headers , if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.\n\nFor more information, see Caching Content Based on Request Headers in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nQueryStringCacheKeys -> (structure)\n\nThis field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.\n\nIf you want to include query strings in the cache key, use a cache policy. For more information, see Creating cache policies in the Amazon CloudFront Developer Guide .\n\nIf you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see Creating origin request policies in the Amazon CloudFront Developer Guide .\n\nA complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.\n\nQuantity -> (integer)\n\nThe number of whitelisted query string parameters for a cache behavior.\n\nItems -> (list)\n\nA list that contains the query string parameters that you want CloudFront to use as a basis for caching for a cache behavior. If Quantity is 0, you can omit Items .\n\n(string)\n\nMinTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MinTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nYou must specify 0 for MinTTL if you configure CloudFront to forward all headers to your origin (under Headers , if you specify 1 for Quantity and * for Name ).\n\nDefaultTTL -> (long)\n\nThis field is deprecated. We recommend that you use the DefaultTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nMaxTTL -> (long)\n\nThis field is deprecated. We recommend that you use the MaxTTL field in a cache policy instead of this field. For more information, see Creating cache policies or Using the managed cache policies in the Amazon CloudFront Developer Guide .\n\nThe maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age , Cache-Control s-maxage , and Expires to objects. For more information, see Managing How Long Content Stays in an Edge Cache (Expiration) in the Amazon CloudFront Developer Guide .\n\nCustomErrorResponses -> (structure)\n\nA complex type that controls the following:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nQuantity -> (integer)\n\nThe number of HTTP status codes for which you want to specify a custom error page and/or a caching duration. If Quantity is 0 , you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a CustomErrorResponse element for each HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\n(structure)\n\nA complex type that controls:\n\nWhether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.\n\nHow long CloudFront caches HTTP status codes in the 4xx and 5xx range.\n\nFor more information about custom error pages, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nErrorCode -> (integer)\n\nThe HTTP status code for which you want to specify a custom error page and/or a caching duration.\n\nResponsePagePath -> (string)\n\nThe path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ErrorCode , for example, /4xx-errors/403-forbidden.html . If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:\n\nThe value of PathPattern matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named /4xx-errors . Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, /4xx-errors/* .\n\nThe value of TargetOriginId specifies the value of the ID element for the origin that contains your custom error pages.\n\nIf you specify a value for ResponsePagePath , you must also specify a value for ResponseCode .\n\nWe recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can’t get the files that you want to return to viewers because the origin server is unavailable.\n\nResponseCode -> (string)\n\nThe HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:\n\nSome Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute 200 , the response typically won’t be intercepted.\n\nIf you don’t care about distinguishing among different client errors or server errors, you can specify 400 or 500 as the ResponseCode for all 4xx or 5xx errors.\n\nYou might want to return a 200 status code (OK) and static website so your customers don’t know that your website is down.\n\nIf you specify a value for ResponseCode , you must also specify a value for ResponsePagePath .\n\nErrorCachingMinTTL -> (long)\n\nThe minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ErrorCode . When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.\n\nFor more information, see Customizing Error Responses in the Amazon CloudFront Developer Guide .\n\nComment -> (string)\n\nAn optional comment to describe the distribution. The comment cannot be longer than 128 characters.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the distribution.\n\nFor more information about logging, see Access Logs in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket , prefix , and IncludeCookies , the values are automatically deleted.\n\nIncludeCookies -> (boolean)\n\nSpecifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies . If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don’t want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies .\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nPriceClass -> (string)\n\nThe price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify PriceClass_All , CloudFront responds to requests for your objects from all CloudFront edge locations.\n\nIf you specify a price class other than PriceClass_All , CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.\n\nFor more information about price classes, see Choosing the Price Class for a CloudFront Distribution in the Amazon CloudFront Developer Guide . For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see Amazon CloudFront Pricing .\n\nEnabled -> (boolean)\n\nFrom this field, you can enable or disable the selected distribution.\n\nViewerCertificate -> (structure)\n\nA complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.\n\nCloudFrontDefaultCertificate -> (boolean)\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , set this field to true .\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), set this field to false and specify values for the following fields:\n\nACMCertificateArn or IAMCertificateId (specify a value for one, not both)\n\nMinimumProtocolVersion\n\nSSLSupportMethod\n\nIAMCertificateId -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Identity and Access Management (IAM) , provide the ID of the IAM certificate.\n\nIf you specify an IAM certificate ID, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nACMCertificateArn -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in Certificate Manager (ACM) , provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (us-east-1 ).\n\nIf you specify an ACM certificate ARN, you must also specify values for MinimumProtocolVersion and SSLSupportMethod .\n\nSSLSupportMethod -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.\n\nsni-only – The distribution accepts HTTPS connections from only viewers that support server name indication (SNI) . This is recommended. Most browsers and clients support SNI.\n\nvip – The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.\n\nstatic-ip - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the Amazon Web Services Support Center .\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net , don’t set a value for this field.\n\nMinimumProtocolVersion -> (string)\n\nIf the distribution uses Aliases (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:\n\nThe minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.\n\nThe ciphers that CloudFront can use to encrypt the content that it returns to viewers.\n\nFor more information, see Security Policy and Supported Protocols and Ciphers Between Viewers and CloudFront in the Amazon CloudFront Developer Guide .\n\nNote\n\nOn the CloudFront console, this setting is called Security Policy .\n\nWhen you’re using SNI only (you set SSLSupportMethod to sni-only ), you must specify TLSv1 or higher.\n\nIf the distribution uses the CloudFront domain name such as d111111abcdef8.cloudfront.net (you set CloudFrontDefaultCertificate to true ), CloudFront automatically sets the security policy to TLSv1 regardless of the value that you set here.\n\nCertificate -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nCertificateSource -> (string)\n\nThis field is deprecated. Use one of the following fields instead:\n\nACMCertificateArn\n\nIAMCertificateId\n\nCloudFrontDefaultCertificate\n\nRestrictions -> (structure)\n\nA complex type that identifies ways in which you want to restrict distribution of your content.\n\nGeoRestriction -> (structure)\n\nA complex type that controls the countries in which your content is distributed. CloudFront determines the location of your users using MaxMind GeoIP databases.\n\nRestrictionType -> (string)\n\nThe method that you want to use to restrict distribution of your content by country:\n\nnone : No geo restriction is enabled, meaning access to content is not restricted by client geo location.\n\nblacklist : The Location elements specify the countries in which you don’t want CloudFront to distribute your content.\n\nwhitelist : The Location elements specify the countries in which you want CloudFront to distribute your content.\n\nQuantity -> (integer)\n\nWhen geo restriction is enabled , this is the number of countries in your whitelist or blacklist . Otherwise, when it is not enabled, Quantity is 0 , and you can omit Items .\n\nItems -> (list)\n\nA complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist ) or not distribute your content (blacklist ).\n\nThe Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist . Include one Location element for each country.\n\nCloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.\n\n(string)\n\nWebACLId -> (string)\n\nA unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a . To specify a web ACL created using WAF Classic, use the ACL ID, for example 473e64fd-f30b-4765-81a0-62ad96dd167a .\n\nWAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the WAF Developer Guide .\n\nHttpVersion -> (string)\n\n(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don’t support HTTP/2 automatically use an earlier HTTP version.\n\nFor viewers and CloudFront to use HTTP/2, viewers must support TLS 1.2 or later, and must support Server Name Identification (SNI).\n\nIn general, configuring CloudFront to communicate with viewers using HTTP/2 reduces latency. You can improve performance by optimizing for HTTP/2. For more information, do an Internet search for “http/2 optimization.”\n\nIsIPV6Enabled -> (boolean)\n\nIf you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify true . If you specify false , CloudFront responds to IPv6 DNS requests with the DNS response code NOERROR and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.\n\nIn general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you’re using signed URLs or signed cookies to restrict access to your content, and if you’re using a custom policy that includes the IpAddress parameter to restrict the IP addresses that can access your content, don’t enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see Creating a Signed URL Using a Custom Policy in the Amazon CloudFront Developer Guide .\n\nIf you’re using an Route 53 Amazon Web Services Integration alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:\n\nYou enable IPv6 for the distribution\n\nYou’re using alternate domain names in the URLs for your objects\n\nFor more information, see Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name in the Route 53 Amazon Web Services Integration Developer Guide .\n\nIf you created a CNAME resource record set, either with Route 53 Amazon Web Services Integration or with another DNS service, you don’t need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.\n\nAliasICPRecordals -> (list)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\n(structure)\n\nAmazon Web Services services in China customers must file for an Internet Content Provider (ICP) recordal if they want to serve content publicly on an alternate domain name, also known as a CNAME, that they’ve added to CloudFront. AliasICPRecordal provides the ICP recordal status for CNAMEs associated with distributions. The status is returned in the CloudFront response; you can’t configure it yourself.\n\nFor more information about ICP recordals, see Signup, Accounts, and Credentials in Getting Started with Amazon Web Services services in China .\n\nCNAME -> (string)\n\nA domain name associated with a distribution.\n\nICPRecordalStatus -> (string)\n\nThe Internet Content Provider (ICP) recordal status for a CNAME. The ICPRecordalStatus is set to APPROVED for all CNAMEs (aliases) in regions outside of China.\n\nThe status values returned are the following:\n\nAPPROVED indicates that the associated CNAME has a valid ICP recordal number. Multiple CNAMEs can be associated with a distribution, and CNAMEs can correspond to different ICP recordals. To be marked as APPROVED, that is, valid to use with China region, a CNAME must have one ICP recordal number associated with it.\n\nSUSPENDED indicates that the associated CNAME does not have a valid ICP recordal number.\n\nPENDING indicates that CloudFront can’t determine the ICP recordal status of the CNAME associated with the distribution because there was an error in trying to determine the status. You can try again to see if the error is resolved in which case CloudFront returns an APPROVED or SUSPENDED status.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo update a CloudFront distribution’s default root object\n\nThe following example updates the default root object to index.html for the CloudFront distribution with the ID EDFDVBD6EXAMPLE:\n\naws cloudfront update-distribution --id EDFDVBD6EXAMPLE \\\n    --default-root-object index.html\n\n\nOutput:\n\n{\n    \"ETag\": \"E2QWRUHEXAMPLE\",\n    \"Distribution\": {\n        \"Id\": \"EDFDVBD6EXAMPLE\",\n        \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EDFDVBD6EXAMPLE\",\n        \"Status\": \"InProgress\",\n        \"LastModifiedTime\": \"2019-12-06T18:55:39.870Z\",\n        \"InProgressInvalidationBatches\": 0,\n        \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n        \"ActiveTrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"DistributionConfig\": {\n            \"CallerReference\": \"6b10378d-49be-4c4b-a642-419ccaf8f3b5\",\n            \"Aliases\": {\n                \"Quantity\": 0\n            },\n            \"DefaultRootObject\": \"index.html\",\n            \"Origins\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Id\": \"example-website\",\n                        \"DomainName\": \"www.example.com\",\n                        \"OriginPath\": \"\",\n                        \"CustomHeaders\": {\n                            \"Quantity\": 0\n                        },\n                        \"CustomOriginConfig\": {\n                            \"HTTPPort\": 80,\n                            \"HTTPSPort\": 443,\n                            \"OriginProtocolPolicy\": \"match-viewer\",\n                            \"OriginSslProtocols\": {\n                                \"Quantity\": 2,\n                                \"Items\": [\n                                    \"SSLv3\",\n                                    \"TLSv1\"\n                                ]\n                            },\n                            \"OriginReadTimeout\": 30,\n                            \"OriginKeepaliveTimeout\": 5\n                        }\n                    }\n                ]\n            },\n            \"OriginGroups\": {\n                \"Quantity\": 0\n            },\n            \"DefaultCacheBehavior\": {\n                \"TargetOriginId\": \"example-website\",\n                \"ForwardedValues\": {\n                    \"QueryString\": false,\n                    \"Cookies\": {\n                        \"Forward\": \"none\"\n                    },\n                    \"Headers\": {\n                        \"Quantity\": 1,\n                        \"Items\": [\n                            \"*\"\n                        ]\n                    },\n                    \"QueryStringCacheKeys\": {\n                        \"Quantity\": 0\n                    }\n                },\n                \"TrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"ViewerProtocolPolicy\": \"allow-all\",\n                \"MinTTL\": 0,\n                \"AllowedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ],\n                    \"CachedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ]\n                    }\n                },\n                \"SmoothStreaming\": false,\n                \"DefaultTTL\": 86400,\n                \"MaxTTL\": 31536000,\n                \"Compress\": false,\n                \"LambdaFunctionAssociations\": {\n                    \"Quantity\": 0\n                },\n                \"FieldLevelEncryptionId\": \"\"\n            },\n            \"CacheBehaviors\": {\n                \"Quantity\": 0\n            },\n            \"CustomErrorResponses\": {\n                \"Quantity\": 0\n            },\n            \"Comment\": \"\",\n            \"Logging\": {\n                \"Enabled\": false,\n                \"IncludeCookies\": false,\n                \"Bucket\": \"\",\n                \"Prefix\": \"\"\n            },\n            \"PriceClass\": \"PriceClass_All\",\n            \"Enabled\": true,\n            \"ViewerCertificate\": {\n                \"CloudFrontDefaultCertificate\": true,\n                \"MinimumProtocolVersion\": \"TLSv1\",\n                \"CertificateSource\": \"cloudfront\"\n            },\n            \"Restrictions\": {\n                \"GeoRestriction\": {\n                    \"RestrictionType\": \"none\",\n                    \"Quantity\": 0\n                }\n            },\n            \"WebACLId\": \"\",\n            \"HttpVersion\": \"http1.1\",\n            \"IsIPV6Enabled\": true\n        }\n    }\n}\n\n\nTo update a CloudFront distribution\n\nThe following example disables the CloudFront distribution with the ID EMLARXS9EXAMPLE by providing the distribution configuration in a JSON file named dist-config-disable.json. To update a distribution, you must use the --if-match option to provide the distribution’s ETag. To get the ETag, use the get-distribution or get-distribution-config command.\n\nAfter you use the following example to disable a distribution, you can use the delete-distribution command to delete it.\n\naws cloudfront update-distribution \\\n    --id EMLARXS9EXAMPLE \\\n    --if-match E2QWRUHEXAMPLE \\\n    --distribution-config file://dist-config-disable.json\n\n\nThe file dist-config-disable.json is a JSON document in the current folder that contains the following. Note that the Enabled field is set to false:\n\n{\n    \"CallerReference\": \"cli-1574382155-496510\",\n    \"Aliases\": {\n        \"Quantity\": 0\n    },\n    \"DefaultRootObject\": \"index.html\",\n    \"Origins\": {\n        \"Quantity\": 1,\n        \"Items\": [\n            {\n                \"Id\": \"awsexamplebucket.s3.amazonaws.com-1574382155-273939\",\n                \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                \"OriginPath\": \"\",\n                \"CustomHeaders\": {\n                    \"Quantity\": 0\n                },\n                \"S3OriginConfig\": {\n                    \"OriginAccessIdentity\": \"\"\n                }\n            }\n        ]\n    },\n    \"OriginGroups\": {\n        \"Quantity\": 0\n    },\n    \"DefaultCacheBehavior\": {\n        \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-1574382155-273939\",\n        \"ForwardedValues\": {\n            \"QueryString\": false,\n            \"Cookies\": {\n                \"Forward\": \"none\"\n            },\n            \"Headers\": {\n                \"Quantity\": 0\n            },\n            \"QueryStringCacheKeys\": {\n                \"Quantity\": 0\n            }\n        },\n        \"TrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"ViewerProtocolPolicy\": \"allow-all\",\n        \"MinTTL\": 0,\n        \"AllowedMethods\": {\n            \"Quantity\": 2,\n            \"Items\": [\n                \"HEAD\",\n                \"GET\"\n            ],\n            \"CachedMethods\": {\n                \"Quantity\": 2,\n                \"Items\": [\n                    \"HEAD\",\n                    \"GET\"\n                ]\n            }\n        },\n        \"SmoothStreaming\": false,\n        \"DefaultTTL\": 86400,\n        \"MaxTTL\": 31536000,\n        \"Compress\": false,\n        \"LambdaFunctionAssociations\": {\n            \"Quantity\": 0\n        },\n        \"FieldLevelEncryptionId\": \"\"\n    },\n    \"CacheBehaviors\": {\n        \"Quantity\": 0\n    },\n    \"CustomErrorResponses\": {\n        \"Quantity\": 0\n    },\n    \"Comment\": \"\",\n    \"Logging\": {\n        \"Enabled\": false,\n        \"IncludeCookies\": false,\n        \"Bucket\": \"\",\n        \"Prefix\": \"\"\n    },\n    \"PriceClass\": \"PriceClass_All\",\n    \"Enabled\": false,\n    \"ViewerCertificate\": {\n        \"CloudFrontDefaultCertificate\": true,\n        \"MinimumProtocolVersion\": \"TLSv1\",\n        \"CertificateSource\": \"cloudfront\"\n    },\n    \"Restrictions\": {\n        \"GeoRestriction\": {\n            \"RestrictionType\": \"none\",\n            \"Quantity\": 0\n        }\n    },\n    \"WebACLId\": \"\",\n    \"HttpVersion\": \"http2\",\n    \"IsIPV6Enabled\": true\n}\n\n\nOutput:\n\n{\n    \"ETag\": \"E9LHASXEXAMPLE\",\n    \"Distribution\": {\n        \"Id\": \"EMLARXS9EXAMPLE\",\n        \"ARN\": \"arn:aws:cloudfront::123456789012:distribution/EMLARXS9EXAMPLE\",\n        \"Status\": \"InProgress\",\n        \"LastModifiedTime\": \"2019-12-06T18:32:35.553Z\",\n        \"InProgressInvalidationBatches\": 0,\n        \"DomainName\": \"d111111abcdef8.cloudfront.net\",\n        \"ActiveTrustedSigners\": {\n            \"Enabled\": false,\n            \"Quantity\": 0\n        },\n        \"DistributionConfig\": {\n            \"CallerReference\": \"cli-1574382155-496510\",\n            \"Aliases\": {\n                \"Quantity\": 0\n            },\n            \"DefaultRootObject\": \"index.html\",\n            \"Origins\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"Id\": \"awsexamplebucket.s3.amazonaws.com-1574382155-273939\",\n                        \"DomainName\": \"awsexamplebucket.s3.amazonaws.com\",\n                        \"OriginPath\": \"\",\n                        \"CustomHeaders\": {\n                            \"Quantity\": 0\n                        },\n                        \"S3OriginConfig\": {\n                            \"OriginAccessIdentity\": \"\"\n                        }\n                    }\n                ]\n            },\n            \"OriginGroups\": {\n                \"Quantity\": 0\n            },\n            \"DefaultCacheBehavior\": {\n                \"TargetOriginId\": \"awsexamplebucket.s3.amazonaws.com-1574382155-273939\",\n                \"ForwardedValues\": {\n                    \"QueryString\": false,\n                    \"Cookies\": {\n                        \"Forward\": \"none\"\n                    },\n                    \"Headers\": {\n                        \"Quantity\": 0\n                    },\n                    \"QueryStringCacheKeys\": {\n                        \"Quantity\": 0\n                    }\n                },\n                \"TrustedSigners\": {\n                    \"Enabled\": false,\n                    \"Quantity\": 0\n                },\n                \"ViewerProtocolPolicy\": \"allow-all\",\n                \"MinTTL\": 0,\n                \"AllowedMethods\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"HEAD\",\n                        \"GET\"\n                    ],\n                    \"CachedMethods\": {\n                        \"Quantity\": 2,\n                        \"Items\": [\n                            \"HEAD\",\n                            \"GET\"\n                        ]\n                    }\n                },\n                \"SmoothStreaming\": false,\n                \"DefaultTTL\": 86400,\n                \"MaxTTL\": 31536000,\n                \"Compress\": false,\n                \"LambdaFunctionAssociations\": {\n                    \"Quantity\": 0\n                },\n                \"FieldLevelEncryptionId\": \"\"\n            },\n            \"CacheBehaviors\": {\n                \"Quantity\": 0\n            },\n            \"CustomErrorResponses\": {\n                \"Quantity\": 0\n            },\n            \"Comment\": \"\",\n            \"Logging\": {\n                \"Enabled\": false,\n                \"IncludeCookies\": false,\n                \"Bucket\": \"\",\n                \"Prefix\": \"\"\n            },\n            \"PriceClass\": \"PriceClass_All\",\n            \"Enabled\": false,\n            \"ViewerCertificate\": {\n                \"CloudFrontDefaultCertificate\": true,\n                \"MinimumProtocolVersion\": \"TLSv1\",\n                \"CertificateSource\": \"cloudfront\"\n            },\n            \"Restrictions\": {\n                \"GeoRestriction\": {\n                    \"RestrictionType\": \"none\",\n                    \"Quantity\": 0\n                }\n            },\n            \"WebACLId\": \"\",\n            \"HttpVersion\": \"http2\",\n            \"IsIPV6Enabled\": true\n        }\n    }\n}\n"
    },
    {
      "command_name": "update-field-level-encryption-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-field-level-encryption-config.html",
      "command_description": "Description\n\nUpdate a field-level encryption configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-field-level-encryption-config\n--field-level-encryption-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--field-level-encryption-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--field-level-encryption-config (structure)\n\nRequest to update a field-level encryption configuration.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\",\n  \"QueryArgProfileConfig\": {\n    \"ForwardWhenQueryArgProfileIsUnknown\": true|false,\n    \"QueryArgProfiles\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"QueryArg\": \"string\",\n          \"ProfileId\": \"string\"\n        }\n        ...\n      ]\n    }\n  },\n  \"ContentTypeProfileConfig\": {\n    \"ForwardWhenContentTypeIsUnknown\": true|false,\n    \"ContentTypeProfiles\": {\n      \"Quantity\": integer,\n      \"Items\": [\n        {\n          \"Format\": \"URLEncoded\",\n          \"ProfileId\": \"string\",\n          \"ContentType\": \"string\"\n        }\n        ...\n      ]\n    }\n  }\n}\n\n\n--id (string)\n\nThe ID of the configuration you want to update.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the configuration identity to update. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryption -> (structure)\n\nReturn the results of updating the configuration.\n\nId -> (string)\n\nThe configuration ID for a field-level encryption configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption configuration was changed.\n\nFieldLevelEncryptionConfig -> (structure)\n\nA complex data type that includes the profile configurations specified for field-level encryption.\n\nCallerReference -> (string)\n\nA unique number that ensures the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment about the configuration. The comment cannot be longer than 128 characters.\n\nQueryArgProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a profile isn’t found and the profile that can be provided as a query argument in a request.\n\nForwardWhenQueryArgProfileIsUnknown -> (boolean)\n\nFlag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.\n\nQueryArgProfiles -> (structure)\n\nProfiles specified for query argument-profile mapping for field-level encryption.\n\nQuantity -> (integer)\n\nNumber of profiles for query argument-profile mapping for field-level encryption.\n\nItems -> (list)\n\nNumber of items for query argument-profile mapping for field-level encryption.\n\n(structure)\n\nQuery argument-profile mapping for field-level encryption.\n\nQueryArg -> (string)\n\nQuery argument for field-level encryption query argument-profile mapping.\n\nProfileId -> (string)\n\nID of profile to use for field-level encryption query argument-profile mapping\n\nContentTypeProfileConfig -> (structure)\n\nA complex data type that specifies when to forward content if a content type isn’t recognized and profiles to use as by default in a request if a query argument doesn’t specify a profile to use.\n\nForwardWhenContentTypeIsUnknown -> (boolean)\n\nThe setting in a field-level encryption content type-profile mapping that specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.\n\nContentTypeProfiles -> (structure)\n\nThe configuration for a field-level encryption content type-profile.\n\nQuantity -> (integer)\n\nThe number of field-level encryption content type-profile mappings.\n\nItems -> (list)\n\nItems in a field-level encryption content type-profile mapping.\n\n(structure)\n\nA field-level encryption content type profile.\n\nFormat -> (string)\n\nThe format for a field-level encryption content type-profile mapping.\n\nProfileId -> (string)\n\nThe profile ID for a field-level encryption content type-profile mapping.\n\nContentType -> (string)\n\nThe content type for a field-level encryption content type-profile mapping.\n\nETag -> (string)\n\nThe value of the ETag header that you received when updating the configuration. For example: E2QWRUHAPOMQZL .",
      "command_examples": "Examples\n\nTo update a CloudFront field-level encryption configuration\n\nThe following example updates the Comment field of the field-level encryption configuration with the ID C3KM2WVD605UAY by providing the parameters in a JSON file.\n\nTo update a field-level encryption configuration, you must have the configuration’s ID and ETag. The ID is returned in the output of the create-field-level-encryption-config and list-field-level-encryption-configs commands. To get the ETag, use the get-field-level-encryption or get-field-level-encryption-config command. Use the --if-match option to provide the configuration’s ETag.\n\naws cloudfront update-field-level-encryption-config \\\n    --id C3KM2WVD605UAY \\\n    --if-match E2P4Z4VU7TY5SG \\\n    --field-level-encryption-config file://fle-config.json\n\n\nThe file fle-config.json is a JSON document in the current directory that contains the following:\n\n{\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"Updated example FLE configuration\",\n    \"QueryArgProfileConfig\": {\n        \"ForwardWhenQueryArgProfileIsUnknown\": true,\n        \"QueryArgProfiles\": {\n            \"Quantity\": 0\n        }\n    },\n    \"ContentTypeProfileConfig\": {\n        \"ForwardWhenContentTypeIsUnknown\": true,\n        \"ContentTypeProfiles\": {\n            \"Quantity\": 1,\n            \"Items\": [\n                {\n                    \"Format\": \"URLEncoded\",\n                    \"ProfileId\": \"P280MFCLSYOCVU\",\n                    \"ContentType\": \"application/x-www-form-urlencoded\"\n                }\n            ]\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"ETag\": \"E26M4BIAV81ZF6\",\n    \"FieldLevelEncryption\": {\n        \"Id\": \"C3KM2WVD605UAY\",\n        \"LastModifiedTime\": \"2019-12-10T22:26:26.170Z\",\n        \"FieldLevelEncryptionConfig\": {\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Updated example FLE configuration\",\n            \"QueryArgProfileConfig\": {\n                \"ForwardWhenQueryArgProfileIsUnknown\": true,\n                \"QueryArgProfiles\": {\n                    \"Quantity\": 0,\n                    \"Items\": []\n                }\n            },\n            \"ContentTypeProfileConfig\": {\n                \"ForwardWhenContentTypeIsUnknown\": true,\n                \"ContentTypeProfiles\": {\n                    \"Quantity\": 1,\n                    \"Items\": [\n                        {\n                            \"Format\": \"URLEncoded\",\n                            \"ProfileId\": \"P280MFCLSYOCVU\",\n                            \"ContentType\": \"application/x-www-form-urlencoded\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "update-field-level-encryption-profile",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-field-level-encryption-profile.html",
      "command_description": "Description\n\nUpdate a field-level encryption profile.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-field-level-encryption-profile\n--field-level-encryption-profile-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--field-level-encryption-profile-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--field-level-encryption-profile-config (structure)\n\nRequest to update a field-level encryption profile.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"CallerReference\": \"string\",\n  \"Comment\": \"string\",\n  \"EncryptionEntities\": {\n    \"Quantity\": integer,\n    \"Items\": [\n      {\n        \"PublicKeyId\": \"string\",\n        \"ProviderId\": \"string\",\n        \"FieldPatterns\": {\n          \"Quantity\": integer,\n          \"Items\": [\"string\", ...]\n        }\n      }\n      ...\n    ]\n  }\n}\n\n\n--id (string)\n\nThe ID of the field-level encryption profile request.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the profile identity to update. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFieldLevelEncryptionProfile -> (structure)\n\nReturn the results of updating the profile.\n\nId -> (string)\n\nThe ID for a field-level encryption profile configuration which includes a set of profiles that specify certain selected data fields to be encrypted by specific public keys.\n\nLastModifiedTime -> (timestamp)\n\nThe last time the field-level encryption profile was updated.\n\nFieldLevelEncryptionProfileConfig -> (structure)\n\nA complex data type that includes the profile name and the encryption entities for the field-level encryption profile.\n\nName -> (string)\n\nProfile name for the field-level encryption profile.\n\nCallerReference -> (string)\n\nA unique number that ensures that the request can’t be replayed.\n\nComment -> (string)\n\nAn optional comment for the field-level encryption profile. The comment cannot be longer than 128 characters.\n\nEncryptionEntities -> (structure)\n\nA complex data type of encryption entities for the field-level encryption profile that include the public key ID, provider, and field patterns for specifying which fields to encrypt with this key.\n\nQuantity -> (integer)\n\nNumber of field pattern items in a field-level encryption content type-profile mapping.\n\nItems -> (list)\n\nAn array of field patterns in a field-level encryption content type-profile mapping.\n\n(structure)\n\nComplex data type for field-level encryption profiles that includes the encryption key and field pattern specifications.\n\nPublicKeyId -> (string)\n\nThe public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.\n\nProviderId -> (string)\n\nThe provider associated with the public key being used for encryption. This value must also be provided with the private key for applications to be able to decrypt data.\n\nFieldPatterns -> (structure)\n\nField patterns in a field-level encryption content type profile specify the fields that you want to be encrypted. You can provide the full field name, or any beginning characters followed by a wildcard (*). You can’t overlap field patterns. For example, you can’t have both ABC* and AB*. Note that field patterns are case-sensitive.\n\nQuantity -> (integer)\n\nThe number of field-level encryption field patterns.\n\nItems -> (list)\n\nAn array of the field-level encryption field patterns.\n\n(string)\n\nETag -> (string)\n\nThe result of the field-level encryption profile request.",
      "command_examples": "Examples\n\nTo update a CloudFront field-level encryption profile\n\nThe following example updates the field-level encryption profile with the ID PPK0UOSIF5WSV. This example updates the profile’s Name and Comment, and adds a second FieldPatterns item, by providing the parameters in a JSON file.\n\nTo update a field-level encryption profile, you must have the profile’s ID and ETag. The ID is returned in the output of the create-field-level-encryption-profile and list-field-level-encryption-profiles commands. To get the ETag, use the get-field-level-encryption-profile or get-field-level-encryption-profile-config command. Use the --if-match option to provide the profile’s ETag.\n\naws cloudfront update-field-level-encryption-profile \\\n    --id PPK0UOSIF5WSV \\\n    --if-match E1QQG65FS2L2GC \\\n    --field-level-encryption-profile-config file://fle-profile-config.json\n\n\nThe file fle-profile-config.json is a JSON document in the current directory that contains the following:\n\n{\n    \"Name\": \"ExampleFLEProfileUpdated\",\n    \"CallerReference\": \"cli-example\",\n    \"Comment\": \"Updated FLE profile for AWS CLI example\",\n    \"EncryptionEntities\": {\n        \"Quantity\": 1,\n        \"Items\": [\n            {\n                \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                \"ProviderId\": \"ExampleFLEProvider\",\n                \"FieldPatterns\": {\n                    \"Quantity\": 2,\n                    \"Items\": [\n                        \"ExampleSensitiveField\",\n                        \"SecondExampleSensitiveField\"\n                    ]\n                }\n            }\n        ]\n    }\n}\n\n\nOutput:\n\n{\n    \"ETag\": \"EJETYFJ9CL66D\",\n    \"FieldLevelEncryptionProfile\": {\n        \"Id\": \"PPK0UOSIF5WSV\",\n        \"LastModifiedTime\": \"2019-12-10T19:05:58.296Z\",\n        \"FieldLevelEncryptionProfileConfig\": {\n            \"Name\": \"ExampleFLEProfileUpdated\",\n            \"CallerReference\": \"cli-example\",\n            \"Comment\": \"Updated FLE profile for AWS CLI example\",\n            \"EncryptionEntities\": {\n                \"Quantity\": 1,\n                \"Items\": [\n                    {\n                        \"PublicKeyId\": \"K2K8NC4HVFE3M0\",\n                        \"ProviderId\": \"ExampleFLEProvider\",\n                        \"FieldPatterns\": {\n                            \"Quantity\": 2,\n                            \"Items\": [\n                                \"ExampleSensitiveField\",\n                                \"SecondExampleSensitiveField\"\n                            ]\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}\n"
    },
    {
      "command_name": "update-function",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-function.html",
      "command_description": "Description\n\nUpdates a CloudFront function.\n\nYou can update a function’s code or the comment that describes the function. You cannot update a function’s name.\n\nTo update a function, you provide the function’s name and version (ETag value) along with the updated function code. To get the name and version, you can use ListFunctions and DescribeFunction .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-function\n--name <value>\n--if-match <value>\n--function-config <value>\n--function-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--if-match <value>",
        "--function-config <value>",
        "--function-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the function that you are updating.\n\n--if-match (string)\n\nThe current version (ETag value) of the function that you are updating, which you can get using DescribeFunction .\n\n--function-config (structure)\n\nConfiguration information about the function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nShorthand Syntax:\n\nComment=string,Runtime=string\n\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Runtime\": \"cloudfront-js-1.0\"\n}\n\n\n--function-code (blob)\n\nThe function code. For more information about writing a CloudFront function, see Writing function code for CloudFront Functions in the Amazon CloudFront Developer Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFunctionSummary -> (structure)\n\nContains configuration information and metadata about a CloudFront function.\n\nName -> (string)\n\nThe name of the CloudFront function.\n\nStatus -> (string)\n\nThe status of the CloudFront function.\n\nFunctionConfig -> (structure)\n\nContains configuration information about a CloudFront function.\n\nComment -> (string)\n\nA comment to describe the function.\n\nRuntime -> (string)\n\nThe function’s runtime environment. The only valid value is cloudfront-js-1.0 .\n\nFunctionMetadata -> (structure)\n\nContains metadata about a CloudFront function.\n\nFunctionARN -> (string)\n\nThe Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.\n\nStage -> (string)\n\nThe stage that the function is in, either DEVELOPMENT or LIVE .\n\nWhen a function is in the DEVELOPMENT stage, you can test the function with TestFunction , and update it with UpdateFunction .\n\nWhen a function is in the LIVE stage, you can attach the function to a distribution’s cache behavior, using the function’s ARN.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the function was created.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the function was most recently updated.\n\nETag -> (string)\n\nThe version identifier for the current version of the CloudFront function."
    },
    {
      "command_name": "update-key-group",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-key-group.html",
      "command_description": "Description\n\nUpdates a key group.\n\nWhen you update a key group, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update a key group:\n\nGet the current key group with GetKeyGroup or GetKeyGroupConfig .\n\nLocally modify the fields in the key group that you want to update. For example, add or remove public key IDs.\n\nCall UpdateKeyGroup with the entire key group object, including the fields that you modified and those that you didn’t.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-key-group\n--key-group-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--key-group-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--key-group-config (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nName=string,Items=string,string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"Name\": \"string\",\n  \"Items\": [\"string\", ...],\n  \"Comment\": \"string\"\n}\n\n\n--id (string)\n\nThe identifier of the key group that you are updating.\n\n--if-match (string)\n\nThe version of the key group that you are updating. The version is the key group’s ETag value.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nKeyGroup -> (structure)\n\nThe key group that was just updated.\n\nId -> (string)\n\nThe identifier for the key group.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the key group was last modified.\n\nKeyGroupConfig -> (structure)\n\nThe key group configuration.\n\nName -> (string)\n\nA name to identify the key group.\n\nItems -> (list)\n\nA list of the identifiers of the public keys in the key group.\n\n(string)\n\nComment -> (string)\n\nA comment to describe the key group. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier for this version of the key group."
    },
    {
      "command_name": "update-origin-request-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-origin-request-policy.html",
      "command_description": "Description\n\nUpdates an origin request policy configuration.\n\nWhen you update an origin request policy configuration, all the fields are updated with the values provided in the request. You cannot update some fields independent of others. To update an origin request policy configuration:\n\nUse GetOriginRequestPolicyConfig to get the current configuration.\n\nLocally modify the fields in the origin request policy configuration that you want to update.\n\nCall UpdateOriginRequestPolicy by providing the entire origin request policy configuration, including the fields that you modified and those that you didn’t.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-origin-request-policy\n--origin-request-policy-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--origin-request-policy-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--origin-request-policy-config (structure)\n\nAn origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Name\": \"string\",\n  \"HeadersConfig\": {\n    \"HeaderBehavior\": \"none\"|\"whitelist\"|\"allViewer\"|\"allViewerAndWhitelistCloudFront\",\n    \"Headers\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"CookiesConfig\": {\n    \"CookieBehavior\": \"none\"|\"whitelist\"|\"all\",\n    \"Cookies\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  },\n  \"QueryStringsConfig\": {\n    \"QueryStringBehavior\": \"none\"|\"whitelist\"|\"all\",\n    \"QueryStrings\": {\n      \"Quantity\": integer,\n      \"Items\": [\"string\", ...]\n    }\n  }\n}\n\n\n--id (string)\n\nThe unique identifier for the origin request policy that you are updating. The identifier is returned in a cache behavior’s OriginRequestPolicyId field in the response to GetDistributionConfig .\n\n--if-match (string)\n\nThe version of the origin request policy that you are updating. The version is returned in the origin request policy’s ETag field in the response to GetOriginRequestPolicyConfig .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nOriginRequestPolicy -> (structure)\n\nAn origin request policy.\n\nId -> (string)\n\nThe unique identifier for the origin request policy.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time when the origin request policy was last modified.\n\nOriginRequestPolicyConfig -> (structure)\n\nThe origin request policy configuration.\n\nComment -> (string)\n\nA comment to describe the origin request policy. The comment cannot be longer than 128 characters.\n\nName -> (string)\n\nA unique name to identify the origin request policy.\n\nHeadersConfig -> (structure)\n\nThe HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.\n\nHeaderBehavior -> (string)\n\nDetermines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – HTTP headers are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any headers that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The HTTP headers that are listed in the Headers type are included in requests that CloudFront sends to the origin.\n\nallViewer – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.\n\nallViewerAndWhitelistCloudFront – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the Headers type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.\n\nHeaders -> (structure)\n\nContains a list of HTTP header names.\n\nQuantity -> (integer)\n\nThe number of header names in the Items list.\n\nItems -> (list)\n\nA list of HTTP header names.\n\n(string)\n\nCookiesConfig -> (structure)\n\nThe cookies from viewer requests to include in origin requests.\n\nCookieBehavior -> (string)\n\nDetermines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Cookies in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any cookies that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The cookies in viewer requests that are listed in the CookieNames type are included in requests that CloudFront sends to the origin.\n\nall – All cookies in viewer requests are included in requests that CloudFront sends to the origin.\n\nCookies -> (structure)\n\nContains a list of cookie names.\n\nQuantity -> (integer)\n\nThe number of cookie names in the Items list.\n\nItems -> (list)\n\nA list of cookie names.\n\n(string)\n\nQueryStringsConfig -> (structure)\n\nThe URL query strings from viewer requests to include in origin requests.\n\nQueryStringBehavior -> (string)\n\nDetermines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:\n\nnone – Query strings in viewer requests are not included in requests that CloudFront sends to the origin. Even when this field is set to none , any query strings that are listed in a CachePolicy are included in origin requests.\n\nwhitelist – The query strings in viewer requests that are listed in the QueryStringNames type are included in requests that CloudFront sends to the origin.\n\nall – All query strings in viewer requests are included in requests that CloudFront sends to the origin.\n\nQueryStrings -> (structure)\n\nContains a list of the query strings in viewer requests that are included in requests that CloudFront sends to the origin.\n\nQuantity -> (integer)\n\nThe number of query string names in the Items list.\n\nItems -> (list)\n\nA list of query string names.\n\n(string)\n\nETag -> (string)\n\nThe current version of the origin request policy."
    },
    {
      "command_name": "update-public-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-public-key.html",
      "command_description": "Description\n\nUpdate public key information. Note that the only value you can change is the comment.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-public-key\n--public-key-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--public-key-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--public-key-config (structure)\n\nA public key configuration.\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nShorthand Syntax:\n\nCallerReference=string,Name=string,EncodedKey=string,Comment=string\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"Name\": \"string\",\n  \"EncodedKey\": \"string\",\n  \"Comment\": \"string\"\n}\n\n\n--id (string)\n\nThe identifier of the public key that you are updating.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the public key to update. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPublicKey -> (structure)\n\nThe public key.\n\nId -> (string)\n\nThe identifier of the public key.\n\nCreatedTime -> (timestamp)\n\nThe date and time when the public key was uploaded.\n\nPublicKeyConfig -> (structure)\n\nConfiguration information about a public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nCallerReference -> (string)\n\nA string included in the request to help make sure that the request can’t be replayed.\n\nName -> (string)\n\nA name to help identify the public key.\n\nEncodedKey -> (string)\n\nThe public key that you can use with signed URLs and signed cookies , or with field-level encryption .\n\nComment -> (string)\n\nA comment to describe the public key. The comment cannot be longer than 128 characters.\n\nETag -> (string)\n\nThe identifier of the current version of the public key."
    },
    {
      "command_name": "update-realtime-log-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-realtime-log-config.html",
      "command_description": "Description\n\nUpdates a real-time log configuration.\n\nWhen you update a real-time log configuration, all the parameters are updated with the values provided in the request. You cannot update some parameters independent of others. To update a real-time log configuration:\n\nCall GetRealtimeLogConfig to get the current real-time log configuration.\n\nLocally modify the parameters in the real-time log configuration that you want to update.\n\nCall this API (UpdateRealtimeLogConfig ) by providing the entire real-time log configuration, including the parameters that you modified and those that you didn’t.\n\nYou cannot update a real-time log configuration’s Name or ARN .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-realtime-log-config\n[--end-points <value>]\n[--fields <value>]\n[--name <value>]\n[--arn <value>]\n[--sampling-rate <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--end-points <value>]",
        "[--fields <value>]",
        "[--name <value>]",
        "[--arn <value>]",
        "[--sampling-rate <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--end-points (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nShorthand Syntax:\n\nStreamType=string,KinesisStreamConfig={RoleARN=string,StreamARN=string} ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"StreamType\": \"string\",\n    \"KinesisStreamConfig\": {\n      \"RoleARN\": \"string\",\n      \"StreamARN\": \"string\"\n    }\n  }\n  ...\n]\n\n\n--fields (list)\n\nA list of fields to include in each real-time log record.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--name (string)\n\nThe name for this real-time log configuration.\n\n--arn (string)\n\nThe Amazon Resource Name (ARN) for this real-time log configuration.\n\n--sampling-rate (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRealtimeLogConfig -> (structure)\n\nA real-time log configuration.\n\nARN -> (string)\n\nThe Amazon Resource Name (ARN) of this real-time log configuration.\n\nName -> (string)\n\nThe unique name of this real-time log configuration.\n\nSamplingRate -> (long)\n\nThe sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.\n\nEndPoints -> (list)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.\n\n(structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.\n\nStreamType -> (string)\n\nThe type of data stream where you are sending real-time log data. The only valid value is Kinesis .\n\nKinesisStreamConfig -> (structure)\n\nContains information about the Amazon Kinesis data stream where you are sending real-time log data.\n\nRoleARN -> (string)\n\nThe Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.\n\nFor more information the IAM role, see Real-time log configuration IAM role in the Amazon CloudFront Developer Guide .\n\nStreamARN -> (string)\n\nThe Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.\n\nFields -> (list)\n\nA list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.\n\nFor more information about fields, see Real-time log configuration fields in the Amazon CloudFront Developer Guide .\n\n(string)"
    },
    {
      "command_name": "update-streaming-distribution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/update-streaming-distribution.html",
      "command_description": "Description\n\nUpdate a streaming distribution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-streaming-distribution\n--streaming-distribution-config <value>\n--id <value>\n[--if-match <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--streaming-distribution-config <value>",
        "--id <value>",
        "[--if-match <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--streaming-distribution-config (structure)\n\nThe streaming distribution’s configuration information.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nShorthand Syntax:\n\nCallerReference=string,S3Origin={DomainName=string,OriginAccessIdentity=string},Aliases={Quantity=integer,Items=[string,string]},Comment=string,Logging={Enabled=boolean,Bucket=string,Prefix=string},TrustedSigners={Enabled=boolean,Quantity=integer,Items=[string,string]},PriceClass=string,Enabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"CallerReference\": \"string\",\n  \"S3Origin\": {\n    \"DomainName\": \"string\",\n    \"OriginAccessIdentity\": \"string\"\n  },\n  \"Aliases\": {\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"Comment\": \"string\",\n  \"Logging\": {\n    \"Enabled\": true|false,\n    \"Bucket\": \"string\",\n    \"Prefix\": \"string\"\n  },\n  \"TrustedSigners\": {\n    \"Enabled\": true|false,\n    \"Quantity\": integer,\n    \"Items\": [\"string\", ...]\n  },\n  \"PriceClass\": \"PriceClass_100\"|\"PriceClass_200\"|\"PriceClass_All\",\n  \"Enabled\": true|false\n}\n\n\n--id (string)\n\nThe streaming distribution’s id.\n\n--if-match (string)\n\nThe value of the ETag header that you received when retrieving the streaming distribution’s configuration. For example: E2QWRUHAPOMQZL .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStreamingDistribution -> (structure)\n\nThe streaming distribution’s information.\n\nId -> (string)\n\nThe identifier for the RTMP distribution. For example: EGTXBD79EXAMPLE .\n\nARN -> (string)\n\nThe ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5 , where 123456789012 is your account ID.\n\nStatus -> (string)\n\nThe current status of the RTMP distribution. When the status is Deployed , the distribution’s information is propagated to all CloudFront edge locations.\n\nLastModifiedTime -> (timestamp)\n\nThe date and time that the distribution was last modified.\n\nDomainName -> (string)\n\nThe domain name that corresponds to the streaming distribution, for example, s5c39gqb8ow64r.cloudfront.net .\n\nActiveTrustedSigners -> (structure)\n\nA complex type that lists the accounts, if any, that you included in the TrustedSigners complex type for this distribution. These are the accounts that you want to allow to create signed URLs for private content.\n\nThe Signer complex type lists the account number of the trusted signer or self if the signer is the account that created the distribution. The Signer element also includes the IDs of any active CloudFront key pairs that are associated with the trusted signer’s account. If no KeyPairId element appears for a Signer , that signer can’t create signed URLs.\n\nFor more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts in the list have active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of accounts and the identifiers of active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\n(structure)\n\nA list of accounts and the active CloudFront key pairs in each account that CloudFront can use to verify the signatures of signed URLs and signed cookies.\n\nAwsAccountNumber -> (string)\n\nAn account number that contains active CloudFront key pairs that CloudFront can use to verify the signatures of signed URLs and signed cookies. If the account that owns the key pairs is the same account that owns the CloudFront distribution, the value of this field is self .\n\nKeyPairIds -> (structure)\n\nA list of CloudFront key pair identifiers.\n\nQuantity -> (integer)\n\nThe number of key pair identifiers in the list.\n\nItems -> (list)\n\nA list of CloudFront key pair identifiers.\n\n(string)\n\nStreamingDistributionConfig -> (structure)\n\nThe current configuration information for the RTMP distribution.\n\nCallerReference -> (string)\n\nA unique value (for example, a date-time stamp) that ensures that the request can’t be replayed.\n\nIf the value of CallerReference is new (regardless of the content of the StreamingDistributionConfig object), CloudFront creates a new distribution.\n\nIf CallerReference is a value that you already sent in a previous request to create a distribution, CloudFront returns a DistributionAlreadyExists error.\n\nS3Origin -> (structure)\n\nA complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.\n\nDomainName -> (string)\n\nThe DNS name of the Amazon S3 origin.\n\nOriginAccessIdentity -> (string)\n\nThe CloudFront origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an Amazon S3 bucket through CloudFront.\n\nIf you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element.\n\nTo delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element.\n\nTo replace the origin access identity, update the distribution configuration and specify the new origin access identity.\n\nFor more information, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content in the Amazon CloudFront Developer Guide .\n\nAliases -> (structure)\n\nA complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.\n\nQuantity -> (integer)\n\nThe number of CNAME aliases, if any, that you want to associate with this distribution.\n\nItems -> (list)\n\nA complex type that contains the CNAME aliases, if any, that you want to associate with this distribution.\n\n(string)\n\nComment -> (string)\n\nAny comments you want to include about the streaming distribution.\n\nLogging -> (structure)\n\nA complex type that controls whether access logs are written for the streaming distribution.\n\nEnabled -> (boolean)\n\nSpecifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you don’t want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled , and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix , the values are automatically deleted.\n\nBucket -> (string)\n\nThe Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com .\n\nPrefix -> (string)\n\nAn optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/ . If you want to enable logging, but you don’t want to specify a prefix, you still must include an empty Prefix element in the Logging element.\n\nTrustedSigners -> (structure)\n\nA complex type that specifies any accounts that you want to permit to create signed URLs for private content. If you want the distribution to use signed URLs, include this element; if you want the distribution to use public URLs, remove this element. For more information, see Serving Private Content through CloudFront in the Amazon CloudFront Developer Guide .\n\nEnabled -> (boolean)\n\nThis field is true if any of the accounts have public keys that CloudFront can use to verify the signatures of signed URLs and signed cookies. If not, this field is false .\n\nQuantity -> (integer)\n\nThe number of accounts in the list.\n\nItems -> (list)\n\nA list of account identifiers.\n\n(string)\n\nPriceClass -> (string)\n\nA complex type that contains information about price class for this streaming distribution.\n\nEnabled -> (boolean)\n\nWhether the streaming distribution is enabled to accept user requests for content.\n\nETag -> (string)\n\nThe current version of the configuration. For example: E2QWRUHAPOMQZL ."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudfront/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nThis is the Amazon CloudFront API Reference . This guide is for developers who need detailed information about CloudFront API actions, data types, and errors. For detailed information about CloudFront features, see the Amazon CloudFront Developer Guide ."
}