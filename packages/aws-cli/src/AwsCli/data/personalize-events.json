{
  "service_name": "personalize-events",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-events/index.html",
  "service_commands": [
    {
      "command_name": "put-events",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-events/put-events.html",
      "command_description": "Description\n\nRecords user interaction event data. For more information see Recording Events .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-events\n--tracking-id <value>\n[--user-id <value>]\n--session-id <value>\n--event-list <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--tracking-id <value>",
        "[--user-id <value>]",
        "--session-id <value>",
        "--event-list <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tracking-id (string)\n\nThe tracking ID for the event. The ID is generated by a call to the CreateEventTracker API.\n\n--user-id (string)\n\nThe user associated with the event.\n\n--session-id (string)\n\nThe session ID associated with the user’s visit. Your application generates the sessionId when a user first visits your website or uses your application. Amazon Personalize uses the sessionId to associate events with the user before they log in. For more information, see Recording Events .\n\n--event-list (list)\n\nA list of event data from the session.\n\n(structure)\n\nRepresents user interaction event information sent using the PutEvents API.\n\neventId -> (string)\n\nAn ID associated with the event. If an event ID is not provided, Amazon Personalize generates a unique ID for the event. An event ID is not used as an input to the model. Amazon Personalize uses the event ID to distinquish unique events. Any subsequent events after the first with the same event ID are not used in model training.\n\neventType -> (string)\n\nThe type of event, such as click or download. This property corresponds to the EVENT_TYPE field of your Interactions schema and depends on the types of events you are tracking.\n\neventValue -> (float)\n\nThe event value that corresponds to the EVENT_VALUE field of the Interactions schema.\n\nitemId -> (string)\n\nThe item ID key that corresponds to the ITEM_ID field of the Interactions schema.\n\nproperties -> (string)\n\nA string map of event-specific data that you might choose to record. For example, if a user rates a movie on your site, other than movie ID (itemId ) and rating (eventValue ) , you might also send the number of movie ratings made by the user.\n\nEach item in the map consists of a key-value pair. For example,\n\n{\"numberOfRatings\": \"12\"}\n\nThe keys use camel case names that match the fields in the Interactions schema. In the above example, the numberOfRatings would match the ‘NUMBER_OF_RATINGS’ field defined in the Interactions schema.\n\nsentAt -> (timestamp)\n\nThe timestamp (in Unix time) on the client side when the event occurred.\n\nrecommendationId -> (string)\n\nThe ID of the recommendation.\n\nimpression -> (list)\n\nA list of item IDs that represents the sequence of items you have shown the user. For example, [\"itemId1\", \"itemId2\", \"itemId3\"] .\n\n(string)\n\nShorthand Syntax:\n\neventId=string,eventType=string,eventValue=float,itemId=string,properties=string,sentAt=timestamp,recommendationId=string,impression=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"eventId\": \"string\",\n    \"eventType\": \"string\",\n    \"eventValue\": float,\n    \"itemId\": \"string\",\n    \"properties\": \"string\",\n    \"sentAt\": timestamp,\n    \"recommendationId\": \"string\",\n    \"impression\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-items",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-events/put-items.html",
      "command_description": "Description\n\nAdds one or more items to an Items dataset. For more information see Importing Items Incrementally .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-items\n--dataset-arn <value>\n--items <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-arn <value>",
        "--items <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-arn (string)\n\nThe Amazon Resource Name (ARN) of the Items dataset you are adding the item or items to.\n\n--items (list)\n\nA list of item data.\n\n(structure)\n\nRepresents item metadata added to an Items dataset using the PutItems API. For more information see Importing Items Incrementally .\n\nitemId -> (string)\n\nThe ID associated with the item.\n\nproperties -> (string)\n\nA string map of item-specific metadata. Each element in the map consists of a key-value pair. For example, {\"numberOfRatings\": \"12\"} .\n\nThe keys use camel case names that match the fields in the schema for the Items dataset. In the previous example, the numberOfRatings matches the ‘NUMBER_OF_RATINGS’ field defined in the Items schema. For categorical string data, to include multiple categories for a single item, separate each category with a pipe separator (| ). For example, \\\"Horror|Action\\\" .\n\nShorthand Syntax:\n\nitemId=string,properties=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"itemId\": \"string\",\n    \"properties\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-users",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-events/put-users.html",
      "command_description": "Description\n\nAdds one or more users to a Users dataset. For more information see Importing Users Incrementally .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-users\n--dataset-arn <value>\n--users <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--dataset-arn <value>",
        "--users <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dataset-arn (string)\n\nThe Amazon Resource Name (ARN) of the Users dataset you are adding the user or users to.\n\n--users (list)\n\nA list of user data.\n\n(structure)\n\nRepresents user metadata added to a Users dataset using the PutUsers API. For more information see Importing Users Incrementally .\n\nuserId -> (string)\n\nThe ID associated with the user.\n\nproperties -> (string)\n\nA string map of user-specific metadata. Each element in the map consists of a key-value pair. For example, {\"numberOfVideosWatched\": \"45\"} .\n\nThe keys use camel case names that match the fields in the schema for the Users dataset. In the previous example, the numberOfVideosWatched matches the ‘NUMBER_OF_VIDEOS_WATCHED’ field defined in the Users schema. For categorical string data, to include multiple categories for a single user, separate each category with a pipe separator (| ). For example, \\\"Member|Frequent shopper\\\" .\n\nShorthand Syntax:\n\nuserId=string,properties=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"userId\": \"string\",\n    \"properties\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAmazon Personalize can consume real-time user event data, such as stream or click data, and use it for model training either alone or combined with historical data. For more information see Recording Events ."
}