{
  "service_name": "codepipeline",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/index.html",
  "service_commands": [
    {
      "command_name": "acknowledge-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/acknowledge-job.html",
      "command_description": "Description\n\nReturns information about a specified job and whether that job has been received by the job worker. Used for custom actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  acknowledge-job\n--job-id <value>\n--nonce <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--nonce <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID of the job for which you want to confirm receipt.\n\n--nonce (string)\n\nA system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response of the PollForJobs request that returned this job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nWhether the job worker has received the specified job.",
      "command_examples": "Examples\n\nTo retrieve information about a specified job\n\nThis example returns information about a specified job, including the status of that job if it exists. This is only used for job workers and custom actions. To determine the value of nonce and the job ID, use aws codepipeline poll-for-jobs.\n\nCommand:\n\naws codepipeline acknowledge-job --job-id f4f4ff82-2d11-EXAMPLE --nonce 3\n\n\nOutput:\n\n{\n  \"status\": \"InProgress\"\n}\n"
    },
    {
      "command_name": "acknowledge-third-party-job",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/acknowledge-third-party-job.html",
      "command_description": "Description\n\nConfirms a job worker has received the specified job. Used for partner actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  acknowledge-third-party-job\n--job-id <value>\n--nonce <value>\n--client-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--nonce <value>",
        "--client-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID of the job.\n\n--nonce (string)\n\nA system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Get this number from the response to a GetThirdPartyJobDetails request.\n\n--client-token (string)\n\nThe clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstatus -> (string)\n\nThe status information for the third party job, if any."
    },
    {
      "command_name": "create-custom-action-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/create-custom-action-type.html",
      "command_description": "Description\n\nCreates a new custom action that can be used in all pipelines associated with the AWS account. Only used for custom actions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-custom-action-type\n--category <value>\n--provider <value>\n[--settings <value>]\n[--configuration-properties <value>]\n--input-artifact-details <value>\n--output-artifact-details <value>\n[--tags <value>]\n--action-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--category <value>",
        "--provider <value>",
        "[--settings <value>]",
        "[--configuration-properties <value>]",
        "--input-artifact-details <value>",
        "--output-artifact-details <value>",
        "[--tags <value>]",
        "--action-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--category (string)\n\nThe category of the custom action, such as a build action or a test action.\n\nPossible values:\n\nSource\n\nBuild\n\nDeploy\n\nTest\n\nInvoke\n\nApproval\n\n--provider (string)\n\nThe provider of the service used in the custom action, such as AWS CodeDeploy.\n\n--settings (structure)\n\nURLs that provide users information about this custom action.\n\nthirdPartyConfigurationUrl -> (string)\n\nThe URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.\n\nentityUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.\n\nexecutionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.\n\nrevisionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.\n\nShorthand Syntax:\n\nthirdPartyConfigurationUrl=string,entityUrlTemplate=string,executionUrlTemplate=string,revisionUrlTemplate=string\n\n\nJSON Syntax:\n\n{\n  \"thirdPartyConfigurationUrl\": \"string\",\n  \"entityUrlTemplate\": \"string\",\n  \"executionUrlTemplate\": \"string\",\n  \"revisionUrlTemplate\": \"string\"\n}\n\n\n--configuration-properties (list)\n\nThe configuration properties for the custom action.\n\nNote\n\nYou can refer to a name in the configuration properties of the custom action within the URL templates by following the format of {Config:name}, as long as the configuration property is both required and not secret. For more information, see Create a Custom Action for a Pipeline .\n\n(structure)\n\nRepresents information about an action configuration property.\n\nname -> (string)\n\nThe name of the action configuration property.\n\nrequired -> (boolean)\n\nWhether the configuration property is a required value.\n\nkey -> (boolean)\n\nWhether the configuration property is a key.\n\nsecret -> (boolean)\n\nWhether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails , GetThirdPartyJobDetails , PollForJobs , and PollForThirdPartyJobs .\n\nWhen updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.\n\nqueryable -> (boolean)\n\nIndicates that the property is used with PollForJobs . When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.\n\nIf you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.\n\ndescription -> (string)\n\nThe description of the action configuration property that is displayed to users.\n\ntype -> (string)\n\nThe type of the configuration property.\n\nShorthand Syntax:\n\nname=string,required=boolean,key=boolean,secret=boolean,queryable=boolean,description=string,type=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"required\": true|false,\n    \"key\": true|false,\n    \"secret\": true|false,\n    \"queryable\": true|false,\n    \"description\": \"string\",\n    \"type\": \"String\"|\"Number\"|\"Boolean\"\n  }\n  ...\n]\n\n\n--input-artifact-details (structure)\n\nThe details of the input artifact for the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\nShorthand Syntax:\n\nminimumCount=integer,maximumCount=integer\n\n\nJSON Syntax:\n\n{\n  \"minimumCount\": integer,\n  \"maximumCount\": integer\n}\n\n\n--output-artifact-details (structure)\n\nThe details of the output artifact of the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\nShorthand Syntax:\n\nminimumCount=integer,maximumCount=integer\n\n\nJSON Syntax:\n\n{\n  \"minimumCount\": integer,\n  \"maximumCount\": integer\n}\n\n\n--tags (list)\n\nThe tags for the custom action.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--action-version (string)\n\nThe version identifier of the custom action.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactionType -> (structure)\n\nReturns information about the details of an action type.\n\nid -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nsettings -> (structure)\n\nThe settings for the action type.\n\nthirdPartyConfigurationUrl -> (string)\n\nThe URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.\n\nentityUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.\n\nexecutionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.\n\nrevisionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.\n\nactionConfigurationProperties -> (list)\n\nThe configuration properties for the action type.\n\n(structure)\n\nRepresents information about an action configuration property.\n\nname -> (string)\n\nThe name of the action configuration property.\n\nrequired -> (boolean)\n\nWhether the configuration property is a required value.\n\nkey -> (boolean)\n\nWhether the configuration property is a key.\n\nsecret -> (boolean)\n\nWhether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails , GetThirdPartyJobDetails , PollForJobs , and PollForThirdPartyJobs .\n\nWhen updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.\n\nqueryable -> (boolean)\n\nIndicates that the property is used with PollForJobs . When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.\n\nIf you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.\n\ndescription -> (string)\n\nThe description of the action configuration property that is displayed to users.\n\ntype -> (string)\n\nThe type of the configuration property.\n\ninputArtifactDetails -> (structure)\n\nThe details of the input artifact for the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\noutputArtifactDetails -> (structure)\n\nThe details of the output artifact of the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\ntags -> (list)\n\nSpecifies the tags applied to the custom action.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo create a custom action\n\nThis example creates a custom action for AWS CodePipeline using an already-created JSON file (here named MyCustomAction.json) that contains the structure of the custom action. For more information about the requirements for creating a custom action, including the structure of the file, see the AWS CodePipeline User Guide.\n\naws codepipeline create-custom-action-type --cli-input-json file://MyCustomAction.json\n\n\nContents of JSON file MyCustomAction.json:\n\n{\n    \"category\": \"Build\",\n    \"provider\": \"MyJenkinsProviderName\",\n    \"version\": \"1\",\n    \"settings\": {\n        \"entityUrlTemplate\": \"https://192.0.2.4/job/{Config:ProjectName}/\",\n        \"executionUrlTemplate\": \"https://192.0.2.4/job/{Config:ProjectName}/lastSuccessfulBuild/{ExternalExecutionId}/\"\n    },\n    \"configurationProperties\": [\n        {\n            \"name\": \"MyJenkinsExampleBuildProject\",\n            \"required\": true,\n            \"key\": true,\n            \"secret\": false,\n            \"queryable\": false,\n            \"description\": \"The name of the build project must be provided when this action is added to the pipeline.\",\n            \"type\": \"String\"\n        }\n    ],\n    \"inputArtifactDetails\": {\n        \"maximumCount\": 1,\n        \"minimumCount\": 0\n    },\n    \"outputArtifactDetails\": {\n        \"maximumCount\": 1,\n        \"minimumCount\": 0\n    }\n}\n\n\nThis command returns the structure of the custom action."
    },
    {
      "command_name": "create-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/create-pipeline.html",
      "command_description": "Description\n\nCreates a pipeline.\n\nNote\n\nIn the pipeline structure, you must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-pipeline\n--pipeline <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline (structure)\n\nRepresents the structure of actions and stages to be performed in the pipeline.\n\nname -> (string)\n\nThe name of the pipeline.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn , or to use to assume roles for actions with an actionRoleArn .\n\nartifactStore -> (structure)\n\nRepresents information about the S3 bucket where artifacts are stored for the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nartifactStores -> (map)\n\nA mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe S3 bucket where artifacts for the pipeline are stored.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nstages -> (list)\n\nThe stage in which to perform the action.\n\n(structure)\n\nRepresents information about a stage and its definition.\n\nname -> (string)\n\nThe name of the stage.\n\nblockers -> (list)\n\nReserved for future use.\n\n(structure)\n\nReserved for future use.\n\nname -> (string)\n\nReserved for future use.\n\ntype -> (string)\n\nReserved for future use.\n\nactions -> (list)\n\nThe actions included in a stage.\n\n(structure)\n\nRepresents information about an action declaration.\n\nname -> (string)\n\nThe action declaration’s name.\n\nactionTypeId -> (structure)\n\nSpecifies the action type and the provider of the action.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nrunOrder -> (integer)\n\nThe order in which actions are run.\n\nconfiguration -> (map)\n\nThe action’s configuration. These are key-value pairs that specify input values for an action. For more information, see Action Structure Requirements in CodePipeline . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see Configuration Properties Reference in the AWS CloudFormation User Guide . For template snippets with examples, see Using Parameter Override Functions with CodePipeline Pipelines in the AWS CloudFormation User Guide .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\nJSON:\n\n\"Configuration\" : { Key : Value },\n\nkey -> (string)\n\nvalue -> (string)\n\noutputArtifacts -> (list)\n\nThe name or ID of the result of the action declaration, such as a test or build artifact.\n\n(structure)\n\nRepresents information about the output of an action.\n\nname -> (string)\n\nThe name of the output of an artifact, such as “My App”.\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.\n\ninputArtifacts -> (list)\n\nThe name or ID of the artifact consumed by the action, such as a test or build artifact.\n\n(structure)\n\nRepresents information about an artifact to be worked on, such as a test or build artifact.\n\nname -> (string)\n\nThe name of the artifact to be worked on (for example, “My App”).\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe action declaration’s AWS Region, such as us-east-1.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\nversion -> (integer)\n\nThe version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.\n\nJSON Syntax:\n\n{\n  \"name\": \"string\",\n  \"roleArn\": \"string\",\n  \"artifactStore\": {\n    \"type\": \"S3\",\n    \"location\": \"string\",\n    \"encryptionKey\": {\n      \"id\": \"string\",\n      \"type\": \"KMS\"\n    }\n  },\n  \"artifactStores\": {\"string\": {\n        \"type\": \"S3\",\n        \"location\": \"string\",\n        \"encryptionKey\": {\n          \"id\": \"string\",\n          \"type\": \"KMS\"\n        }\n      }\n    ...},\n  \"stages\": [\n    {\n      \"name\": \"string\",\n      \"blockers\": [\n        {\n          \"name\": \"string\",\n          \"type\": \"Schedule\"\n        }\n        ...\n      ],\n      \"actions\": [\n        {\n          \"name\": \"string\",\n          \"actionTypeId\": {\n            \"category\": \"Source\"|\"Build\"|\"Deploy\"|\"Test\"|\"Invoke\"|\"Approval\",\n            \"owner\": \"AWS\"|\"ThirdParty\"|\"Custom\",\n            \"provider\": \"string\",\n            \"version\": \"string\"\n          },\n          \"runOrder\": integer,\n          \"configuration\": {\"string\": \"string\"\n            ...},\n          \"outputArtifacts\": [\n            {\n              \"name\": \"string\"\n            }\n            ...\n          ],\n          \"inputArtifacts\": [\n            {\n              \"name\": \"string\"\n            }\n            ...\n          ],\n          \"roleArn\": \"string\",\n          \"region\": \"string\",\n          \"namespace\": \"string\"\n        }\n        ...\n      ]\n    }\n    ...\n  ],\n  \"version\": integer\n}\n\n\n--tags (list)\n\nThe tags for the pipeline.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipeline -> (structure)\n\nRepresents the structure of actions and stages to be performed in the pipeline.\n\nname -> (string)\n\nThe name of the pipeline.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn , or to use to assume roles for actions with an actionRoleArn .\n\nartifactStore -> (structure)\n\nRepresents information about the S3 bucket where artifacts are stored for the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nartifactStores -> (map)\n\nA mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe S3 bucket where artifacts for the pipeline are stored.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nstages -> (list)\n\nThe stage in which to perform the action.\n\n(structure)\n\nRepresents information about a stage and its definition.\n\nname -> (string)\n\nThe name of the stage.\n\nblockers -> (list)\n\nReserved for future use.\n\n(structure)\n\nReserved for future use.\n\nname -> (string)\n\nReserved for future use.\n\ntype -> (string)\n\nReserved for future use.\n\nactions -> (list)\n\nThe actions included in a stage.\n\n(structure)\n\nRepresents information about an action declaration.\n\nname -> (string)\n\nThe action declaration’s name.\n\nactionTypeId -> (structure)\n\nSpecifies the action type and the provider of the action.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nrunOrder -> (integer)\n\nThe order in which actions are run.\n\nconfiguration -> (map)\n\nThe action’s configuration. These are key-value pairs that specify input values for an action. For more information, see Action Structure Requirements in CodePipeline . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see Configuration Properties Reference in the AWS CloudFormation User Guide . For template snippets with examples, see Using Parameter Override Functions with CodePipeline Pipelines in the AWS CloudFormation User Guide .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\nJSON:\n\n\"Configuration\" : { Key : Value },\n\nkey -> (string)\n\nvalue -> (string)\n\noutputArtifacts -> (list)\n\nThe name or ID of the result of the action declaration, such as a test or build artifact.\n\n(structure)\n\nRepresents information about the output of an action.\n\nname -> (string)\n\nThe name of the output of an artifact, such as “My App”.\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.\n\ninputArtifacts -> (list)\n\nThe name or ID of the artifact consumed by the action, such as a test or build artifact.\n\n(structure)\n\nRepresents information about an artifact to be worked on, such as a test or build artifact.\n\nname -> (string)\n\nThe name of the artifact to be worked on (for example, “My App”).\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe action declaration’s AWS Region, such as us-east-1.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\nversion -> (integer)\n\nThe version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.\n\ntags -> (list)\n\nSpecifies the tags applied to the pipeline.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo create a pipeline\n\nThis example creates a pipeline in AWS CodePipeline using an already-created JSON file (here named MySecondPipeline.json) that contains the structure of the pipeline. For more information about the requirements for creating a pipeline, including the structure of the file, see the AWS CodePipeline User Guide.\n\nCommand:\n\naws codepipeline create-pipeline --cli-input-json file://MySecondPipeline.json\n\n\nJSON file sample contents:\n\n{\n \"pipeline\": {\n  \"roleArn\": \"arn:aws:iam::111111111111:role/AWS-CodePipeline-Service\",\n  \"stages\": [\n    {\n      \"name\": \"Source\",\n      \"actions\": [\n        {\n          \"inputArtifacts\": [],\n          \"name\": \"Source\",\n          \"actionTypeId\": {\n            \"category\": \"Source\",\n            \"owner\": \"AWS\",\n            \"version\": \"1\",\n            \"provider\": \"S3\"\n          },\n          \"outputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"configuration\": {\n            \"S3Bucket\": \"awscodepipeline-demo-bucket\",\n            \"S3ObjectKey\": \"aws-codepipeline-s3-aws-codedeploy_linux.zip\"\n          },\n          \"runOrder\": 1\n        }\n      ]\n    },\n    {\n      \"name\": \"Beta\",\n      \"actions\": [\n        {\n          \"inputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"name\": \"CodePipelineDemoFleet\",\n          \"actionTypeId\": {\n            \"category\": \"Deploy\",\n            \"owner\": \"AWS\",\n            \"version\": \"1\",\n            \"provider\": \"CodeDeploy\"\n          },\n          \"outputArtifacts\": [],\n          \"configuration\": {\n            \"ApplicationName\": \"CodePipelineDemoApplication\",\n            \"DeploymentGroupName\": \"CodePipelineDemoFleet\"\n          },\n          \"runOrder\": 1\n        }\n      ]\n    }\n  ],\n  \"artifactStore\": {\n    \"type\": \"S3\",\n    \"location\": \"codepipeline-us-east-1-11EXAMPLE11\"\n  },\n  \"name\": \"MySecondPipeline\",\n  \"version\": 1\n }\n}\n\n\nOutput:\n\nThis command returns the structure of the pipeline.\n"
    },
    {
      "command_name": "delete-custom-action-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/delete-custom-action-type.html",
      "command_description": "Description\n\nMarks a custom action as deleted. PollForJobs for the custom action fails after the action is marked for deletion. Used for custom actions only.\n\nWarning\n\nTo re-create a custom action after it has been deleted you must use a string in the version field that has never been used before. This string can be an incremented version number, for example. To restore a deleted custom action, use a JSON file that is identical to the deleted action, including the original string in the version field.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-custom-action-type\n--category <value>\n--provider <value>\n--action-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--category <value>",
        "--provider <value>",
        "--action-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--category (string)\n\nThe category of the custom action that you want to delete, such as source or deploy.\n\nPossible values:\n\nSource\n\nBuild\n\nDeploy\n\nTest\n\nInvoke\n\nApproval\n\n--provider (string)\n\nThe provider of the service used in the custom action, such as AWS CodeDeploy.\n\n--action-version (string)\n\nThe version of the custom action to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a custom action\n\nThis example deletes a custom action in AWS CodePipeline by using an already-created JSON file (here named DeleteMyCustomAction.json) that contains the action type, provider name, and version number of the action to be deleted. Use the list-action-types command to view the correct values for category, version, and provider.\n\nCommand:\n\naws codepipeline delete-custom-action-type --cli-input-json file://DeleteMyCustomAction.json\n\n\nJSON file sample contents:\n\n{\n  \"category\": \"Build\",\n  \"version\": \"1\",\n  \"provider\": \"MyJenkinsProviderName\"\n}\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "delete-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/delete-pipeline.html",
      "command_description": "Description\n\nDeletes the specified pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-pipeline\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the pipeline to be deleted.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a pipeline\n\nThis example deletes a pipeline named MySecondPipeline from AWS CodePipeline. Use the list-pipelines command to view a list of pipelines associated with your AWS account.\n\nCommand:\n\naws codepipeline delete-pipeline --name MySecondPipeline\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "delete-webhook",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/delete-webhook.html",
      "command_description": "Description\n\nDeletes a previously created webhook by name. Deleting the webhook stops AWS CodePipeline from starting a pipeline every time an external event occurs. The API returns successfully when trying to delete a webhook that is already deleted. If a deleted webhook is re-created by calling PutWebhook with the same name, it will have a different URL.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-webhook\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the webhook you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a webhook\n\nThe following delete-webhook example deletes a webhook for a GitHub version 1 source action. You must use the deregister-webhook-with-third-party command to deregister the webhook before you delete it.\n\naws codepipeline delete-webhook \\\n    --name my-webhook\n\n\nThis command produces no output.\n\nFor more information, see Delete the webhook for your GitHub source in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "deregister-webhook-with-third-party",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/deregister-webhook-with-third-party.html",
      "command_description": "Description\n\nRemoves the connection between the webhook that was created by CodePipeline and the external tool with events to be detected. Currently supported only for webhooks that target an action type of GitHub.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deregister-webhook-with-third-party\n[--webhook-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--webhook-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--webhook-name (string)\n\nThe name of the webhook you want to deregister.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo deregister a webhook\n\nThe following deregister-webhook-with-third-party example deletes a webhook for a GitHub version 1 source action. You must deregister the webhook before you delete it.\n\naws codepipeline deregister-webhook-with-third-party \\\n    --webhook-name my-webhook\n\n\nThis command produces no output.\n\nFor more information, see Delete the webhook for your GitHub source in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "disable-stage-transition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/disable-stage-transition.html",
      "command_description": "Description\n\nPrevents artifacts in a pipeline from transitioning to the next stage in the pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disable-stage-transition\n--pipeline-name <value>\n--stage-name <value>\n--transition-type <value>\n--reason <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--stage-name <value>",
        "--transition-type <value>",
        "--reason <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline in which you want to disable the flow of artifacts from one stage to another.\n\n--stage-name (string)\n\nThe name of the stage where you want to disable the inbound or outbound transition of artifacts.\n\n--transition-type (string)\n\nSpecifies whether artifacts are prevented from transitioning into the stage and being processed by the actions in that stage (inbound), or prevented from transitioning from the stage after they have been processed by the actions in that stage (outbound).\n\nPossible values:\n\nInbound\n\nOutbound\n\n--reason (string)\n\nThe reason given to the user that a stage is disabled, such as waiting for manual approval or manual tests. This message is displayed in the pipeline console UI.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo disable a transition to a stage in a pipeline\n\nThis example disables transitions into the Beta stage of the MyFirstPipeline pipeline in AWS CodePipeline.\n\nCommand:\n\naws codepipeline disable-stage-transition --pipeline-name MyFirstPipeline --stage-name Beta  --transition-type Inbound\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "enable-stage-transition",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/enable-stage-transition.html",
      "command_description": "Description\n\nEnables artifacts in a pipeline to transition to a stage in a pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-stage-transition\n--pipeline-name <value>\n--stage-name <value>\n--transition-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--stage-name <value>",
        "--transition-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline in which you want to enable the flow of artifacts from one stage to another.\n\n--stage-name (string)\n\nThe name of the stage where you want to enable the transition of artifacts, either into the stage (inbound) or from that stage to the next stage (outbound).\n\n--transition-type (string)\n\nSpecifies whether artifacts are allowed to enter the stage and be processed by the actions in that stage (inbound) or whether already processed artifacts are allowed to transition to the next stage (outbound).\n\nPossible values:\n\nInbound\n\nOutbound\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo enable a transition to a stage in a pipeline\n\nThis example enables transitions into the Beta stage of the MyFirstPipeline pipeline in AWS CodePipeline.\n\nCommand:\n\naws codepipeline enable-stage-transition --pipeline-name MyFirstPipeline --stage-name Beta  --transition-type Inbound\n\n\nOutput:\n\nNone.\n"
    },
    {
      "command_name": "get-action-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-action-type.html",
      "command_description": "Description\n\nReturns information about an action type created for an external provider, where the action is to be used by customers of the external provider. The action can be created with any supported integration model.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-action-type\n--category <value>\n--owner <value>\n--provider <value>\n--action-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--category <value>",
        "--owner <value>",
        "--provider <value>",
        "--action-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--category (string)\n\nDefines what kind of action can be taken in the stage. The following are the valid values:\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nApproval\n\nInvoke\n\nPossible values:\n\nSource\n\nBuild\n\nDeploy\n\nTest\n\nInvoke\n\nApproval\n\n--owner (string)\n\nThe creator of an action type that was created with any supported integration model. There are two valid values: AWS and ThirdParty .\n\n--provider (string)\n\nThe provider of the action type being called. The provider name is specified when the action type is created.\n\n--action-version (string)\n\nA string that describes the action type version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactionType -> (structure)\n\nThe action type information for the requested action type, such as the action type ID.\n\ndescription -> (string)\n\nThe description for the action type to be updated.\n\nexecutor -> (structure)\n\nInformation about the executor for an action type that was created with any supported integration model.\n\nconfiguration -> (structure)\n\nThe action configuration properties for the action type. These properties are specified in the action definition when the action type is created.\n\nlambdaExecutorConfiguration -> (structure)\n\nDetails about the Lambda executor of the action type.\n\nlambdaFunctionArn -> (string)\n\nThe ARN of the Lambda function used by the action engine.\n\njobWorkerExecutorConfiguration -> (structure)\n\nDetails about the JobWorker executor of the action type.\n\npollingAccounts -> (list)\n\nThe accounts in which the job worker is configured and might poll for jobs as part of the action execution.\n\n(string)\n\npollingServicePrincipals -> (list)\n\nThe service Principals in which the job worker is configured and might poll for jobs as part of the action execution.\n\n(string)\n\ntype -> (string)\n\nThe integration model used to create and update the action type, Lambda or JobWorker .\n\npolicyStatementsTemplate -> (string)\n\nThe policy statement that specifies the permissions in the CodePipeline customer’s account that are needed to successfully run an action.\n\nTo grant permission to another account, specify the account ID as the Principal, a domain-style identifier defined by the service, for example codepipeline.amazonaws.com .\n\nNote\n\nThe size of the passed JSON policy document cannot exceed 2048 characters.\n\njobTimeout -> (integer)\n\nThe timeout in seconds for the job. An action execution can have multiple jobs. This is the timeout for a single job, not the entire action execution.\n\nid -> (structure)\n\nThe action category, owner, provider, and version of the action type to be updated.\n\ncategory -> (string)\n\nDefines what kind of action can be taken in the stage, one of the following:\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nApproval\n\nInvoke\n\nowner -> (string)\n\nThe creator of the action type being called: AWS or ThirdParty .\n\nprovider -> (string)\n\nThe provider of the action type being called. The provider name is supplied when the action type is created.\n\nversion -> (string)\n\nA string that describes the action type version.\n\ninputArtifactDetails -> (structure)\n\nDetails for the artifacts, such as application files, to be worked on by the action. For example, the minimum and maximum number of input artifacts allowed.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts that can be used with the action type. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts that can be used with the actiontype. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\noutputArtifactDetails -> (structure)\n\nDetails for the output artifacts, such as a built application, that are the result of the action. For example, the minimum and maximum number of output artifacts allowed.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts that can be used with the action type. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts that can be used with the actiontype. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\npermissions -> (structure)\n\nDetails identifying the accounts with permissions to use the action type.\n\nallowedAccounts -> (list)\n\nA list of AWS account IDs with access to use the action type in their pipelines.\n\n(string)\n\nproperties -> (list)\n\nThe properties of the action type to be updated.\n\n(structure)\n\nRepresents information about each property specified in the action configuration, such as the description and key name that display for the customer using the action type.\n\nname -> (string)\n\nThe property name that is displayed to users.\n\noptional -> (boolean)\n\nWhether the configuration property is an optional value.\n\nkey -> (boolean)\n\nWhether the configuration property is a key.\n\nnoEcho -> (boolean)\n\nWhether to omit the field value entered by the customer in the log. If true , the value is not saved in CloudTrail logs for the action execution.\n\nqueryable -> (boolean)\n\nIndicates that the property is used with polling. An action type can have up to one queryable property. If it has one, that property must be both required and not secret.\n\ndescription -> (string)\n\nThe description of the property that is displayed to users.\n\nurls -> (structure)\n\nThe links associated with the action type to be updated.\n\nconfigurationUrl -> (string)\n\nThe URL returned to the CodePipeline console that contains a link to the page where customers can configure the external action.\n\nentityUrlTemplate -> (string)\n\nThe URL returned to the CodePipeline console that provides a deep link to the resources of the external system, such as a status page. This link is provided as part of the action display in the pipeline.\n\nexecutionUrlTemplate -> (string)\n\nThe link to an execution page for the action type in progress. For example, for a CodeDeploy action, this link is shown on the pipeline view page in the CodePipeline console, and it links to a CodeDeploy status page.\n\nrevisionUrlTemplate -> (string)\n\nThe URL returned to the CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action."
    },
    {
      "command_name": "get-job-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-job-details.html",
      "command_description": "Description\n\nReturns information about a job. Used for custom actions only.\n\nWarning\n\nWhen this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-job-details\n--job-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID for the job.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobDetails -> (structure)\n\nThe details of the job.\n\nNote\n\nIf AWSSessionCredentials is used, a long-running job can call GetJobDetails again to obtain new credentials.\n\nid -> (string)\n\nThe unique system-generated ID of the job.\n\ndata -> (structure)\n\nRepresents other information about a job required for a job worker to complete the job.\n\nactionTypeId -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nactionConfiguration -> (structure)\n\nRepresents information about an action configuration.\n\nconfiguration -> (map)\n\nThe configuration data for the action.\n\nkey -> (string)\n\nvalue -> (string)\n\npipelineContext -> (structure)\n\nRepresents information about a pipeline to a job worker.\n\nNote\n\nIncludes pipelineArn and pipelineExecutionId for custom jobs.\n\npipelineName -> (string)\n\nThe name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.\n\nstage -> (structure)\n\nThe stage of the pipeline.\n\nname -> (string)\n\nThe name of the stage.\n\naction -> (structure)\n\nThe context of an action to a job worker in the stage of a pipeline.\n\nname -> (string)\n\nThe name of the action in the context of a job.\n\nactionExecutionId -> (string)\n\nThe system-generated unique ID that corresponds to an action’s execution.\n\npipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the pipeline.\n\npipelineExecutionId -> (string)\n\nThe execution ID of the pipeline.\n\ninputArtifacts -> (list)\n\nThe artifact supplied to the job.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\noutputArtifacts -> (list)\n\nThe output of the job.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\nartifactCredentials -> (structure)\n\nRepresents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifacts for the pipeline in AWS CodePipeline.\n\naccessKeyId -> (string)\n\nThe access key for the session.\n\nsecretAccessKey -> (string)\n\nThe secret access key for the session.\n\nsessionToken -> (string)\n\nThe token for the session.\n\ncontinuationToken -> (string)\n\nA system-generated token, such as a AWS CodeDeploy deployment ID, required by a job to continue the job asynchronously.\n\nencryptionKey -> (structure)\n\nRepresents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\naccountId -> (string)\n\nThe AWS account ID associated with the job.",
      "command_examples": "Examples\n\nTo get details of a job\n\nThis example returns details about a job whose ID is represented by f4f4ff82-2d11-EXAMPLE. This command is only used for custom actions. When this command is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline, if required for the custom action. This command will also return any secret values defined for the action, if any are defined.\n\nCommand:\n\naws codepipeline get-job-details --job-id f4f4ff82-2d11-EXAMPLE\n\n\nOutput:\n\n{\n \"jobDetails\": {\n  \"accountId\": \"111111111111\",\n  \"data\": {\n    \"actionConfiguration\": {\n      \"__type\": \"ActionConfiguration\",\n      \"configuration\": {\n        \"ProjectName\": \"MyJenkinsExampleTestProject\"\n      }\n    },\n    \"actionTypeId\": {\n      \"__type\": \"ActionTypeId\",\n      \"category\": \"Test\",\n      \"owner\": \"Custom\",\n      \"provider\": \"MyJenkinsProviderName\",\n      \"version\": \"1\"\n    },\n    \"artifactCredentials\": {\n      \"__type\": \"AWSSessionCredentials\",\n      \"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n      \"secretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\",\n      \"sessionToken\": \"fICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcNMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9TrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpEIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0FkbFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTbNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=\"\n    },\n    \"inputArtifacts\": [\n      {\n        \"__type\": \"Artifact\",\n        \"location\": {\n          \"s3Location\": {\n            \"bucketName\": \"codepipeline-us-east-1-11EXAMPLE11\",\n            \"objectKey\": \"MySecondPipeline/MyAppBuild/EXAMPLE\"\n          },\n          \"type\": \"S3\"\n        },\n        \"name\": \"MyAppBuild\"\n      }\n    ],\n    \"outputArtifacts\": [],\n    \"pipelineContext\": {\n      \"__type\": \"PipelineContext\",\n      \"action\": {\n        \"name\": \"MyJenkinsTest-Action\"\n      },\n      \"pipelineName\": \"MySecondPipeline\",\n      \"stage\": {\n        \"name\": \"Testing\"\n      }\n    }\n  },\n  \"id\": \"f4f4ff82-2d11-EXAMPLE\"\n }\n}\n"
    },
    {
      "command_name": "get-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-pipeline.html",
      "command_description": "Description\n\nReturns the metadata, structure, stages, and actions of a pipeline. Can be used to return the entire structure of a pipeline in JSON format, which can then be modified and used to update the pipeline structure with UpdatePipeline .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-pipeline\n--name <value>\n[--pipeline-version <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--pipeline-version <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the pipeline for which you want to get information. Pipeline names must be unique under an AWS user account.\n\n--pipeline-version (integer)\n\nThe version number of the pipeline. If you do not specify a version, defaults to the current version.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipeline -> (structure)\n\nRepresents the structure of actions and stages to be performed in the pipeline.\n\nname -> (string)\n\nThe name of the pipeline.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn , or to use to assume roles for actions with an actionRoleArn .\n\nartifactStore -> (structure)\n\nRepresents information about the S3 bucket where artifacts are stored for the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nartifactStores -> (map)\n\nA mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe S3 bucket where artifacts for the pipeline are stored.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nstages -> (list)\n\nThe stage in which to perform the action.\n\n(structure)\n\nRepresents information about a stage and its definition.\n\nname -> (string)\n\nThe name of the stage.\n\nblockers -> (list)\n\nReserved for future use.\n\n(structure)\n\nReserved for future use.\n\nname -> (string)\n\nReserved for future use.\n\ntype -> (string)\n\nReserved for future use.\n\nactions -> (list)\n\nThe actions included in a stage.\n\n(structure)\n\nRepresents information about an action declaration.\n\nname -> (string)\n\nThe action declaration’s name.\n\nactionTypeId -> (structure)\n\nSpecifies the action type and the provider of the action.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nrunOrder -> (integer)\n\nThe order in which actions are run.\n\nconfiguration -> (map)\n\nThe action’s configuration. These are key-value pairs that specify input values for an action. For more information, see Action Structure Requirements in CodePipeline . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see Configuration Properties Reference in the AWS CloudFormation User Guide . For template snippets with examples, see Using Parameter Override Functions with CodePipeline Pipelines in the AWS CloudFormation User Guide .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\nJSON:\n\n\"Configuration\" : { Key : Value },\n\nkey -> (string)\n\nvalue -> (string)\n\noutputArtifacts -> (list)\n\nThe name or ID of the result of the action declaration, such as a test or build artifact.\n\n(structure)\n\nRepresents information about the output of an action.\n\nname -> (string)\n\nThe name of the output of an artifact, such as “My App”.\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.\n\ninputArtifacts -> (list)\n\nThe name or ID of the artifact consumed by the action, such as a test or build artifact.\n\n(structure)\n\nRepresents information about an artifact to be worked on, such as a test or build artifact.\n\nname -> (string)\n\nThe name of the artifact to be worked on (for example, “My App”).\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe action declaration’s AWS Region, such as us-east-1.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\nversion -> (integer)\n\nThe version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.\n\nmetadata -> (structure)\n\nRepresents the pipeline metadata information returned as part of the output of a GetPipeline action.\n\npipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the pipeline.\n\ncreated -> (timestamp)\n\nThe date and time the pipeline was created, in timestamp format.\n\nupdated -> (timestamp)\n\nThe date and time the pipeline was last updated, in timestamp format.",
      "command_examples": "Examples\n\nTo view the structure of a pipeline\n\nThis example returns the structure of a pipeline named MyFirstPipeline.\n\nCommand:\n\naws codepipeline get-pipeline --name MyFirstPipeline\n\n\nOutput:\n\n{\n  \"pipeline\": {\n      \"roleArn\": \"arn:aws:iam::111111111111:role/AWS-CodePipeline-Service\",\n      \"stages\": [\n          {\n              \"name\": \"Source\",\n              \"actions\": [\n                  {\n                      \"inputArtifacts\": [],\n                      \"name\": \"Source\",\n                      \"actionTypeId\": {\n                          \"category\": \"Source\",\n                          \"owner\": \"AWS\",\n                          \"version\": \"1\",\n                          \"provider\": \"S3\"\n                      },\n                      \"outputArtifacts\": [\n                          {\n                              \"name\": \"MyApp\"\n                          }\n                      ],\n                      \"configuration\": {\n                          \"S3Bucket\": \"awscodepipeline-demo-bucket\",\n                          \"S3ObjectKey\": \"aws-codepipeline-s3-aws-codedeploy_linux.zip\"\n                      },\n                      \"runOrder\": 1\n                  }\n              ]\n          },\n          {\n              \"name\": \"Beta\",\n              \"actions\": [\n                  {\n                      \"inputArtifacts\": [\n                          {\n                              \"name\": \"MyApp\"\n                          }\n                      ],\n                      \"name\": \"CodePipelineDemoFleet\",\n                      \"actionTypeId\": {\n                          \"category\": \"Deploy\",\n                          \"owner\": \"AWS\",\n                          \"version\": \"1\",\n                          \"provider\": \"CodeDeploy\"\n                      },\n                      \"outputArtifacts\": [],\n                      \"configuration\": {\n                          \"ApplicationName\": \"CodePipelineDemoApplication\",\n                          \"DeploymentGroupName\": \"CodePipelineDemoFleet\"\n                      },\n                      \"runOrder\": 1\n                  }\n              ]\n          }\n      ],\n      \"artifactStore\": {\n          \"type\": \"S3\",\n          \"location\": \"codepipeline-us-east-1-11EXAMPLE11\"\n      },\n      \"name\": \"MyFirstPipeline\",\n      \"version\": 1\n  }\n}\n"
    },
    {
      "command_name": "get-pipeline-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-pipeline-execution.html",
      "command_description": "Description\n\nReturns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-pipeline-execution\n--pipeline-name <value>\n--pipeline-execution-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--pipeline-execution-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline about which you want to get execution details.\n\n--pipeline-execution-id (string)\n\nThe ID of the pipeline execution about which you want to get execution details.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineExecution -> (structure)\n\nRepresents information about the execution of a pipeline.\n\npipelineName -> (string)\n\nThe name of the pipeline with the specified pipeline execution.\n\npipelineVersion -> (integer)\n\nThe version number of the pipeline with the specified pipeline execution.\n\npipelineExecutionId -> (string)\n\nThe ID of the pipeline execution.\n\nstatus -> (string)\n\nThe status of the pipeline execution.\n\nCancelled: The pipeline’s definition was updated before the pipeline execution could be completed.\n\nInProgress: The pipeline execution is currently running.\n\nStopped: The pipeline execution was manually stopped. For more information, see Stopped Executions .\n\nStopping: The pipeline execution received a request to be manually stopped. Depending on the selected stop mode, the execution is either completing or abandoning in-progress actions. For more information, see Stopped Executions .\n\nSucceeded: The pipeline execution was completed successfully.\n\nSuperseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. For more information, see Superseded Executions .\n\nFailed: The pipeline execution was not completed successfully.\n\nstatusSummary -> (string)\n\nA summary that contains a description of the pipeline execution status.\n\nartifactRevisions -> (list)\n\nA list of ArtifactRevision objects included in a pipeline execution.\n\n(structure)\n\nRepresents revision details of an artifact.\n\nname -> (string)\n\nThe name of an artifact. This name might be system-generated, such as “MyApp”, or defined by the user when an action is created.\n\nrevisionId -> (string)\n\nThe revision ID of the artifact.\n\nrevisionChangeIdentifier -> (string)\n\nAn additional identifier for a revision, such as a commit date or, for artifacts stored in Amazon S3 buckets, the ETag value.\n\nrevisionSummary -> (string)\n\nSummary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a codepipeline-artifact-revision-summary key specified in the object metadata.\n\ncreated -> (timestamp)\n\nThe date and time when the most recent revision of the artifact was created, in timestamp format.\n\nrevisionUrl -> (string)\n\nThe commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page."
    },
    {
      "command_name": "get-pipeline-state",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-pipeline-state.html",
      "command_description": "Description\n\nReturns information about the state of a pipeline, including the stages and actions.\n\nNote\n\nValues returned in the revisionId and revisionUrl fields indicate the source revision information, such as the commit ID, for the current state.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-pipeline-state\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the pipeline about which you want to get information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineName -> (string)\n\nThe name of the pipeline for which you want to get the state.\n\npipelineVersion -> (integer)\n\nThe version number of the pipeline.\n\nNote\n\nA newly created pipeline is always assigned a version number of 1 .\n\nstageStates -> (list)\n\nA list of the pipeline stage output information, including stage name, state, most recent run details, whether the stage is disabled, and other data.\n\n(structure)\n\nRepresents information about the state of the stage.\n\nstageName -> (string)\n\nThe name of the stage.\n\ninboundExecution -> (structure)\n\nRepresents information about the run of a stage.\n\npipelineExecutionId -> (string)\n\nThe ID of the pipeline execution associated with the stage.\n\nstatus -> (string)\n\nThe status of the stage, or for a completed stage, the last status of the stage.\n\nNote\n\nA status of cancelled means that the pipeline’s definition was updated before the stage execution could be completed.\n\ninboundTransitionState -> (structure)\n\nThe state of the inbound transition, which is either enabled or disabled.\n\nenabled -> (boolean)\n\nWhether the transition between stages is enabled (true) or disabled (false).\n\nlastChangedBy -> (string)\n\nThe ID of the user who last changed the transition state.\n\nlastChangedAt -> (timestamp)\n\nThe timestamp when the transition state was last changed.\n\ndisabledReason -> (string)\n\nThe user-specified reason why the transition between two stages of a pipeline was disabled.\n\nactionStates -> (list)\n\nThe state of the stage.\n\n(structure)\n\nRepresents information about the state of an action.\n\nactionName -> (string)\n\nThe name of the action.\n\ncurrentRevision -> (structure)\n\nRepresents information about the version (or revision) of an action.\n\nrevisionId -> (string)\n\nThe system-generated unique ID that identifies the revision number of the action.\n\nrevisionChangeId -> (string)\n\nThe unique identifier of the change that set the state to this revision (for example, a deployment ID or timestamp).\n\ncreated -> (timestamp)\n\nThe date and time when the most recent version of the action was created, in timestamp format.\n\nlatestExecution -> (structure)\n\nRepresents information about the run of an action.\n\nactionExecutionId -> (string)\n\nID of the workflow action execution in the current stage. Use the GetPipelineState action to retrieve the current action execution details of the current stage.\n\nNote\n\nFor older executions, this field might be empty. The action execution ID is available for executions run on or after March 2020.\n\nstatus -> (string)\n\nThe status of the action, or for a completed action, the last status of the action.\n\nsummary -> (string)\n\nA summary of the run of the action.\n\nlastStatusChange -> (timestamp)\n\nThe last status change of the action.\n\ntoken -> (string)\n\nThe system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the GetPipelineState command. It is used to validate that the approval request corresponding to this token is still valid.\n\nlastUpdatedBy -> (string)\n\nThe ARN of the user who last changed the pipeline.\n\nexternalExecutionId -> (string)\n\nThe external ID of the run of the action.\n\nexternalExecutionUrl -> (string)\n\nThe URL of a resource external to AWS that is used when running the action (for example, an external repository URL).\n\npercentComplete -> (integer)\n\nA percentage of completeness of the action as it runs.\n\nerrorDetails -> (structure)\n\nThe details of an error returned by a URL external to AWS.\n\ncode -> (string)\n\nThe system ID or number code of the error.\n\nmessage -> (string)\n\nThe text of the error message.\n\nentityUrl -> (string)\n\nA URL link for more information about the state of the action, such as a deployment group details page.\n\nrevisionUrl -> (string)\n\nA URL link for more information about the revision, such as a commit details page.\n\nlatestExecution -> (structure)\n\nInformation about the latest execution in the stage, including its ID and status.\n\npipelineExecutionId -> (string)\n\nThe ID of the pipeline execution associated with the stage.\n\nstatus -> (string)\n\nThe status of the stage, or for a completed stage, the last status of the stage.\n\nNote\n\nA status of cancelled means that the pipeline’s definition was updated before the stage execution could be completed.\n\ncreated -> (timestamp)\n\nThe date and time the pipeline was created, in timestamp format.\n\nupdated -> (timestamp)\n\nThe date and time the pipeline was last updated, in timestamp format.",
      "command_examples": "Examples\n\nTo get information about the state of a pipeline\n\nThis example returns the most recent state of a pipeline named MyFirstPipeline.\n\nCommand:\n\naws codepipeline get-pipeline-state --name MyFirstPipeline\n\n\nOutput:\n\n{\n \"created\": 1446137312.204,\n \"pipelineName\": \"MyFirstPipeline\",\n \"pipelineVersion\": 1,\n \"stageStates\": [\n  {\n    \"actionStates\": [\n      {\n        \"actionName\": \"Source\",\n        \"entityUrl\": \"https://console.aws.amazon.com/s3/home?#\",\n        \"latestExecution\": {\n          \"lastStatusChange\": 1446137358.328,\n          \"status\": \"Succeeded\"\n        }\n      }\n    ],\n    \"stageName\": \"Source\"\n  },\n  {\n    \"actionStates\": [\n      {\n        \"actionName\": \"CodePipelineDemoFleet\",\n        \"entityUrl\": \"https://console.aws.amazon.com/codedeploy/home?#/applications/CodePipelineDemoApplication/deployment-groups/CodePipelineDemoFleet\",\n        \"latestExecution\": {\n          \"externalExecutionId\": \"d-EXAMPLE\",\n          \"externalExecutionUrl\": \"https://console.aws.amazon.com/codedeploy/home?#/deployments/d-EXAMPLE\",\n          \"lastStatusChange\": 1446137493.131,\n          \"status\": \"Succeeded\",\n          \"summary\": \"Deployment Succeeded\"\n        }\n      }\n    ],\n    \"inboundTransitionState\": {\n      \"enabled\": true\n    },\n    \"stageName\": \"Beta\"\n  }\n ],\n \"updated\": 1446137312.204\n}\n"
    },
    {
      "command_name": "get-third-party-job-details",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/get-third-party-job-details.html",
      "command_description": "Description\n\nRequests the details of a job for a third party action. Used for partner actions only.\n\nWarning\n\nWhen this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-third-party-job-details\n--job-id <value>\n--client-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--client-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID used for identifying the job.\n\n--client-token (string)\n\nThe clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobDetails -> (structure)\n\nThe details of the job, including any protected values defined for the job.\n\nid -> (string)\n\nThe identifier used to identify the job details in AWS CodePipeline.\n\ndata -> (structure)\n\nThe data to be returned by the third party job worker.\n\nactionTypeId -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nactionConfiguration -> (structure)\n\nRepresents information about an action configuration.\n\nconfiguration -> (map)\n\nThe configuration data for the action.\n\nkey -> (string)\n\nvalue -> (string)\n\npipelineContext -> (structure)\n\nRepresents information about a pipeline to a job worker.\n\nNote\n\nDoes not include pipelineArn and pipelineExecutionId for ThirdParty jobs.\n\npipelineName -> (string)\n\nThe name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.\n\nstage -> (structure)\n\nThe stage of the pipeline.\n\nname -> (string)\n\nThe name of the stage.\n\naction -> (structure)\n\nThe context of an action to a job worker in the stage of a pipeline.\n\nname -> (string)\n\nThe name of the action in the context of a job.\n\nactionExecutionId -> (string)\n\nThe system-generated unique ID that corresponds to an action’s execution.\n\npipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the pipeline.\n\npipelineExecutionId -> (string)\n\nThe execution ID of the pipeline.\n\ninputArtifacts -> (list)\n\nThe name of the artifact that is worked on by the action, if any. This name might be system-generated, such as “MyApp”, or it might be defined by the user when the action is created. The input artifact name must match the name of an output artifact generated by an action in an earlier action or stage of the pipeline.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\noutputArtifacts -> (list)\n\nThe name of the artifact that is the result of the action, if any. This name might be system-generated, such as “MyBuiltApp”, or it might be defined by the user when the action is created.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\nartifactCredentials -> (structure)\n\nRepresents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifact for the pipeline in AWS CodePipeline.\n\naccessKeyId -> (string)\n\nThe access key for the session.\n\nsecretAccessKey -> (string)\n\nThe secret access key for the session.\n\nsessionToken -> (string)\n\nThe token for the session.\n\ncontinuationToken -> (string)\n\nA system-generated token, such as a AWS CodeDeploy deployment ID, that a job requires to continue the job asynchronously.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt and decrypt data in the artifact store for the pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and might not be present.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nnonce -> (string)\n\nA system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an AcknowledgeThirdPartyJob request."
    },
    {
      "command_name": "list-action-executions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-action-executions.html",
      "command_description": "Description\n\nLists the action executions that have occurred in a pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-action-executions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: actionExecutionDetails",
      "command_synopsis": "Synopsis\n  list-action-executions\n--pipeline-name <value>\n[--filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "[--filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline for which you want to list action execution history.\n\n--filter (structure)\n\nInput information used to filter action execution history.\n\npipelineExecutionId -> (string)\n\nThe pipeline execution ID used to filter action execution history.\n\nShorthand Syntax:\n\npipelineExecutionId=string\n\n\nJSON Syntax:\n\n{\n  \"pipelineExecutionId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactionExecutionDetails -> (list)\n\nThe details for a list of recent executions, such as action execution ID.\n\n(structure)\n\nReturns information about an execution of an action, including the action execution ID, and the name, version, and timing of the action.\n\npipelineExecutionId -> (string)\n\nThe pipeline execution ID for the action execution.\n\nactionExecutionId -> (string)\n\nThe action execution ID.\n\npipelineVersion -> (integer)\n\nThe version of the pipeline where the action was run.\n\nstageName -> (string)\n\nThe name of the stage that contains the action.\n\nactionName -> (string)\n\nThe name of the action.\n\nstartTime -> (timestamp)\n\nThe start time of the action execution.\n\nlastUpdateTime -> (timestamp)\n\nThe last update time of the action execution.\n\nstatus -> (string)\n\nThe status of the action execution. Status categories are InProgress , Succeeded , and Failed .\n\ninput -> (structure)\n\nInput details for the action execution, such as role ARN, Region, and input artifacts.\n\nactionTypeId -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nconfiguration -> (map)\n\nConfiguration data for an action execution.\n\nkey -> (string)\n\nvalue -> (string)\n\nresolvedConfiguration -> (map)\n\nConfiguration data for an action execution with all variable references replaced with their real values for the execution.\n\nkey -> (string)\n\nvalue -> (string)\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe AWS Region for the action, such as us-east-1.\n\ninputArtifacts -> (list)\n\nDetails of input artifacts of the action that correspond to the action execution.\n\n(structure)\n\nArtifact details for the action execution, such as the artifact location.\n\nname -> (string)\n\nThe artifact object name for the action execution.\n\ns3location -> (structure)\n\nThe Amazon S3 artifact location for the action execution.\n\nbucket -> (string)\n\nThe Amazon S3 artifact bucket for an action’s artifacts.\n\nkey -> (string)\n\nThe artifact name.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\noutput -> (structure)\n\nOutput details for the action execution, such as the action execution result.\n\noutputArtifacts -> (list)\n\nDetails of output artifacts of the action that correspond to the action execution.\n\n(structure)\n\nArtifact details for the action execution, such as the artifact location.\n\nname -> (string)\n\nThe artifact object name for the action execution.\n\ns3location -> (structure)\n\nThe Amazon S3 artifact location for the action execution.\n\nbucket -> (string)\n\nThe Amazon S3 artifact bucket for an action’s artifacts.\n\nkey -> (string)\n\nThe artifact name.\n\nexecutionResult -> (structure)\n\nExecution result information listed in the output details for an action execution.\n\nexternalExecutionId -> (string)\n\nThe action provider’s external ID for the action execution.\n\nexternalExecutionSummary -> (string)\n\nThe action provider’s summary for the action execution.\n\nexternalExecutionUrl -> (string)\n\nThe deepest external link to the external resource (for example, a repository URL or deployment endpoint) that is used when running the action.\n\noutputVariables -> (map)\n\nThe outputVariables field shows the key-value pairs that were output as part of that execution.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nIf the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent ListActionExecutions call to return the next set of action executions in the list.",
      "command_examples": "Examples\n\nTo list action executions\n\nThe following list-action-executions example views action execution details for a pipeline, such as action execution ID, input artifacts, output artifacts, execution result, and status.\n\naws codepipeline list-action-executions \\\n    --pipeline-name myPipeline\n\n\nOutput:\n\n{\n    \"actionExecutionDetails\": [\n        {\n            \"pipelineExecutionId\": \"EXAMPLE0-adfc-488e-bf4c-1111111720d3\",\n            \"actionExecutionId\": \"EXAMPLE4-2ee8-4853-bd6a-111111158148\",\n            \"pipelineVersion\": 12,\n            \"stageName\": \"Deploy\",\n            \"actionName\": \"Deploy\",\n            \"startTime\": 1598572628.6,\n            \"lastUpdateTime\": 1598572661.255,\n            \"status\": \"Succeeded\",\n            \"input\": {\n                \"actionTypeId\": {\n                    \"category\": \"Deploy\",\n                    \"owner\": \"AWS\",\n                    \"provider\": \"CodeDeploy\",\n                    \"version\": \"1\"\n                },\n                \"configuration\": {\n                    \"ApplicationName\": \"my-application\",\n                    \"DeploymentGroupName\": \"my-deployment-group\"\n                },\n                \"resolvedConfiguration\": {\n                    \"ApplicationName\": \"my-application\",\n                    \"DeploymentGroupName\": \"my-deployment-group\"\n                },\n                \"region\": \"us-east-1\",\n                \"inputArtifacts\": [\n                    {\n                        \"name\": \"SourceArtifact\",\n                        \"s3location\": {\n                            \"bucket\": \"artifact-bucket\",\n                            \"key\": \"myPipeline/SourceArti/key\"\n                        }\n                    }\n                ],\n                \"namespace\": \"DeployVariables\"\n            },\n            \"output\": {\n                \"outputArtifacts\": [],\n                \"executionResult\": {\n                    \"externalExecutionId\": \"d-EXAMPLEE5\",\n                    \"externalExecutionSummary\": \"Deployment Succeeded\",\n                    \"externalExecutionUrl\": \"https://myaddress.com\"\n                },\n                \"outputVariables\": {}\n            }\n        },\n        {\n            \"pipelineExecutionId\": \"EXAMPLE0-adfc-488e-bf4c-1111111720d3\",\n            \"actionExecutionId\": \"EXAMPLE5-abb4-4192-9031-11111113a7b0\",\n            \"pipelineVersion\": 12,\n            \"stageName\": \"Source\",\n            \"actionName\": \"Source\",\n            \"startTime\": 1598572624.387,\n            \"lastUpdateTime\": 1598572628.16,\n            \"status\": \"Succeeded\",\n            \"input\": {\n                \"actionTypeId\": {\n                    \"category\": \"Source\",\n                    \"owner\": \"AWS\",\n                    \"provider\": \"CodeCommit\",\n                    \"version\": \"1\"\n                },\n                \"configuration\": {\n                    \"BranchName\": \"production\",\n                    \"PollForSourceChanges\": \"false\",\n                    \"RepositoryName\": \"my-repo\"\n                },\n                \"resolvedConfiguration\": {\n                    \"BranchName\": \"production\",\n                    \"PollForSourceChanges\": \"false\",\n                    \"RepositoryName\": \"my-repo\"\n                },\n                \"region\": \"us-east-1\",\n                \"inputArtifacts\": [],\n                \"namespace\": \"SourceVariables\"\n            },\n            \"output\": {\n                \"outputArtifacts\": [\n                    {\n                        \"name\": \"SourceArtifact\",\n                        \"s3location\": {\n                            \"bucket\": \"my-bucket\",\n                            \"key\": \"myPipeline/SourceArti/key\"\n                        }\n                    }\n                ],\n                \"executionResult\": {\n                    \"externalExecutionId\": \"1111111ad99dcd35914c00b7fbea13995EXAMPLE\",\n                    \"externalExecutionSummary\": \"Edited template.yml\",\n                    \"externalExecutionUrl\": \"https://myaddress.com\"\n                },\n                \"outputVariables\": {\n                    \"AuthorDate\": \"2020-05-08T17:45:43Z\",\n                    \"BranchName\": \"production\",\n                    \"CommitId\": \"EXAMPLEad99dcd35914c00b7fbea139951111111\",\n                    \"CommitMessage\": \"Edited template.yml\",\n                    \"CommitterDate\": \"2020-05-08T17:45:43Z\",\n                    \"RepositoryName\": \"my-repo\"\n                }\n            }\n        },\n. . . .\n\n\nFor more information, see View action executions (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "list-action-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-action-types.html",
      "command_description": "Description\n\nGets a summary of all AWS CodePipeline action types associated with your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-action-types is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: actionTypes",
      "command_synopsis": "Synopsis\n  list-action-types\n[--action-owner-filter <value>]\n[--region-filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--action-owner-filter <value>]",
        "[--region-filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--action-owner-filter (string)\n\nFilters the list of action types to those created by a specified entity.\n\nPossible values:\n\nAWS\n\nThirdParty\n\nCustom\n\n--region-filter (string)\n\nThe Region to filter on for the list of action types.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactionTypes -> (list)\n\nProvides details of the action types.\n\n(structure)\n\nReturns information about the details of an action type.\n\nid -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nsettings -> (structure)\n\nThe settings for the action type.\n\nthirdPartyConfigurationUrl -> (string)\n\nThe URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.\n\nentityUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.\n\nexecutionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.\n\nrevisionUrlTemplate -> (string)\n\nThe URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.\n\nactionConfigurationProperties -> (list)\n\nThe configuration properties for the action type.\n\n(structure)\n\nRepresents information about an action configuration property.\n\nname -> (string)\n\nThe name of the action configuration property.\n\nrequired -> (boolean)\n\nWhether the configuration property is a required value.\n\nkey -> (boolean)\n\nWhether the configuration property is a key.\n\nsecret -> (boolean)\n\nWhether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails , GetThirdPartyJobDetails , PollForJobs , and PollForThirdPartyJobs .\n\nWhen updating a pipeline, passing * * * * * without changing any other values of the action preserves the previous value of the secret.\n\nqueryable -> (boolean)\n\nIndicates that the property is used with PollForJobs . When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.\n\nIf you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.\n\ndescription -> (string)\n\nThe description of the action configuration property that is displayed to users.\n\ntype -> (string)\n\nThe type of the configuration property.\n\ninputArtifactDetails -> (structure)\n\nThe details of the input artifact for the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\noutputArtifactDetails -> (structure)\n\nThe details of the output artifact of the action, such as its commit ID.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts allowed for the action type.\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts allowed for the action type.\n\nnextToken -> (string)\n\nIf the amount of returned information is significantly large, an identifier is also returned. It can be used in a subsequent list action types call to return the next set of action types in the list.",
      "command_examples": "Examples\n\nTo view the action types available\n\nUsed by itself, the list-action-types command returns the structure of all actions available to your AWS account. This example uses the –action-owner-filter option to return only custom actions.\n\nCommand:\n\naws codepipeline list-action-types --action-owner-filter Custom\n\n\nOutput:\n\n{\n  \"actionTypes\": [\n      {\n          \"inputArtifactDetails\": {\n              \"maximumCount\": 5,\n              \"minimumCount\": 0\n          },\n          \"actionConfigurationProperties\": [\n              {\n                  \"secret\": false,\n                  \"required\": true,\n                  \"name\": \"MyJenkinsExampleBuildProject\",\n                  \"key\": true,\n                  \"queryable\": true\n              }\n          ],\n          \"outputArtifactDetails\": {\n              \"maximumCount\": 5,\n              \"minimumCount\": 0\n          },\n          \"id\": {\n              \"category\": \"Build\",\n              \"owner\": \"Custom\",\n              \"version\": \"1\",\n              \"provider\": \"MyJenkinsProviderName\"\n          },\n          \"settings\": {\n              \"entityUrlTemplate\": \"http://192.0.2.4/job/{Config:ProjectName}\",\n              \"executionUrlTemplate\": \"http://192.0.2.4/job/{Config:ProjectName}/{ExternalExecutionId}\"\n          }\n      },\n      {\n          \"inputArtifactDetails\": {\n              \"maximumCount\": 5,\n              \"minimumCount\": 0\n          },\n          \"actionConfigurationProperties\": [\n              {\n                  \"secret\": false,\n                  \"required\": true,\n                  \"name\": \"MyJenkinsExampleTestProject\",\n                  \"key\": true,\n                  \"queryable\": true\n              }\n          ],\n          \"outputArtifactDetails\": {\n              \"maximumCount\": 5,\n              \"minimumCount\": 0\n          },\n          \"id\": {\n              \"category\": \"Test\",\n              \"owner\": \"Custom\",\n              \"version\": \"1\",\n              \"provider\": \"MyJenkinsProviderName\"\n          },\n          \"settings\": {\n              \"entityUrlTemplate\": \"http://192.0.2.4/job/{Config:ProjectName}\",\n              \"executionUrlTemplate\": \"http://192.0.2.4/job/{Config:ProjectName}/{ExternalExecutionId}\"\n          }\n      }\n  ]\n}\n"
    },
    {
      "command_name": "list-pipeline-executions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-pipeline-executions.html",
      "command_description": "Description\n\nGets a summary of the most recent executions for a pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-pipeline-executions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: pipelineExecutionSummaries",
      "command_synopsis": "Synopsis\n  list-pipeline-executions\n--pipeline-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline for which you want to get execution summary information.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineExecutionSummaries -> (list)\n\nA list of executions in the history of a pipeline.\n\n(structure)\n\nSummary information about a pipeline execution.\n\npipelineExecutionId -> (string)\n\nThe ID of the pipeline execution.\n\nstatus -> (string)\n\nThe status of the pipeline execution.\n\nInProgress: The pipeline execution is currently running.\n\nStopped: The pipeline execution was manually stopped. For more information, see Stopped Executions .\n\nStopping: The pipeline execution received a request to be manually stopped. Depending on the selected stop mode, the execution is either completing or abandoning in-progress actions. For more information, see Stopped Executions .\n\nSucceeded: The pipeline execution was completed successfully.\n\nSuperseded: While this pipeline execution was waiting for the next stage to be completed, a newer pipeline execution advanced and continued through the pipeline instead. For more information, see Superseded Executions .\n\nFailed: The pipeline execution was not completed successfully.\n\nstartTime -> (timestamp)\n\nThe date and time when the pipeline execution began, in timestamp format.\n\nlastUpdateTime -> (timestamp)\n\nThe date and time of the last change to the pipeline execution, in timestamp format.\n\nsourceRevisions -> (list)\n\nA list of the source artifact revisions that initiated a pipeline execution.\n\n(structure)\n\nInformation about the version (or revision) of a source artifact that initiated a pipeline execution.\n\nactionName -> (string)\n\nThe name of the action that processed the revision to the source artifact.\n\nrevisionId -> (string)\n\nThe system-generated unique ID that identifies the revision number of the artifact.\n\nrevisionSummary -> (string)\n\nSummary information about the most recent revision of the artifact. For GitHub and AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the user-provided content of a codepipeline-artifact-revision-summary key specified in the object metadata.\n\nrevisionUrl -> (string)\n\nThe commit ID for the artifact revision. For artifacts stored in GitHub or AWS CodeCommit repositories, the commit ID is linked to a commit details page.\n\ntrigger -> (structure)\n\nThe interaction or event that started a pipeline execution, such as automated change detection or a StartPipelineExecution API call.\n\ntriggerType -> (string)\n\nThe type of change-detection method, command, or user interaction that started a pipeline execution.\n\ntriggerDetail -> (string)\n\nDetail related to the event that started a pipeline execution, such as the webhook ARN of the webhook that triggered the pipeline execution or the user ARN for a user-initiated start-pipeline-execution CLI command.\n\nstopTrigger -> (structure)\n\nThe interaction that stopped a pipeline execution.\n\nreason -> (string)\n\nThe user-specified reason the pipeline was stopped.\n\nnextToken -> (string)\n\nA token that can be used in the next ListPipelineExecutions call. To view all items in the list, continue to call this operation with each subsequent token until no more nextToken values are returned.",
      "command_examples": "Examples\n\nTo view pipeline execution history\n\nThe following list-pipeline-executions example shows the pipeline execution history for a pipeline in your AWS account.\n\naws codepipeline list-pipeline-executions \\\n    --pipeline-name MyPipeline\n\n\nOutput:\n\n{\n    \"pipelineExecutionSummaries\": [\n        {\n            \"lastUpdateTime\": 1496380678.648,\n            \"pipelineExecutionId\": \"7cf7f7cb-3137-539g-j458-d7eu3EXAMPLE\",\n            \"startTime\": 1496380258.243,\n            \"status\": \"Succeeded\"\n        },\n        {\n            \"lastUpdateTime\": 1496591045.634,\n            \"pipelineExecutionId\": \"3137f7cb-8d494hj4-039j-d84l-d7eu3EXAMPLE\",\n            \"startTime\": 1496590401.222,\n            \"status\": \"Succeeded\"\n        },\n        {\n            \"lastUpdateTime\": 1496946071.6456,\n            \"pipelineExecutionId\": \"4992f7jf-7cf7-913k-k334-d7eu3EXAMPLE\",\n            \"startTime\": 1496945471.5645,\n            \"status\": \"Succeeded\"\n        }\n    ]\n}\n\n\nFor more information, see View execution history in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "list-pipelines",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-pipelines.html",
      "command_description": "Description\n\nGets a summary of all of the pipelines associated with your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-pipelines is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: pipelines",
      "command_synopsis": "Synopsis\n  list-pipelines\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelines -> (list)\n\nThe list of pipelines.\n\n(structure)\n\nReturns a summary of a pipeline.\n\nname -> (string)\n\nThe name of the pipeline.\n\nversion -> (integer)\n\nThe version number of the pipeline.\n\ncreated -> (timestamp)\n\nThe date and time the pipeline was created, in timestamp format.\n\nupdated -> (timestamp)\n\nThe date and time of the last update to the pipeline, in timestamp format.\n\nnextToken -> (string)\n\nIf the amount of returned information is significantly large, an identifier is also returned. It can be used in a subsequent list pipelines call to return the next set of pipelines in the list.",
      "command_examples": "Examples\n\nTo view a list of pipelines\n\nThis example lists all AWS CodePipeline pipelines associated with the user’s AWS account.\n\nCommand:\n\naws codepipeline list-pipelines\n\n\nOutput:\n\n{\n  \"pipelines\": [\n      {\n          \"updated\": 1439504274.641,\n          \"version\": 1,\n          \"name\": \"MyFirstPipeline\",\n          \"created\": 1439504274.641\n      },\n      {\n          \"updated\": 1436461837.992,\n          \"version\": 2,\n          \"name\": \"MySecondPipeline\",\n          \"created\": 1436460801.381\n      }\n      ]\n}\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-tags-for-resource.html",
      "command_description": "Description\n\nGets the set of key-value pairs (metadata) that are used to manage the resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-tags-for-resource is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: tags",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to get tags for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nThe tags for the resource.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nnextToken -> (string)\n\nIf the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent API call to return the next page of the list. The ListTagsforResource call lists all available tags in one call and does not use pagination.",
      "command_examples": "Examples\n\nTo list tags\n\nThe following list-tags-for-resource example retrieves a list of all tags attached to the specified pipeline resource.\n\naws codepipeline list-tags-for-resource \\\n    --resource-arn arn:aws:codepipeline:us-east-1:123456789012:MyPipeline\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"Project\": \"ProjectA\",\n        \"IscontainerBased\": \"true\"\n    }\n}\n\n\nFor more information, see View tags for a pipeline (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "list-webhooks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/list-webhooks.html",
      "command_description": "Description\n\nGets a listing of all the webhooks in this AWS Region for this account. The output lists all webhooks and includes the webhook URL and ARN and the configuration for each webhook.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-webhooks is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: webhooks",
      "command_synopsis": "Synopsis\n  list-webhooks\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nwebhooks -> (list)\n\nThe JSON detail returned for each webhook in the list output for the ListWebhooks call.\n\n(structure)\n\nThe detail returned for each webhook after listing webhooks, such as the webhook URL, the webhook name, and the webhook ARN.\n\ndefinition -> (structure)\n\nThe detail returned for each webhook, such as the webhook authentication type and filter rules.\n\nname -> (string)\n\nThe name of the webhook.\n\ntargetPipeline -> (string)\n\nThe name of the pipeline you want to connect to the webhook.\n\ntargetAction -> (string)\n\nThe name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.\n\nfilters -> (list)\n\nA list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.\n\n(structure)\n\nThe event criteria that specify when a webhook notification is sent to your URL.\n\njsonPath -> (string)\n\nA JsonPath expression that is applied to the body/payload of the webhook. The value selected by the JsonPath expression must match the value specified in the MatchEquals field. Otherwise, the request is ignored. For more information, see Java JsonPath implementation in GitHub.\n\nmatchEquals -> (string)\n\nThe value selected by the JsonPath expression must match what is supplied in the MatchEquals field. Otherwise, the request is ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly brackets. For example, if the value supplied here is “refs/heads/{Branch}” and the target action has an action configuration property called “Branch” with a value of “master”, the MatchEquals value is evaluated as “refs/heads/master”. For a list of action configuration properties for built-in action types, see Pipeline Structure Reference Action Requirements .\n\nauthentication -> (string)\n\nSupported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.\n\nFor information about the authentication scheme implemented by GITHUB_HMAC, see Securing your webhooks on the GitHub Developer website.\n\nIP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.\n\nUNAUTHENTICATED accepts all webhook trigger requests regardless of origin.\n\nauthenticationConfiguration -> (structure)\n\nProperties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the SecretToken property must be set. For IP, only the AllowedIPRange property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.\n\nAllowedIPRange -> (string)\n\nThe property used to configure acceptance of webhooks in an IP address range. For IP, only the AllowedIPRange property must be set. This property must be set to a valid CIDR range.\n\nSecretToken -> (string)\n\nThe property used to configure GitHub authentication. For GITHUB_HMAC, only the SecretToken property must be set.\n\nurl -> (string)\n\nA unique URL generated by CodePipeline. When a POST request is made to this URL, the defined pipeline is started as long as the body of the post request satisfies the defined authentication and filtering conditions. Deleting and re-creating a webhook makes the old URL invalid and generates a new one.\n\nerrorMessage -> (string)\n\nThe text of the error message about the webhook.\n\nerrorCode -> (string)\n\nThe number code of the error.\n\nlastTriggered -> (timestamp)\n\nThe date and time a webhook was last successfully triggered, in timestamp format.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the webhook.\n\ntags -> (list)\n\nSpecifies the tags applied to the webhook.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nNextToken -> (string)\n\nIf the amount of returned information is significantly large, an identifier is also returned and can be used in a subsequent ListWebhooks call to return the next set of webhooks in the list.",
      "command_examples": "Examples\n\nTo list webhooks\n\nThe following list-webhooks example retrieves a list of all tags attached to the specified pipeline resource.\n\naws codepipeline list-webhooks \\\n    --endpoint-url \"https://codepipeline.eu-central-1.amazonaws.com\" \\\n    --region \"eu-central-1\"\n\n\nOutput:\n\n{\n    \"webhooks\": [\n        {\n            \"url\": \"https://webhooks.domain.com/trigger111111111EXAMPLE11111111111111111\": {\n                \"authenticationConfiguration\": {\n                    \"SecretToken\": \"Secret\"\n                },\n                \"name\": \"my-webhook\",\n                \"authentication\": \"GITHUB_HMAC\",\n                \"targetPipeline\": \"my-Pipeline\",\n                \"targetAction\": \"Source\",\n                \"filters\": [\n                    {\n                        \"jsonPath\": \"$.ref\",\n                        \"matchEquals\": \"refs/heads/{Branch}\"\n                    }\n                ]\n            },\n            \"arn\": \"arn:aws:codepipeline:eu-central-1:123456789012:webhook:my-webhook\"\n        }\n    ]\n}\n\n\nFor more information, see List webhooks in your account in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "poll-for-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/poll-for-jobs.html",
      "command_description": "Description\n\nReturns information about any jobs for AWS CodePipeline to act on. PollForJobs is valid only for action types with “Custom” in the owner field. If the action type contains “AWS” or “ThirdParty” in the owner field, the PollForJobs action returns an error.\n\nWarning\n\nWhen this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts. This API also returns any secret values defined for the action.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  poll-for-jobs\n--action-type-id <value>\n[--max-batch-size <value>]\n[--query-param <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--action-type-id <value>",
        "[--max-batch-size <value>]",
        "[--query-param <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--action-type-id (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nShorthand Syntax:\n\ncategory=string,owner=string,provider=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"category\": \"Source\"|\"Build\"|\"Deploy\"|\"Test\"|\"Invoke\"|\"Approval\",\n  \"owner\": \"AWS\"|\"ThirdParty\"|\"Custom\",\n  \"provider\": \"string\",\n  \"version\": \"string\"\n}\n\n\n--max-batch-size (integer)\n\nThe maximum number of jobs to return in a poll for jobs call.\n\n--query-param (map)\n\nA map of property names and values. For an action type with no queryable properties, this value must be null or an empty map. For an action type with a queryable property, you must supply that property as a key in the map. Only jobs whose action configuration matches the mapped value are returned.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobs -> (list)\n\nInformation about the jobs to take action on.\n\n(structure)\n\nRepresents information about a job.\n\nid -> (string)\n\nThe unique system-generated ID of the job.\n\ndata -> (structure)\n\nOther data about a job.\n\nactionTypeId -> (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nactionConfiguration -> (structure)\n\nRepresents information about an action configuration.\n\nconfiguration -> (map)\n\nThe configuration data for the action.\n\nkey -> (string)\n\nvalue -> (string)\n\npipelineContext -> (structure)\n\nRepresents information about a pipeline to a job worker.\n\nNote\n\nIncludes pipelineArn and pipelineExecutionId for custom jobs.\n\npipelineName -> (string)\n\nThe name of the pipeline. This is a user-specified value. Pipeline names must be unique across all pipeline names under an Amazon Web Services account.\n\nstage -> (structure)\n\nThe stage of the pipeline.\n\nname -> (string)\n\nThe name of the stage.\n\naction -> (structure)\n\nThe context of an action to a job worker in the stage of a pipeline.\n\nname -> (string)\n\nThe name of the action in the context of a job.\n\nactionExecutionId -> (string)\n\nThe system-generated unique ID that corresponds to an action’s execution.\n\npipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the pipeline.\n\npipelineExecutionId -> (string)\n\nThe execution ID of the pipeline.\n\ninputArtifacts -> (list)\n\nThe artifact supplied to the job.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\noutputArtifacts -> (list)\n\nThe output of the job.\n\n(structure)\n\nRepresents information about an artifact that is worked on by actions in the pipeline.\n\nname -> (string)\n\nThe artifact’s name.\n\nrevision -> (string)\n\nThe artifact’s revision ID. Depending on the type of object, this could be a commit ID (GitHub) or a revision ID (Amazon S3).\n\nlocation -> (structure)\n\nThe location of an artifact.\n\ntype -> (string)\n\nThe type of artifact in the location.\n\ns3Location -> (structure)\n\nThe S3 bucket that contains the artifact.\n\nbucketName -> (string)\n\nThe name of the S3 bucket.\n\nobjectKey -> (string)\n\nThe key of the object in the S3 bucket, which uniquely identifies the object in the bucket.\n\nartifactCredentials -> (structure)\n\nRepresents an AWS session credentials object. These credentials are temporary credentials that are issued by AWS Secure Token Service (STS). They can be used to access input and output artifacts in the S3 bucket used to store artifacts for the pipeline in AWS CodePipeline.\n\naccessKeyId -> (string)\n\nThe access key for the session.\n\nsecretAccessKey -> (string)\n\nThe secret access key for the session.\n\nsessionToken -> (string)\n\nThe token for the session.\n\ncontinuationToken -> (string)\n\nA system-generated token, such as a AWS CodeDeploy deployment ID, required by a job to continue the job asynchronously.\n\nencryptionKey -> (structure)\n\nRepresents information about the key used to encrypt data in the artifact store, such as an AWS Key Management Service (AWS KMS) key.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nnonce -> (string)\n\nA system-generated random number that AWS CodePipeline uses to ensure that the job is being worked on by only one job worker. Use this number in an AcknowledgeJob request.\n\naccountId -> (string)\n\nThe ID of the AWS account to use when performing the job.",
      "command_examples": "Examples\n\nTo view any available jobs\n\nThis example returns information about any jobs for a job worker to act upon. This example uses a pre-defined JSON file (MyActionTypeInfo.json) to supply information about the action type for which the job worker processes jobs. This command is only used for custom actions. When this command is called, AWS CodePipeline returns temporary credentials for the Amazon S3 bucket used to store artifacts for the pipeline. This command will also return any secret values defined for the action, if any are defined.\n\nCommand:\n\naws codepipeline poll-for-jobs --cli-input-json file://MyActionTypeInfo.json\n\n\nJSON file sample contents:\n\n{\n  \"actionTypeId\": {\n    \"category\": \"Test\",\n    \"owner\": \"Custom\",\n    \"provider\": \"MyJenkinsProviderName\",\n    \"version\": \"1\"\n  },\n  \"maxBatchSize\": 5,\n  \"queryParam\": {\n      \"ProjectName\": \"MyJenkinsTestProject\"\n  }\n}\n\n\nOutput:\n\n{\n \"jobs\": [\n  {\n    \"accountId\": \"111111111111\",\n    \"data\": {\n      \"actionConfiguration\": {\n        \"__type\": \"ActionConfiguration\",\n        \"configuration\": {\n          \"ProjectName\": \"MyJenkinsExampleTestProject\"\n        }\n      },\n      \"actionTypeId\": {\n        \"__type\": \"ActionTypeId\",\n        \"category\": \"Test\",\n        \"owner\": \"Custom\",\n        \"provider\": \"MyJenkinsProviderName\",\n        \"version\": \"1\"\n      },\n      \"artifactCredentials\": {\n        \"__type\": \"AWSSessionCredentials\",\n        \"accessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n        \"secretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\",\n        \"sessionToken\": \"fICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcNMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9TrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpEIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0FkbFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTbNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=\"\n      },\n      \"inputArtifacts\": [\n        {\n          \"__type\": \"Artifact\",\n          \"location\": {\n            \"s3Location\": {\n              \"bucketName\": \"codepipeline-us-east-1-11EXAMPLE11\",\n              \"objectKey\": \"MySecondPipeline/MyAppBuild/EXAMPLE\"\n            },\n            \"type\": \"S3\"\n          },\n          \"name\": \"MyAppBuild\"\n        }\n      ],\n      \"outputArtifacts\": [],\n      \"pipelineContext\": {\n        \"__type\": \"PipelineContext\",\n        \"action\": {\n          \"name\": \"MyJenkinsTest-Action\"\n        },\n        \"pipelineName\": \"MySecondPipeline\",\n        \"stage\": {\n          \"name\": \"Testing\"\n        }\n      }\n    },\n    \"id\": \"ef66c259-64f9-EXAMPLE\",\n    \"nonce\": \"3\"\n  }\n ]\n}\n"
    },
    {
      "command_name": "poll-for-third-party-jobs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/poll-for-third-party-jobs.html",
      "command_description": "Description\n\nDetermines whether there are any third party jobs for a job worker to act on. Used for partner actions only.\n\nWarning\n\nWhen this API is called, AWS CodePipeline returns temporary credentials for the S3 bucket used to store artifacts for the pipeline, if the action requires access to that S3 bucket for input or output artifacts.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  poll-for-third-party-jobs\n--action-type-id <value>\n[--max-batch-size <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--action-type-id <value>",
        "[--max-batch-size <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--action-type-id (structure)\n\nRepresents information about an action type.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nShorthand Syntax:\n\ncategory=string,owner=string,provider=string,version=string\n\n\nJSON Syntax:\n\n{\n  \"category\": \"Source\"|\"Build\"|\"Deploy\"|\"Test\"|\"Invoke\"|\"Approval\",\n  \"owner\": \"AWS\"|\"ThirdParty\"|\"Custom\",\n  \"provider\": \"string\",\n  \"version\": \"string\"\n}\n\n\n--max-batch-size (integer)\n\nThe maximum number of jobs to return in a poll for jobs call.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\njobs -> (list)\n\nInformation about the jobs to take action on.\n\n(structure)\n\nA response to a PollForThirdPartyJobs request returned by AWS CodePipeline when there is a job to be worked on by a partner action.\n\nclientId -> (string)\n\nThe clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.\n\njobId -> (string)\n\nThe identifier used to identify the job in AWS CodePipeline."
    },
    {
      "command_name": "put-action-revision",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-action-revision.html",
      "command_description": "Description\n\nProvides information to AWS CodePipeline about new revisions to a source.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-action-revision\n--pipeline-name <value>\n--stage-name <value>\n--action-name <value>\n--action-revision <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--stage-name <value>",
        "--action-name <value>",
        "--action-revision <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline that starts processing the revision to the source.\n\n--stage-name (string)\n\nThe name of the stage that contains the action that acts on the revision.\n\n--action-name (string)\n\nThe name of the action that processes the revision.\n\n--action-revision (structure)\n\nRepresents information about the version (or revision) of an action.\n\nrevisionId -> (string)\n\nThe system-generated unique ID that identifies the revision number of the action.\n\nrevisionChangeId -> (string)\n\nThe unique identifier of the change that set the state to this revision (for example, a deployment ID or timestamp).\n\ncreated -> (timestamp)\n\nThe date and time when the most recent version of the action was created, in timestamp format.\n\nShorthand Syntax:\n\nrevisionId=string,revisionChangeId=string,created=timestamp\n\n\nJSON Syntax:\n\n{\n  \"revisionId\": \"string\",\n  \"revisionChangeId\": \"string\",\n  \"created\": timestamp\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnewRevision -> (boolean)\n\nIndicates whether the artifact revision was previously used in an execution of the specified pipeline.\n\npipelineExecutionId -> (string)\n\nThe ID of the current workflow state of the pipeline."
    },
    {
      "command_name": "put-approval-result",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-approval-result.html",
      "command_description": "Description\n\nProvides the response to a manual approval request to AWS CodePipeline. Valid responses include Approved and Rejected.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-approval-result\n--pipeline-name <value>\n--stage-name <value>\n--action-name <value>\n--result <value>\n--token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--stage-name <value>",
        "--action-name <value>",
        "--result <value>",
        "--token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline that contains the action.\n\n--stage-name (string)\n\nThe name of the stage that contains the action.\n\n--action-name (string)\n\nThe name of the action for which approval is requested.\n\n--result (structure)\n\nRepresents information about the result of the approval request.\n\nsummary -> (string)\n\nThe summary of the current status of the approval request.\n\nstatus -> (string)\n\nThe response submitted by a reviewer assigned to an approval action request.\n\nShorthand Syntax:\n\nsummary=string,status=string\n\n\nJSON Syntax:\n\n{\n  \"summary\": \"string\",\n  \"status\": \"Approved\"|\"Rejected\"\n}\n\n\n--token (string)\n\nThe system-generated token used to identify a unique approval request. The token for each open approval request can be obtained using the GetPipelineState action. It is used to validate that the approval request corresponding to this token is still valid.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\napprovedAt -> (timestamp)\n\nThe timestamp showing when the approval or rejection was submitted."
    },
    {
      "command_name": "put-job-failure-result",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-job-failure-result.html",
      "command_description": "Description\n\nRepresents the failure of a job as returned to the pipeline by a job worker. Used for custom actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-job-failure-result\n--job-id <value>\n--failure-details <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--failure-details <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID of the job that failed. This is the same ID returned from PollForJobs .\n\n--failure-details (structure)\n\nThe details about the failure of a job.\n\ntype -> (string)\n\nThe type of the failure.\n\nmessage -> (string)\n\nThe message about the failure.\n\nexternalExecutionId -> (string)\n\nThe external ID of the run of the action that failed.\n\nShorthand Syntax:\n\ntype=string,message=string,externalExecutionId=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"JobFailed\"|\"ConfigurationError\"|\"PermissionError\"|\"RevisionOutOfSync\"|\"RevisionUnavailable\"|\"SystemUnavailable\",\n  \"message\": \"string\",\n  \"externalExecutionId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-job-success-result",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-job-success-result.html",
      "command_description": "Description\n\nRepresents the success of a job as returned to the pipeline by a job worker. Used for custom actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-job-success-result\n--job-id <value>\n[--current-revision <value>]\n[--continuation-token <value>]\n[--execution-details <value>]\n[--output-variables <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "[--current-revision <value>]",
        "[--continuation-token <value>]",
        "[--execution-details <value>]",
        "[--output-variables <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe unique system-generated ID of the job that succeeded. This is the same ID returned from PollForJobs .\n\n--current-revision (structure)\n\nThe ID of the current revision of the artifact successfully worked on by the job.\n\nrevision -> (string)\n\nThe revision ID of the current version of an artifact.\n\nchangeIdentifier -> (string)\n\nThe change identifier for the current revision.\n\ncreated -> (timestamp)\n\nThe date and time when the most recent revision of the artifact was created, in timestamp format.\n\nrevisionSummary -> (string)\n\nThe summary of the most recent revision of the artifact.\n\nShorthand Syntax:\n\nrevision=string,changeIdentifier=string,created=timestamp,revisionSummary=string\n\n\nJSON Syntax:\n\n{\n  \"revision\": \"string\",\n  \"changeIdentifier\": \"string\",\n  \"created\": timestamp,\n  \"revisionSummary\": \"string\"\n}\n\n\n--continuation-token (string)\n\nA token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.\n\n--execution-details (structure)\n\nThe execution details of the successful job, such as the actions taken by the job worker.\n\nsummary -> (string)\n\nThe summary of the current status of the actions.\n\nexternalExecutionId -> (string)\n\nThe system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.\n\npercentComplete -> (integer)\n\nThe percentage of work completed on the action, represented on a scale of 0 to 100 percent.\n\nShorthand Syntax:\n\nsummary=string,externalExecutionId=string,percentComplete=integer\n\n\nJSON Syntax:\n\n{\n  \"summary\": \"string\",\n  \"externalExecutionId\": \"string\",\n  \"percentComplete\": integer\n}\n\n\n--output-variables (map)\n\nKey-value pairs produced as output by a job worker that can be made available to a downstream action configuration. outputVariables can be included only when there is no continuation token on the request.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-third-party-job-failure-result",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-third-party-job-failure-result.html",
      "command_description": "Description\n\nRepresents the failure of a third party job as returned to the pipeline by a job worker. Used for partner actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-third-party-job-failure-result\n--job-id <value>\n--client-token <value>\n--failure-details <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--client-token <value>",
        "--failure-details <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe ID of the job that failed. This is the same ID returned from PollForThirdPartyJobs .\n\n--client-token (string)\n\nThe clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.\n\n--failure-details (structure)\n\nRepresents information about failure details.\n\ntype -> (string)\n\nThe type of the failure.\n\nmessage -> (string)\n\nThe message about the failure.\n\nexternalExecutionId -> (string)\n\nThe external ID of the run of the action that failed.\n\nShorthand Syntax:\n\ntype=string,message=string,externalExecutionId=string\n\n\nJSON Syntax:\n\n{\n  \"type\": \"JobFailed\"|\"ConfigurationError\"|\"PermissionError\"|\"RevisionOutOfSync\"|\"RevisionUnavailable\"|\"SystemUnavailable\",\n  \"message\": \"string\",\n  \"externalExecutionId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-third-party-job-success-result",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-third-party-job-success-result.html",
      "command_description": "Description\n\nRepresents the success of a third party job as returned to the pipeline by a job worker. Used for partner actions only.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-third-party-job-success-result\n--job-id <value>\n--client-token <value>\n[--current-revision <value>]\n[--continuation-token <value>]\n[--execution-details <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--job-id <value>",
        "--client-token <value>",
        "[--current-revision <value>]",
        "[--continuation-token <value>]",
        "[--execution-details <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--job-id (string)\n\nThe ID of the job that successfully completed. This is the same ID returned from PollForThirdPartyJobs .\n\n--client-token (string)\n\nThe clientToken portion of the clientId and clientToken pair used to verify that the calling entity is allowed access to the job and its details.\n\n--current-revision (structure)\n\nRepresents information about a current revision.\n\nrevision -> (string)\n\nThe revision ID of the current version of an artifact.\n\nchangeIdentifier -> (string)\n\nThe change identifier for the current revision.\n\ncreated -> (timestamp)\n\nThe date and time when the most recent revision of the artifact was created, in timestamp format.\n\nrevisionSummary -> (string)\n\nThe summary of the most recent revision of the artifact.\n\nShorthand Syntax:\n\nrevision=string,changeIdentifier=string,created=timestamp,revisionSummary=string\n\n\nJSON Syntax:\n\n{\n  \"revision\": \"string\",\n  \"changeIdentifier\": \"string\",\n  \"created\": timestamp,\n  \"revisionSummary\": \"string\"\n}\n\n\n--continuation-token (string)\n\nA token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a partner action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the partner action. When the action is complete, no continuation token should be supplied.\n\n--execution-details (structure)\n\nThe details of the actions taken and results produced on an artifact as it passes through stages in the pipeline.\n\nsummary -> (string)\n\nThe summary of the current status of the actions.\n\nexternalExecutionId -> (string)\n\nThe system-generated unique ID of this action used to identify this job worker in any external systems, such as AWS CodeDeploy.\n\npercentComplete -> (integer)\n\nThe percentage of work completed on the action, represented on a scale of 0 to 100 percent.\n\nShorthand Syntax:\n\nsummary=string,externalExecutionId=string,percentComplete=integer\n\n\nJSON Syntax:\n\n{\n  \"summary\": \"string\",\n  \"externalExecutionId\": \"string\",\n  \"percentComplete\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-webhook",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/put-webhook.html",
      "command_description": "Description\n\nDefines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there’s a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-webhook\n--webhook <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--webhook <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--webhook (structure)\n\nThe detail provided in an input file to create the webhook, such as the webhook name, the pipeline name, and the action name. Give the webhook a unique name that helps you identify it. You might name the webhook after the pipeline and action it targets so that you can easily recognize what it’s used for later.\n\nname -> (string)\n\nThe name of the webhook.\n\ntargetPipeline -> (string)\n\nThe name of the pipeline you want to connect to the webhook.\n\ntargetAction -> (string)\n\nThe name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.\n\nfilters -> (list)\n\nA list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.\n\n(structure)\n\nThe event criteria that specify when a webhook notification is sent to your URL.\n\njsonPath -> (string)\n\nA JsonPath expression that is applied to the body/payload of the webhook. The value selected by the JsonPath expression must match the value specified in the MatchEquals field. Otherwise, the request is ignored. For more information, see Java JsonPath implementation in GitHub.\n\nmatchEquals -> (string)\n\nThe value selected by the JsonPath expression must match what is supplied in the MatchEquals field. Otherwise, the request is ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly brackets. For example, if the value supplied here is “refs/heads/{Branch}” and the target action has an action configuration property called “Branch” with a value of “master”, the MatchEquals value is evaluated as “refs/heads/master”. For a list of action configuration properties for built-in action types, see Pipeline Structure Reference Action Requirements .\n\nauthentication -> (string)\n\nSupported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.\n\nFor information about the authentication scheme implemented by GITHUB_HMAC, see Securing your webhooks on the GitHub Developer website.\n\nIP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.\n\nUNAUTHENTICATED accepts all webhook trigger requests regardless of origin.\n\nauthenticationConfiguration -> (structure)\n\nProperties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the SecretToken property must be set. For IP, only the AllowedIPRange property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.\n\nAllowedIPRange -> (string)\n\nThe property used to configure acceptance of webhooks in an IP address range. For IP, only the AllowedIPRange property must be set. This property must be set to a valid CIDR range.\n\nSecretToken -> (string)\n\nThe property used to configure GitHub authentication. For GITHUB_HMAC, only the SecretToken property must be set.\n\nShorthand Syntax:\n\nname=string,targetPipeline=string,targetAction=string,filters=[{jsonPath=string,matchEquals=string},{jsonPath=string,matchEquals=string}],authentication=string,authenticationConfiguration={AllowedIPRange=string,SecretToken=string}\n\n\nJSON Syntax:\n\n{\n  \"name\": \"string\",\n  \"targetPipeline\": \"string\",\n  \"targetAction\": \"string\",\n  \"filters\": [\n    {\n      \"jsonPath\": \"string\",\n      \"matchEquals\": \"string\"\n    }\n    ...\n  ],\n  \"authentication\": \"GITHUB_HMAC\"|\"IP\"|\"UNAUTHENTICATED\",\n  \"authenticationConfiguration\": {\n    \"AllowedIPRange\": \"string\",\n    \"SecretToken\": \"string\"\n  }\n}\n\n\n--tags (list)\n\nThe tags for the webhook.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nwebhook -> (structure)\n\nThe detail returned from creating the webhook, such as the webhook name, webhook URL, and webhook ARN.\n\ndefinition -> (structure)\n\nThe detail returned for each webhook, such as the webhook authentication type and filter rules.\n\nname -> (string)\n\nThe name of the webhook.\n\ntargetPipeline -> (string)\n\nThe name of the pipeline you want to connect to the webhook.\n\ntargetAction -> (string)\n\nThe name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.\n\nfilters -> (list)\n\nA list of rules applied to the body/payload sent in the POST request to a webhook URL. All defined rules must pass for the request to be accepted and the pipeline started.\n\n(structure)\n\nThe event criteria that specify when a webhook notification is sent to your URL.\n\njsonPath -> (string)\n\nA JsonPath expression that is applied to the body/payload of the webhook. The value selected by the JsonPath expression must match the value specified in the MatchEquals field. Otherwise, the request is ignored. For more information, see Java JsonPath implementation in GitHub.\n\nmatchEquals -> (string)\n\nThe value selected by the JsonPath expression must match what is supplied in the MatchEquals field. Otherwise, the request is ignored. Properties from the target action configuration can be included as placeholders in this value by surrounding the action configuration key with curly brackets. For example, if the value supplied here is “refs/heads/{Branch}” and the target action has an action configuration property called “Branch” with a value of “master”, the MatchEquals value is evaluated as “refs/heads/master”. For a list of action configuration properties for built-in action types, see Pipeline Structure Reference Action Requirements .\n\nauthentication -> (string)\n\nSupported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.\n\nFor information about the authentication scheme implemented by GITHUB_HMAC, see Securing your webhooks on the GitHub Developer website.\n\nIP rejects webhooks trigger requests unless they originate from an IP address in the IP range whitelisted in the authentication configuration.\n\nUNAUTHENTICATED accepts all webhook trigger requests regardless of origin.\n\nauthenticationConfiguration -> (structure)\n\nProperties that configure the authentication applied to incoming webhook trigger requests. The required properties depend on the authentication type. For GITHUB_HMAC, only the SecretToken property must be set. For IP, only the AllowedIPRange property must be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.\n\nAllowedIPRange -> (string)\n\nThe property used to configure acceptance of webhooks in an IP address range. For IP, only the AllowedIPRange property must be set. This property must be set to a valid CIDR range.\n\nSecretToken -> (string)\n\nThe property used to configure GitHub authentication. For GITHUB_HMAC, only the SecretToken property must be set.\n\nurl -> (string)\n\nA unique URL generated by CodePipeline. When a POST request is made to this URL, the defined pipeline is started as long as the body of the post request satisfies the defined authentication and filtering conditions. Deleting and re-creating a webhook makes the old URL invalid and generates a new one.\n\nerrorMessage -> (string)\n\nThe text of the error message about the webhook.\n\nerrorCode -> (string)\n\nThe number code of the error.\n\nlastTriggered -> (timestamp)\n\nThe date and time a webhook was last successfully triggered, in timestamp format.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the webhook.\n\ntags -> (list)\n\nSpecifies the tags applied to the webhook.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.",
      "command_examples": "Examples\n\nTo create a webhook\n\nThe following put-webhook example creates a webhook for a GitHub version 1 source action. After you create the webhook, you must use the register-webhook-with-third-party command to register it.\n\naws codepipeline put-webhook \\\n    --cli-input-json file://webhook_json.json \\\n    --region \"eu-central-1\"\n\n\nContents of webhook_json.json:\n\n{\n    \"webhook\": {\n        \"name\": \"my-webhook\",\n        \"targetPipeline\": \"pipeline_name\",\n        \"targetAction\": \"source_action_name\",\n        \"filters\": [\n            {\n                \"jsonPath\": \"$.ref\",\n                \"matchEquals\": \"refs/heads/{Branch}\"\n            }\n        ],\n        \"authentication\": \"GITHUB_HMAC\",\n        \"authenticationConfiguration\": {\n            \"SecretToken\": \"secret\"\n        }\n    }\n}\n\n\nOutput:\n\n{\n    \"webhook\": {\n        \"url\": \"https://webhooks.domain.com/trigger111111111EXAMPLE11111111111111111\",\n        \"definition\": {\n            \"authenticationConfiguration\": {\n                \"SecretToken\": \"secret\"\n            },\n            \"name\": \"my-webhook\",\n            \"authentication\": \"GITHUB_HMAC\",\n            \"targetPipeline\": \"pipeline_name\",\n            \"targetAction\": \"Source\",\n            \"filters\": [\n                {\n                    \"jsonPath\": \"$.ref\",\n                    \"matchEquals\": \"refs/heads/{Branch}\"\n                }\n            ]\n        },\n        \"arn\": \"arn:aws:codepipeline:eu-central-1:123456789012:webhook:my-webhook\"\n    },\n    \"tags\": [\n        {\n            \"key\": \"Project\",\n            \"value\": \"ProjectA\"\n        }\n    ]\n}\n\n\nFor more information, see Create a webhook for a GitHub source in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "register-webhook-with-third-party",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/register-webhook-with-third-party.html",
      "command_description": "Description\n\nConfigures a connection between the webhook that was created and the external tool with events to be detected.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  register-webhook-with-third-party\n[--webhook-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--webhook-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--webhook-name (string)\n\nThe name of an existing webhook created with PutWebhook to register with a supported third party.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "retry-stage-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/retry-stage-execution.html",
      "command_description": "Description\n\nResumes the pipeline execution by retrying the last failed actions in a stage. You can retry a stage immediately if any of the actions in the stage fail. When you retry, all actions that are still in progress continue working, and failed actions are triggered again.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  retry-stage-execution\n--pipeline-name <value>\n--stage-name <value>\n--pipeline-execution-id <value>\n--retry-mode <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--stage-name <value>",
        "--pipeline-execution-id <value>",
        "--retry-mode <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline that contains the failed stage.\n\n--stage-name (string)\n\nThe name of the failed stage to be retried.\n\n--pipeline-execution-id (string)\n\nThe ID of the pipeline execution in the failed stage to be retried. Use the GetPipelineState action to retrieve the current pipelineExecutionId of the failed stage\n\n--retry-mode (string)\n\nThe scope of the retry attempt. Currently, the only supported value is FAILED_ACTIONS.\n\nPossible values:\n\nFAILED_ACTIONS\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineExecutionId -> (string)\n\nThe ID of the current workflow execution in the failed stage.",
      "command_examples": "Examples\n\nTo retry a failed action\n\nThe following retry-stage-execution example retries a stage that has a failed action.\n\naws codepipeline retry-stage-execution \\\n    --pipeline-name MyPipeline \\\n    --stage-name Deploy \\\n    --pipeline-execution-id b59babff-5f34-EXAMPLE \\\n    --retry-mode FAILED_ACTIONS\n\n\nOutput:\n\n{\n    \"pipelineExecutionId\": \"b59babff-5f34-EXAMPLE\"\n}\n\n\nFor more information, see Retry failed actions (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "start-pipeline-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/start-pipeline-execution.html",
      "command_description": "Description\n\nStarts the specified pipeline. Specifically, it begins processing the latest commit to the source location specified as part of the pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-pipeline-execution\n--name <value>\n[--client-request-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--client-request-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the pipeline to start.\n\n--client-request-token (string)\n\nThe system-generated unique ID used to identify a unique execution request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineExecutionId -> (string)\n\nThe unique system-generated ID of the pipeline execution that was started.",
      "command_examples": "Examples\n\nTo run the latest revision through a pipeline\n\nThis example runs the latest revision present in the source stage of a pipeline through the pipeline named “MyFirstPipeline”.\n\nCommand:\n\naws codepipeline start-pipeline-execution --name MyFirstPipeline\n\n\nOutput:\n\n{\n  \"pipelineExecutionId\": \"3137f7cb-7cf7-EXAMPLE\"\n}\n"
    },
    {
      "command_name": "stop-pipeline-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/stop-pipeline-execution.html",
      "command_description": "Description\n\nStops the specified pipeline execution. You choose to either stop the pipeline execution by completing in-progress actions without starting subsequent actions, or by abandoning in-progress actions. While completing or abandoning in-progress actions, the pipeline execution is in a Stopping state. After all in-progress actions are completed or abandoned, the pipeline execution is in a Stopped state.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-pipeline-execution\n--pipeline-name <value>\n--pipeline-execution-id <value>\n[--abandon | --no-abandon]\n[--reason <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline-name <value>",
        "--pipeline-execution-id <value>",
        "[--abandon | --no-abandon]",
        "[--reason <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline-name (string)\n\nThe name of the pipeline to stop.\n\n--pipeline-execution-id (string)\n\nThe ID of the pipeline execution to be stopped in the current stage. Use the GetPipelineState action to retrieve the current pipelineExecutionId.\n\n--abandon | --no-abandon (boolean)\n\nUse this option to stop the pipeline execution by abandoning, rather than finishing, in-progress actions.\n\nNote\n\nThis option can lead to failed or out-of-sequence tasks.\n\n--reason (string)\n\nUse this option to enter comments, such as the reason the pipeline was stopped.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipelineExecutionId -> (string)\n\nThe unique system-generated ID of the pipeline execution that was stopped.",
      "command_examples": "Examples\n\nTo stop a pipeline execution\n\nThe following stop-pipeline-execution example defaults to waiting until in-progress actions finish, and then stops the pipeline. You cannot choose to stop and wait if the execution is already in a Stopping state. You can choose to stop and abandon an execution that is already in a Stopping state.\n\naws codepipeline stop-pipeline-execution \\\n    --pipeline-name MyFirstPipeline \\\n    --pipeline-execution-id d-EXAMPLE \\\n    --reason \"Stopping pipeline after the build action is done\"\n\n\nThis command returns no output.\n\nFor more information, see Stop a pipeline execution (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/tag-resource.html",
      "command_description": "Description\n\nAdds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource you want to add tags to.\n\n--tags (list)\n\nThe tags you want to modify or add to the resource.\n\n(structure)\n\nA tag is a key-value pair that is used to manage the resource.\n\nkey -> (string)\n\nThe tag’s key.\n\nvalue -> (string)\n\nThe tag’s value.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resource\n\nThe following tag-resource example associates a set of provided tags with a pipeline. Use this command to add or edit tags.\n\naws codepipeline tag-resource \\\n    --resource-arn arn:aws:codepipeline:us-east-1:123456789012:MyPipeline \\\n    --tags key=Project,value=ProjectA key=IscontainerBased,value=true\n\n\nThis command produces no output.\n\nFor more information, see Add tags to a pipeline (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/untag-resource.html",
      "command_description": "Description\n\nRemoves tags from an AWS resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource to remove tags from.\n\n--tag-keys (list)\n\nThe list of keys for the tags to be removed from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove AWS tags from a connections resource\n\nThe following untag-resource example removes a tag from the specified resource.\n\naws codepipeline untag-resource \\\n    --resource-arn arn:aws:codepipeline:us-east-1:123456789012:MyPipeline \\\n    --tag-keys Project IscontainerBased\n\n\nThis command produces no output.\n\nFor more information, see Remove tags from a pipeline (CLI) in the AWS CodePipeline User Guide."
    },
    {
      "command_name": "update-action-type",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/update-action-type.html",
      "command_description": "Description\n\nUpdates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider. Use a JSON file with the action definition and UpdateActionType to provide the full structure.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-action-type\n--action-type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--action-type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--action-type (structure)\n\nThe action type definition for the action type to be updated.\n\ndescription -> (string)\n\nThe description for the action type to be updated.\n\nexecutor -> (structure)\n\nInformation about the executor for an action type that was created with any supported integration model.\n\nconfiguration -> (structure)\n\nThe action configuration properties for the action type. These properties are specified in the action definition when the action type is created.\n\nlambdaExecutorConfiguration -> (structure)\n\nDetails about the Lambda executor of the action type.\n\nlambdaFunctionArn -> (string)\n\nThe ARN of the Lambda function used by the action engine.\n\njobWorkerExecutorConfiguration -> (structure)\n\nDetails about the JobWorker executor of the action type.\n\npollingAccounts -> (list)\n\nThe accounts in which the job worker is configured and might poll for jobs as part of the action execution.\n\n(string)\n\npollingServicePrincipals -> (list)\n\nThe service Principals in which the job worker is configured and might poll for jobs as part of the action execution.\n\n(string)\n\ntype -> (string)\n\nThe integration model used to create and update the action type, Lambda or JobWorker .\n\npolicyStatementsTemplate -> (string)\n\nThe policy statement that specifies the permissions in the CodePipeline customer’s account that are needed to successfully run an action.\n\nTo grant permission to another account, specify the account ID as the Principal, a domain-style identifier defined by the service, for example codepipeline.amazonaws.com .\n\nNote\n\nThe size of the passed JSON policy document cannot exceed 2048 characters.\n\njobTimeout -> (integer)\n\nThe timeout in seconds for the job. An action execution can have multiple jobs. This is the timeout for a single job, not the entire action execution.\n\nid -> (structure)\n\nThe action category, owner, provider, and version of the action type to be updated.\n\ncategory -> (string)\n\nDefines what kind of action can be taken in the stage, one of the following:\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nApproval\n\nInvoke\n\nowner -> (string)\n\nThe creator of the action type being called: AWS or ThirdParty .\n\nprovider -> (string)\n\nThe provider of the action type being called. The provider name is supplied when the action type is created.\n\nversion -> (string)\n\nA string that describes the action type version.\n\ninputArtifactDetails -> (structure)\n\nDetails for the artifacts, such as application files, to be worked on by the action. For example, the minimum and maximum number of input artifacts allowed.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts that can be used with the action type. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts that can be used with the actiontype. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\noutputArtifactDetails -> (structure)\n\nDetails for the output artifacts, such as a built application, that are the result of the action. For example, the minimum and maximum number of output artifacts allowed.\n\nminimumCount -> (integer)\n\nThe minimum number of artifacts that can be used with the action type. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\nmaximumCount -> (integer)\n\nThe maximum number of artifacts that can be used with the actiontype. For example, you should specify a minimum and maximum of zero input artifacts for an action type with a category of source .\n\npermissions -> (structure)\n\nDetails identifying the accounts with permissions to use the action type.\n\nallowedAccounts -> (list)\n\nA list of AWS account IDs with access to use the action type in their pipelines.\n\n(string)\n\nproperties -> (list)\n\nThe properties of the action type to be updated.\n\n(structure)\n\nRepresents information about each property specified in the action configuration, such as the description and key name that display for the customer using the action type.\n\nname -> (string)\n\nThe property name that is displayed to users.\n\noptional -> (boolean)\n\nWhether the configuration property is an optional value.\n\nkey -> (boolean)\n\nWhether the configuration property is a key.\n\nnoEcho -> (boolean)\n\nWhether to omit the field value entered by the customer in the log. If true , the value is not saved in CloudTrail logs for the action execution.\n\nqueryable -> (boolean)\n\nIndicates that the property is used with polling. An action type can have up to one queryable property. If it has one, that property must be both required and not secret.\n\ndescription -> (string)\n\nThe description of the property that is displayed to users.\n\nurls -> (structure)\n\nThe links associated with the action type to be updated.\n\nconfigurationUrl -> (string)\n\nThe URL returned to the CodePipeline console that contains a link to the page where customers can configure the external action.\n\nentityUrlTemplate -> (string)\n\nThe URL returned to the CodePipeline console that provides a deep link to the resources of the external system, such as a status page. This link is provided as part of the action display in the pipeline.\n\nexecutionUrlTemplate -> (string)\n\nThe link to an execution page for the action type in progress. For example, for a CodeDeploy action, this link is shown on the pipeline view page in the CodePipeline console, and it links to a CodeDeploy status page.\n\nrevisionUrlTemplate -> (string)\n\nThe URL returned to the CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.\n\nJSON Syntax:\n\n{\n  \"description\": \"string\",\n  \"executor\": {\n    \"configuration\": {\n      \"lambdaExecutorConfiguration\": {\n        \"lambdaFunctionArn\": \"string\"\n      },\n      \"jobWorkerExecutorConfiguration\": {\n        \"pollingAccounts\": [\"string\", ...],\n        \"pollingServicePrincipals\": [\"string\", ...]\n      }\n    },\n    \"type\": \"JobWorker\"|\"Lambda\",\n    \"policyStatementsTemplate\": \"string\",\n    \"jobTimeout\": integer\n  },\n  \"id\": {\n    \"category\": \"Source\"|\"Build\"|\"Deploy\"|\"Test\"|\"Invoke\"|\"Approval\",\n    \"owner\": \"string\",\n    \"provider\": \"string\",\n    \"version\": \"string\"\n  },\n  \"inputArtifactDetails\": {\n    \"minimumCount\": integer,\n    \"maximumCount\": integer\n  },\n  \"outputArtifactDetails\": {\n    \"minimumCount\": integer,\n    \"maximumCount\": integer\n  },\n  \"permissions\": {\n    \"allowedAccounts\": [\"string\", ...]\n  },\n  \"properties\": [\n    {\n      \"name\": \"string\",\n      \"optional\": true|false,\n      \"key\": true|false,\n      \"noEcho\": true|false,\n      \"queryable\": true|false,\n      \"description\": \"string\"\n    }\n    ...\n  ],\n  \"urls\": {\n    \"configurationUrl\": \"string\",\n    \"entityUrlTemplate\": \"string\",\n    \"executionUrlTemplate\": \"string\",\n    \"revisionUrlTemplate\": \"string\"\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/codepipeline/update-pipeline.html",
      "command_description": "Description\n\nUpdates a specified pipeline with edits or changes to its structure. Use a JSON file with the pipeline structure and UpdatePipeline to provide the full structure of the pipeline. Updating the pipeline increases the version number of the pipeline by 1.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-pipeline\n--pipeline <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--pipeline <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--pipeline (structure)\n\nThe name of the pipeline to be updated.\n\nname -> (string)\n\nThe name of the pipeline.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn , or to use to assume roles for actions with an actionRoleArn .\n\nartifactStore -> (structure)\n\nRepresents information about the S3 bucket where artifacts are stored for the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nartifactStores -> (map)\n\nA mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe S3 bucket where artifacts for the pipeline are stored.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nstages -> (list)\n\nThe stage in which to perform the action.\n\n(structure)\n\nRepresents information about a stage and its definition.\n\nname -> (string)\n\nThe name of the stage.\n\nblockers -> (list)\n\nReserved for future use.\n\n(structure)\n\nReserved for future use.\n\nname -> (string)\n\nReserved for future use.\n\ntype -> (string)\n\nReserved for future use.\n\nactions -> (list)\n\nThe actions included in a stage.\n\n(structure)\n\nRepresents information about an action declaration.\n\nname -> (string)\n\nThe action declaration’s name.\n\nactionTypeId -> (structure)\n\nSpecifies the action type and the provider of the action.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nrunOrder -> (integer)\n\nThe order in which actions are run.\n\nconfiguration -> (map)\n\nThe action’s configuration. These are key-value pairs that specify input values for an action. For more information, see Action Structure Requirements in CodePipeline . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see Configuration Properties Reference in the AWS CloudFormation User Guide . For template snippets with examples, see Using Parameter Override Functions with CodePipeline Pipelines in the AWS CloudFormation User Guide .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\nJSON:\n\n\"Configuration\" : { Key : Value },\n\nkey -> (string)\n\nvalue -> (string)\n\noutputArtifacts -> (list)\n\nThe name or ID of the result of the action declaration, such as a test or build artifact.\n\n(structure)\n\nRepresents information about the output of an action.\n\nname -> (string)\n\nThe name of the output of an artifact, such as “My App”.\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.\n\ninputArtifacts -> (list)\n\nThe name or ID of the artifact consumed by the action, such as a test or build artifact.\n\n(structure)\n\nRepresents information about an artifact to be worked on, such as a test or build artifact.\n\nname -> (string)\n\nThe name of the artifact to be worked on (for example, “My App”).\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe action declaration’s AWS Region, such as us-east-1.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\nversion -> (integer)\n\nThe version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.\n\nJSON Syntax:\n\n{\n  \"name\": \"string\",\n  \"roleArn\": \"string\",\n  \"artifactStore\": {\n    \"type\": \"S3\",\n    \"location\": \"string\",\n    \"encryptionKey\": {\n      \"id\": \"string\",\n      \"type\": \"KMS\"\n    }\n  },\n  \"artifactStores\": {\"string\": {\n        \"type\": \"S3\",\n        \"location\": \"string\",\n        \"encryptionKey\": {\n          \"id\": \"string\",\n          \"type\": \"KMS\"\n        }\n      }\n    ...},\n  \"stages\": [\n    {\n      \"name\": \"string\",\n      \"blockers\": [\n        {\n          \"name\": \"string\",\n          \"type\": \"Schedule\"\n        }\n        ...\n      ],\n      \"actions\": [\n        {\n          \"name\": \"string\",\n          \"actionTypeId\": {\n            \"category\": \"Source\"|\"Build\"|\"Deploy\"|\"Test\"|\"Invoke\"|\"Approval\",\n            \"owner\": \"AWS\"|\"ThirdParty\"|\"Custom\",\n            \"provider\": \"string\",\n            \"version\": \"string\"\n          },\n          \"runOrder\": integer,\n          \"configuration\": {\"string\": \"string\"\n            ...},\n          \"outputArtifacts\": [\n            {\n              \"name\": \"string\"\n            }\n            ...\n          ],\n          \"inputArtifacts\": [\n            {\n              \"name\": \"string\"\n            }\n            ...\n          ],\n          \"roleArn\": \"string\",\n          \"region\": \"string\",\n          \"namespace\": \"string\"\n        }\n        ...\n      ]\n    }\n    ...\n  ],\n  \"version\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npipeline -> (structure)\n\nThe structure of the updated pipeline.\n\nname -> (string)\n\nThe name of the pipeline.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform actions with no actionRoleArn , or to use to assume roles for actions with an actionRoleArn .\n\nartifactStore -> (structure)\n\nRepresents information about the S3 bucket where artifacts are stored for the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nartifactStores -> (map)\n\nA mapping of artifactStore objects and their corresponding AWS Regions. There must be an artifact store for the pipeline Region and for each cross-region action in the pipeline.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\nkey -> (string)\n\nvalue -> (structure)\n\nThe S3 bucket where artifacts for the pipeline are stored.\n\nNote\n\nYou must include either artifactStore or artifactStores in your pipeline, but you cannot use both. If you create a cross-region action in your pipeline, you must use artifactStores .\n\ntype -> (string)\n\nThe type of the artifact store, such as S3.\n\nlocation -> (string)\n\nThe S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts.\n\nencryptionKey -> (structure)\n\nThe encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used.\n\nid -> (string)\n\nThe ID used to identify the key. For an AWS KMS key, you can use the key ID, the key ARN, or the alias ARN.\n\nNote\n\nAliases are recognized only in the account that created the customer master key (CMK). For cross-account actions, you can only use the key ID or key ARN to identify the key.\n\ntype -> (string)\n\nThe type of encryption key, such as an AWS Key Management Service (AWS KMS) key. When creating or updating a pipeline, the value must be set to ‘KMS’.\n\nstages -> (list)\n\nThe stage in which to perform the action.\n\n(structure)\n\nRepresents information about a stage and its definition.\n\nname -> (string)\n\nThe name of the stage.\n\nblockers -> (list)\n\nReserved for future use.\n\n(structure)\n\nReserved for future use.\n\nname -> (string)\n\nReserved for future use.\n\ntype -> (string)\n\nReserved for future use.\n\nactions -> (list)\n\nThe actions included in a stage.\n\n(structure)\n\nRepresents information about an action declaration.\n\nname -> (string)\n\nThe action declaration’s name.\n\nactionTypeId -> (structure)\n\nSpecifies the action type and the provider of the action.\n\ncategory -> (string)\n\nA category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the following values.\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nInvoke\n\nApproval\n\nowner -> (string)\n\nThe creator of the action being called. There are three valid values for the Owner field in the action category section within your pipeline structure: AWS , ThirdParty , and Custom . For more information, see Valid Action Types and Providers in CodePipeline .\n\nprovider -> (string)\n\nThe provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy. For more information, see Valid Action Types and Providers in CodePipeline .\n\nversion -> (string)\n\nA string that describes the action version.\n\nrunOrder -> (integer)\n\nThe order in which actions are run.\n\nconfiguration -> (map)\n\nThe action’s configuration. These are key-value pairs that specify input values for an action. For more information, see Action Structure Requirements in CodePipeline . For the list of configuration properties for the AWS CloudFormation action type in CodePipeline, see Configuration Properties Reference in the AWS CloudFormation User Guide . For template snippets with examples, see Using Parameter Override Functions with CodePipeline Pipelines in the AWS CloudFormation User Guide .\n\nThe values can be represented in either JSON or YAML format. For example, the JSON configuration item format is as follows:\n\nJSON:\n\n\"Configuration\" : { Key : Value },\n\nkey -> (string)\n\nvalue -> (string)\n\noutputArtifacts -> (list)\n\nThe name or ID of the result of the action declaration, such as a test or build artifact.\n\n(structure)\n\nRepresents information about the output of an action.\n\nname -> (string)\n\nThe name of the output of an artifact, such as “My App”.\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nOutput artifact names must be unique within a pipeline.\n\ninputArtifacts -> (list)\n\nThe name or ID of the artifact consumed by the action, such as a test or build artifact.\n\n(structure)\n\nRepresents information about an artifact to be worked on, such as a test or build artifact.\n\nname -> (string)\n\nThe name of the artifact to be worked on (for example, “My App”).\n\nThe input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.\n\nroleArn -> (string)\n\nThe ARN of the IAM service role that performs the declared action. This is assumed through the roleArn for the pipeline.\n\nregion -> (string)\n\nThe action declaration’s AWS Region, such as us-east-1.\n\nnamespace -> (string)\n\nThe variable namespace associated with the action. All variables produced as output by this action fall under this namespace.\n\nversion -> (integer)\n\nThe version number of the pipeline. A new pipeline always has a version number of 1. This number is incremented when a pipeline is updated.",
      "command_examples": "Examples\n\nTo update the structure of a pipeline\n\nThis example uses the update-pipeline command with the –cli-input-json argument. This example uses a pre-defined JSON file (MyFirstPipeline.json) to update the structure of a pipeline. AWS CodePipeline recognizes the pipeline name contained in the JSON file, and then applies any changes from modified fields in the pipeline structure to update the pipeline.\n\nUse the following guidelines when creating the pre-defined JSON file:\n\nIf you are working with a pipeline structure retrieved using the get-pipeline command, you must remove the metadata section from the pipeline structure in the JSON file (the “metadata”: { } lines and the “created,” “pipelineARN,” and “updated” fields within).\n\nThe pipeline name cannot be changed.\n\nCommand:\n\naws codepipeline update-pipeline --cli-input-json file://MyFirstPipeline.json\n\n\nSample JSON file contents:\n\n{\n \"pipeline\": {\n  \"roleArn\": \"arn:aws:iam::111111111111:role/AWS-CodePipeline-Service\",\n  \"stages\": [\n    {\n      \"name\": \"Source\",\n      \"actions\": [\n        {\n          \"inputArtifacts\": [],\n          \"name\": \"Source\",\n          \"actionTypeId\": {\n            \"category\": \"Source\",\n            \"owner\": \"AWS\",\n            \"version\": \"1\",\n            \"provider\": \"S3\"\n          },\n          \"outputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"configuration\": {\n            \"S3Bucket\": \"awscodepipeline-demo-bucket2\",\n            \"S3ObjectKey\": \"aws-codepipeline-s3-aws-codedeploy_linux.zip\"\n          },\n          \"runOrder\": 1\n        }\n      ]\n    },\n    {\n      \"name\": \"Beta\",\n      \"actions\": [\n        {\n          \"inputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"name\": \"CodePipelineDemoFleet\",\n          \"actionTypeId\": {\n            \"category\": \"Deploy\",\n            \"owner\": \"AWS\",\n            \"version\": \"1\",\n            \"provider\": \"CodeDeploy\"\n          },\n          \"outputArtifacts\": [],\n          \"configuration\": {\n            \"ApplicationName\": \"CodePipelineDemoApplication\",\n            \"DeploymentGroupName\": \"CodePipelineDemoFleet\"\n          },\n          \"runOrder\": 1\n        }\n      ]\n    }\n  ],\n  \"artifactStore\": {\n    \"type\": \"S3\",\n    \"location\": \"codepipeline-us-east-1-11EXAMPLE11\"\n  },\n  \"name\": \"MyFirstPipeline\",\n  \"version\": 1\n }\n}\n\n\nOutput:\n\n{\n \"pipeline\": {\n  \"artifactStore\": {\n    \"location\": \"codepipeline-us-east-1-11EXAMPLE11\",\n    \"type\": \"S3\"\n  },\n  \"name\": \"MyFirstPipeline\",\n  \"roleArn\": \"arn:aws:iam::111111111111:role/AWS-CodePipeline-Service\",\n  \"stages\": [\n    {\n      \"actions\": [\n        {\n          \"actionTypeId\": {\n            \"__type\": \"ActionTypeId\",\n            \"category\": \"Source\",\n            \"owner\": \"AWS\",\n            \"provider\": \"S3\",\n            \"version\": \"1\"\n          },\n          \"configuration\": {\n            \"S3Bucket\": \"awscodepipeline-demo-bucket2\",\n            \"S3ObjectKey\": \"aws-codepipeline-s3-aws-codedeploy_linux.zip\"\n          },\n          \"inputArtifacts\": [],\n          \"name\": \"Source\",\n          \"outputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"runOrder\": 1\n        }\n      ],\n      \"name\": \"Source\"\n    },\n    {\n      \"actions\": [\n        {\n          \"actionTypeId\": {\n            \"__type\": \"ActionTypeId\",\n            \"category\": \"Deploy\",\n            \"owner\": \"AWS\",\n            \"provider\": \"CodeDeploy\",\n            \"version\": \"1\"\n          },\n          \"configuration\": {\n            \"ApplicationName\": \"CodePipelineDemoApplication\",\n            \"DeploymentGroupName\": \"CodePipelineDemoFleet\"\n          },\n          \"inputArtifacts\": [\n            {\n              \"name\": \"MyApp\"\n            }\n          ],\n          \"name\": \"CodePipelineDemoFleet\",\n          \"outputArtifacts\": [],\n          \"runOrder\": 1\n        }\n      ],\n      \"name\": \"Beta\"\n    }\n  ],\n  \"version\": 3\n }\n}\n"
    }
  ],
  "service_description": "Description\n\nOverview\n\nThis is the AWS CodePipeline API Reference. This guide provides descriptions of the actions and data types for AWS CodePipeline. Some functionality for your pipeline can only be configured through the API. For more information, see the AWS CodePipeline User Guide .\n\nYou can use the AWS CodePipeline API to work with pipelines, stages, actions, and transitions.\n\nPipelines are models of automated release processes. Each pipeline is uniquely named, and consists of stages, actions, and transitions.\n\nYou can work with pipelines by calling:\n\nCreatePipeline , which creates a uniquely named pipeline.\n\nDeletePipeline , which deletes the specified pipeline.\n\nGetPipeline , which returns information about the pipeline structure and pipeline metadata, including the pipeline Amazon Resource Name (ARN).\n\nGetPipelineExecution , which returns information about a specific execution of a pipeline.\n\nGetPipelineState , which returns information about the current state of the stages and actions of a pipeline.\n\nListActionExecutions , which returns action-level details for past executions. The details include full stage and action-level details, including individual action duration, status, any errors that occurred during the execution, and input and output artifact location details.\n\nListPipelines , which gets a summary of all of the pipelines associated with your account.\n\nListPipelineExecutions , which gets a summary of the most recent executions for a pipeline.\n\nStartPipelineExecution , which runs the most recent revision of an artifact through the pipeline.\n\nStopPipelineExecution , which stops the specified pipeline execution from continuing through the pipeline.\n\nUpdatePipeline , which updates a pipeline with edits or changes to the structure of the pipeline.\n\nPipelines include stages . Each stage contains one or more actions that must complete before the next stage begins. A stage results in success or failure. If a stage fails, the pipeline stops at that stage and remains stopped until either a new version of an artifact appears in the source location, or a user takes action to rerun the most recent artifact through the pipeline. You can call GetPipelineState , which displays the status of a pipeline, including the status of stages in the pipeline, or GetPipeline , which returns the entire structure of the pipeline, including the stages of that pipeline. For more information about the structure of stages and actions, see AWS CodePipeline Pipeline Structure Reference .\n\nPipeline stages include actions that are categorized into categories such as source or build actions performed in a stage of a pipeline. For example, you can use a source action to import artifacts into a pipeline from a source such as Amazon S3. Like stages, you do not work with actions directly in most cases, but you do define and interact with actions when working with pipeline operations such as CreatePipeline and GetPipelineState . Valid action categories are:\n\nSource\n\nBuild\n\nTest\n\nDeploy\n\nApproval\n\nInvoke\n\nPipelines also include transitions , which allow the transition of artifacts from one stage to the next in a pipeline after the actions in one stage complete.\n\nYou can work with transitions by calling:\n\nDisableStageTransition , which prevents artifacts from transitioning to the next stage in a pipeline.\n\nEnableStageTransition , which enables transition of artifacts between stages in a pipeline.\n\nUsing the API to integrate with AWS CodePipeline\n\nFor third-party integrators or developers who want to create their own integrations with AWS CodePipeline, the expected sequence varies from the standard API user. To integrate with AWS CodePipeline, developers need to work with the following items:\n\nJobs , which are instances of an action. For example, a job for a source action might import a revision of an artifact from a source.\n\nYou can work with jobs by calling:\n\nAcknowledgeJob , which confirms whether a job worker has received the specified job.\n\nGetJobDetails , which returns the details of a job.\n\nPollForJobs , which determines whether there are any jobs to act on.\n\nPutJobFailureResult , which provides details of a job failure.\n\nPutJobSuccessResult , which provides details of a job success.\n\nThird party jobs , which are instances of an action created by a partner action and integrated into AWS CodePipeline. Partner actions are created by members of the AWS Partner Network.\n\nYou can work with third party jobs by calling:\n\nAcknowledgeThirdPartyJob , which confirms whether a job worker has received the specified job.\n\nGetThirdPartyJobDetails , which requests the details of a job for a partner action.\n\nPollForThirdPartyJobs , which determines whether there are any jobs to act on.\n\nPutThirdPartyJobFailureResult , which provides details of a job failure.\n\nPutThirdPartyJobSuccessResult , which provides details of a job success."
}