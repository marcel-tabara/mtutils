{
  "service_name": "discovery",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/index.html",
  "service_commands": [
    {
      "command_name": "associate-configuration-items-to-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/associate-configuration-items-to-application.html",
      "command_description": "Description\n\nAssociates one or more configuration items with an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-configuration-items-to-application\n--application-configuration-id <value>\n--configuration-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-configuration-id <value>",
        "--configuration-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-configuration-id (string)\n\nThe configuration ID of an application with which items are to be associated.\n\n--configuration-ids (list)\n\nThe ID of each configuration item to be associated with an application.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "batch-delete-import-data",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/batch-delete-import-data.html",
      "command_description": "Description\n\nDeletes one or more import tasks, each identified by their import ID. Each import task has a number of records that can identify servers or applications.\n\nAWS Application Discovery Service has built-in matching logic that will identify when discovered servers match existing entries that you’ve previously discovered, the information for the already-existing discovered server is updated. When you delete an import task that contains records that were used to match, the information in those matched records that comes from the deleted records will also be deleted.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  batch-delete-import-data\n--import-task-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--import-task-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--import-task-ids (list)\n\nThe IDs for the import tasks that you want to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nerrors -> (list)\n\nError messages returned for each import task that you deleted as a response for this command.\n\n(structure)\n\nError messages returned for each import task that you deleted as a response for this command.\n\nimportTaskId -> (string)\n\nThe unique import ID associated with the error that occurred.\n\nerrorCode -> (string)\n\nThe type of error that occurred for a specific import task.\n\nerrorDescription -> (string)\n\nThe description of the error that occurred for a specific import task."
    },
    {
      "command_name": "create-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/create-application.html",
      "command_description": "Description\n\nCreates an application with the given name and description.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-application\n--name <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nName of the application to be created.\n\n--description (string)\n\nDescription of the application to be created.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigurationId -> (string)\n\nConfiguration ID of an application to be created."
    },
    {
      "command_name": "create-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/create-tags.html",
      "command_description": "Description\n\nCreates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-tags\n--configuration-ids <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-ids <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-ids (list)\n\nA list of configuration items that you want to tag.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nTags that you want to associate with one or more configuration items. Specify the tags that you want to create in a key -value format. For example:\n\n{\"key\": \"serverType\", \"value\": \"webServer\"}\n\n(structure)\n\nMetadata that help you categorize IT assets.\n\nkey -> (string)\n\nThe type of tag on which to filter.\n\nvalue -> (string)\n\nA value for a tag key on which to filter.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-applications",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/delete-applications.html",
      "command_description": "Description\n\nDeletes a list of applications and their associations with configuration items.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-applications\n--configuration-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-ids (list)\n\nConfiguration ID of an application to be deleted.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/delete-tags.html",
      "command_description": "Description\n\nDeletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-tags\n--configuration-ids <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-ids <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-ids (list)\n\nA list of configuration items with tags that you want to delete.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (list)\n\nTags that you want to delete from one or more configuration items. Specify the tags that you want to delete in a key -value format. For example:\n\n{\"key\": \"serverType\", \"value\": \"webServer\"}\n\n(structure)\n\nMetadata that help you categorize IT assets.\n\nkey -> (string)\n\nThe type of tag on which to filter.\n\nvalue -> (string)\n\nA value for a tag key on which to filter.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-agents",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-agents.html",
      "command_description": "Description\n\nLists agents or connectors as specified by ID or other filters. All agents/connectors associated with your user account can be listed if you call DescribeAgents as is without passing any parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-agents is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: agentsInfo",
      "command_synopsis": "Synopsis\n  describe-agents\n[--agent-ids <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--agent-ids <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--agent-ids (list)\n\nThe agent or the Connector IDs for which you want information. If you specify no IDs, the system returns information about all agents/Connectors associated with your AWS user account.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nYou can filter the request using various logical operators and a key -value format. For example:\n\n{\"key\": \"collectionStatus\", \"value\": \"STARTED\"}\n\n(structure)\n\nA filter that can use conditional operators.\n\nFor more information about filters, see Querying Discovered Configuration Items in the AWS Application Discovery Service User Guide .\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA string value on which to filter. For example, if you choose the destinationServer.osVersion filter name, you could specify Ubuntu for the value.\n\n(string)\n\ncondition -> (string)\n\nA conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by AND . If you specify multiple values for a particular filter, the system differentiates the values using OR . Calling either DescribeConfigurations or ListConfigurations returns attributes of matching configuration items.\n\nShorthand Syntax:\n\nname=string,values=string,string,condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...],\n    \"condition\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nagentsInfo -> (list)\n\nLists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an agent/Connector ID. The output includes agent/Connector IDs, IP addresses, media access control (MAC) addresses, agent/Connector health, host name where the agent/Connector resides, and the version number of each agent/Connector.\n\n(structure)\n\nInformation about agents or connectors associated with the user’s AWS account. Information includes agent or connector IDs, IP addresses, media access control (MAC) addresses, agent or connector health, hostname where the agent or connector resides, and agent version for each agent.\n\nagentId -> (string)\n\nThe agent or connector ID.\n\nhostName -> (string)\n\nThe name of the host where the agent or connector resides. The host can be a server or virtual machine.\n\nagentNetworkInfoList -> (list)\n\nNetwork details about the host where the agent or connector resides.\n\n(structure)\n\nNetwork details about the host where the agent/connector resides.\n\nipAddress -> (string)\n\nThe IP address for the host where the agent/connector resides.\n\nmacAddress -> (string)\n\nThe MAC address for the host where the agent/connector resides.\n\nconnectorId -> (string)\n\nThe ID of the connector.\n\nversion -> (string)\n\nThe agent or connector version.\n\nhealth -> (string)\n\nThe health of the agent or connector.\n\nlastHealthPingTime -> (string)\n\nTime since agent or connector health was reported.\n\ncollectionStatus -> (string)\n\nStatus of the collection process for an agent or connector.\n\nagentType -> (string)\n\nType of agent.\n\nregisteredTime -> (string)\n\nAgent’s first registration timestamp in UTC.\n\nnextToken -> (string)\n\nToken to retrieve the next set of results. For example, if you specified 100 IDs for DescribeAgentsRequest$agentIds but set DescribeAgentsRequest$maxResults to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.",
      "command_examples": "Examples\n\nDescribe agents with specified collectionStatus states\n\nThis example command describes collection agents with collection status of “STARTED” or “STOPPED”.\n\nCommand:\n\naws discovery describe-agents --filters name=\"collectionStatus\",values=\"STARTED\",\"STOPPED\",condition=\"EQUALS\" --max-results 3\n\n\nOutput:\n\n{\n       \"Snapshots\": [\n      {\n            \"version\": \"1.0.40.0\",\n            \"agentType\": \"EC2\",\n            \"hostName\": \"ip-172-31-40-234\",\n            \"collectionStatus\": \"STOPPED\",\n            \"agentNetworkInfoList\": [\n                {\n                    \"macAddress\": \"06:b5:97:14:fc:0d\",\n                    \"ipAddress\": \"172.31.40.234\"\n                }\n            ],\n            \"health\": \"UNKNOWN\",\n            \"agentId\": \"i-003305c02a776e883\",\n            \"registeredTime\": \"2016-12-09T19:05:06Z\",\n            \"lastHealthPingTime\": \"2016-12-09T19:05:10Z\"\n        },\n        {\n            \"version\": \"1.0.40.0\",\n            \"agentType\": \"EC2\",\n            \"hostName\": \"ip-172-31-39-64\",\n            \"collectionStatus\": \"STARTED\",\n            \"agentNetworkInfoList\": [\n                {\n                    \"macAddress\": \"06:a1:0e:c7:b2:73\",\n                    \"ipAddress\": \"172.31.39.64\"\n                }\n            ],\n            \"health\": \"SHUTDOWN\",\n            \"agentId\": \"i-003a5e5e2b36cf8bd\",\n            \"registeredTime\": \"2016-11-16T16:36:25Z\",\n            \"lastHealthPingTime\": \"2016-11-16T16:47:37Z\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "describe-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-configurations.html",
      "command_description": "Description\n\nRetrieves attributes for a list of configuration item IDs.\n\nNote\n\nAll of the supplied IDs must be for the same asset type from one of the following:\n\nserver\n\napplication\n\nprocess\n\nconnection\n\nOutput fields are specific to the asset type specified. For example, the output for a server configuration item includes a list of attributes about the server, such as host name, operating system, number of network cards, etc.\n\nFor a complete list of outputs for each asset type, see Using the DescribeConfigurations Action in the AWS Application Discovery Service User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-configurations\n--configuration-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-ids (list)\n\nOne or more configuration IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigurations -> (list)\n\nA key in the response map. The value is an array of data.\n\n(map)\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nDescribe selected asset configurations\n\nThis example command describes the configurations of two specified servers. The action detects the type of asset from the configuration ID. Only one type of asset is allowed per command.\n\nCommand:\n\naws discovery describe-configurations --configuration-ids \"d-server-099385097ef9fbcfb\" \"d-server-0c4f2dd1fee22c6c1\"\n\n\nOutput:\n\n{\n    \"configurations\": [\n        {\n                 \"server.performance.maxCpuUsagePct\": \"0.0\",\n                 \"server.performance.maxDiskReadIOPS\": \"0.0\",\n                 \"server.performance.avgCpuUsagePct\": \"0.0\",\n                 \"server.type\": \"EC2\",\n                 \"server.performance.maxNetworkReadsPerSecondInKB\": \"0.19140625\",\n                 \"server.hostName\": \"ip-172-31-35-152\",\n                 \"server.configurationId\": \"d-server-0c4f2dd1fee22c6c1\",\n                 \"server.tags.hasMoreValues\": \"false\",\n                 \"server.performance.minFreeRAMInKB\": \"1543496.0\",\n                 \"server.osVersion\": \"3.14.48-33.39.amzn1.x86_64\",\n                 \"server.performance.maxDiskReadsPerSecondInKB\": \"0.0\",\n                 \"server.applications\": \"[]\",\n                 \"server.performance.numDisks\": \"1\",\n                 \"server.performance.numCpus\": \"1\",\n                 \"server.performance.numCores\": \"1\",\n                 \"server.performance.maxDiskWriteIOPS\": \"0.0\",\n                 \"server.performance.maxNetworkWritesPerSecondInKB\": \"0.82421875\",\n                 \"server.performance.avgDiskWritesPerSecondInKB\": \"0.0\",\n                 \"server.networkInterfaceInfo\": \"[{\\\"name\\\":\\\"eth0\\\",\\\"macAddress\\\":\\\"06:A7:7D:3F:54:57\\\",\\\"ipAddress\\\":\\\"172.31.35.152\\\",\\\"netMask\\\":\\\"255.255.240.0\\\"},{\\\"name\\\":\\\"lo\\\",\\\"macAddress\\\":\\\"00:00:00:00:00:00\\\",\\\"ipAddress\\\":\\\"127.0.0.1\\\",\\\"netMask\\\":\\\"255.0.0.0\\\"},{\\\"name\\\":\\\"eth0\\\",\\\"macAddress\\\":\\\"06:A7:7D:3F:54:57\\\",\\\"ipAddress\\\":\\\"fe80::4a7:7dff:fe3f:5457\\\"},{\\\"name\\\":\\\"lo\\\",\\\"macAddress\\\":\\\"00:00:00:00:00:00\\\",\\\"ipAddress\\\":\\\"::1\\\"}]\",\n                 \"server.performance.avgNetworkReadsPerSecondInKB\": \"0.04915364583333333\",\n                 \"server.tags\": \"[]\",\n                 \"server.applications.hasMoreValues\": \"false\",\n                 \"server.timeOfCreation\": \"2016-10-28 23:44:00.0\",\n                 \"server.agentId\": \"i-4447bc1b\",\n                 \"server.performance.maxDiskWritesPerSecondInKB\": \"0.0\",\n                 \"server.performance.avgDiskReadIOPS\": \"0.0\",\n                 \"server.performance.avgFreeRAMInKB\": \"1547210.1333333333\",\n                 \"server.performance.avgDiskReadsPerSecondInKB\": \"0.0\",\n                 \"server.performance.avgDiskWriteIOPS\": \"0.0\",\n                 \"server.performance.numNetworkCards\": \"2\",\n                 \"server.hypervisor\": \"xen\",\n                 \"server.networkInterfaceInfo.hasMoreValues\": \"false\",\n                 \"server.performance.avgNetworkWritesPerSecondInKB\": \"0.1380859375\",\n                 \"server.osName\": \"Linux - Amazon Linux AMI release 2015.03\",\n                 \"server.performance.totalRAMInKB\": \"1694732.0\",\n                 \"server.cpuType\": \"x64\"\n        },\n        {\n                 \"server.performance.maxCpuUsagePct\": \"100.0\",\n                 \"server.performance.maxDiskReadIOPS\": \"0.0\",\n                 \"server.performance.avgCpuUsagePct\": \"14.733333333333338\",\n                 \"server.type\": \"EC2\",\n                 \"server.performance.maxNetworkReadsPerSecondInKB\": \"13.400390625\",\n                 \"server.hostName\": \"ip-172-31-42-208\",\n                 \"server.configurationId\": \"d-server-099385097ef9fbcfb\",\n                 \"server.tags.hasMoreValues\": \"false\",\n                 \"server.performance.minFreeRAMInKB\": \"1531104.0\",\n                 \"server.osVersion\": \"3.14.48-33.39.amzn1.x86_64\",\n                 \"server.performance.maxDiskReadsPerSecondInKB\": \"0.0\",\n                 \"server.applications\": \"[]\",\n                 \"server.performance.numDisks\": \"1\",\n                 \"server.performance.numCpus\": \"1\",\n                 \"server.performance.numCores\": \"1\",\n                 \"server.performance.maxDiskWriteIOPS\": \"1.0\",\n                 \"server.performance.maxNetworkWritesPerSecondInKB\": \"12.271484375\",\n                 \"server.performance.avgDiskWritesPerSecondInKB\": \"0.5333333333333334\",\n                 \"server.networkInterfaceInfo\": \"[{\\\"name\\\":\\\"eth0\\\",\\\"macAddress\\\":\\\"06:4A:79:60:75:61\\\",\\\"ipAddress\\\":\\\"172.31.42.208\\\",\\\"netMask\\\":\\\"255.255.240.0\\\"},{\\\"name\\\":\\\"eth0\\\",\\\"macAddress\\\":\\\"06:4A:79:60:75:61\\\",\\\"ipAddress\\\":\\\"fe80::44a:79ff:fe60:7561\\\"},{\\\"name\\\":\\\"lo\\\",\\\"macAddress\\\":\\\"00:00:00:00:00:00\\\",\\\"ipAddress\\\":\\\"::1\\\"},{\\\"name\\\":\\\"lo\\\",\\\"macAddress\\\":\\\"00:00:00:00:00:00\\\",\\\"ipAddress\\\":\\\"127.0.0.1\\\",\\\"netMask\\\":\\\"255.0.0.0\\\"}]\",\n                 \"server.performance.avgNetworkReadsPerSecondInKB\": \"2.8720052083333334\",\n                 \"server.tags\": \"[]\",\n                 \"server.applications.hasMoreValues\": \"false\",\n                 \"server.timeOfCreation\": \"2016-10-28 23:44:30.0\",\n                 \"server.agentId\": \"i-c142b99e\",\n                 \"server.performance.maxDiskWritesPerSecondInKB\": \"4.0\",\n                 \"server.performance.avgDiskReadIOPS\": \"0.0\",\n                 \"server.performance.avgFreeRAMInKB\": \"1534946.4\",\n                 \"server.performance.avgDiskReadsPerSecondInKB\": \"0.0\",\n                 \"server.performance.avgDiskWriteIOPS\": \"0.13333333333333336\",\n                 \"server.performance.numNetworkCards\": \"2\",\n                 \"server.hypervisor\": \"xen\",\n                 \"server.networkInterfaceInfo.hasMoreValues\": \"false\",\n                 \"server.performance.avgNetworkWritesPerSecondInKB\": \"1.7977864583333332\",\n                 \"server.osName\": \"Linux - Amazon Linux AMI release 2015.03\",\n                 \"server.performance.totalRAMInKB\": \"1694732.0\",\n                 \"server.cpuType\": \"x64\"\n        }\n    ]\n}\n\n\nDescribe selected asset configurations\n\nThis example command describes the configurations of two specified applications. The action detects the type of asset from the configuration ID. Only one type of asset is allowed per command.\n\nCommand:\n\naws discovery describe-configurations --configuration-ids \"d-application-0ac39bc0e4fad0e42\" \"d-application-02444a45288013764q\"\n\n\nOutput:\n\n{\n    \"configurations\": [\n        {\n                 \"application.serverCount\": \"0\",\n                 \"application.name\": \"Application-12345\",\n                 \"application.lastModifiedTime\": \"2016-12-13 23:53:27.0\",\n                 \"application.description\": \"\",\n                 \"application.timeOfCreation\": \"2016-12-13 23:53:27.0\",\n                 \"application.configurationId\": \"d-application-0ac39bc0e4fad0e42\"\n        },\n        {\n                 \"application.serverCount\": \"0\",\n                 \"application.name\": \"Application-67890\",\n                 \"application.lastModifiedTime\": \"2016-12-13 23:53:33.0\",\n                 \"application.description\": \"\",\n                 \"application.timeOfCreation\": \"2016-12-13 23:53:33.0\",\n                 \"application.configurationId\": \"d-application-02444a45288013764\"\n         }\n    ]\n}\n"
    },
    {
      "command_name": "describe-continuous-exports",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-continuous-exports.html",
      "command_description": "Description\n\nLists exports as specified by ID. All continuous exports associated with your user account can be listed if you call DescribeContinuousExports as is without passing any parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-continuous-exports is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: descriptions",
      "command_synopsis": "Synopsis\n  describe-continuous-exports\n[--export-ids <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--export-ids <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-ids (list)\n\nThe unique IDs assigned to the exports.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ndescriptions -> (list)\n\nA list of continuous export descriptions.\n\n(structure)\n\nA list of continuous export descriptions.\n\nexportId -> (string)\n\nThe unique ID assigned to this export.\n\nstatus -> (string)\n\nDescribes the status of the export. Can be one of the following values:\n\nSTART_IN_PROGRESS - setting up resources to start continuous export.\n\nSTART_FAILED - an error occurred setting up continuous export. To recover, call start-continuous-export again.\n\nACTIVE - data is being exported to the customer bucket.\n\nERROR - an error occurred during export. To fix the issue, call stop-continuous-export and start-continuous-export.\n\nSTOP_IN_PROGRESS - stopping the export.\n\nSTOP_FAILED - an error occurred stopping the export. To recover, call stop-continuous-export again.\n\nINACTIVE - the continuous export has been stopped. Data is no longer being exported to the customer bucket.\n\nstatusDetail -> (string)\n\nContains information about any errors that have occurred. This data type can have the following values:\n\nACCESS_DENIED - You don’t have permission to start Data Exploration in Amazon Athena. Contact your AWS administrator for help. For more information, see Setting Up AWS Application Discovery Service in the Application Discovery Service User Guide.\n\nDELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon Kinesis Data Firehose delivery streams. Reduce the number of streams or request a limit increase and try again. For more information, see Kinesis Data Streams Limits in the Amazon Kinesis Data Streams Developer Guide.\n\nFIREHOSE_ROLE_MISSING - The Data Exploration feature is in an error state because your IAM User is missing the AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration in Amazon Athena and try again. For more information, see Step 3: Provide Application Discovery Service Access to Non-Administrator Users by Attaching Policies in the Application Discovery Service User Guide.\n\nFIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is in an error state because your IAM User is missing one or more of the Kinesis data delivery streams.\n\nINTERNAL_FAILURE - The Data Exploration feature is in an error state because of an internal failure. Try again later. If this problem persists, contact AWS Support.\n\nS3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3 buckets. Reduce the number of Amazon S3 buckets or request a limit increase and try again. For more information, see Bucket Restrictions and Limitations in the Amazon Simple Storage Service Developer Guide.\n\nS3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3 service. You must sign up before you can use Amazon S3. You can sign up at the following URL: https://aws.amazon.com/s3 .\n\ns3Bucket -> (string)\n\nThe name of the s3 bucket where the export data parquet files are stored.\n\nstartTime -> (timestamp)\n\nThe timestamp representing when the continuous export was started.\n\nstopTime -> (timestamp)\n\nThe timestamp that represents when this continuous export was stopped.\n\ndataSource -> (string)\n\nThe type of data collector used to gather this data (currently only offered for AGENT).\n\nschemaStorageConfig -> (map)\n\nAn object which describes how the data is stored.\n\ndatabaseName - the name of the Glue database used to store the schema.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe token from the previous call to DescribeExportTasks ."
    },
    {
      "command_name": "describe-export-tasks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-export-tasks.html",
      "command_description": "Description\n\nRetrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-export-tasks is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: exportsInfo",
      "command_synopsis": "Synopsis\n  describe-export-tasks\n[--export-ids <value>]\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--export-ids <value>]",
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-ids (list)\n\nOne or more unique identifiers used to query the status of an export request.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--filters (list)\n\nOne or more filters.\n\nAgentId - ID of the agent whose collected data will be exported\n\n(structure)\n\nUsed to select which agent’s data is to be exported. A single agent ID may be selected for export using the StartExportTask action.\n\nname -> (string)\n\nA single ExportFilter name. Supported filters: agentId .\n\nvalues -> (list)\n\nA single agentId for a Discovery Agent. An agentId can be found using the DescribeAgents action. Typically an ADS agentId is in the form o-0123456789abcdef0 .\n\n(string)\n\ncondition -> (string)\n\nSupported condition: EQUALS\n\nShorthand Syntax:\n\nname=string,values=string,string,condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...],\n    \"condition\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportsInfo -> (list)\n\nContains one or more sets of export request details. When the status of a request is SUCCEEDED , the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.\n\n(structure)\n\nInformation regarding the export status of discovered data. The value is an array of objects.\n\nexportId -> (string)\n\nA unique identifier used to query an export.\n\nexportStatus -> (string)\n\nThe status of the data export job.\n\nstatusMessage -> (string)\n\nA status message provided for API callers.\n\nconfigurationsDownloadUrl -> (string)\n\nA URL for an Amazon S3 bucket where you can review the exported data. The URL is displayed only if the export succeeded.\n\nexportRequestTime -> (timestamp)\n\nThe time that the data export was initiated.\n\nisTruncated -> (boolean)\n\nIf true, the export of agent information exceeded the size limit for a single export and the exported data is incomplete for the requested time range. To address this, select a smaller time range for the export by using startDate and endDate .\n\nrequestedStartTime -> (timestamp)\n\nThe value of startTime parameter in the StartExportTask request. If no startTime was requested, this result does not appear in ExportInfo .\n\nrequestedEndTime -> (timestamp)\n\nThe endTime used in the StartExportTask request. If no endTime was requested, this result does not appear in ExportInfo .\n\nnextToken -> (string)\n\nThe nextToken value to include in a future DescribeExportTasks request. When the results of a DescribeExportTasks request exceed maxResults , this value can be used to retrieve the next page of results. This value is null when there are no more results to return."
    },
    {
      "command_name": "describe-import-tasks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-import-tasks.html",
      "command_description": "Description\n\nReturns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-import-tasks\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nAn array of name-value pairs that you provide to filter the results for the DescribeImportTask request to a specific subset of results. Currently, wildcard values aren’t supported for filters.\n\n(structure)\n\nA name-values pair of elements you can use to filter the results when querying your import tasks. Currently, wildcards are not supported for filters.\n\nNote\n\nWhen filtering by import status, all other filter values are ignored.\n\nname -> (string)\n\nThe name, status, or import task ID for a specific import task.\n\nvalues -> (list)\n\nAn array of strings that you can provide to match against a specific name, status, or import task ID to filter the results for your import task queries.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"IMPORT_TASK_ID\"|\"STATUS\"|\"NAME\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of results that you want this request to return, up to 100.\n\n--next-token (string)\n\nThe token to request a specific page of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nnextToken -> (string)\n\nThe token to request the next page of results.\n\ntasks -> (list)\n\nA returned array of import tasks that match any applied filters, up to the specified number of maximum results.\n\n(structure)\n\nAn array of information related to the import task request that includes status information, times, IDs, the Amazon S3 Object URL for the import file, and more.\n\nimportTaskId -> (string)\n\nThe unique ID for a specific import task. These IDs aren’t globally unique, but they are unique within an AWS account.\n\nclientRequestToken -> (string)\n\nA unique token used to prevent the same import request from occurring more than once. If you didn’t provide a token, a token was automatically generated when the import task request was sent.\n\nname -> (string)\n\nA descriptive name for an import task. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.\n\nimportUrl -> (string)\n\nThe URL for your import file that you’ve uploaded to Amazon S3.\n\nstatus -> (string)\n\nThe status of the import task. An import can have the status of IMPORT_COMPLETE and still have some records fail to import from the overall request. More information can be found in the downloadable archive defined in the errorsAndFailedEntriesZip field, or in the Migration Hub management console.\n\nimportRequestTime -> (timestamp)\n\nThe time that the import task request was made, presented in the Unix time stamp format.\n\nimportCompletionTime -> (timestamp)\n\nThe time that the import task request finished, presented in the Unix time stamp format.\n\nimportDeletedTime -> (timestamp)\n\nThe time that the import task request was deleted, presented in the Unix time stamp format.\n\nserverImportSuccess -> (integer)\n\nThe total number of server records in the import file that were successfully imported.\n\nserverImportFailure -> (integer)\n\nThe total number of server records in the import file that failed to be imported.\n\napplicationImportSuccess -> (integer)\n\nThe total number of application records in the import file that were successfully imported.\n\napplicationImportFailure -> (integer)\n\nThe total number of application records in the import file that failed to be imported.\n\nerrorsAndFailedEntriesZip -> (string)\n\nA link to a compressed archive folder (in the ZIP format) that contains an error log and a file of failed records. You can use these two files to quickly identify records that failed, why they failed, and correct those records. Afterward, you can upload the corrected file to your Amazon S3 bucket and create another import task request.\n\nThis field also includes authorization information so you can confirm the authenticity of the compressed archive before you download it.\n\nIf some records failed to be imported we recommend that you correct the records in the failed entries file and then imports that failed entries file. This prevents you from having to correct and update the larger original file and attempt importing it again."
    },
    {
      "command_name": "describe-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/describe-tags.html",
      "command_description": "Description\n\nRetrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter filters .\n\nThere are three valid tag filter names:\n\ntagKey\n\ntagValue\n\nconfigurationId\n\nAlso, all configuration items associated with your user account that have tags can be listed if you call DescribeTags as is without passing any parameters.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\ndescribe-tags is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: tags",
      "command_synopsis": "Synopsis\n  describe-tags\n[--filters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nYou can filter the list using a key -value format. You can separate these items by using logical operators. Allowed filters include tagKey , tagValue , and configurationId .\n\n(structure)\n\nThe tag filter. Valid names are: tagKey , tagValue , configurationId .\n\nname -> (string)\n\nA name of the tag filter.\n\nvalues -> (list)\n\nValues for the tag filter.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nDepending on the input, this is a list of configuration items tagged with a specific tag, or a list of tags for a specific configuration item.\n\n(structure)\n\nTags for a configuration item. Tags are metadata that help you categorize IT assets.\n\nconfigurationType -> (string)\n\nA type of IT asset to tag.\n\nconfigurationId -> (string)\n\nThe configuration ID for the item to tag. You can specify a list of keys and values.\n\nkey -> (string)\n\nA type of tag on which to filter. For example, serverType .\n\nvalue -> (string)\n\nA value on which to filter. For example key = serverType and value = web server .\n\ntimeOfCreation -> (timestamp)\n\nThe time the configuration tag was created in Coordinated Universal Time (UTC).\n\nnextToken -> (string)\n\nThe call returns a token. Use this token to get the next set of results."
    },
    {
      "command_name": "disassociate-configuration-items-from-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/disassociate-configuration-items-from-application.html",
      "command_description": "Description\n\nDisassociates one or more configuration items from an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-configuration-items-from-application\n--application-configuration-id <value>\n--configuration-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--application-configuration-id <value>",
        "--configuration-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--application-configuration-id (string)\n\nConfiguration ID of an application from which each item is disassociated.\n\n--configuration-ids (list)\n\nConfiguration ID of each item to be disassociated from an application.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "get-discovery-summary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/get-discovery-summary.html",
      "command_description": "Description\n\nRetrieves a short summary of discovered assets.\n\nThis API operation takes no request parameters and is called as is at the command prompt as shown in the example.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-discovery-summary\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nservers -> (long)\n\nThe number of servers discovered.\n\napplications -> (long)\n\nThe number of applications discovered.\n\nserversMappedToApplications -> (long)\n\nThe number of servers mapped to applications.\n\nserversMappedtoTags -> (long)\n\nThe number of servers mapped to tags.\n\nagentSummary -> (structure)\n\nDetails about discovered agents, including agent status and health.\n\nactiveAgents -> (integer)\n\nNumber of active discovery agents.\n\nhealthyAgents -> (integer)\n\nNumber of healthy discovery agents\n\nblackListedAgents -> (integer)\n\nNumber of blacklisted discovery agents.\n\nshutdownAgents -> (integer)\n\nNumber of discovery agents with status SHUTDOWN.\n\nunhealthyAgents -> (integer)\n\nNumber of unhealthy discovery agents.\n\ntotalAgents -> (integer)\n\nTotal number of discovery agents.\n\nunknownAgents -> (integer)\n\nNumber of unknown discovery agents.\n\nconnectorSummary -> (structure)\n\nDetails about discovered connectors, including connector status and health.\n\nactiveConnectors -> (integer)\n\nNumber of active discovery connectors.\n\nhealthyConnectors -> (integer)\n\nNumber of healthy discovery connectors.\n\nblackListedConnectors -> (integer)\n\nNumber of blacklisted discovery connectors.\n\nshutdownConnectors -> (integer)\n\nNumber of discovery connectors with status SHUTDOWN,\n\nunhealthyConnectors -> (integer)\n\nNumber of unhealthy discovery connectors.\n\ntotalConnectors -> (integer)\n\nTotal number of discovery connectors.\n\nunknownConnectors -> (integer)\n\nNumber of unknown discovery connectors."
    },
    {
      "command_name": "list-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/list-configurations.html",
      "command_description": "Description\n\nRetrieves a list of configuration items as specified by the value passed to the required parameter configurationType . Optional filtering may be applied to refine search results.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-configurations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: configurations",
      "command_synopsis": "Synopsis\n  list-configurations\n--configuration-type <value>\n[--filters <value>]\n[--order-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-type <value>",
        "[--filters <value>]",
        "[--order-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-type (string)\n\nA valid configuration identified by Application Discovery Service.\n\nPossible values:\n\nSERVER\n\nPROCESS\n\nCONNECTION\n\nAPPLICATION\n\n--filters (list)\n\nYou can filter the request using various logical operators and a key -value format. For example:\n\n{\"key\": \"serverType\", \"value\": \"webServer\"}\n\nFor a complete list of filter options and guidance about using them with this action, see Using the ListConfigurations Action in the AWS Application Discovery Service User Guide .\n\n(structure)\n\nA filter that can use conditional operators.\n\nFor more information about filters, see Querying Discovered Configuration Items in the AWS Application Discovery Service User Guide .\n\nname -> (string)\n\nThe name of the filter.\n\nvalues -> (list)\n\nA string value on which to filter. For example, if you choose the destinationServer.osVersion filter name, you could specify Ubuntu for the value.\n\n(string)\n\ncondition -> (string)\n\nA conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by AND . If you specify multiple values for a particular filter, the system differentiates the values using OR . Calling either DescribeConfigurations or ListConfigurations returns attributes of matching configuration items.\n\nShorthand Syntax:\n\nname=string,values=string,string,condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...],\n    \"condition\": \"string\"\n  }\n  ...\n]\n\n\n--order-by (list)\n\nCertain filter criteria return output that can be sorted in ascending or descending order. For a list of output characteristics for each filter, see Using the ListConfigurations Action in the AWS Application Discovery Service User Guide .\n\n(structure)\n\nA field and direction for ordered output.\n\nfieldName -> (string)\n\nThe field on which to order.\n\nsortOrder -> (string)\n\nOrdering direction.\n\nShorthand Syntax:\n\nfieldName=string,sortOrder=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"fieldName\": \"string\",\n    \"sortOrder\": \"ASC\"|\"DESC\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nconfigurations -> (list)\n\nReturns configuration details, including the configuration ID, attribute names, and attribute values.\n\n(map)\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nToken to retrieve the next set of results. For example, if your call to ListConfigurations returned 100 items, but you set ListConfigurationsRequest$maxResults to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.",
      "command_examples": "Examples\n\nTo list all of the discovered servers meeting a set of filter conditions\n\nThis example command lists discovered servers matching either of two hostname patterns and not running Ubuntu.\n\nCommand:\n\naws discovery list-configurations --configuration-type SERVER --filters name=\"server.hostName\",values=\"172-31-35\",\"172-31-42\",condition=\"CONTAINS\" name=\"server.osName\",values=\"Ubuntu\",condition=\"NOT_CONTAINS\"\n\n\nOutput:\n\n{\n    \"configurations\": [\n      {\n            \"server.osVersion\": \"3.14.48-33.39.amzn1.x86_64\",\n            \"server.type\": \"EC2\",\n            \"server.hostName\": \"ip-172-31-42-208\",\n            \"server.timeOfCreation\": \"2016-10-28 23:44:30.0\",\n            \"server.configurationId\": \"d-server-099385097ef9fbcfb\",\n            \"server.osName\": \"Linux - Amazon Linux AMI release 2015.03\",\n            \"server.agentId\": \"i-c142b99e\"\n        },\n        {\n            \"server.osVersion\": \"3.14.48-33.39.amzn1.x86_64\",\n            \"server.type\": \"EC2\",\n            \"server.hostName\": \"ip-172-31-35-152\",\n            \"server.timeOfCreation\": \"2016-10-28 23:44:00.0\",\n            \"server.configurationId\": \"d-server-0c4f2dd1fee22c6c1\",\n            \"server.osName\": \"Linux - Amazon Linux AMI release 2015.03\",\n            \"server.agentId\": \"i-4447bc1b\"\n        }\n    ]\n}\n"
    },
    {
      "command_name": "list-server-neighbors",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/list-server-neighbors.html",
      "command_description": "Description\n\nRetrieves a list of servers that are one network hop away from a specified server.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-server-neighbors\n--configuration-id <value>\n[--port-information-needed | --no-port-information-needed]\n[--neighbor-configuration-ids <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "[--port-information-needed | --no-port-information-needed]",
        "[--neighbor-configuration-ids <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nConfiguration ID of the server for which neighbors are being listed.\n\n--port-information-needed | --no-port-information-needed (boolean)\n\nFlag to indicate if port and protocol information is needed as part of the response.\n\n--neighbor-configuration-ids (list)\n\nList of configuration IDs to test for one-hop-away.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--max-results (integer)\n\nMaximum number of results to return in a single page of output.\n\n--next-token (string)\n\nToken to retrieve the next set of results. For example, if you previously specified 100 IDs for ListServerNeighborsRequest$neighborConfigurationIds but set ListServerNeighborsRequest$maxResults to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nneighbors -> (list)\n\nList of distinct servers that are one hop away from the given server.\n\n(structure)\n\nDetails about neighboring servers.\n\nsourceServerId -> (string)\n\nThe ID of the server that opened the network connection.\n\ndestinationServerId -> (string)\n\nThe ID of the server that accepted the network connection.\n\ndestinationPort -> (integer)\n\nThe destination network port for the connection.\n\ntransportProtocol -> (string)\n\nThe network protocol used for the connection.\n\nconnectionsCount -> (long)\n\nThe number of open network connections with the neighboring server.\n\nnextToken -> (string)\n\nToken to retrieve the next set of results. For example, if you specified 100 IDs for ListServerNeighborsRequest$neighborConfigurationIds but set ListServerNeighborsRequest$maxResults to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.\n\nknownDependencyCount -> (long)\n\nCount of distinct servers that are one hop away from the given server."
    },
    {
      "command_name": "start-continuous-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/start-continuous-export.html",
      "command_description": "Description\n\nStart the continuous flow of agent’s discovered data into Amazon Athena.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-continuous-export\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nThe unique ID assigned to this export.\n\ns3Bucket -> (string)\n\nThe name of the s3 bucket where the export data parquet files are stored.\n\nstartTime -> (timestamp)\n\nThe timestamp representing when the continuous export was started.\n\ndataSource -> (string)\n\nThe type of data collector used to gather this data (currently only offered for AGENT).\n\nschemaStorageConfig -> (map)\n\nA dictionary which describes how the data is stored.\n\ndatabaseName - the name of the Glue database used to store the schema.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "start-data-collection-by-agent-ids",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/start-data-collection-by-agent-ids.html",
      "command_description": "Description\n\nInstructs the specified agents or connectors to start collecting data.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-data-collection-by-agent-ids\n--agent-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--agent-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--agent-ids (list)\n\nThe IDs of the agents or connectors from which to start collecting data. If you send a request to an agent/connector ID that you do not have permission to contact, according to your AWS account, the service does not throw an exception. Instead, it returns the error in the Description field. If you send a request to multiple agents/connectors and you do not have permission to contact some of those agents/connectors, the system does not throw an exception. Instead, the system shows Failed in the Description field.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nagentsConfigurationStatus -> (list)\n\nInformation about agents or the connector that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.\n\n(structure)\n\nInformation about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.\n\nagentId -> (string)\n\nThe agent/connector ID.\n\noperationSucceeded -> (boolean)\n\nInformation about the status of the StartDataCollection and StopDataCollection operations. The system has recorded the data collection operation. The agent/connector receives this command the next time it polls for a new command.\n\ndescription -> (string)\n\nA description of the operation performed."
    },
    {
      "command_name": "start-export-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/start-export-task.html",
      "command_description": "Description\n\nBegins the export of discovered data to an S3 bucket.\n\nIf you specify agentIds in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using startTime and endTime . Export of detailed agent data is limited to five concurrently running exports.\n\nIf you do not include an agentIds filter, summary data is exported that includes both AWS Agentless Discovery Connector data and summary data from AWS Discovery Agents. Export of summary data is limited to two exports per day.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-export-task\n[--export-data-format <value>]\n[--filters <value>]\n[--start-time <value>]\n[--end-time <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--export-data-format <value>]",
        "[--filters <value>]",
        "[--start-time <value>]",
        "[--end-time <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-data-format (list)\n\nThe file format for the returned export data. Default value is CSV . Note: The GRAPHML option has been deprecated.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  CSV\n  GRAPHML\n\n\n--filters (list)\n\nIf a filter is present, it selects the single agentId of the Application Discovery Agent for which data is exported. The agentId can be found in the results of the DescribeAgents API or CLI. If no filter is present, startTime and endTime are ignored and exported data includes both Agentless Discovery Connector data and summary data from Application Discovery agents.\n\n(structure)\n\nUsed to select which agent’s data is to be exported. A single agent ID may be selected for export using the StartExportTask action.\n\nname -> (string)\n\nA single ExportFilter name. Supported filters: agentId .\n\nvalues -> (list)\n\nA single agentId for a Discovery Agent. An agentId can be found using the DescribeAgents action. Typically an ADS agentId is in the form o-0123456789abcdef0 .\n\n(string)\n\ncondition -> (string)\n\nSupported condition: EQUALS\n\nShorthand Syntax:\n\nname=string,values=string,string,condition=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...],\n    \"condition\": \"string\"\n  }\n  ...\n]\n\n\n--start-time (timestamp)\n\nThe start timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, data is exported starting from the first data collected by the agent.\n\n--end-time (timestamp)\n\nThe end timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, exported data includes the most recent data collected by the agent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexportId -> (string)\n\nA unique identifier used to query the status of an export request."
    },
    {
      "command_name": "start-import-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/start-import-task.html",
      "command_description": "Description\n\nStarts an import task, which allows you to import details of your on-premises environment directly into AWS Migration Hub without having to use the Application Discovery Service (ADS) tools such as the Discovery Connector or Discovery Agent. This gives you the option to perform migration assessment and planning directly from your imported data, including the ability to group your devices as applications and track their migration status.\n\nTo start an import request, do this:\n\nDownload the specially formatted comma separated value (CSV) import template, which you can find here: https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv .\n\nFill out the template with your server and application data.\n\nUpload your import file to an Amazon S3 bucket, and make a note of it’s Object URL. Your import file must be in the CSV format.\n\nUse the console or the StartImportTask command with the AWS CLI or one of the AWS SDKs to import the records from your file.\n\nFor more information, including step-by-step procedures, see Migration Hub Import in the AWS Application Discovery Service User Guide .\n\nNote\n\nThere are limits to the number of import tasks you can create (and delete) in an AWS account. For more information, see AWS Application Discovery Service Limits in the AWS Application Discovery Service User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-import-task\n[--client-request-token <value>]\n--name <value>\n--import-url <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--client-request-token <value>]",
        "--name <value>",
        "--import-url <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--client-request-token (string)\n\nOptional. A unique token that you can provide to prevent the same import request from occurring more than once. If you don’t provide a token, a token is automatically generated.\n\nSending more than one StartImportTask request with the same client request token will return information about the original import task with that client request token.\n\n--name (string)\n\nA descriptive name for this request. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.\n\n--import-url (string)\n\nThe URL for your import file that you’ve uploaded to Amazon S3.\n\nNote\n\nIf you’re using the AWS CLI, this URL is structured as follows: s3://BucketName/ImportFileName.CSV\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntask -> (structure)\n\nAn array of information related to the import task request including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.\n\nimportTaskId -> (string)\n\nThe unique ID for a specific import task. These IDs aren’t globally unique, but they are unique within an AWS account.\n\nclientRequestToken -> (string)\n\nA unique token used to prevent the same import request from occurring more than once. If you didn’t provide a token, a token was automatically generated when the import task request was sent.\n\nname -> (string)\n\nA descriptive name for an import task. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.\n\nimportUrl -> (string)\n\nThe URL for your import file that you’ve uploaded to Amazon S3.\n\nstatus -> (string)\n\nThe status of the import task. An import can have the status of IMPORT_COMPLETE and still have some records fail to import from the overall request. More information can be found in the downloadable archive defined in the errorsAndFailedEntriesZip field, or in the Migration Hub management console.\n\nimportRequestTime -> (timestamp)\n\nThe time that the import task request was made, presented in the Unix time stamp format.\n\nimportCompletionTime -> (timestamp)\n\nThe time that the import task request finished, presented in the Unix time stamp format.\n\nimportDeletedTime -> (timestamp)\n\nThe time that the import task request was deleted, presented in the Unix time stamp format.\n\nserverImportSuccess -> (integer)\n\nThe total number of server records in the import file that were successfully imported.\n\nserverImportFailure -> (integer)\n\nThe total number of server records in the import file that failed to be imported.\n\napplicationImportSuccess -> (integer)\n\nThe total number of application records in the import file that were successfully imported.\n\napplicationImportFailure -> (integer)\n\nThe total number of application records in the import file that failed to be imported.\n\nerrorsAndFailedEntriesZip -> (string)\n\nA link to a compressed archive folder (in the ZIP format) that contains an error log and a file of failed records. You can use these two files to quickly identify records that failed, why they failed, and correct those records. Afterward, you can upload the corrected file to your Amazon S3 bucket and create another import task request.\n\nThis field also includes authorization information so you can confirm the authenticity of the compressed archive before you download it.\n\nIf some records failed to be imported we recommend that you correct the records in the failed entries file and then imports that failed entries file. This prevents you from having to correct and update the larger original file and attempt importing it again."
    },
    {
      "command_name": "stop-continuous-export",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/stop-continuous-export.html",
      "command_description": "Description\n\nStop the continuous flow of agent’s discovered data into Amazon Athena.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-continuous-export\n--export-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--export-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--export-id (string)\n\nThe unique ID assigned to this export.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstartTime -> (timestamp)\n\nTimestamp that represents when this continuous export started collecting data.\n\nstopTime -> (timestamp)\n\nTimestamp that represents when this continuous export was stopped."
    },
    {
      "command_name": "stop-data-collection-by-agent-ids",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/stop-data-collection-by-agent-ids.html",
      "command_description": "Description\n\nInstructs the specified agents or connectors to stop collecting data.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-data-collection-by-agent-ids\n--agent-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--agent-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--agent-ids (list)\n\nThe IDs of the agents or connectors from which to stop collecting data.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nagentsConfigurationStatus -> (list)\n\nInformation about the agents or connector that were instructed to stop collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.\n\n(structure)\n\nInformation about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.\n\nagentId -> (string)\n\nThe agent/connector ID.\n\noperationSucceeded -> (boolean)\n\nInformation about the status of the StartDataCollection and StopDataCollection operations. The system has recorded the data collection operation. The agent/connector receives this command the next time it polls for a new command.\n\ndescription -> (string)\n\nA description of the operation performed."
    },
    {
      "command_name": "update-application",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/discovery/update-application.html",
      "command_description": "Description\n\nUpdates metadata about an application.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-application\n--configuration-id <value>\n[--name <value>]\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "[--name <value>]",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nConfiguration ID of the application to be updated.\n\n--name (string)\n\nNew name of the application to be updated.\n\n--description (string)\n\nNew description of the application to be updated.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAWS Application Discovery Service helps you plan application migration projects. It automatically identifies servers, virtual machines (VMs), and network dependencies in your on-premises data centers. For more information, see the AWS Application Discovery Service FAQ . Application Discovery Service offers three ways of performing discovery and collecting data about your on-premises servers:\n\nAgentless discovery is recommended for environments that use VMware vCenter Server. This mode doesn’t require you to install an agent on each host. It does not work in non-VMware environments.\n\nAgentless discovery gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment.\n\nAgentless discovery doesn’t collect information about network dependencies, only agent-based discovery collects that information.\n\nAgent-based discovery collects a richer set of data than agentless discovery by using the AWS Application Discovery Agent, which you install on one or more hosts in your data center.\n\nThe agent captures infrastructure and application information, including an inventory of running processes, system performance information, resource utilization, and network dependencies.\n\nThe information collected by agents is secured at rest and in transit to the Application Discovery Service database in the cloud.\n\nAWS Partner Network (APN) solutions integrate with Application Discovery Service, enabling you to import details of your on-premises environment directly into Migration Hub without using the discovery connector or discovery agent.\n\nThird-party application discovery tools can query AWS Application Discovery Service, and they can write to the Application Discovery Service database using the public API.\n\nIn this way, you can import data into Migration Hub and view it, so that you can associate applications with servers and track migrations.\n\nRecommendations\n\nWe recommend that you use agent-based discovery for non-VMware environments, and whenever you want to collect information about network dependencies. You can run agent-based and agentless discovery simultaneously. Use agentless discovery to complete the initial infrastructure assessment quickly, and then install agents on select hosts to collect additional information.\n\nWorking With This Guide\n\nThis API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you’re using. For more information, see AWS SDKs .\n\nNote\n\nRemember that you must set your Migration Hub home region before you call any of these APIs.\n\nYou must make API calls for write actions (create, notify, associate, disassociate, import, or put) while in your home region, or a HomeRegionNotSetException error is returned.\n\nAPI calls for read actions (list, describe, stop, and delete) are permitted outside of your home region.\n\nAlthough it is unlikely, the Migration Hub home region could change. If you call APIs outside the home region, an InvalidInputException is returned.\n\nYou must call GetHomeRegion to obtain the latest Migration Hub home region.\n\nThis guide is intended for use with the AWS Application Discovery Service User Guide .\n\nWarning\n\nAll data is handled according to the AWS Privacy Policy . You can operate Application Discovery Service offline to inspect collected data before it is shared with the service."
}