{
  "service_name": "kinesis-video-media",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesis-video-media/index.html",
  "service_commands": [
    {
      "command_name": "get-media",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/kinesis-video-media/get-media.html",
      "command_description": "Description\n\nUse this API to retrieve media content from a Kinesis video stream. In the request, you identify the stream name or stream Amazon Resource Name (ARN), and the starting chunk. Kinesis Video Streams then returns a stream of chunks in order by fragment number.\n\nNote\n\nYou must first call the GetDataEndpoint API to get an endpoint. Then send the GetMedia requests to this endpoint using the –endpoint-url parameter .\n\nWhen you put media data (fragments) on a stream, Kinesis Video Streams stores each incoming fragment and related metadata in what is called a “chunk.” For more information, see PutMedia . The GetMedia API returns a stream of these chunks starting from the chunk that you specify in the request.\n\nThe following limits apply when using the GetMedia API:\n\nA client can call GetMedia up to five times per second per stream.\n\nKinesis Video Streams sends media data at a rate of up to 25 megabytes per second (or 200 megabits per second) during a GetMedia session.\n\nNote\n\nIf an error is thrown after invoking a Kinesis Video Streams media API, in addition to the HTTP status code and the response body, it includes the following pieces of information:\n\nx-amz-ErrorType HTTP header – contains a more specific error type in addition to what the HTTP status code provides.\n\nx-amz-RequestId HTTP header – if you want to report an issue to AWS, the support team can better diagnose the problem if given the Request Id.\n\nBoth the HTTP status code and the ErrorType header can be utilized to make programmatic decisions about whether errors are retry-able and under what conditions, as well as provide information on what actions the client programmer might need to take in order to successfully try again.\n\nFor more information, see the Errors section at the bottom of this topic, as well as Common Errors .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-media\n[--stream-name <value>]\n[--stream-arn <value>]\n--start-selector <value>\n<outfile>\n",
      "command_options": [
        "[--stream-name <value>]",
        "[--stream-arn <value>]",
        "--start-selector <value>",
        "<outfile>"
      ],
      "command_options_description": "Options\n\n--stream-name (string)\n\nThe Kinesis video stream name from where you want to get the media content. If you don’t specify the streamName , you must specify the streamARN .\n\n--stream-arn (string)\n\nThe ARN of the stream from where you want to get the media content. If you don’t specify the streamARN , you must specify the streamName .\n\n--start-selector (structure)\n\nIdentifies the starting chunk to get from the specified stream.\n\nStartSelectorType -> (string)\n\nIdentifies the fragment on the Kinesis video stream where you want to start getting the data from.\n\nNOW - Start with the latest chunk on the stream.\n\nEARLIEST - Start with earliest available chunk on the stream.\n\nFRAGMENT_NUMBER - Start with the chunk after a specific fragment. You must also specify the AfterFragmentNumber parameter.\n\nPRODUCER_TIMESTAMP or SERVER_TIMESTAMP - Start with the chunk containing a fragment with the specified producer or server timestamp. You specify the timestamp by adding StartTimestamp .\n\nCONTINUATION_TOKEN - Read using the specified continuation token.\n\nNote\n\nIf you choose the NOW, EARLIEST, or CONTINUATION_TOKEN as the startSelectorType , you don’t provide any additional information in the startSelector .\n\nAfterFragmentNumber -> (string)\n\nSpecifies the fragment number from where you want the GetMedia API to start returning the fragments.\n\nStartTimestamp -> (timestamp)\n\nA timestamp value. This value is required if you choose the PRODUCER_TIMESTAMP or the SERVER_TIMESTAMP as the startSelectorType . The GetMedia API then starts with the chunk containing the fragment that has the specified timestamp.\n\nContinuationToken -> (string)\n\nContinuation token that Kinesis Video Streams returned in the previous GetMedia response. The GetMedia API then starts with the chunk identified by the continuation token.\n\nShorthand Syntax:\n\nStartSelectorType=string,AfterFragmentNumber=string,StartTimestamp=timestamp,ContinuationToken=string\n\n\nJSON Syntax:\n\n{\n  \"StartSelectorType\": \"FRAGMENT_NUMBER\"|\"SERVER_TIMESTAMP\"|\"PRODUCER_TIMESTAMP\"|\"NOW\"|\"EARLIEST\"|\"CONTINUATION_TOKEN\",\n  \"AfterFragmentNumber\": \"string\",\n  \"StartTimestamp\": timestamp,\n  \"ContinuationToken\": \"string\"\n}\n\n\noutfile (string) Filename where the content will be saved\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nContentType -> (string)\n\nThe content type of the requested media.\n\nPayload -> (blob)\n\nThe payload Kinesis Video Streams returns is a sequence of chunks from the specified stream. For information about the chunks, see . The chunks that Kinesis Video Streams returns in the GetMedia call also include the following additional Matroska (MKV) tags:\n\nAWS_KINESISVIDEO_CONTINUATION_TOKEN (UTF-8 string) - In the event your GetMedia call terminates, you can use this continuation token in your next request to get the next chunk where the last request terminated.\n\nAWS_KINESISVIDEO_MILLIS_BEHIND_NOW (UTF-8 string) - Client applications can use this tag value to determine how far behind the chunk returned in the response is from the latest chunk on the stream.\n\nAWS_KINESISVIDEO_FRAGMENT_NUMBER - Fragment number returned in the chunk.\n\nAWS_KINESISVIDEO_SERVER_TIMESTAMP - Server timestamp of the fragment.\n\nAWS_KINESISVIDEO_PRODUCER_TIMESTAMP - Producer timestamp of the fragment.\n\nThe following tags will be present if an error occurs:\n\nAWS_KINESISVIDEO_ERROR_CODE - String description of an error that caused GetMedia to stop.\n\nAWS_KINESISVIDEO_ERROR_ID: Integer code of the error.\n\nThe error codes are as follows:\n\n3002 - Error writing to the stream\n\n4000 - Requested fragment is not found\n\n4500 - Access denied for the stream’s KMS key\n\n4501 - Stream’s KMS key is disabled\n\n4502 - Validation error on the stream’s KMS key\n\n4503 - KMS key specified in the stream is unavailable\n\n4504 - Invalid usage of the KMS key specified in the stream\n\n4505 - Invalid state of the KMS key specified in the stream\n\n4506 - Unable to find the KMS key specified in the stream\n\n5000 - Internal error"
    }
  ],
  "service_description": "Description"
}