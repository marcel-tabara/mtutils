{
  "service_name": "route53",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/index.html",
  "service_commands": [
    {
      "command_name": "activate-key-signing-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/activate-key-signing-key.html",
      "command_description": "Description\n\nActivates a key-signing key (KSK) so that it can be used for signing by DNSSEC. This operation changes the KSK status to ACTIVE .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  activate-key-signing-key\n--hosted-zone-id <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--name (string)\n\nA string used to identify a key-signing key (KSK). Name can include numbers, letters, and underscores (_). Name must be unique for each key-signing key in the same hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "associate-vpc-with-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/associate-vpc-with-hosted-zone.html",
      "command_description": "Description\n\nAssociates an Amazon VPC with a private hosted zone.\n\nWarning\n\nTo perform the association, the VPC and the private hosted zone must already exist. You can’t convert a public hosted zone into a private hosted zone.\n\nNote\n\nIf you want to associate a VPC that was created by using one Amazon Web Services account with a private hosted zone that was created by using a different account, the Amazon Web Services account that created the private hosted zone must first submit a CreateVPCAssociationAuthorization request. Then the account that created the VPC must submit an AssociateVPCWithHostedZone request.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  associate-vpc-with-hosted-zone\n--hosted-zone-id <value>\n--vpc <value>\n[--comment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--vpc <value>",
        "[--comment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the private hosted zone that you want to associate an Amazon VPC with.\n\nNote that you can’t associate a VPC with a hosted zone that doesn’t have an existing VPC association.\n\n--vpc (structure)\n\nA complex type that contains information about the VPC that you want to associate with a private hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nShorthand Syntax:\n\nVPCRegion=string,VPCId=string\n\n\nJSON Syntax:\n\n{\n  \"VPCRegion\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-east-1\"|\"me-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-south-1\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"ca-central-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\",\n  \"VPCId\": \"string\"\n}\n\n\n--comment (string)\n\nOptional: A comment about the association request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes the changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "change-resource-record-sets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/change-resource-record-sets.html",
      "command_description": "Description\n\nCreates, changes, or deletes a resource record set, which contains authoritative DNS information for a specified domain name or subdomain name. For example, you can use ChangeResourceRecordSets to create a resource record set that routes traffic for test.example.com to a web server that has an IP address of 192.0.2.44.\n\nDeleting Resource Record Sets\n\nTo delete a resource record set, you must specify all the same values that you specified when you created it.\n\nChange Batches and Transactional Changes\n\nThe request body must include a document with a ChangeResourceRecordSetsRequest element. The request body contains a list of change items, known as a change batch. Change batches are considered transactional changes. Route 53 validates the changes in the request and then either makes all or none of the changes in the change batch request. This ensures that DNS routing isn’t adversely affected by partial changes to the resource record sets in a hosted zone.\n\nFor example, suppose a change batch request contains two changes: it deletes the CNAME resource record set for www.example.com and creates an alias resource record set for www.example.com. If validation for both records succeeds, Route 53 deletes the first resource record set and creates the second resource record set in a single operation. If validation for either the DELETE or the CREATE action fails, then the request is canceled, and the original CNAME record continues to exist.\n\nNote\n\nIf you try to delete the same resource record set more than once in a single change batch, Route 53 returns an InvalidChangeBatch error.\n\nTraffic Flow\n\nTo create resource record sets for complex routing configurations, use either the traffic flow visual editor in the Route 53 console or the API actions for traffic policies and traffic policy instances. Save the configuration as a traffic policy, then associate the traffic policy with one or more domain names (such as example.com) or subdomain names (such as www.example.com), in the same hosted zone or in multiple hosted zones. You can roll back the updates if the new configuration isn’t performing as expected. For more information, see Using Traffic Flow to Route DNS Traffic in the Amazon Route 53 Developer Guide .\n\nCreate, Delete, and Upsert\n\nUse ChangeResourceRecordsSetsRequest to perform the following actions:\n\nCREATE : Creates a resource record set that has the specified values.\n\nDELETE : Deletes an existing resource record set that has the specified values.\n\nUPSERT : If a resource record set does not already exist, Amazon Web Services creates it. If a resource set does exist, Route 53 updates it with the values in the request.\n\nSyntaxes for Creating, Updating, and Deleting Resource Record Sets\n\nThe syntax for a request depends on the type of resource record set that you want to create, delete, or update, such as weighted, alias, or failover. The XML elements in your request must appear in the order listed in the syntax.\n\nFor an example for each type of resource record set, see “Examples.”\n\nDon’t refer to the syntax in the “Parameter Syntax” section, which includes all of the elements for every kind of resource record set that you can create, delete, or update by using ChangeResourceRecordSets .\n\nChange Propagation to Route 53 DNS Servers\n\nWhen you submit a ChangeResourceRecordSets request, Route 53 propagates your changes to all of the Route 53 authoritative DNS servers. While your changes are propagating, GetChange returns a status of PENDING . When propagation is complete, GetChange returns a status of INSYNC . Changes generally propagate to all Route 53 name servers within 60 seconds. For more information, see GetChange .\n\nLimits on ChangeResourceRecordSets Requests\n\nFor information about the limits on a ChangeResourceRecordSets request, see Limits in the Amazon Route 53 Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  change-resource-record-sets\n--hosted-zone-id <value>\n--change-batch <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--change-batch <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that contains the resource record sets that you want to change.\n\n--change-batch (structure)\n\nA complex type that contains an optional comment and the Changes element.\n\nComment -> (string)\n\nOptional: Any comments you want to include about a change batch request.\n\nChanges -> (list)\n\nInformation about the changes to make to the record sets.\n\n(structure)\n\nThe information for each resource record set that you want to change.\n\nAction -> (string)\n\nThe action to perform:\n\nCREATE : Creates a resource record set that has the specified values.\n\nDELETE : Deletes a existing resource record set.\n\nWarning\n\nTo delete the resource record set that is associated with a traffic policy instance, use DeleteTrafficPolicyInstance . Amazon Route 53 will delete the resource record set automatically. If you delete the resource record set by using ChangeResourceRecordSets , Route 53 doesn’t automatically delete the traffic policy instance, and you’ll continue to be charged for it even though it’s no longer in use.\n\nUPSERT : If a resource record set doesn’t already exist, Route 53 creates it. If a resource record set does exist, Route 53 updates it with the values in the request.\n\nResourceRecordSet -> (structure)\n\nInformation about the resource record set to create, delete, or update.\n\nName -> (string)\n\nFor ChangeResourceRecordSets requests, the name of the record that you want to create, update, or delete. For ListResourceRecordSets responses, the name of a record in the specified hosted zone.\n\nChangeResourceRecordSets Only\n\nEnter a fully qualified domain name, for example, www.example.com . You can optionally include a trailing dot. If you omit the trailing dot, Amazon Route 53 assumes that the domain name that you specify is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see DNS Domain Name Format in the Amazon Route 53 Developer Guide .\n\nYou can use the asterisk (*) wildcard to replace the leftmost label in a domain name, for example, *.example.com . Note the following:\n\nThe * must replace the entire label. For example, you can’t specify *prod.example.com or prod*.example.com .\n\nThe * can’t replace any of the middle labels, for example, marketing.*.example.com.\n\nIf you include * in any position other than the leftmost label in a domain name, DNS treats it as an * character (ASCII 42), not as a wildcard.\n\nWarning\n\nYou can’t use the * wildcard for resource records sets that have a type of NS.\n\nYou can use the * wildcard as the leftmost label in a domain name, for example, *.example.com . You can’t use an * for one of the middle labels, for example, marketing.*.example.com . In addition, the * must replace the entire label; for example, you can’t specify prod*.example.com .\n\nType -> (string)\n\nThe DNS record type. For information about different record types and how data is encoded for them, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide .\n\nValid values for basic resource record sets: A | AAAA | CAA | CNAME | DS |MX | NAPTR | NS | PTR | SOA | SPF | SRV | TXT\n\nValues for weighted, latency, geolocation, and failover resource record sets: A | AAAA | CAA | CNAME | MX | NAPTR | PTR | SPF | SRV | TXT . When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group.\n\nValid values for multivalue answer resource record sets: A | AAAA | MX | NAPTR | PTR | SPF | SRV | TXT\n\nNote\n\nSPF records were formerly used to verify the identity of the sender of email messages. However, we no longer recommend that you create resource record sets for which the value of Type is SPF . RFC 7208, Sender Policy Framework (SPF) for Authorizing Use of Domains in Email, Version 1 , has been updated to say, “…[I]ts existence and mechanism defined in [RFC4408] have led to some interoperability issues. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it.” In RFC 7208, see section 14.1, The SPF DNS Record Type .\n\nValues for alias resource record sets:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs: A\n\nCloudFront distributions: A If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of A and one with a value of AAAA .\n\nAmazon API Gateway environment that has a regionalized subdomain : A\n\nELB load balancers: A | AAAA\n\nAmazon S3 buckets: A\n\nAmazon Virtual Private Cloud interface VPC endpoints A\n\nAnother resource record set in this hosted zone: Specify the type of the resource record set that you’re creating the alias for. All values are supported except NS and SOA .\n\nNote\n\nIf you’re creating an alias record that has the same name as the hosted zone (known as the zone apex), you can’t route traffic to a record for which the value of Type is CNAME . This is because the alias record must have the same type as the record you’re routing traffic to, and creating a CNAME record for the zone apex isn’t supported even for an alias record.\n\nSetIdentifier -> (string)\n\nResource record sets that have a routing policy other than simple: An identifier that differentiates among multiple resource record sets that have the same combination of name and type, such as multiple weighted resource record sets named acme.example.com that have a type of A. In a group of resource record sets that have the same name and type, the value of SetIdentifier must be unique for each resource record set.\n\nFor information about routing policies, see Choosing a Routing Policy in the Amazon Route 53 Developer Guide .\n\nWeight -> (long)\n\nWeighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource’s weight to the total. Note the following:\n\nYou must specify a value for the Weight element for every weighted resource record set.\n\nYou can only specify one ResourceRecord per weighted resource record set.\n\nYou can’t create latency, failover, or geolocation resource record sets that have the same values for the Name and Type elements as weighted resource record sets.\n\nYou can create a maximum of 100 weighted resource record sets that have the same values for the Name and Type elements.\n\nFor weighted (but not weighted alias) resource record sets, if you set Weight to 0 for a resource record set, Route 53 never responds to queries with the applicable value for that resource record set. However, if you set Weight to 0 for all resource record sets that have the same combination of DNS name and type, traffic is routed to all resources with equal probability. The effect of setting Weight to 0 is different when you associate health checks with weighted resource record sets. For more information, see Options for Configuring Route 53 Active-Active and Active-Passive Failover in the Amazon Route 53 Developer Guide .\n\nRegion -> (string)\n\nLatency-based resource record sets only: The Amazon EC2 Region where you created the resource that this resource record set refers to. The resource typically is an Amazon Web Services resource, such as an EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.\n\nNote\n\nAlthough creating latency and latency alias resource record sets in a private hosted zone is allowed, it’s not supported.\n\nWhen Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 Region. Route 53 then returns the value that is associated with the selected resource record set.\n\nNote the following:\n\nYou can only specify one ResourceRecord per latency resource record set.\n\nYou can only create one latency resource record set for each Amazon EC2 Region.\n\nYou aren’t required to create latency resource record sets for all Amazon EC2 Regions. Route 53 will choose the region with the best latency from among the regions that you create latency resource record sets for.\n\nYou can’t create non-latency resource record sets that have the same values for the Name and Type elements as latency resource record sets.\n\nGeoLocation -> (structure)\n\nGeolocation resource record sets only: A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of 192.0.2.111 , create a resource record set with a Type of A and a ContinentCode of AF .\n\nNote\n\nAlthough creating geolocation and geolocation alias resource record sets in a private hosted zone is allowed, it’s not supported.\n\nIf you create separate resource record sets for overlapping geographic regions (for example, one resource record set for a continent and one for a country on the same continent), priority goes to the smallest geographic region. This allows you to route most queries for a continent to one resource and to route queries for a country on that continent to a different resource.\n\nYou can’t create two geolocation resource record sets that specify the same geographic location.\n\nThe value * in the CountryCode element matches all geographic locations that aren’t specified in other geolocation resource record sets that have the same values for the Name and Type elements.\n\nWarning\n\nGeolocation works by mapping IP addresses to locations. However, some IP addresses aren’t mapped to geographic locations, so even if you create geolocation resource record sets that cover all seven continents, Route 53 will receive some DNS queries from locations that it can’t identify. We recommend that you create a resource record set for which the value of CountryCode is * . Two groups of queries are routed to the resource that you specify in this record: queries that come from locations for which you haven’t created geolocation resource record sets and queries from IP addresses that aren’t mapped to a location. If you don’t create a * resource record set, Route 53 returns a “no answer” response for queries from those locations.\n\nYou can’t create non-geolocation resource record sets that have the same values for the Name and Type elements as geolocation resource record sets.\n\nContinentCode -> (string)\n\nThe two-letter code for the continent.\n\nAmazon Route 53 supports the following continent codes:\n\nAF : Africa\n\nAN : Antarctica\n\nAS : Asia\n\nEU : Europe\n\nOC : Oceania\n\nNA : North America\n\nSA : South America\n\nConstraint: Specifying ContinentCode with either CountryCode or SubdivisionCode returns an InvalidInput error.\n\nCountryCode -> (string)\n\nFor geolocation resource record sets, the two-letter code for a country.\n\nAmazon Route 53 uses the two-letter country codes that are specified in ISO standard 3166-1 alpha-2 .\n\nSubdivisionCode -> (string)\n\nFor geolocation resource record sets, the two-letter code for a state of the United States. Route 53 doesn’t support any other values for SubdivisionCode . For a list of state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website.\n\nIf you specify subdivisioncode , you must also specify US for CountryCode .\n\nFailover -> (string)\n\nFailover resource record sets only: To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover ; for the other resource record set, you specify SECONDARY . In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.\n\nExcept where noted, the following failover behaviors assume that you have included the HealthCheckId element in both resource record sets:\n\nWhen the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set.\n\nWhen the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set.\n\nWhen the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set.\n\nIf you omit the HealthCheckId element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set. This is true regardless of the health of the associated endpoint.\n\nYou can’t create non-failover resource record sets that have the same values for the Name and Type elements as failover resource record sets.\n\nFor failover alias resource record sets, you must also include the EvaluateTargetHealth element and set the value to true.\n\nFor more information about configuring failover for Route 53, see the following topics in the Amazon Route 53 Developer Guide :\n\nRoute 53 Health Checks and DNS Failover\n\nConfiguring Failover in a Private Hosted Zone\n\nMultiValueAnswer -> (boolean)\n\nMultivalue answer resource record sets only : To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer . Note the following:\n\nIf you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy.\n\nIf you don’t associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy.\n\nRoute 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records.\n\nIf you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records.\n\nWhen all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records.\n\nIf a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response.\n\nYou can’t create multivalue answer alias records.\n\nTTL -> (long)\n\nThe resource record cache time to live (TTL), in seconds. Note the following:\n\nIf you’re creating or updating an alias resource record set, omit TTL . Amazon Route 53 uses the value of TTL for the alias target.\n\nIf you’re associating this resource record set with a health check (if you’re adding a HealthCheckId element), we recommend that you specify a TTL of 60 seconds or less so clients respond quickly to changes in health status.\n\nAll of the resource record sets in a group of weighted resource record sets must have the same value for TTL .\n\nIf a group of weighted resource record sets includes one or more weighted alias resource record sets for which the alias target is an ELB load balancer, we recommend that you specify a TTL of 60 seconds for all of the non-alias weighted resource record sets that have the same name and type. Values other than 60 seconds (the TTL for load balancers) will change the effect of the values that you specify for Weight .\n\nResourceRecords -> (list)\n\nInformation about the resource records to act upon.\n\nNote\n\nIf you’re creating an alias resource record set, omit ResourceRecords .\n\n(structure)\n\nInformation specific to the resource record.\n\nNote\n\nIf you’re creating an alias resource record set, omit ResourceRecord .\n\nValue -> (string)\n\nThe current or new DNS record value, not to exceed 4,000 characters. In the case of a DELETE action, if the current value does not match the actual value, an error is returned. For descriptions about how to format Value for different record types, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide .\n\nYou can specify more than one value for all record types except CNAME and SOA .\n\nNote\n\nIf you’re creating an alias resource record set, omit Value .\n\nAliasTarget -> (structure)\n\nAlias resource record sets only: Information about the Amazon Web Services resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.\n\nIf you’re creating resource records sets for a private hosted zone, note the following:\n\nYou can’t create an alias resource record set in a private hosted zone to route traffic to a CloudFront distribution.\n\nCreating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.\n\nFor information about creating failover resource record sets in a private hosted zone, see Configuring Failover in a Private Hosted Zone in the Amazon Route 53 Developer Guide .\n\nHostedZoneId -> (string)\n\nAlias resource records sets only : The value used depends on where you want to route traffic:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs\n\nSpecify the hosted zone ID for your API. You can get the applicable value using the CLI command get-domain-names :\n\nFor regional APIs, specify the value of regionalHostedZoneId .\n\nFor edge-optimized APIs, specify the value of distributionHostedZoneId .\n\nAmazon Virtual Private Cloud interface VPC endpoint\n\nSpecify the hosted zone ID for your interface endpoint. You can get the value of HostedZoneId using the CLI command describe-vpc-endpoints .\n\nCloudFront distribution\n\nSpecify Z2FDTNDATAQYW2 .\n\nNote\n\nAlias resource record sets for CloudFront can’t be created in a private zone.\n\nElastic Beanstalk environment\n\nSpecify the hosted zone ID for the region that you created the environment in. The environment must have a regionalized subdomain. For a list of regions and the corresponding hosted zone IDs, see Elastic Beanstalk endpoints and quotas in the the Amazon Web Services General Reference .\n\nELB load balancer\n\nSpecify the value of the hosted zone ID for the load balancer. Use the following methods to get the hosted zone ID:\n\nElastic Load Balancing endpoints and quotas topic in the Amazon Web Services General Reference : Use the value that corresponds with the region that you created your load balancer in. Note that there are separate columns for Application and Classic Load Balancers and for Network Load Balancers.\n\nAmazon Web Services Management Console : Go to the Amazon EC2 page, choose Load Balancers in the navigation pane, select the load balancer, and get the value of the Hosted zone field on the Description tab.\n\nElastic Load Balancing API : Use DescribeLoadBalancers to get the applicable value. For more information, see the applicable guide:\n\nClassic Load Balancers: Use DescribeLoadBalancers to get the value of CanonicalHostedZoneNameId .\n\nApplication and Network Load Balancers: Use DescribeLoadBalancers to get the value of CanonicalHostedZoneId .\n\nCLI : Use describe-load-balancers to get the applicable value. For more information, see the applicable guide:\n\nClassic Load Balancers: Use describe-load-balancers to get the value of CanonicalHostedZoneNameId .\n\nApplication and Network Load Balancers: Use describe-load-balancers to get the value of CanonicalHostedZoneId .\n\nGlobal Accelerator accelerator\n\nSpecify Z2BJ6XQ5FK7U4H .\n\nAn Amazon S3 bucket configured as a static website\n\nSpecify the hosted zone ID for the region that you created the bucket in. For more information about valid values, see the table Amazon S3 Website Endpoints in the Amazon Web Services General Reference .\n\nAnother Route 53 resource record set in your hosted zone\n\nSpecify the hosted zone ID of your hosted zone. (An alias resource record set can’t reference a resource record set in a different hosted zone.)\n\nDNSName -> (string)\n\nAlias resource record sets only: The value that you specify depends on where you want to route queries:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs\n\nSpecify the applicable domain name for your API. You can get the applicable value using the CLI command get-domain-names :\n\nFor regional APIs, specify the value of regionalDomainName .\n\nFor edge-optimized APIs, specify the value of distributionDomainName . This is the name of the associated CloudFront distribution, such as da1b2c3d4e5.cloudfront.net .\n\nNote\n\nThe name of the record that you’re creating must match a custom domain name for your API, such as api.example.com .\n\nAmazon Virtual Private Cloud interface VPC endpoint\n\nEnter the API endpoint for the interface endpoint, such as vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com . For edge-optimized APIs, this is the domain name for the corresponding CloudFront distribution. You can get the value of DnsName using the CLI command describe-vpc-endpoints .\n\nCloudFront distribution\n\nSpecify the domain name that CloudFront assigned when you created your distribution.\n\nYour CloudFront distribution must include an alternate domain name that matches the name of the resource record set. For example, if the name of the resource record set is acme.example.com , your CloudFront distribution must include acme.example.com as one of the alternate domain names. For more information, see Using Alternate Domain Names (CNAMEs) in the Amazon CloudFront Developer Guide .\n\nYou can’t create a resource record set in a private hosted zone to route traffic to a CloudFront distribution.\n\nNote\n\nFor failover alias records, you can’t specify a CloudFront distribution for both the primary and secondary records. A distribution must include an alternate domain name that matches the name of the record. However, the primary and secondary records have the same name, and you can’t include the same alternate domain name in more than one distribution.\n\nElastic Beanstalk environment\n\nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment. For example, the domain name my-environment.*us-west-2* .elasticbeanstalk.com is a regionalized domain name.\n\nWarning\n\nFor environments that were created before early 2016, the domain name doesn’t include the region. To route traffic to these environments, you must create a CNAME record instead of an alias record. Note that you can’t create a CNAME record for the root domain name. For example, if your domain name is example.com, you can create a record that routes traffic for acme.example.com to your Elastic Beanstalk environment, but you can’t create a record that routes traffic for example.com to your Elastic Beanstalk environment.\n\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the CNAME attribute for the environment. You can use the following methods to get the value of the CNAME attribute:\n\nAmazon Web Services Management Console : For information about how to get the value by using the console, see Using Custom Domains with Elastic Beanstalk in the Elastic Beanstalk Developer Guide .\n\nElastic Beanstalk API : Use the DescribeEnvironments action to get the value of the CNAME attribute. For more information, see DescribeEnvironments in the Elastic Beanstalk API Reference .\n\nCLI : Use the describe-environments command to get the value of the CNAME attribute. For more information, see describe-environments in the CLI Command Reference .\n\nELB load balancer\n\nSpecify the DNS name that is associated with the load balancer. Get the DNS name by using the Amazon Web Services Management Console, the ELB API, or the CLI.\n\nAmazon Web Services Management Console : Go to the EC2 page, choose Load Balancers in the navigation pane, choose the load balancer, choose the Description tab, and get the value of the DNS name field. If you’re routing traffic to a Classic Load Balancer, get the value that begins with dualstack . If you’re routing traffic to another type of load balancer, get the value that applies to the record type, A or AAAA.\n\nElastic Load Balancing API : Use DescribeLoadBalancers to get the value of DNSName . For more information, see the applicable guide:\n\nClassic Load Balancers: DescribeLoadBalancers\n\nApplication and Network Load Balancers: DescribeLoadBalancers\n\nCLI : Use describe-load-balancers to get the value of DNSName . For more information, see the applicable guide:\n\nClassic Load Balancers: describe-load-balancers\n\nApplication and Network Load Balancers: describe-load-balancers\n\nGlobal Accelerator accelerator\n\nSpecify the DNS name for your accelerator:\n\nGlobal Accelerator API: To get the DNS name, use DescribeAccelerator .\n\nCLI: To get the DNS name, use describe-accelerator .\n\nAmazon S3 bucket that is configured as a static website\n\nSpecify the domain name of the Amazon S3 website endpoint that you created the bucket in, for example, s3-website.us-east-2.amazonaws.com . For more information about valid values, see the table Amazon S3 Website Endpoints in the Amazon Web Services General Reference . For more information about using S3 buckets for websites, see Getting Started with Amazon Route 53 in the Amazon Route 53 Developer Guide.\n\nAnother Route 53 resource record set\n\nSpecify the value of the Name element for a resource record set in the current hosted zone.\n\nNote\n\nIf you’re creating an alias record that has the same name as the hosted zone (known as the zone apex), you can’t specify the domain name for a record for which the value of Type is CNAME . This is because the alias record must have the same type as the record that you’re routing traffic to, and creating a CNAME record for the zone apex isn’t supported even for an alias record.\n\nEvaluateTargetHealth -> (boolean)\n\nApplies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets: When EvaluateTargetHealth is true , an alias resource record set inherits the health of the referenced Amazon Web Services resource, such as an ELB load balancer or another resource record set in the hosted zone.\n\nNote the following:\n\nCloudFront distributions\n\nYou can’t set EvaluateTargetHealth to true when the alias target is a CloudFront distribution.\n\nElastic Beanstalk environments that have regionalized subdomains\n\nIf you specify an Elastic Beanstalk environment in DNSName and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. (An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance.) If you set EvaluateTargetHealth to true and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any.\n\nIf the environment contains a single Amazon EC2 instance, there are no special requirements.\n\nELB load balancers\n\nHealth checking behavior depends on the type of load balancer:\n\nClassic Load Balancers : If you specify an ELB Classic Load Balancer in DNSName , Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. If you set EvaluateTargetHealth to true and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources.\n\nApplication and Network Load Balancers : If you specify an ELB Application or Network Load Balancer and you set EvaluateTargetHealth to true , Route 53 routes queries to the load balancer based on the health of the target groups that are associated with the load balancer:\n\nFor an Application or Network Load Balancer to be considered healthy, every target group that contains targets must contain at least one healthy target. If any target group contains only unhealthy targets, the load balancer is considered unhealthy, and Route 53 routes queries to other resources.\n\nA target group that has no registered targets is considered unhealthy.\n\nNote\n\nWhen you create a load balancer, you configure settings for Elastic Load Balancing health checks; they’re not Route 53 health checks, but they perform a similar function. Do not create Route 53 health checks for the EC2 instances that you register with an ELB load balancer.\n\nS3 buckets\n\nThere are no special requirements for setting EvaluateTargetHealth to true when the alias target is an S3 bucket.\n\nOther records in the same hosted zone\n\nIf the Amazon Web Services resource that you specify in DNSName is a record or a group of records (for example, a group of weighted records) but is not another alias record, we recommend that you associate a health check with all of the records in the alias target. For more information, see What Happens When You Omit Health Checks? in the Amazon Route 53 Developer Guide .\n\nFor more information and examples, see Amazon Route 53 Health Checks and DNS Failover in the Amazon Route 53 Developer Guide .\n\nHealthCheckId -> (string)\n\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.\n\nRoute 53 determines whether a resource record set is healthy based on one of the following:\n\nBy periodically sending a request to the endpoint that is specified in the health check\n\nBy aggregating the status of a specified group of health checks (calculated health checks)\n\nBy determining the current state of a CloudWatch alarm (CloudWatch metric health checks)\n\nWarning\n\nRoute 53 doesn’t check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the Value element. When you add a HealthCheckId element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check.\n\nFor more information, see the following topics in the Amazon Route 53 Developer Guide :\n\nHow Amazon Route 53 Determines Whether an Endpoint Is Healthy\n\nRoute 53 Health Checks and DNS Failover\n\nConfiguring Failover in a Private Hosted Zone\n\nWhen to Specify HealthCheckId\n\nSpecifying a value for HealthCheckId is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check. Configuring health checks makes sense only in the following configurations:\n\nNon-alias resource record sets : You’re checking the health of a group of non-alias resource record sets that have the same routing policy, name, and type (such as multiple weighted records named www.example.com with a type of A) and you specify health check IDs for all the resource record sets. If the health check status for a resource record set is healthy, Route 53 includes the record among the records that it responds to DNS queries with. If the health check status for a resource record set is unhealthy, Route 53 stops responding to DNS queries using the value for that resource record set. If the health check status for all resource record sets in the group is unhealthy, Route 53 considers all resource record sets in the group healthy and responds to DNS queries accordingly.\n\nAlias resource record sets : You specify the following settings:\n\nYou set EvaluateTargetHealth to true for an alias resource record set in a group of resource record sets that have the same routing policy, name, and type (such as multiple weighted records named www.example.com with a type of A).\n\nYou configure the alias resource record set to route traffic to a non-alias resource record set in the same hosted zone.\n\nYou specify a health check ID for the non-alias resource record set.\n\nIf the health check status is healthy, Route 53 considers the alias resource record set to be healthy and includes the alias record among the records that it responds to DNS queries with.\n\nIf the health check status is unhealthy, Route 53 stops responding to DNS queries using the alias resource record set.\n\nNote\n\nThe alias resource record set can also route traffic to a group of non-alias resource record sets that have the same routing policy, name, and type. In that configuration, associate health checks with all of the resource record sets in the group of non-alias resource record sets.\n\nGeolocation Routing\n\nFor geolocation resource record sets, if an endpoint is unhealthy, Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the entire United States, for North America, and a resource record set that has * for CountryCode is * , which applies to all locations. If the endpoint for the state resource record set is unhealthy, Route 53 checks for healthy resource record sets in the following order until it finds a resource record set for which the endpoint is healthy:\n\nThe United States\n\nNorth America\n\nThe default resource record set\n\nSpecifying the Health Check Endpoint by Domain Name\n\nIf your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com . For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com ), not the name of the resource record sets (www.example.com ).\n\nWarning\n\nHealth check results will be unpredictable if you do the following:\n\nCreate a health check that has the same value for FullyQualifiedDomainName as the name of a resource record set.\n\nAssociate that health check with the resource record set.\n\nTrafficPolicyInstanceId -> (string)\n\nWhen you create a traffic policy instance, Amazon Route 53 automatically creates a resource record set. TrafficPolicyInstanceId is the ID of the traffic policy instance that Route 53 created this resource record set for.\n\nWarning\n\nTo delete the resource record set that is associated with a traffic policy instance, use DeleteTrafficPolicyInstance . Route 53 will delete the resource record set automatically. If you delete the resource record set by using ChangeResourceRecordSets , Route 53 doesn’t automatically delete the traffic policy instance, and you’ll continue to be charged for it even though it’s no longer in use.\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"string\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"NAPTR\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\"|\"CAA\"|\"DS\",\n        \"SetIdentifier\": \"string\",\n        \"Weight\": long,\n        \"Region\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"ca-central-1\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"cn-north-1\"|\"cn-northwest-1\"|\"ap-east-1\"|\"me-south-1\"|\"ap-south-1\"|\"af-south-1\"|\"eu-south-1\",\n        \"GeoLocation\": {\n          \"ContinentCode\": \"string\",\n          \"CountryCode\": \"string\",\n          \"SubdivisionCode\": \"string\"\n        },\n        \"Failover\": \"PRIMARY\"|\"SECONDARY\",\n        \"MultiValueAnswer\": true|false,\n        \"TTL\": long,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"string\"\n          }\n          ...\n        ],\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"string\",\n          \"DNSName\": \"string\",\n          \"EvaluateTargetHealth\": true|false\n        },\n        \"HealthCheckId\": \"string\",\n        \"TrafficPolicyInstanceId\": \"string\"\n      }\n    }\n    ...\n  ]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that contains information about changes made to your hosted zone.\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide.",
      "command_examples": "Examples\n\nTo create, update, or delete a resource record set\n\nThe following change-resource-record-sets command creates a resource record set using the hosted-zone-id Z1R8UBAEXAMPLE and the JSON-formatted configuration in the file C:\\awscli\\route53\\change-resource-record-sets.json:\n\naws route53 change-resource-record-sets --hosted-zone-id Z1R8UBAEXAMPLE --change-batch file://C:\\awscli\\route53\\change-resource-record-sets.json\n\n\nFor more information, see POST ChangeResourceRecordSets in the Amazon Route 53 API Reference.\n\nThe configuration in the JSON file depends on the kind of resource record set you want to create:\n\nBasic\n\nWeighted\n\nAlias\n\nWeighted Alias\n\nLatency\n\nLatency Alias\n\nFailover\n\nFailover Alias\n\nBasic Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"TTL\": time to live in seconds,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"applicable value for the record type\"\n          },\n          {...}\n        ]\n      }\n    },\n    {...}\n  ]\n}\n\n\nWeighted Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Weight\": value between 0 and 255,\n        \"TTL\": time to live in seconds,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"applicable value for the record type\"\n          },\n          {...}\n        ],\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nAlias Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"hosted zone ID for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or Amazon Route 53 hosted zone\",\n          \"DNSName\": \"DNS domain name for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or another resource record set in this hosted zone\",\n          \"EvaluateTargetHealth\": true|false\n        },\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nWeighted Alias Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Weight\": value between 0 and 255,\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"hosted zone ID for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or Amazon Route 53 hosted zone\",\n          \"DNSName\": \"DNS domain name for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or another resource record set in this hosted zone\",\n          \"EvaluateTargetHealth\": true|false\n        },\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nLatency Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Region\": \"Amazon EC2 region name\",\n        \"TTL\": time to live in seconds,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"applicable value for the record type\"\n          },\n          {...}\n        ],\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nLatency Alias Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Region\": \"Amazon EC2 region name\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"hosted zone ID for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or Amazon Route 53 hosted zone\",\n          \"DNSName\": \"DNS domain name for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or another resource record set in this hosted zone\",\n          \"EvaluateTargetHealth\": true|false\n        },\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nFailover Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Failover\": \"PRIMARY\" | \"SECONDARY\",\n        \"TTL\": time to live in seconds,\n        \"ResourceRecords\": [\n          {\n            \"Value\": \"applicable value for the record type\"\n          },\n          {...}\n        ],\n        \"HealthCheckId\": \"ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n\n\nFailover Alias Syntax:\n\n{\n  \"Comment\": \"optional comment about the changes in this change batch request\",\n  \"Changes\": [\n    {\n      \"Action\": \"CREATE\"|\"DELETE\"|\"UPSERT\",\n      \"ResourceRecordSet\": {\n        \"Name\": \"DNS domain name\",\n        \"Type\": \"SOA\"|\"A\"|\"TXT\"|\"NS\"|\"CNAME\"|\"MX\"|\"PTR\"|\"SRV\"|\"SPF\"|\"AAAA\",\n        \"SetIdentifier\": \"unique description for this resource record set\",\n        \"Failover\": \"PRIMARY\" | \"SECONDARY\",\n        \"AliasTarget\": {\n          \"HostedZoneId\": \"hosted zone ID for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or Amazon Route 53 hosted zone\",\n          \"DNSName\": \"DNS domain name for your CloudFront distribution, Amazon S3 bucket, Elastic Load Balancing load balancer, or another resource record set in this hosted zone\",\n          \"EvaluateTargetHealth\": true|false\n        },\n        \"HealthCheckId\": \"optional ID of an Amazon Route 53 health check\"\n      }\n    },\n    {...}\n  ]\n}\n"
    },
    {
      "command_name": "change-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/change-tags-for-resource.html",
      "command_description": "Description\n\nAdds, edits, or deletes tags for a health check or a hosted zone.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  change-tags-for-resource\n--resource-type <value>\n--resource-id <value>\n[--add-tags <value>]\n[--remove-tag-keys <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-type <value>",
        "--resource-id <value>",
        "[--add-tags <value>]",
        "[--remove-tag-keys <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-type (string)\n\nThe type of the resource.\n\nThe resource type for health checks is healthcheck .\n\nThe resource type for hosted zones is hostedzone .\n\nPossible values:\n\nhealthcheck\n\nhostedzone\n\n--resource-id (string)\n\nThe ID of the resource for which you want to add, change, or delete tags.\n\n--add-tags (list)\n\nA complex type that contains a list of the tags that you want to add to the specified health check or hosted zone and/or the tags that you want to edit Value for.\n\nYou can add a maximum of 10 tags to a health check or a hosted zone.\n\n(structure)\n\nA complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.\n\nKey -> (string)\n\nThe value of Key depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Key is the name that you want to give the new tag.\n\nEdit a tag : Key is the name of the tag that you want to change the Value for.\n\nDelete a key : Key is the name of the tag you want to remove.\n\nGive a name to a health check : Edit the default Name tag. In the Amazon Route 53 console, the list of your health checks includes a Name column that lets you see the name that you’ve given to each health check.\n\nValue -> (string)\n\nThe value of Value depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Value is the value that you want to give the new tag.\n\nEdit a tag : Value is the new value that you want to assign the tag.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--remove-tag-keys (list)\n\nA complex type that contains a list of the tags that you want to delete from the specified health check or hosted zone. You can specify up to 10 keys.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nThe following command adds a tag named owner to a healthcheck resource specified by ID:\n\naws route53 change-tags-for-resource --resource-type healthcheck --resource-id 6233434j-18c1-34433-ba8e-3443434 --add-tags Key=owner,Value=myboss\n\n\nThe following command removes a tag named owner from a hosted zone resource specified by ID:\n\naws route53 change-tags-for-resource --resource-type hostedzone --resource-id Z1523434445 --remove-tag-keys owner\n"
    },
    {
      "command_name": "create-health-check",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-health-check.html",
      "command_description": "Description\n\nCreates a new health check.\n\nFor information about adding health checks to resource record sets, see HealthCheckId in ChangeResourceRecordSets .\n\nELB Load Balancers\n\nIf you’re registering EC2 instances with an Elastic Load Balancing (ELB) load balancer, do not create Amazon Route 53 health checks for the EC2 instances. When you register an EC2 instance with a load balancer, you configure settings for an ELB health check, which performs a similar function to a Route 53 health check.\n\nPrivate Hosted Zones\n\nYou can associate health checks with failover resource record sets in a private hosted zone. Note the following:\n\nRoute 53 health checkers are outside the VPC. To check the health of an endpoint within a VPC by IP address, you must assign a public IP address to the instance in the VPC.\n\nYou can configure a health checker to check the health of an external resource that the instance relies on, such as a database server.\n\nYou can create a CloudWatch metric, associate an alarm with the metric, and then create a health check that is based on the state of the alarm. For example, you might create a CloudWatch metric that checks the status of the Amazon EC2 StatusCheckFailed metric, add an alarm to the metric, and then create a health check that is based on the state of the alarm. For information about creating CloudWatch metrics and alarms by using the CloudWatch console, see the Amazon CloudWatch User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-health-check\n--caller-reference <value>\n--health-check-config <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--caller-reference <value>",
        "--health-check-config <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--caller-reference (string)\n\nA unique string that identifies the request and that allows you to retry a failed CreateHealthCheck request without the risk of creating two identical health checks:\n\nIf you send a CreateHealthCheck request with the same CallerReference and settings as a previous request, and if the health check doesn’t exist, Amazon Route 53 creates the health check. If the health check does exist, Route 53 returns the settings for the existing health check.\n\nIf you send a CreateHealthCheck request with the same CallerReference as a deleted health check, regardless of the settings, Route 53 returns a HealthCheckAlreadyExists error.\n\nIf you send a CreateHealthCheck request with the same CallerReference as an existing health check but with different settings, Route 53 returns a HealthCheckAlreadyExists error.\n\nIf you send a CreateHealthCheck request with a unique CallerReference but settings identical to an existing health check, Route 53 creates the health check.\n\n--health-check-config (structure)\n\nA complex type that contains settings for a new health check.\n\nIPAddress -> (string)\n\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance will never change.\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\nWhen the value of Type is CALCULATED or CLOUDWATCH_METRIC , omit IPAddress .\n\nPort -> (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nHTTP_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nHTTPS_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nTCP : Route 53 tries to establish a TCP connection.\n\nCLOUDWATCH_METRIC : The health check is associated with a CloudWatch alarm. If the state of the alarm is OK , the health check is considered healthy. If the state is ALARM , the health check is considered unhealthy. If CloudWatch doesn’t have sufficient data to determine whether the state is OK or ALARM , the health check status depends on the setting for InsufficientDataHealthStatus : Healthy , Unhealthy , or LastKnownStatus .\n\nCALCULATED : For health checks that monitor the status of other health checks, Route 53 adds up the number of health checks that Route 53 health checkers consider to be healthy and compares that number with the value of HealthThreshold .\n\nRECOVERY_CONTROL : The health check is assocated with a Route53 Application Recovery Controller routing control. If the routing control state is ON , the health check is considered healthy. If the state is OFF , the health check is considered unhealthy.\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nFullyQualifiedDomainName -> (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nIf you specify a value for IPAddress :\n\nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes FullyQualifiedDomainName:Port to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the preceding cases.\n\nIf you don’t specify a value for IPAddress :\n\nRoute 53 sends a DNS request to the domain that you specify for FullyQualifiedDomainName at the interval that you specify for RequestInterval . Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if you create a health check for which the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value that you specify for Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\nSearchString -> (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy.\n\nRoute 53 considers case when searching for SearchString in the response body.\n\nRequestInterval -> (integer)\n\nThe number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Route 53 health checker makes requests at this interval.\n\nWarning\n\nYou can’t change the value of RequestInterval after you create a health check.\n\nIf you don’t specify a value for RequestInterval , the default value is 30 seconds.\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\nMeasureLatency -> (boolean)\n\nSpecify whether you want Amazon Route 53 to measure the latency between health checkers in multiple Amazon Web Services regions and your endpoint, and to display CloudWatch latency graphs on the Health Checks page in the Route 53 console.\n\nWarning\n\nYou can’t change the value of MeasureLatency after you create a health check.\n\nInverted -> (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\nDisabled -> (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\nHealthThreshold -> (integer)\n\nThe number of child health checks that are associated with a CALCULATED health check that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks element.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\nChildHealthChecks -> (list)\n\n(CALCULATED Health Checks Only) A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nEnableSNI -> (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\nRegions -> (list)\n\nA complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.\n\nIf you don’t specify any regions, Route 53 health checkers automatically performs checks from all of the regions that are listed under Valid Values .\n\nIf you update a health check to remove a region that has been performing health checks, Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions).\n\n(string)\n\nAlarmIdentifier -> (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nInsufficientDataHealthStatus -> (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control.\n\nFor more information about Route 53 Application Recovery Controller, see Route 53 Application Recovery Controller Developer Guide. .\n\nShorthand Syntax:\n\nIPAddress=string,Port=integer,Type=string,ResourcePath=string,FullyQualifiedDomainName=string,SearchString=string,RequestInterval=integer,FailureThreshold=integer,MeasureLatency=boolean,Inverted=boolean,Disabled=boolean,HealthThreshold=integer,ChildHealthChecks=string,string,EnableSNI=boolean,Regions=string,string,AlarmIdentifier={Region=string,Name=string},InsufficientDataHealthStatus=string,RoutingControlArn=string\n\n\nJSON Syntax:\n\n{\n  \"IPAddress\": \"string\",\n  \"Port\": integer,\n  \"Type\": \"HTTP\"|\"HTTPS\"|\"HTTP_STR_MATCH\"|\"HTTPS_STR_MATCH\"|\"TCP\"|\"CALCULATED\"|\"CLOUDWATCH_METRIC\"|\"RECOVERY_CONTROL\",\n  \"ResourcePath\": \"string\",\n  \"FullyQualifiedDomainName\": \"string\",\n  \"SearchString\": \"string\",\n  \"RequestInterval\": integer,\n  \"FailureThreshold\": integer,\n  \"MeasureLatency\": true|false,\n  \"Inverted\": true|false,\n  \"Disabled\": true|false,\n  \"HealthThreshold\": integer,\n  \"ChildHealthChecks\": [\"string\", ...],\n  \"EnableSNI\": true|false,\n  \"Regions\": [\"us-east-1\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-northeast-1\"|\"sa-east-1\", ...],\n  \"AlarmIdentifier\": {\n    \"Region\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"ca-central-1\"|\"eu-central-1\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"ap-east-1\"|\"me-south-1\"|\"ap-south-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"cn-northwest-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\",\n    \"Name\": \"string\"\n  },\n  \"InsufficientDataHealthStatus\": \"Healthy\"|\"Unhealthy\"|\"LastKnownStatus\",\n  \"RoutingControlArn\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheck -> (structure)\n\nA complex type that contains identifying information about the health check.\n\nId -> (string)\n\nThe identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long.\n\nCallerReference -> (string)\n\nA unique string that you specified when you created the health check.\n\nLinkedService -> (structure)\n\nIf the health check was created by another service, the service that created the health check. When a health check is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nHealthCheckConfig -> (structure)\n\nA complex type that contains detailed information about one health check.\n\nIPAddress -> (string)\n\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance will never change.\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\nWhen the value of Type is CALCULATED or CLOUDWATCH_METRIC , omit IPAddress .\n\nPort -> (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nHTTP_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nHTTPS_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nTCP : Route 53 tries to establish a TCP connection.\n\nCLOUDWATCH_METRIC : The health check is associated with a CloudWatch alarm. If the state of the alarm is OK , the health check is considered healthy. If the state is ALARM , the health check is considered unhealthy. If CloudWatch doesn’t have sufficient data to determine whether the state is OK or ALARM , the health check status depends on the setting for InsufficientDataHealthStatus : Healthy , Unhealthy , or LastKnownStatus .\n\nCALCULATED : For health checks that monitor the status of other health checks, Route 53 adds up the number of health checks that Route 53 health checkers consider to be healthy and compares that number with the value of HealthThreshold .\n\nRECOVERY_CONTROL : The health check is assocated with a Route53 Application Recovery Controller routing control. If the routing control state is ON , the health check is considered healthy. If the state is OFF , the health check is considered unhealthy.\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nFullyQualifiedDomainName -> (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nIf you specify a value for IPAddress :\n\nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes FullyQualifiedDomainName:Port to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the preceding cases.\n\nIf you don’t specify a value for IPAddress :\n\nRoute 53 sends a DNS request to the domain that you specify for FullyQualifiedDomainName at the interval that you specify for RequestInterval . Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if you create a health check for which the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value that you specify for Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\nSearchString -> (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy.\n\nRoute 53 considers case when searching for SearchString in the response body.\n\nRequestInterval -> (integer)\n\nThe number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Route 53 health checker makes requests at this interval.\n\nWarning\n\nYou can’t change the value of RequestInterval after you create a health check.\n\nIf you don’t specify a value for RequestInterval , the default value is 30 seconds.\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\nMeasureLatency -> (boolean)\n\nSpecify whether you want Amazon Route 53 to measure the latency between health checkers in multiple Amazon Web Services regions and your endpoint, and to display CloudWatch latency graphs on the Health Checks page in the Route 53 console.\n\nWarning\n\nYou can’t change the value of MeasureLatency after you create a health check.\n\nInverted -> (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\nDisabled -> (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\nHealthThreshold -> (integer)\n\nThe number of child health checks that are associated with a CALCULATED health check that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks element.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\nChildHealthChecks -> (list)\n\n(CALCULATED Health Checks Only) A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nEnableSNI -> (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\nRegions -> (list)\n\nA complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.\n\nIf you don’t specify any regions, Route 53 health checkers automatically performs checks from all of the regions that are listed under Valid Values .\n\nIf you update a health check to remove a region that has been performing health checks, Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions).\n\n(string)\n\nAlarmIdentifier -> (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nInsufficientDataHealthStatus -> (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control.\n\nFor more information about Route 53 Application Recovery Controller, see Route 53 Application Recovery Controller Developer Guide. .\n\nHealthCheckVersion -> (long)\n\nThe version of the health check. You can optionally pass this value in a call to UpdateHealthCheck to prevent overwriting another change to the health check.\n\nCloudWatchAlarmConfiguration -> (structure)\n\nA complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.\n\nEvaluationPeriods -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.\n\nThreshold -> (double)\n\nFor the metric that the CloudWatch alarm is associated with, the value the metric is compared with.\n\nComparisonOperator -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.\n\nPeriod -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.\n\nMetricName -> (string)\n\nThe name of the CloudWatch metric that the alarm is associated with.\n\nNamespace -> (string)\n\nThe namespace of the metric that the alarm is associated with. For more information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\nStatistic -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.\n\nDimensions -> (list)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric. For information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\n(structure)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.\n\nName -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the name of one dimension.\n\nValue -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the value of one dimension.\n\nLocation -> (string)\n\nThe unique URL representing the new health check.",
      "command_examples": "Examples\n\nTo create a health check\n\nThe following create-health-check command creates a health check using the caller reference 2014-04-01-18:47 and the JSON-formatted configuration in the file C:\\awscli\\route53\\create-health-check.json:\n\naws route53 create-health-check --caller-reference 2014-04-01-18:47 --health-check-config file://C:\\awscli\\route53\\create-health-check.json\n\n\nJSON syntax:\n\n{\n  \"IPAddress\": \"IP address of the endpoint to check\",\n  \"Port\": port on the endpoint to check--required when Type is \"TCP\",\n  \"Type\": \"HTTP\"|\"HTTPS\"|\"HTTP_STR_MATCH\"|\"HTTPS_STR_MATCH\"|\"TCP\",\n  \"ResourcePath\": \"path of the file that you want Amazon Route 53 to request--all Types except TCP\",\n  \"FullyQualifiedDomainName\": \"domain name of the endpoint to check--all Types except TCP\",\n  \"SearchString\": \"if Type is HTTP_STR_MATCH or HTTPS_STR_MATCH, the string to search for in the response body from the specified resource\",\n  \"RequestInterval\": 10 | 30,\n  \"FailureThreshold\": integer between 1 and 10\n}\n\n\nTo add the health check to a Route 53 resource record set, use the change-resource-record-sets command.\n\nFor more information, see Amazon Route 53 Health Checks and DNS Failover in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-hosted-zone.html",
      "command_description": "Description\n\nCreates a new public or private hosted zone. You create records in a public hosted zone to define how you want to route traffic on the internet for a domain, such as example.com, and its subdomains (apex.example.com, acme.example.com). You create records in a private hosted zone to define how you want to route traffic for a domain and its subdomains within one or more Amazon Virtual Private Clouds (Amazon VPCs).\n\nWarning\n\nYou can’t convert a public hosted zone to a private hosted zone or vice versa. Instead, you must create a new hosted zone with the same name and create new resource record sets.\n\nFor more information about charges for hosted zones, see Amazon Route 53 Pricing .\n\nNote the following:\n\nYou can’t create a hosted zone for a top-level domain (TLD) such as .com.\n\nFor public hosted zones, Route 53 automatically creates a default SOA record and four NS records for the zone. For more information about SOA and NS records, see NS and SOA Records that Route 53 Creates for a Hosted Zone in the Amazon Route 53 Developer Guide . If you want to use the same name servers for multiple public hosted zones, you can optionally associate a reusable delegation set with the hosted zone. See the DelegationSetId element.\n\nIf your domain is registered with a registrar other than Route 53, you must update the name servers with your registrar to make Route 53 the DNS service for the domain. For more information, see Migrating DNS Service for an Existing Domain to Amazon Route 53 in the Amazon Route 53 Developer Guide .\n\nWhen you submit a CreateHostedZone request, the initial status of the hosted zone is PENDING . For public hosted zones, this means that the NS and SOA records are not yet available on all Route 53 DNS servers. When the NS and SOA records are available, the status of the zone changes to INSYNC .\n\nThe CreateHostedZone request requires the caller to have an ec2:DescribeVpcs permission.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-hosted-zone\n--name <value>\n[--vpc <value>]\n--caller-reference <value>\n[--hosted-zone-config <value>]\n[--delegation-set-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--vpc <value>]",
        "--caller-reference <value>",
        "[--hosted-zone-config <value>]",
        "[--delegation-set-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the domain. Specify a fully qualified domain name, for example, www.example.com . The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\n\nIf you’re creating a public hosted zone, this is the name you have registered with your DNS registrar. If your domain name is registered with a registrar other than Route 53, change the name servers for your domain to the set of NameServers that CreateHostedZone returns in DelegationSet .\n\n--vpc (structure)\n\n(Private hosted zones only) A complex type that contains information about the Amazon VPC that you’re associating with this hosted zone.\n\nYou can specify only one Amazon VPC when you create a private hosted zone. To associate additional Amazon VPCs with the hosted zone, use AssociateVPCWithHostedZone after you create a hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nShorthand Syntax:\n\nVPCRegion=string,VPCId=string\n\n\nJSON Syntax:\n\n{\n  \"VPCRegion\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-east-1\"|\"me-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-south-1\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"ca-central-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\",\n  \"VPCId\": \"string\"\n}\n\n\n--caller-reference (string)\n\nA unique string that identifies the request and that allows failed CreateHostedZone requests to be retried without the risk of executing the operation twice. You must use a unique CallerReference string every time you submit a CreateHostedZone request. CallerReference can be any unique string, for example, a date/time stamp.\n\n--hosted-zone-config (structure)\n\n(Optional) A complex type that contains the following optional values:\n\nFor public and private hosted zones, an optional comment\n\nFor private hosted zones, an optional PrivateZone element\n\nIf you don’t specify a comment or the PrivateZone element, omit HostedZoneConfig and the other elements.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nNote do not include PrivateZone in this input structure. Its value is returned in the output to the command.\n\nShorthand Syntax:\n\nComment=string,PrivateZone=boolean\n\n\nJSON Syntax:\n\n{\n  \"Comment\": \"string\",\n  \"PrivateZone\": true|false\n}\n\n\n--delegation-set-id (string)\n\nIf you want to associate a reusable delegation set with this hosted zone, the ID that Amazon Route 53 assigned to the reusable delegation set when you created it. For more information about reusable delegation sets, see CreateReusableDelegationSet .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZone -> (structure)\n\nA complex type that contains general information about the hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nName -> (string)\n\nThe name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see CreateHostedZone .\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the hosted zone.\n\nConfig -> (structure)\n\nA complex type that includes the Comment and PrivateZone elements. If you omitted the HostedZoneConfig and Comment elements from the request, the Config and Comment elements don’t appear in the response.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nResourceRecordSetCount -> (long)\n\nThe number of resource record sets in the hosted zone.\n\nLinkedService -> (structure)\n\nIf the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can’t edit or delete it using Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nChangeInfo -> (structure)\n\nA complex type that contains information about the CreateHostedZone request.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide.\n\nDelegationSet -> (structure)\n\nA complex type that describes the name servers for this hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigns to a reusable delegation set.\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the reusable delegation set.\n\nNameServers -> (list)\n\nA complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.\n\n(string)\n\nVPC -> (structure)\n\nA complex type that contains information about an Amazon VPC that you associated with this hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nLocation -> (string)\n\nThe unique URL representing the new hosted zone.",
      "command_examples": "Examples\n\nTo create a hosted zone\n\nThe following create-hosted-zone command adds a hosted zone named example.com using the caller reference 2014-04-01-18:47. The optional comment includes a space, so it must be enclosed in quotation marks:\n\naws route53 create-hosted-zone --name example.com --caller-reference 2014-04-01-18:47 --hosted-zone-config Comment=\"command-line version\"\n\n\nFor more information, see Working with Hosted Zones in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "create-key-signing-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-key-signing-key.html",
      "command_description": "Description\n\nCreates a new key-signing key (KSK) associated with a hosted zone. You can only have two KSKs per hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-key-signing-key\n--caller-reference <value>\n--hosted-zone-id <value>\n--key-management-service-arn <value>\n--name <value>\n--status <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--caller-reference <value>",
        "--hosted-zone-id <value>",
        "--key-management-service-arn <value>",
        "--name <value>",
        "--status <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--caller-reference (string)\n\nA unique string that identifies the request.\n\n--hosted-zone-id (string)\n\nThe unique string (ID) used to identify a hosted zone.\n\n--key-management-service-arn (string)\n\nThe Amazon resource name (ARN) for a customer managed customer master key (CMK) in Key Management Service (KMS). The KeyManagementServiceArn must be unique for each key-signing key (KSK) in a single hosted zone. To see an example of KeyManagementServiceArn that grants the correct permissions for DNSSEC, scroll down to Example .\n\nYou must configure the customer managed CMK as follows:\n\nStatus\n\nEnabled\n\nKey spec\n\nECC_NIST_P256\n\nKey usage\n\nSign and verify\n\nKey policy\n\nThe key policy must give permission for the following actions:\n\nDescribeKey\n\nGetPublicKey\n\nSign\n\nThe key policy must also include the Amazon Route 53 service in the principal for your account. Specify the following:\n\n\"Service\": \"dnssec-route53.amazonaws.com\"\n\nFor more information about working with a customer managed CMK in KMS, see Key Management Service concepts .\n\n--name (string)\n\nA string used to identify a key-signing key (KSK). Name can include numbers, letters, and underscores (_). Name must be unique for each key-signing key in the same hosted zone.\n\n--status (string)\n\nA string specifying the initial status of the key-signing key (KSK). You can set the value to ACTIVE or INACTIVE .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide.\n\nKeySigningKey -> (structure)\n\nThe key-signing key (KSK) that the request creates.\n\nName -> (string)\n\nA string used to identify a key-signing key (KSK). Name can include numbers, letters, and underscores (_). Name must be unique for each key-signing key in the same hosted zone.\n\nKmsArn -> (string)\n\nThe Amazon resource name (ARN) used to identify the customer managed customer master key (CMK) in Key Management Service (KMS). The KmsArn must be unique for each key-signing key (KSK) in a single hosted zone.\n\nYou must configure the CMK as follows:\n\nStatus\n\nEnabled\n\nKey spec\n\nECC_NIST_P256\n\nKey usage\n\nSign and verify\n\nKey policy\n\nThe key policy must give permission for the following actions:\n\nDescribeKey\n\nGetPublicKey\n\nSign\n\nThe key policy must also include the Amazon Route 53 service in the principal for your account. Specify the following:\n\n\"Service\": \"dnssec-route53.amazonaws.com\"\n\nFor more information about working with the customer managed CMK in KMS, see Key Management Service concepts .\n\nFlag -> (integer)\n\nAn integer that specifies how the key is used. For key-signing key (KSK), this value is always 257.\n\nSigningAlgorithmMnemonic -> (string)\n\nA string used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1 .\n\nSigningAlgorithmType -> (integer)\n\nAn integer used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1 .\n\nDigestAlgorithmMnemonic -> (string)\n\nA string used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3 .\n\nDigestAlgorithmType -> (integer)\n\nAn integer used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3 .\n\nKeyTag -> (integer)\n\nAn integer used to identify the DNSSEC record for the domain name. The process used to calculate the value is described in RFC-4034 Appendix B .\n\nDigestValue -> (string)\n\nA cryptographic digest of a DNSKEY resource record (RR). DNSKEY records are used to publish the public key that resolvers can use to verify DNSSEC signatures that are used to secure certain kinds of information provided by the DNS system.\n\nPublicKey -> (string)\n\nThe public key, represented as a Base64 encoding, as required by RFC-4034 Page 5 .\n\nDSRecord -> (string)\n\nA string that represents a delegation signer (DS) record.\n\nDNSKEYRecord -> (string)\n\nA string that represents a DNSKEY record.\n\nStatus -> (string)\n\nA string that represents the current key-signing key (KSK) status.\n\nStatus can have one of the following values:\n\nACTIVE\n\nThe KSK is being used for signing.\n\nINACTIVE\n\nThe KSK is not being used for signing.\n\nDELETING\n\nThe KSK is in the process of being deleted.\n\nACTION_NEEDED\n\nThere is a problem with the KSK that requires you to take action to resolve. For example, the customer managed customer master key (CMK) might have been deleted, or the permissions for the customer managed CMK might have been changed.\n\nINTERNAL_FAILURE\n\nThere was an error during a request. Before you can continue to work with DNSSEC signing, including actions that involve this KSK, you must correct the problem. For example, you may need to activate or deactivate the KSK.\n\nStatusMessage -> (string)\n\nThe status message provided for the following key-signing key (KSK) statuses: ACTION_NEEDED or INTERNAL_FAILURE . The status message includes information about what the problem might be and steps that you can take to correct the issue.\n\nCreatedDate -> (timestamp)\n\nThe date when the key-signing key (KSK) was created.\n\nLastModifiedDate -> (timestamp)\n\nThe last time that the key-signing key (KSK) was changed.\n\nLocation -> (string)\n\nThe unique URL representing the new key-signing key (KSK)."
    },
    {
      "command_name": "create-query-logging-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-query-logging-config.html",
      "command_description": "Description\n\nCreates a configuration for DNS query logging. After you create a query logging configuration, Amazon Route 53 begins to publish log data to an Amazon CloudWatch Logs log group.\n\nDNS query logs contain information about the queries that Route 53 receives for a specified public hosted zone, such as the following:\n\nRoute 53 edge location that responded to the DNS query\n\nDomain or subdomain that was requested\n\nDNS record type, such as A or AAAA\n\nDNS response code, such as NoError or ServFail\n\nLog Group and Resource Policy\n\nBefore you create a query logging configuration, perform the following operations.\n\nNote\n\nIf you create a query logging configuration using the Route 53 console, Route 53 performs these operations automatically.\n\nCreate a CloudWatch Logs log group, and make note of the ARN, which you specify when you create a query logging configuration. Note the following:\n\nYou must create the log group in the us-east-1 region.\n\nYou must use the same Amazon Web Services account to create the log group and the hosted zone that you want to configure query logging for.\n\nWhen you create log groups for query logging, we recommend that you use a consistent prefix, for example: ``/aws/route53/hosted zone name `` In the next step, you’ll create a resource policy, which controls access to one or more log groups and the associated Amazon Web Services resources, such as Route 53 hosted zones. There’s a limit on the number of resource policies that you can create, so we recommend that you use a consistent prefix so you can use the same resource policy for all the log groups that you create for query logging.\n\nCreate a CloudWatch Logs resource policy, and give it the permissions that Route 53 needs to create log streams and to send query logs to log streams. For the value of Resource , specify the ARN for the log group that you created in the previous step. To use the same resource policy for all the CloudWatch Logs log groups that you created for query logging configurations, replace the hosted zone name with * , for example: arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*\n\nNote\n\nYou can’t use the CloudWatch console to create or edit a resource policy. You must use the CloudWatch API, one of the Amazon Web Services SDKs, or the CLI.\n\nLog Streams and Edge Locations\n\nWhen Route 53 finishes creating the configuration for DNS query logging, it does the following:\n\nCreates a log stream for an edge location the first time that the edge location responds to DNS queries for the specified hosted zone. That log stream is used to log all queries that Route 53 responds to for that edge location.\n\nBegins to send query logs to the applicable log stream.\n\nThe name of each log stream is in the following format:\n\n`` hosted zone ID /edge location code ``\n\nThe edge location code is a three-letter code and an arbitrarily assigned number, for example, DFW3. The three-letter code typically corresponds with the International Air Transport Association airport code for an airport near the edge location. (These abbreviations might change in the future.) For a list of edge locations, see “The Route 53 Global Network” on the Route 53 Product Details page.\n\nQueries That Are Logged\n\nQuery logs contain only the queries that DNS resolvers forward to Route 53. If a DNS resolver has already cached the response to a query (such as the IP address for a load balancer for example.com), the resolver will continue to return the cached response. It doesn’t forward another query to Route 53 until the TTL for the corresponding resource record set expires. Depending on how many DNS queries are submitted for a resource record set, and depending on the TTL for that resource record set, query logs might contain information about only one query out of every several thousand queries that are submitted to DNS. For more information about how DNS works, see Routing Internet Traffic to Your Website or Web Application in the Amazon Route 53 Developer Guide .\n\nLog File Format\n\nFor a list of the values in each query log and the format of each value, see Logging DNS Queries in the Amazon Route 53 Developer Guide .\n\nPricing\n\nFor information about charges for query logs, see Amazon CloudWatch Pricing .\n\nHow to Stop Logging\n\nIf you want Route 53 to stop sending query logs to CloudWatch Logs, delete the query logging configuration. For more information, see DeleteQueryLoggingConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-query-logging-config\n--hosted-zone-id <value>\n--cloud-watch-logs-log-group-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--cloud-watch-logs-log-group-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that you want to log queries for. You can log queries only for public hosted zones.\n\n--cloud-watch-logs-log-group-arn (string)\n\nThe Amazon Resource Name (ARN) for the log group that you want to Amazon Route 53 to send query logs to. This is the format of the ARN:\n\narn:aws:logs:region :account-id :log-group:log_group_name\n\nTo get the ARN for a log group, you can use the CloudWatch console, the DescribeLogGroups API action, the describe-log-groups command, or the applicable command in one of the Amazon Web Services SDKs.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryLoggingConfig -> (structure)\n\nA complex type that contains the ID for a query logging configuration, the ID of the hosted zone that you want to log queries for, and the ARN for the log group that you want Amazon Route 53 to send query logs to.\n\nId -> (string)\n\nThe ID for a configuration for DNS query logging.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that CloudWatch Logs is logging queries for.\n\nCloudWatchLogsLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.\n\nLocation -> (string)\n\nThe unique URL representing the new query logging configuration."
    },
    {
      "command_name": "create-reusable-delegation-set",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-reusable-delegation-set.html",
      "command_description": "Description\n\nCreates a delegation set (a group of four name servers) that can be reused by multiple hosted zones that were created by the same Amazon Web Services account.\n\nYou can also create a reusable delegation set that uses the four name servers that are associated with an existing hosted zone. Specify the hosted zone ID in the CreateReusableDelegationSet request.\n\nNote\n\nYou can’t associate a reusable delegation set with a private hosted zone.\n\nFor information about using a reusable delegation set to configure white label name servers, see Configuring White Label Name Servers .\n\nThe process for migrating existing hosted zones to use a reusable delegation set is comparable to the process for configuring white label name servers. You need to perform the following steps:\n\nCreate a reusable delegation set.\n\nRecreate hosted zones, and reduce the TTL to 60 seconds or less.\n\nRecreate resource record sets in the new hosted zones.\n\nChange the registrar’s name servers to use the name servers for the new hosted zones.\n\nMonitor traffic for the website or application.\n\nChange TTLs back to their original values.\n\nIf you want to migrate existing hosted zones to use a reusable delegation set, the existing hosted zones can’t use any of the name servers that are assigned to the reusable delegation set. If one or more hosted zones do use one or more name servers that are assigned to the reusable delegation set, you can do one of the following:\n\nFor small numbers of hosted zones—up to a few hundred—it’s relatively easy to create reusable delegation sets until you get one that has four name servers that don’t overlap with any of the name servers in your hosted zones.\n\nFor larger numbers of hosted zones, the easiest solution is to use more than one reusable delegation set.\n\nFor larger numbers of hosted zones, you can also migrate hosted zones that have overlapping name servers to hosted zones that don’t have overlapping name servers, then migrate the hosted zones again to use the reusable delegation set.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-reusable-delegation-set\n--caller-reference <value>\n[--hosted-zone-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--caller-reference <value>",
        "[--hosted-zone-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--caller-reference (string)\n\nA unique string that identifies the request, and that allows you to retry failed CreateReusableDelegationSet requests without the risk of executing the operation twice. You must use a unique CallerReference string every time you submit a CreateReusableDelegationSet request. CallerReference can be any unique string, for example a date/time stamp.\n\n--hosted-zone-id (string)\n\nIf you want to mark the delegation set for an existing hosted zone as reusable, the ID for that hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDelegationSet -> (structure)\n\nA complex type that contains name server information.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigns to a reusable delegation set.\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the reusable delegation set.\n\nNameServers -> (list)\n\nA complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.\n\n(string)\n\nLocation -> (string)\n\nThe unique URL representing the new reusable delegation set."
    },
    {
      "command_name": "create-traffic-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-traffic-policy.html",
      "command_description": "Description\n\nCreates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-traffic-policy\n--name <value>\n--document <value>\n[--comment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--document <value>",
        "[--comment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the traffic policy.\n\n--document (string)\n\nThe definition of this traffic policy in JSON format. For more information, see Traffic Policy Document Format .\n\n--comment (string)\n\n(Optional) Any comments that you want to include about the traffic policy.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicy -> (structure)\n\nA complex type that contains settings for the new traffic policy.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to a traffic policy when you created it.\n\nVersion -> (integer)\n\nThe version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of Version is always 1.\n\nName -> (string)\n\nThe name that you specified when you created the traffic policy.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nDocument -> (string)\n\nThe definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the CreateTrafficPolicy request. For more information about the JSON format, see Traffic Policy Document Format .\n\nComment -> (string)\n\nThe comment that you specify in the CreateTrafficPolicy request, if any.\n\nLocation -> (string)\n\nA unique URL that represents a new traffic policy."
    },
    {
      "command_name": "create-traffic-policy-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-traffic-policy-instance.html",
      "command_description": "Description\n\nCreates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, CreateTrafficPolicyInstance associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that CreateTrafficPolicyInstance created.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-traffic-policy-instance\n--hosted-zone-id <value>\n--name <value>\n--ttl <value>\n--traffic-policy-id <value>\n--traffic-policy-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--name <value>",
        "--ttl <value>",
        "--traffic-policy-id <value>",
        "--traffic-policy-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.\n\n--name (string)\n\nThe domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.\n\n--ttl (long)\n\n(Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.\n\n--traffic-policy-id (string)\n\nThe ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.\n\n--traffic-policy-version (integer)\n\nThe version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstance -> (structure)\n\nA complex type that contains settings for the new traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance.\n\nLocation -> (string)\n\nA unique URL that represents a new traffic policy instance."
    },
    {
      "command_name": "create-traffic-policy-version",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-traffic-policy-version.html",
      "command_description": "Description\n\nCreates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version. You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com). You can create a maximum of 1000 versions of a traffic policy. If you reach the limit and need to create another version, you’ll need to start a new traffic policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-traffic-policy-version\n--id <value>\n--document <value>\n[--comment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--document <value>",
        "[--comment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy for which you want to create a new version.\n\n--document (string)\n\nThe definition of this version of the traffic policy, in JSON format. You specified the JSON in the CreateTrafficPolicyVersion request. For more information about the JSON format, see CreateTrafficPolicy .\n\n--comment (string)\n\nThe comment that you specified in the CreateTrafficPolicyVersion request, if any.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicy -> (structure)\n\nA complex type that contains settings for the new version of the traffic policy.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to a traffic policy when you created it.\n\nVersion -> (integer)\n\nThe version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of Version is always 1.\n\nName -> (string)\n\nThe name that you specified when you created the traffic policy.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nDocument -> (string)\n\nThe definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the CreateTrafficPolicy request. For more information about the JSON format, see Traffic Policy Document Format .\n\nComment -> (string)\n\nThe comment that you specify in the CreateTrafficPolicy request, if any.\n\nLocation -> (string)\n\nA unique URL that represents a new traffic policy version."
    },
    {
      "command_name": "create-vpc-association-authorization",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/create-vpc-association-authorization.html",
      "command_description": "Description\n\nAuthorizes the Amazon Web Services account that created a specified VPC to submit an AssociateVPCWithHostedZone request to associate the VPC with a specified hosted zone that was created by a different account. To submit a CreateVPCAssociationAuthorization request, you must use the account that created the hosted zone. After you authorize the association, use the account that created the VPC to submit an AssociateVPCWithHostedZone request.\n\nNote\n\nIf you want to associate multiple VPCs that you created by using one account with a hosted zone that you created by using a different account, you must submit one authorization request for each VPC.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-vpc-association-authorization\n--hosted-zone-id <value>\n--vpc <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--vpc <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the private hosted zone that you want to authorize associating a VPC with.\n\n--vpc (structure)\n\nA complex type that contains the VPC ID and region for the VPC that you want to authorize associating with your hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nShorthand Syntax:\n\nVPCRegion=string,VPCId=string\n\n\nJSON Syntax:\n\n{\n  \"VPCRegion\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-east-1\"|\"me-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-south-1\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"ca-central-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\",\n  \"VPCId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that you authorized associating a VPC with.\n\nVPC -> (structure)\n\nThe VPC that you authorized associating with a hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC."
    },
    {
      "command_name": "deactivate-key-signing-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/deactivate-key-signing-key.html",
      "command_description": "Description\n\nDeactivates a key-signing key (KSK) so that it will not be used for signing by DNSSEC. This operation changes the KSK status to INACTIVE .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deactivate-key-signing-key\n--hosted-zone-id <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--name (string)\n\nA string used to identify a key-signing key (KSK).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "delete-health-check",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-health-check.html",
      "command_description": "Description\n\nDeletes a health check.\n\nWarning\n\nAmazon Route 53 does not prevent you from deleting a health check even if the health check is associated with one or more resource record sets. If you delete a health check and you don’t update the associated resource record sets, the future status of the health check can’t be predicted and may change. This will affect the routing of DNS queries for your DNS failover configuration. For more information, see Replacing and Deleting Health Checks in the Amazon Route 53 Developer Guide .\n\nIf you’re using Cloud Map and you configured Cloud Map to create a Route 53 health check when you register an instance, you can’t use the Route 53 DeleteHealthCheck command to delete the health check. The health check is deleted automatically when you deregister the instance; there can be a delay of several hours before the health check is deleted from Route 53.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-health-check\n--health-check-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--health-check-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--health-check-id (string)\n\nThe ID of the health check that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a health check\n\nThe following delete-health-check command deletes the health check with a health-check-id of e75b48d9-547a-4c3d-88a5-ae4002397608:\n\naws route53 delete-health-check --health-check-id e75b48d9-547a-4c3d-88a5-ae4002397608\n"
    },
    {
      "command_name": "delete-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-hosted-zone.html",
      "command_description": "Description\n\nDeletes a hosted zone.\n\nIf the hosted zone was created by another service, such as Cloud Map, see Deleting Public Hosted Zones That Were Created by Another Service in the Amazon Route 53 Developer Guide for information about how to delete it. (The process is the same for public and private hosted zones that were created by another service.)\n\nIf you want to keep your domain registration but you want to stop routing internet traffic to your website or web application, we recommend that you delete resource record sets in the hosted zone instead of deleting the hosted zone.\n\nWarning\n\nIf you delete a hosted zone, you can’t undelete it. You must create a new hosted zone and update the name servers for your domain registration, which can require up to 48 hours to take effect. (If you delegated responsibility for a subdomain to a hosted zone and you delete the child hosted zone, you must update the name servers in the parent hosted zone.) In addition, if you delete a hosted zone, someone could hijack the domain and route traffic to their own resources using your domain name.\n\nIf you want to avoid the monthly charge for the hosted zone, you can transfer DNS service for the domain to a free DNS service. When you transfer DNS service, you have to update the name servers for the domain registration. If the domain is registered with Route 53, see UpdateDomainNameservers for information about how to replace Route 53 name servers with name servers for the new DNS service. If the domain is registered with another registrar, use the method provided by the registrar to update name servers for the domain registration. For more information, perform an internet search on “free DNS service.”\n\nYou can delete a hosted zone only if it contains only the default SOA record and NS resource record sets. If the hosted zone contains other resource record sets, you must delete them before you can delete the hosted zone. If you try to delete a hosted zone that contains other resource record sets, the request fails, and Route 53 returns a HostedZoneNotEmpty error. For information about deleting records from your hosted zone, see ChangeResourceRecordSets .\n\nTo verify that the hosted zone has been deleted, do one of the following:\n\nUse the GetHostedZone action to request information about the hosted zone.\n\nUse the ListHostedZones action to get a list of the hosted zones associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-hosted-zone\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the hosted zone you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that contains the ID, the status, and the date and time of a request to delete a hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide.",
      "command_examples": "Examples\n\nTo delete a hosted zone\n\nThe following delete-hosted-zone command deletes the hosted zone with an id of Z36KTIQEXAMPLE:\n\naws route53 delete-hosted-zone --id Z36KTIQEXAMPLE\n"
    },
    {
      "command_name": "delete-key-signing-key",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-key-signing-key.html",
      "command_description": "Description\n\nDeletes a key-signing key (KSK). Before you can delete a KSK, you must deactivate it. The KSK must be deactivated before you can delete it regardless of whether the hosted zone is enabled for DNSSEC signing.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-key-signing-key\n--hosted-zone-id <value>\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--name (string)\n\nA string used to identify a key-signing key (KSK).\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "delete-query-logging-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-query-logging-config.html",
      "command_description": "Description\n\nDeletes a configuration for DNS query logging. If you delete a configuration, Amazon Route 53 stops sending query logs to CloudWatch Logs. Route 53 doesn’t delete any logs that are already in CloudWatch Logs.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-query-logging-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the configuration that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-reusable-delegation-set",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-reusable-delegation-set.html",
      "command_description": "Description\n\nDeletes a reusable delegation set.\n\nWarning\n\nYou can delete a reusable delegation set only if it isn’t associated with any hosted zones.\n\nTo verify that the reusable delegation set is not associated with any hosted zones, submit a GetReusableDelegationSet request and specify the ID of the reusable delegation set that you want to delete.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-reusable-delegation-set\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the reusable delegation set that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-traffic-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-traffic-policy.html",
      "command_description": "Description\n\nDeletes a traffic policy.\n\nWhen you delete a traffic policy, Route 53 sets a flag on the policy to indicate that it has been deleted. However, Route 53 never fully deletes the traffic policy. Note the following:\n\nDeleted traffic policies aren’t listed if you run ListTrafficPolicies .\n\nThere’s no way to get a list of deleted policies.\n\nIf you retain the ID of the policy, you can get information about the policy, including the traffic policy document, by running GetTrafficPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-traffic-policy\n--id <value>\n--traffic-policy-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--traffic-policy-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy that you want to delete.\n\n--traffic-policy-version (integer)\n\nThe version number of the traffic policy that you want to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-traffic-policy-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-traffic-policy-instance.html",
      "command_description": "Description\n\nDeletes a traffic policy instance and all of the resource record sets that Amazon Route 53 created when you created the instance.\n\nNote\n\nIn the Route 53 console, traffic policy instances are known as policy records.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-traffic-policy-instance\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy instance that you want to delete.\n\nWarning\n\nWhen you delete a traffic policy instance, Amazon Route 53 also deletes all of the resource record sets that were created when you created the traffic policy instance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-vpc-association-authorization",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/delete-vpc-association-authorization.html",
      "command_description": "Description\n\nRemoves authorization to submit an AssociateVPCWithHostedZone request to associate a specified VPC with a hosted zone that was created by a different account. You must use the account that created the hosted zone to submit a DeleteVPCAssociationAuthorization request.\n\nWarning\n\nSending this request only prevents the Amazon Web Services account that created the VPC from associating the VPC with the Amazon Route 53 hosted zone in the future. If the VPC is already associated with the hosted zone, DeleteVPCAssociationAuthorization won’t disassociate the VPC from the hosted zone. If you want to delete an existing association, use DisassociateVPCFromHostedZone .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-vpc-association-authorization\n--hosted-zone-id <value>\n--vpc <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--vpc <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nWhen removing authorization to associate a VPC that was created by one Amazon Web Services account with a hosted zone that was created with a different Amazon Web Services account, the ID of the hosted zone.\n\n--vpc (structure)\n\nWhen removing authorization to associate a VPC that was created by one Amazon Web Services account with a hosted zone that was created with a different Amazon Web Services account, a complex type that includes the ID and region of the VPC.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nShorthand Syntax:\n\nVPCRegion=string,VPCId=string\n\n\nJSON Syntax:\n\n{\n  \"VPCRegion\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-east-1\"|\"me-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-south-1\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"ca-central-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\",\n  \"VPCId\": \"string\"\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "disable-hosted-zone-dnssec",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/disable-hosted-zone-dnssec.html",
      "command_description": "Description\n\nDisables DNSSEC signing in a specific hosted zone. This action does not deactivate any key-signing keys (KSKs) that are active in the hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disable-hosted-zone-dnssec\n--hosted-zone-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "disassociate-vpc-from-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/disassociate-vpc-from-hosted-zone.html",
      "command_description": "Description\n\nDisassociates an Amazon Virtual Private Cloud (Amazon VPC) from an Amazon Route 53 private hosted zone. Note the following:\n\nYou can’t disassociate the last Amazon VPC from a private hosted zone.\n\nYou can’t convert a private hosted zone into a public hosted zone.\n\nYou can submit a DisassociateVPCFromHostedZone request using either the account that created the hosted zone or the account that created the Amazon VPC.\n\nSome services, such as Cloud Map and Amazon Elastic File System (Amazon EFS) automatically create hosted zones and associate VPCs with the hosted zones. A service can create a hosted zone using your account or using its own account. You can disassociate a VPC from a hosted zone only if the service created the hosted zone using your account. When you run DisassociateVPCFromHostedZone , if the hosted zone has a value for OwningAccount , you can use DisassociateVPCFromHostedZone . If the hosted zone has a value for OwningService , you can’t use DisassociateVPCFromHostedZone .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disassociate-vpc-from-hosted-zone\n--hosted-zone-id <value>\n--vpc <value>\n[--comment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--vpc <value>",
        "[--comment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the private hosted zone that you want to disassociate a VPC from.\n\n--vpc (structure)\n\nA complex type that contains information about the VPC that you’re disassociating from the specified hosted zone.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.\n\nShorthand Syntax:\n\nVPCRegion=string,VPCId=string\n\n\nJSON Syntax:\n\n{\n  \"VPCRegion\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"eu-central-1\"|\"ap-east-1\"|\"me-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-south-1\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"ca-central-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\",\n  \"VPCId\": \"string\"\n}\n\n\n--comment (string)\n\nOptional: A comment about the disassociation request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes the changes made to the specified private hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "enable-hosted-zone-dnssec",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/enable-hosted-zone-dnssec.html",
      "command_description": "Description\n\nEnables DNSSEC signing in a specific hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-hosted-zone-dnssec\n--hosted-zone-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that describes change information about changes made to your hosted zone.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide."
    },
    {
      "command_name": "get-account-limit",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-account-limit.html",
      "command_description": "Description\n\nGets the specified limit for the current account, for example, the maximum number of health checks that you can create using the account.\n\nFor the default limit, see Limits in the Amazon Route 53 Developer Guide . To request a higher limit, open a case .\n\nNote\n\nYou can also view account limits in Amazon Web Services Trusted Advisor. Sign in to the Amazon Web Services Management Console and open the Trusted Advisor console at https://console.aws.amazon.com/trustedadvisor/ . Then choose Service limits in the navigation pane.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-account-limit\n--type <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--type <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--type (string)\n\nThe limit that you want to get. Valid values include the following:\n\nMAX_HEALTH_CHECKS_BY_OWNER : The maximum number of health checks that you can create using the current account.\n\nMAX_HOSTED_ZONES_BY_OWNER : The maximum number of hosted zones that you can create using the current account.\n\nMAX_REUSABLE_DELEGATION_SETS_BY_OWNER : The maximum number of reusable delegation sets that you can create using the current account.\n\nMAX_TRAFFIC_POLICIES_BY_OWNER : The maximum number of traffic policies that you can create using the current account.\n\nMAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER : The maximum number of traffic policy instances that you can create using the current account. (Traffic policy instances are referred to as traffic flow policy records in the Amazon Route 53 console.)\n\nPossible values:\n\nMAX_HEALTH_CHECKS_BY_OWNER\n\nMAX_HOSTED_ZONES_BY_OWNER\n\nMAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER\n\nMAX_REUSABLE_DELEGATION_SETS_BY_OWNER\n\nMAX_TRAFFIC_POLICIES_BY_OWNER\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLimit -> (structure)\n\nThe current setting for the specified limit. For example, if you specified MAX_HEALTH_CHECKS_BY_OWNER for the value of Type in the request, the value of Limit is the maximum number of health checks that you can create using the current account.\n\nType -> (string)\n\nThe limit that you requested. Valid values include the following:\n\nMAX_HEALTH_CHECKS_BY_OWNER : The maximum number of health checks that you can create using the current account.\n\nMAX_HOSTED_ZONES_BY_OWNER : The maximum number of hosted zones that you can create using the current account.\n\nMAX_REUSABLE_DELEGATION_SETS_BY_OWNER : The maximum number of reusable delegation sets that you can create using the current account.\n\nMAX_TRAFFIC_POLICIES_BY_OWNER : The maximum number of traffic policies that you can create using the current account.\n\nMAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER : The maximum number of traffic policy instances that you can create using the current account. (Traffic policy instances are referred to as traffic flow policy records in the Amazon Route 53 console.)\n\nValue -> (long)\n\nThe current value for the limit that is specified by Type .\n\nCount -> (long)\n\nThe current number of entities that you have created of the specified type. For example, if you specified MAX_HEALTH_CHECKS_BY_OWNER for the value of Type in the request, the value of Count is the current number of health checks that you have created using the current account."
    },
    {
      "command_name": "get-change",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-change.html",
      "command_description": "Description\n\nReturns the current status of a change batch request. The status is one of the following values:\n\nPENDING indicates that the changes in this request have not propagated to all Amazon Route 53 DNS servers. This is the initial status of all change batch requests.\n\nINSYNC indicates that the changes have propagated to all Route 53 DNS servers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-change\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the change batch request. The value that you specify here is the value that ChangeResourceRecordSets returned in the Id element when you submitted the request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nChangeInfo -> (structure)\n\nA complex type that contains information about the specified change batch.\n\nId -> (string)\n\nThis element contains an ID that you use when performing a GetChange action to get detailed information about the change.\n\nStatus -> (string)\n\nThe current state of the request. PENDING indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.\n\nSubmittedAt -> (timestamp)\n\nThe date and time that the change request was submitted in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC.\n\nComment -> (string)\n\nA comment you can provide.",
      "command_examples": "Examples\n\nTo get the status of a change to resource record sets\n\nThe following get-change command gets the status and other information about the change-resource-record-sets request that has an Id of /change/CWPIK4URU2I5S:\n\naws route53 get-change --id /change/CWPIK4URU2I5S\n"
    },
    {
      "command_name": "get-checker-ip-ranges",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-checker-ip-ranges.html",
      "command_description": "Description\n\nRoute 53 does not perform authorization for this API because it retrieves information that is already available to the public.\n\nWarning\n\nGetCheckerIpRanges still works, but we recommend that you download ip-ranges.json, which includes IP address ranges for all Amazon Web Services services. For more information, see IP Address Ranges of Amazon Route 53 Servers in the Amazon Route 53 Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-checker-ip-ranges\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nCheckerIpRanges -> (list)\n\nA complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.\n\n(string)"
    },
    {
      "command_name": "get-dnssec",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-dnssec.html",
      "command_description": "Description\n\nReturns information about DNSSEC for a specific hosted zone, including the key-signing keys (KSKs) in the hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-dnssec\n--hosted-zone-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nA unique string used to identify a hosted zone.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (structure)\n\nA string repesenting the status of DNSSEC.\n\nServeSignature -> (string)\n\nA string that represents the current hosted zone signing status.\n\nStatus can have one of the following values:\n\nSIGNING\n\nDNSSEC signing is enabled for the hosted zone.\n\nNOT_SIGNING\n\nDNSSEC signing is not enabled for the hosted zone.\n\nDELETING\n\nDNSSEC signing is in the process of being removed for the hosted zone.\n\nACTION_NEEDED\n\nThere is a problem with signing in the hosted zone that requires you to take action to resolve. For example, the customer managed customer master key (CMK) might have been deleted, or the permissions for the customer managed CMK might have been changed.\n\nINTERNAL_FAILURE\n\nThere was an error during a request. Before you can continue to work with DNSSEC signing, including with key-signing keys (KSKs), you must correct the problem by enabling or disabling DNSSEC signing for the hosted zone.\n\nStatusMessage -> (string)\n\nThe status message provided for the following DNSSEC signing status: INTERNAL_FAILURE . The status message includes information about what the problem might be and steps that you can take to correct the issue.\n\nKeySigningKeys -> (list)\n\nThe key-signing keys (KSKs) in your account.\n\n(structure)\n\nA key-signing key (KSK) is a complex type that represents a public/private key pair. The private key is used to generate a digital signature for the zone signing key (ZSK). The public key is stored in the DNS and is used to authenticate the ZSK. A KSK is always associated with a hosted zone; it cannot exist by itself.\n\nName -> (string)\n\nA string used to identify a key-signing key (KSK). Name can include numbers, letters, and underscores (_). Name must be unique for each key-signing key in the same hosted zone.\n\nKmsArn -> (string)\n\nThe Amazon resource name (ARN) used to identify the customer managed customer master key (CMK) in Key Management Service (KMS). The KmsArn must be unique for each key-signing key (KSK) in a single hosted zone.\n\nYou must configure the CMK as follows:\n\nStatus\n\nEnabled\n\nKey spec\n\nECC_NIST_P256\n\nKey usage\n\nSign and verify\n\nKey policy\n\nThe key policy must give permission for the following actions:\n\nDescribeKey\n\nGetPublicKey\n\nSign\n\nThe key policy must also include the Amazon Route 53 service in the principal for your account. Specify the following:\n\n\"Service\": \"dnssec-route53.amazonaws.com\"\n\nFor more information about working with the customer managed CMK in KMS, see Key Management Service concepts .\n\nFlag -> (integer)\n\nAn integer that specifies how the key is used. For key-signing key (KSK), this value is always 257.\n\nSigningAlgorithmMnemonic -> (string)\n\nA string used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1 .\n\nSigningAlgorithmType -> (integer)\n\nAn integer used to represent the signing algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.1 .\n\nDigestAlgorithmMnemonic -> (string)\n\nA string used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3 .\n\nDigestAlgorithmType -> (integer)\n\nAn integer used to represent the delegation signer digest algorithm. This value must follow the guidelines provided by RFC-8624 Section 3.3 .\n\nKeyTag -> (integer)\n\nAn integer used to identify the DNSSEC record for the domain name. The process used to calculate the value is described in RFC-4034 Appendix B .\n\nDigestValue -> (string)\n\nA cryptographic digest of a DNSKEY resource record (RR). DNSKEY records are used to publish the public key that resolvers can use to verify DNSSEC signatures that are used to secure certain kinds of information provided by the DNS system.\n\nPublicKey -> (string)\n\nThe public key, represented as a Base64 encoding, as required by RFC-4034 Page 5 .\n\nDSRecord -> (string)\n\nA string that represents a delegation signer (DS) record.\n\nDNSKEYRecord -> (string)\n\nA string that represents a DNSKEY record.\n\nStatus -> (string)\n\nA string that represents the current key-signing key (KSK) status.\n\nStatus can have one of the following values:\n\nACTIVE\n\nThe KSK is being used for signing.\n\nINACTIVE\n\nThe KSK is not being used for signing.\n\nDELETING\n\nThe KSK is in the process of being deleted.\n\nACTION_NEEDED\n\nThere is a problem with the KSK that requires you to take action to resolve. For example, the customer managed customer master key (CMK) might have been deleted, or the permissions for the customer managed CMK might have been changed.\n\nINTERNAL_FAILURE\n\nThere was an error during a request. Before you can continue to work with DNSSEC signing, including actions that involve this KSK, you must correct the problem. For example, you may need to activate or deactivate the KSK.\n\nStatusMessage -> (string)\n\nThe status message provided for the following key-signing key (KSK) statuses: ACTION_NEEDED or INTERNAL_FAILURE . The status message includes information about what the problem might be and steps that you can take to correct the issue.\n\nCreatedDate -> (timestamp)\n\nThe date when the key-signing key (KSK) was created.\n\nLastModifiedDate -> (timestamp)\n\nThe last time that the key-signing key (KSK) was changed."
    },
    {
      "command_name": "get-geo-location",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-geo-location.html",
      "command_description": "Description\n\nGets information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets.\n\nRoute 53 does not perform authorization for this API because it retrieves information that is already available to the public.\n\nUse the following syntax to determine whether a continent is supported for geolocation:\n\n``GET /2013-04-01/geolocation?continentcode=*two-letter abbreviation for a continent* ``\n\nUse the following syntax to determine whether a country is supported for geolocation:\n\n``GET /2013-04-01/geolocation?countrycode=*two-character country code* ``\n\nUse the following syntax to determine whether a subdivision of a country is supported for geolocation:\n\n``GET /2013-04-01/geolocation?countrycode=*two-character country code* &subdivisioncode=*subdivision code* ``\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-geo-location\n[--continent-code <value>]\n[--country-code <value>]\n[--subdivision-code <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--continent-code <value>]",
        "[--country-code <value>]",
        "[--subdivision-code <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--continent-code (string)\n\nFor geolocation resource record sets, a two-letter abbreviation that identifies a continent. Amazon Route 53 supports the following continent codes:\n\nAF : Africa\n\nAN : Antarctica\n\nAS : Asia\n\nEU : Europe\n\nOC : Oceania\n\nNA : North America\n\nSA : South America\n\n--country-code (string)\n\nAmazon Route 53 uses the two-letter country codes that are specified in ISO standard 3166-1 alpha-2 .\n\n--subdivision-code (string)\n\nThe code for the subdivision, such as a particular state within the United States. For a list of US state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website. For a list of all supported subdivision codes, use the ListGeoLocations API.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGeoLocationDetails -> (structure)\n\nA complex type that contains the codes and full continent, country, and subdivision names for the specified geolocation code.\n\nContinentCode -> (string)\n\nThe two-letter code for the continent.\n\nContinentName -> (string)\n\nThe full name of the continent.\n\nCountryCode -> (string)\n\nThe two-letter code for the country.\n\nCountryName -> (string)\n\nThe name of the country.\n\nSubdivisionCode -> (string)\n\nThe code for the subdivision, such as a particular state within the United States. For a list of US state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website. For a list of all supported subdivision codes, use the ListGeoLocations API.\n\nSubdivisionName -> (string)\n\nThe full name of the subdivision. Route 53 currently supports only states in the United States."
    },
    {
      "command_name": "get-health-check",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-health-check.html",
      "command_description": "Description\n\nGets information about a specified health check.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-health-check\n--health-check-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--health-check-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--health-check-id (string)\n\nThe identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheck -> (structure)\n\nA complex type that contains information about one health check that is associated with the current Amazon Web Services account.\n\nId -> (string)\n\nThe identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long.\n\nCallerReference -> (string)\n\nA unique string that you specified when you created the health check.\n\nLinkedService -> (structure)\n\nIf the health check was created by another service, the service that created the health check. When a health check is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nHealthCheckConfig -> (structure)\n\nA complex type that contains detailed information about one health check.\n\nIPAddress -> (string)\n\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance will never change.\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\nWhen the value of Type is CALCULATED or CLOUDWATCH_METRIC , omit IPAddress .\n\nPort -> (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nHTTP_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nHTTPS_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nTCP : Route 53 tries to establish a TCP connection.\n\nCLOUDWATCH_METRIC : The health check is associated with a CloudWatch alarm. If the state of the alarm is OK , the health check is considered healthy. If the state is ALARM , the health check is considered unhealthy. If CloudWatch doesn’t have sufficient data to determine whether the state is OK or ALARM , the health check status depends on the setting for InsufficientDataHealthStatus : Healthy , Unhealthy , or LastKnownStatus .\n\nCALCULATED : For health checks that monitor the status of other health checks, Route 53 adds up the number of health checks that Route 53 health checkers consider to be healthy and compares that number with the value of HealthThreshold .\n\nRECOVERY_CONTROL : The health check is assocated with a Route53 Application Recovery Controller routing control. If the routing control state is ON , the health check is considered healthy. If the state is OFF , the health check is considered unhealthy.\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nFullyQualifiedDomainName -> (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nIf you specify a value for IPAddress :\n\nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes FullyQualifiedDomainName:Port to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the preceding cases.\n\nIf you don’t specify a value for IPAddress :\n\nRoute 53 sends a DNS request to the domain that you specify for FullyQualifiedDomainName at the interval that you specify for RequestInterval . Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if you create a health check for which the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value that you specify for Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\nSearchString -> (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy.\n\nRoute 53 considers case when searching for SearchString in the response body.\n\nRequestInterval -> (integer)\n\nThe number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Route 53 health checker makes requests at this interval.\n\nWarning\n\nYou can’t change the value of RequestInterval after you create a health check.\n\nIf you don’t specify a value for RequestInterval , the default value is 30 seconds.\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\nMeasureLatency -> (boolean)\n\nSpecify whether you want Amazon Route 53 to measure the latency between health checkers in multiple Amazon Web Services regions and your endpoint, and to display CloudWatch latency graphs on the Health Checks page in the Route 53 console.\n\nWarning\n\nYou can’t change the value of MeasureLatency after you create a health check.\n\nInverted -> (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\nDisabled -> (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\nHealthThreshold -> (integer)\n\nThe number of child health checks that are associated with a CALCULATED health check that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks element.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\nChildHealthChecks -> (list)\n\n(CALCULATED Health Checks Only) A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nEnableSNI -> (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\nRegions -> (list)\n\nA complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.\n\nIf you don’t specify any regions, Route 53 health checkers automatically performs checks from all of the regions that are listed under Valid Values .\n\nIf you update a health check to remove a region that has been performing health checks, Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions).\n\n(string)\n\nAlarmIdentifier -> (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nInsufficientDataHealthStatus -> (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control.\n\nFor more information about Route 53 Application Recovery Controller, see Route 53 Application Recovery Controller Developer Guide. .\n\nHealthCheckVersion -> (long)\n\nThe version of the health check. You can optionally pass this value in a call to UpdateHealthCheck to prevent overwriting another change to the health check.\n\nCloudWatchAlarmConfiguration -> (structure)\n\nA complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.\n\nEvaluationPeriods -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.\n\nThreshold -> (double)\n\nFor the metric that the CloudWatch alarm is associated with, the value the metric is compared with.\n\nComparisonOperator -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.\n\nPeriod -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.\n\nMetricName -> (string)\n\nThe name of the CloudWatch metric that the alarm is associated with.\n\nNamespace -> (string)\n\nThe namespace of the metric that the alarm is associated with. For more information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\nStatistic -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.\n\nDimensions -> (list)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric. For information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\n(structure)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.\n\nName -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the name of one dimension.\n\nValue -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the value of one dimension.",
      "command_examples": "Examples\n\nTo get information about a health check\n\nThe following get-health-check command gets information about the health check that has a health-check-id of 02ec8401-9879-4259-91fa-04e66d094674:\n\naws route53 get-health-check --health-check-id 02ec8401-9879-4259-91fa-04e66d094674\n"
    },
    {
      "command_name": "get-health-check-count",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-health-check-count.html",
      "command_description": "Description\n\nRetrieves the number of health checks that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-health-check-count\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheckCount -> (long)\n\nThe number of health checks associated with the current Amazon Web Services account."
    },
    {
      "command_name": "get-health-check-last-failure-reason",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-health-check-last-failure-reason.html",
      "command_description": "Description\n\nGets the reason that a specified health check failed most recently.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-health-check-last-failure-reason\n--health-check-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--health-check-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--health-check-id (string)\n\nThe ID for the health check for which you want the last failure reason. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element.\n\nNote\n\nIf you want to get the last failure reason for a calculated health check, you must use the Amazon Route 53 console or the CloudWatch console. You can’t use GetHealthCheckLastFailureReason for a calculated health check.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheckObservations -> (list)\n\nA list that contains one Observation element for each Amazon Route 53 health checker that is reporting a last failure reason.\n\n(structure)\n\nA complex type that contains the last failure reason as reported by one Amazon Route 53 health checker.\n\nRegion -> (string)\n\nThe region of the Amazon Route 53 health checker that provided the status in StatusReport .\n\nIPAddress -> (string)\n\nThe IP address of the Amazon Route 53 health checker that provided the failure reason in StatusReport .\n\nStatusReport -> (structure)\n\nA complex type that contains the last failure reason as reported by one Amazon Route 53 health checker and the time of the failed health check.\n\nStatus -> (string)\n\nA description of the status of the health check endpoint as reported by one of the Amazon Route 53 health checkers.\n\nCheckedTime -> (timestamp)\n\nThe date and time that the health checker performed the health check in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC."
    },
    {
      "command_name": "get-health-check-status",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-health-check-status.html",
      "command_description": "Description\n\nGets status of a specified health check.\n\nWarning\n\nThis API is intended for use during development to diagnose behavior. It doesn’t support production use-cases with high query rates that require immediate and actionable responses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-health-check-status\n--health-check-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--health-check-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--health-check-id (string)\n\nThe ID for the health check that you want the current status for. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element.\n\nNote\n\nIf you want to check the status of a calculated health check, you must use the Amazon Route 53 console or the CloudWatch console. You can’t use GetHealthCheckStatus to get the status of a calculated health check.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheckObservations -> (list)\n\nA list that contains one HealthCheckObservation element for each Amazon Route 53 health checker that is reporting a status about the health check endpoint.\n\n(structure)\n\nA complex type that contains the last failure reason as reported by one Amazon Route 53 health checker.\n\nRegion -> (string)\n\nThe region of the Amazon Route 53 health checker that provided the status in StatusReport .\n\nIPAddress -> (string)\n\nThe IP address of the Amazon Route 53 health checker that provided the failure reason in StatusReport .\n\nStatusReport -> (structure)\n\nA complex type that contains the last failure reason as reported by one Amazon Route 53 health checker and the time of the failed health check.\n\nStatus -> (string)\n\nA description of the status of the health check endpoint as reported by one of the Amazon Route 53 health checkers.\n\nCheckedTime -> (timestamp)\n\nThe date and time that the health checker performed the health check in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2017-03-27T17:48:16.751Z represents March 27, 2017 at 17:48:16.751 UTC."
    },
    {
      "command_name": "get-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-hosted-zone.html",
      "command_description": "Description\n\nGets information about a specified hosted zone including the four name servers assigned to the hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-hosted-zone\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the hosted zone that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZone -> (structure)\n\nA complex type that contains general information about the specified hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nName -> (string)\n\nThe name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see CreateHostedZone .\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the hosted zone.\n\nConfig -> (structure)\n\nA complex type that includes the Comment and PrivateZone elements. If you omitted the HostedZoneConfig and Comment elements from the request, the Config and Comment elements don’t appear in the response.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nResourceRecordSetCount -> (long)\n\nThe number of resource record sets in the hosted zone.\n\nLinkedService -> (structure)\n\nIf the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can’t edit or delete it using Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDelegationSet -> (structure)\n\nA complex type that lists the Amazon Route 53 name servers for the specified hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigns to a reusable delegation set.\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the reusable delegation set.\n\nNameServers -> (list)\n\nA complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.\n\n(string)\n\nVPCs -> (list)\n\nA complex type that contains information about the VPCs that are associated with the specified hosted zone.\n\n(structure)\n\n(Private hosted zones only) A complex type that contains information about an Amazon VPC.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC.",
      "command_examples": "Examples\n\nTo get information about a hosted zone\n\nThe following get-hosted-zone command gets information about the hosted zone with an id of Z1R8UBAEXAMPLE:\n\naws route53 get-hosted-zone --id Z1R8UBAEXAMPLE\n"
    },
    {
      "command_name": "get-hosted-zone-count",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-hosted-zone-count.html",
      "command_description": "Description\n\nRetrieves the number of hosted zones that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-hosted-zone-count\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZoneCount -> (long)\n\nThe total number of public and private hosted zones that are associated with the current Amazon Web Services account."
    },
    {
      "command_name": "get-hosted-zone-limit",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-hosted-zone-limit.html",
      "command_description": "Description\n\nGets the specified limit for a specified hosted zone, for example, the maximum number of records that you can create in the hosted zone.\n\nFor the default limit, see Limits in the Amazon Route 53 Developer Guide . To request a higher limit, open a case .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-hosted-zone-limit\n--type <value>\n--hosted-zone-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--type <value>",
        "--hosted-zone-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--type (string)\n\nThe limit that you want to get. Valid values include the following:\n\nMAX_RRSETS_BY_ZONE : The maximum number of records that you can create in the specified hosted zone.\n\nMAX_VPCS_ASSOCIATED_BY_ZONE : The maximum number of Amazon VPCs that you can associate with the specified private hosted zone.\n\nPossible values:\n\nMAX_RRSETS_BY_ZONE\n\nMAX_VPCS_ASSOCIATED_BY_ZONE\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that you want to get a limit for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLimit -> (structure)\n\nThe current setting for the specified limit. For example, if you specified MAX_RRSETS_BY_ZONE for the value of Type in the request, the value of Limit is the maximum number of records that you can create in the specified hosted zone.\n\nType -> (string)\n\nThe limit that you requested. Valid values include the following:\n\nMAX_RRSETS_BY_ZONE : The maximum number of records that you can create in the specified hosted zone.\n\nMAX_VPCS_ASSOCIATED_BY_ZONE : The maximum number of Amazon VPCs that you can associate with the specified private hosted zone.\n\nValue -> (long)\n\nThe current value for the limit that is specified by Type .\n\nCount -> (long)\n\nThe current number of entities that you have created of the specified type. For example, if you specified MAX_RRSETS_BY_ZONE for the value of Type in the request, the value of Count is the current number of records that you have created in the specified hosted zone."
    },
    {
      "command_name": "get-query-logging-config",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-query-logging-config.html",
      "command_description": "Description\n\nGets information about a specified configuration for DNS query logging.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig and Logging DNS Queries .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-query-logging-config\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the configuration for DNS query logging that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryLoggingConfig -> (structure)\n\nA complex type that contains information about the query logging configuration that you specified in a GetQueryLoggingConfig request.\n\nId -> (string)\n\nThe ID for a configuration for DNS query logging.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that CloudWatch Logs is logging queries for.\n\nCloudWatchLogsLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to."
    },
    {
      "command_name": "get-reusable-delegation-set",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-reusable-delegation-set.html",
      "command_description": "Description\n\nRetrieves information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-reusable-delegation-set\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the reusable delegation set that you want to get a list of name servers for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDelegationSet -> (structure)\n\nA complex type that contains information about the reusable delegation set.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigns to a reusable delegation set.\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the reusable delegation set.\n\nNameServers -> (list)\n\nA complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.\n\n(string)"
    },
    {
      "command_name": "get-reusable-delegation-set-limit",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-reusable-delegation-set-limit.html",
      "command_description": "Description\n\nGets the maximum number of hosted zones that you can associate with the specified reusable delegation set.\n\nFor the default limit, see Limits in the Amazon Route 53 Developer Guide . To request a higher limit, open a case .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-reusable-delegation-set-limit\n--type <value>\n--delegation-set-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--type <value>",
        "--delegation-set-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--type (string)\n\nSpecify MAX_ZONES_BY_REUSABLE_DELEGATION_SET to get the maximum number of hosted zones that you can associate with the specified reusable delegation set.\n\nPossible values:\n\nMAX_ZONES_BY_REUSABLE_DELEGATION_SET\n\n--delegation-set-id (string)\n\nThe ID of the delegation set that you want to get the limit for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nLimit -> (structure)\n\nThe current setting for the limit on hosted zones that you can associate with the specified reusable delegation set.\n\nType -> (string)\n\nThe limit that you requested: MAX_ZONES_BY_REUSABLE_DELEGATION_SET , the maximum number of hosted zones that you can associate with the specified reusable delegation set.\n\nValue -> (long)\n\nThe current value for the MAX_ZONES_BY_REUSABLE_DELEGATION_SET limit.\n\nCount -> (long)\n\nThe current number of hosted zones that you can associate with the specified reusable delegation set."
    },
    {
      "command_name": "get-traffic-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-traffic-policy.html",
      "command_description": "Description\n\nGets information about a specific traffic policy version.\n\nFor information about how of deleting a traffic policy affects the response from GetTrafficPolicy , see DeleteTrafficPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-traffic-policy\n--id <value>\n--traffic-policy-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--traffic-policy-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy that you want to get information about.\n\n--traffic-policy-version (integer)\n\nThe version number of the traffic policy that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicy -> (structure)\n\nA complex type that contains settings for the specified traffic policy.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to a traffic policy when you created it.\n\nVersion -> (integer)\n\nThe version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of Version is always 1.\n\nName -> (string)\n\nThe name that you specified when you created the traffic policy.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nDocument -> (string)\n\nThe definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the CreateTrafficPolicy request. For more information about the JSON format, see Traffic Policy Document Format .\n\nComment -> (string)\n\nThe comment that you specify in the CreateTrafficPolicy request, if any."
    },
    {
      "command_name": "get-traffic-policy-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-traffic-policy-instance.html",
      "command_description": "Description\n\nGets information about a specified traffic policy instance.\n\nNote\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance request, there’s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the State response element.\n\nNote\n\nIn the Route 53 console, traffic policy instances are known as policy records.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-traffic-policy-instance\n--id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy instance that you want to get information about.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstance -> (structure)\n\nA complex type that contains settings for the traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance."
    },
    {
      "command_name": "get-traffic-policy-instance-count",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/get-traffic-policy-instance-count.html",
      "command_description": "Description\n\nGets the number of traffic policy instances that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-traffic-policy-instance-count\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstanceCount -> (integer)\n\nThe number of traffic policy instances that are associated with the current Amazon Web Services account."
    },
    {
      "command_name": "list-geo-locations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-geo-locations.html",
      "command_description": "Description\n\nRetrieves a list of supported geographic locations.\n\nCountries are listed first, and continents are listed last. If Amazon Route 53 supports subdivisions for a country (for example, states or provinces), the subdivisions for that country are listed in alphabetical order immediately after the corresponding country.\n\nRoute 53 does not perform authorization for this API because it retrieves information that is already available to the public.\n\nFor a list of supported geolocation codes, see the GeoLocation data type.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-geo-locations\n[--start-continent-code <value>]\n[--start-country-code <value>]\n[--start-subdivision-code <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--start-continent-code <value>]",
        "[--start-country-code <value>]",
        "[--start-subdivision-code <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--start-continent-code (string)\n\nThe code for the continent with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true, and if NextContinentCode from the previous response has a value, enter that value in startcontinentcode to return the next page of results.\n\nInclude startcontinentcode only if you want to list continents. Don’t include startcontinentcode when you’re listing countries or countries with their subdivisions.\n\n--start-country-code (string)\n\nThe code for the country with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true , and if NextCountryCode from the previous response has a value, enter that value in startcountrycode to return the next page of results.\n\n--start-subdivision-code (string)\n\nThe code for the state of the United States with which you want to start listing locations that Amazon Route 53 supports for geolocation. If Route 53 has already returned a page or more of results, if IsTruncated is true , and if NextSubdivisionCode from the previous response has a value, enter that value in startsubdivisioncode to return the next page of results.\n\nTo list subdivisions (U.S. states), you must include both startcountrycode and startsubdivisioncode .\n\n--max-items (string)\n\n(Optional) The maximum number of geolocations to be included in the response body for this request. If more than maxitems geolocations remain to be listed, then the value of the IsTruncated element in the response is true .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nGeoLocationDetailsList -> (list)\n\nA complex type that contains one GeoLocationDetails element for each location that Amazon Route 53 supports for geolocation.\n\n(structure)\n\nA complex type that contains the codes and full continent, country, and subdivision names for the specified geolocation code.\n\nContinentCode -> (string)\n\nThe two-letter code for the continent.\n\nContinentName -> (string)\n\nThe full name of the continent.\n\nCountryCode -> (string)\n\nThe two-letter code for the country.\n\nCountryName -> (string)\n\nThe name of the country.\n\nSubdivisionCode -> (string)\n\nThe code for the subdivision, such as a particular state within the United States. For a list of US state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website. For a list of all supported subdivision codes, use the ListGeoLocations API.\n\nSubdivisionName -> (string)\n\nThe full name of the subdivision. Route 53 currently supports only states in the United States.\n\nIsTruncated -> (boolean)\n\nA value that indicates whether more locations remain to be listed after the last location in this response. If so, the value of IsTruncated is true . To get more values, submit another request and include the values of NextContinentCode , NextCountryCode , and NextSubdivisionCode in the startcontinentcode , startcountrycode , and startsubdivisioncode , as applicable.\n\nNextContinentCode -> (string)\n\nIf IsTruncated is true , you can make a follow-up request to display more locations. Enter the value of NextContinentCode in the startcontinentcode parameter in another ListGeoLocations request.\n\nNextCountryCode -> (string)\n\nIf IsTruncated is true , you can make a follow-up request to display more locations. Enter the value of NextCountryCode in the startcountrycode parameter in another ListGeoLocations request.\n\nNextSubdivisionCode -> (string)\n\nIf IsTruncated is true , you can make a follow-up request to display more locations. Enter the value of NextSubdivisionCode in the startsubdivisioncode parameter in another ListGeoLocations request.\n\nMaxItems -> (string)\n\nThe value that you specified for MaxItems in the request."
    },
    {
      "command_name": "list-health-checks",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-health-checks.html",
      "command_description": "Description\n\nRetrieve a list of the health checks that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-health-checks is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: HealthChecks",
      "command_synopsis": "Synopsis\n  list-health-checks\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthChecks -> (list)\n\nA complex type that contains one HealthCheck element for each health check that is associated with the current Amazon Web Services account.\n\n(structure)\n\nA complex type that contains information about one health check that is associated with the current Amazon Web Services account.\n\nId -> (string)\n\nThe identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long.\n\nCallerReference -> (string)\n\nA unique string that you specified when you created the health check.\n\nLinkedService -> (structure)\n\nIf the health check was created by another service, the service that created the health check. When a health check is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nHealthCheckConfig -> (structure)\n\nA complex type that contains detailed information about one health check.\n\nIPAddress -> (string)\n\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance will never change.\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\nWhen the value of Type is CALCULATED or CLOUDWATCH_METRIC , omit IPAddress .\n\nPort -> (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nHTTP_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nHTTPS_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nTCP : Route 53 tries to establish a TCP connection.\n\nCLOUDWATCH_METRIC : The health check is associated with a CloudWatch alarm. If the state of the alarm is OK , the health check is considered healthy. If the state is ALARM , the health check is considered unhealthy. If CloudWatch doesn’t have sufficient data to determine whether the state is OK or ALARM , the health check status depends on the setting for InsufficientDataHealthStatus : Healthy , Unhealthy , or LastKnownStatus .\n\nCALCULATED : For health checks that monitor the status of other health checks, Route 53 adds up the number of health checks that Route 53 health checkers consider to be healthy and compares that number with the value of HealthThreshold .\n\nRECOVERY_CONTROL : The health check is assocated with a Route53 Application Recovery Controller routing control. If the routing control state is ON , the health check is considered healthy. If the state is OFF , the health check is considered unhealthy.\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nFullyQualifiedDomainName -> (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nIf you specify a value for IPAddress :\n\nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes FullyQualifiedDomainName:Port to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the preceding cases.\n\nIf you don’t specify a value for IPAddress :\n\nRoute 53 sends a DNS request to the domain that you specify for FullyQualifiedDomainName at the interval that you specify for RequestInterval . Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if you create a health check for which the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value that you specify for Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\nSearchString -> (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy.\n\nRoute 53 considers case when searching for SearchString in the response body.\n\nRequestInterval -> (integer)\n\nThe number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Route 53 health checker makes requests at this interval.\n\nWarning\n\nYou can’t change the value of RequestInterval after you create a health check.\n\nIf you don’t specify a value for RequestInterval , the default value is 30 seconds.\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\nMeasureLatency -> (boolean)\n\nSpecify whether you want Amazon Route 53 to measure the latency between health checkers in multiple Amazon Web Services regions and your endpoint, and to display CloudWatch latency graphs on the Health Checks page in the Route 53 console.\n\nWarning\n\nYou can’t change the value of MeasureLatency after you create a health check.\n\nInverted -> (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\nDisabled -> (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\nHealthThreshold -> (integer)\n\nThe number of child health checks that are associated with a CALCULATED health check that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks element.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\nChildHealthChecks -> (list)\n\n(CALCULATED Health Checks Only) A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nEnableSNI -> (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\nRegions -> (list)\n\nA complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.\n\nIf you don’t specify any regions, Route 53 health checkers automatically performs checks from all of the regions that are listed under Valid Values .\n\nIf you update a health check to remove a region that has been performing health checks, Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions).\n\n(string)\n\nAlarmIdentifier -> (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nInsufficientDataHealthStatus -> (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control.\n\nFor more information about Route 53 Application Recovery Controller, see Route 53 Application Recovery Controller Developer Guide. .\n\nHealthCheckVersion -> (long)\n\nThe version of the health check. You can optionally pass this value in a call to UpdateHealthCheck to prevent overwriting another change to the health check.\n\nCloudWatchAlarmConfiguration -> (structure)\n\nA complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.\n\nEvaluationPeriods -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.\n\nThreshold -> (double)\n\nFor the metric that the CloudWatch alarm is associated with, the value the metric is compared with.\n\nComparisonOperator -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.\n\nPeriod -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.\n\nMetricName -> (string)\n\nThe name of the CloudWatch metric that the alarm is associated with.\n\nNamespace -> (string)\n\nThe namespace of the metric that the alarm is associated with. For more information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\nStatistic -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.\n\nDimensions -> (list)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric. For information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\n(structure)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.\n\nName -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the name of one dimension.\n\nValue -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the value of one dimension.\n\nMarker -> (string)\n\nFor the second and subsequent calls to ListHealthChecks , Marker is the value that you specified for the marker parameter in the previous request.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more health checks to be listed. If the response was truncated, you can get the next group of health checks by submitting another ListHealthChecks request and specifying the value of NextMarker in the marker parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , the value of NextMarker identifies the first health check that Amazon Route 53 returns if you submit another ListHealthChecks request and specify the value of NextMarker in the marker parameter.\n\nMaxItems -> (string)\n\nThe value that you specified for the maxitems parameter in the call to ListHealthChecks that produced the current response.",
      "command_examples": "Examples\n\nTo list the health checks associated with the current AWS account\n\nThe following list-health-checks command lists detailed information about the first 100 health checks that are associated with the current AWS account.:\n\naws route53 list-health-checks\n\n\nIf you have more than 100 health checks, or if you want to list them in groups smaller than 100, include the --maxitems parameter. For example, to list health checks one at a time, use the following command:\n\naws route53 list-health-checks --max-items 1\n\n\nTo view the next health check, take the value of NextToken from the response to the previous command, and include it in the --starting-token parameter, for example:\n\naws route53 list-health-checks --max-items 1 --starting-token Z3M3LMPEXAMPLE\n"
    },
    {
      "command_name": "list-hosted-zones",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-hosted-zones.html",
      "command_description": "Description\n\nRetrieves a list of the public and private hosted zones that are associated with the current Amazon Web Services account. The response includes a HostedZones child element for each hosted zone.\n\nAmazon Route 53 returns a maximum of 100 items in each response. If you have a lot of hosted zones, you can use the maxitems parameter to list them in groups of up to 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-hosted-zones is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: HostedZones",
      "command_synopsis": "Synopsis\n  list-hosted-zones\n[--max-items <value>]\n[--delegation-set-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-items <value>]",
        "[--delegation-set-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--delegation-set-id (string)\n\nIf you’re using reusable delegation sets and you want to list all of the hosted zones that are associated with a reusable delegation set, specify the ID of that reusable delegation set.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZones -> (list)\n\nA complex type that contains general information about the hosted zone.\n\n(structure)\n\nA complex type that contains general information about the hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nName -> (string)\n\nThe name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see CreateHostedZone .\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the hosted zone.\n\nConfig -> (structure)\n\nA complex type that includes the Comment and PrivateZone elements. If you omitted the HostedZoneConfig and Comment elements from the request, the Config and Comment elements don’t appear in the response.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nResourceRecordSetCount -> (long)\n\nThe number of resource record sets in the hosted zone.\n\nLinkedService -> (structure)\n\nIf the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can’t edit or delete it using Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nMarker -> (string)\n\nFor the second and subsequent calls to ListHostedZones , Marker is the value that you specified for the marker parameter in the request that produced the current response.\n\nIsTruncated -> (boolean)\n\nA flag indicating whether there are more hosted zones to be listed. If the response was truncated, you can get more hosted zones by submitting another ListHostedZones request and specifying the value of NextMarker in the marker parameter.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , the value of NextMarker identifies the first hosted zone in the next group of hosted zones. Submit another ListHostedZones request, and specify the value of NextMarker from the response in the marker parameter.\n\nThis element is present only if IsTruncated is true .\n\nMaxItems -> (string)\n\nThe value that you specified for the maxitems parameter in the call to ListHostedZones that produced the current response.",
      "command_examples": "Examples\n\nTo list the hosted zones associated with the current AWS account\n\nThe following list-hosted-zones command lists summary information about the first 100 hosted zones that are associated with the current AWS account.:\n\naws route53 list-hosted-zones\n\n\nIf you have more than 100 hosted zones, or if you want to list them in groups smaller than 100, include the --max-items parameter. For example, to list hosted zones one at a time, use the following command:\n\naws route53 list-hosted-zones --max-items 1\n\n\nTo view information about the next hosted zone, take the value of NextToken from the response to the previous command, and include it in the --starting-token parameter, for example:\n\naws route53 list-hosted-zones --max-items 1 --starting-token Z3M3LMPEXAMPLE\n"
    },
    {
      "command_name": "list-hosted-zones-by-name",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-hosted-zones-by-name.html",
      "command_description": "Description\n\nRetrieves a list of your hosted zones in lexicographic order. The response includes a HostedZones child element for each hosted zone created by the current Amazon Web Services account.\n\nListHostedZonesByName sorts hosted zones by name with the labels reversed. For example:\n\ncom.example.www.\n\nNote the trailing dot, which can change the sort order in some circumstances.\n\nIf the domain name includes escape characters or Punycode, ListHostedZonesByName alphabetizes the domain name using the escaped or Punycoded value, which is the format that Amazon Route 53 saves in its database. For example, to create a hosted zone for exämple.com, you specify ex344mple.com for the domain name. ListHostedZonesByName alphabetizes it as:\n\ncom.ex\\344mple.\n\nThe labels are reversed and alphabetized using the escaped value. For more information about valid domain name formats, including internationalized domain names, see DNS Domain Name Format in the Amazon Route 53 Developer Guide .\n\nRoute 53 returns up to 100 items in each response. If you have a lot of hosted zones, use the MaxItems parameter to list them in groups of up to 100. The response includes values that help navigate from one group of MaxItems hosted zones to the next:\n\nThe DNSName and HostedZoneId elements in the response contain the values, if any, specified for the dnsname and hostedzoneid parameters in the request that produced the current response.\n\nThe MaxItems element in the response contains the value, if any, that you specified for the maxitems parameter in the request that produced the current response.\n\nIf the value of IsTruncated in the response is true, there are more hosted zones associated with the current Amazon Web Services account. If IsTruncated is false, this response includes the last hosted zone that is associated with the current account. The NextDNSName element and NextHostedZoneId elements are omitted from the response.\n\nThe NextDNSName and NextHostedZoneId elements in the response contain the domain name and the hosted zone ID of the next hosted zone that is associated with the current Amazon Web Services account. If you want to list more hosted zones, make another call to ListHostedZonesByName , and specify the value of NextDNSName and NextHostedZoneId in the dnsname and hostedzoneid parameters, respectively.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-hosted-zones-by-name\n[--dns-name <value>]\n[--hosted-zone-id <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--dns-name <value>]",
        "[--hosted-zone-id <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--dns-name (string)\n\n(Optional) For your first request to ListHostedZonesByName , include the dnsname parameter only if you want to specify the name of the first hosted zone in the response. If you don’t include the dnsname parameter, Amazon Route 53 returns all of the hosted zones that were created by the current Amazon Web Services account, in ASCII order. For subsequent requests, include both dnsname and hostedzoneid parameters. For dnsname , specify the value of NextDNSName from the previous response.\n\n--hosted-zone-id (string)\n\n(Optional) For your first request to ListHostedZonesByName , do not include the hostedzoneid parameter.\n\nIf you have more hosted zones than the value of maxitems , ListHostedZonesByName returns only the first maxitems hosted zones. To get the next group of maxitems hosted zones, submit another request to ListHostedZonesByName and include both dnsname and hostedzoneid parameters. For the value of hostedzoneid , specify the value of the NextHostedZoneId element from the previous response.\n\n--max-items (string)\n\nThe maximum number of hosted zones to be included in the response body for this request. If you have more than maxitems hosted zones, then the value of the IsTruncated element in the response is true, and the values of NextDNSName and NextHostedZoneId specify the first hosted zone in the next group of maxitems hosted zones.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZones -> (list)\n\nA complex type that contains general information about the hosted zone.\n\n(structure)\n\nA complex type that contains general information about the hosted zone.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nName -> (string)\n\nThe name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see CreateHostedZone .\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the hosted zone.\n\nConfig -> (structure)\n\nA complex type that includes the Comment and PrivateZone elements. If you omitted the HostedZoneConfig and Comment elements from the request, the Config and Comment elements don’t appear in the response.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nResourceRecordSetCount -> (long)\n\nThe number of resource record sets in the hosted zone.\n\nLinkedService -> (structure)\n\nIf the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can’t edit or delete it using Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDNSName -> (string)\n\nFor the second and subsequent calls to ListHostedZonesByName , DNSName is the value that you specified for the dnsname parameter in the request that produced the current response.\n\nHostedZoneId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more hosted zones to be listed. If the response was truncated, you can get the next group of maxitems hosted zones by calling ListHostedZonesByName again and specifying the values of NextDNSName and NextHostedZoneId elements in the dnsname and hostedzoneid parameters.\n\nNextDNSName -> (string)\n\nIf IsTruncated is true, the value of NextDNSName is the name of the first hosted zone in the next group of maxitems hosted zones. Call ListHostedZonesByName again and specify the value of NextDNSName and NextHostedZoneId in the dnsname and hostedzoneid parameters, respectively.\n\nThis element is present only if IsTruncated is true .\n\nNextHostedZoneId -> (string)\n\nIf IsTruncated is true , the value of NextHostedZoneId identifies the first hosted zone in the next group of maxitems hosted zones. Call ListHostedZonesByName again and specify the value of NextDNSName and NextHostedZoneId in the dnsname and hostedzoneid parameters, respectively.\n\nThis element is present only if IsTruncated is true .\n\nMaxItems -> (string)\n\nThe value that you specified for the maxitems parameter in the call to ListHostedZonesByName that produced the current response.",
      "command_examples": "Examples\n\nThe following command lists up to 100 hosted zones ordered by domain name:\n\naws route53 list-hosted-zones-by-name\n\n\nOutput:\n\n{\n  \"HostedZones\": [\n      {\n          \"ResourceRecordSetCount\": 2,\n          \"CallerReference\": \"test20150527-2\",\n          \"Config\": {\n              \"Comment\": \"test2\",\n              \"PrivateZone\": false\n          },\n          \"Id\": \"/hostedzone/Z119WBBTVP5WFX\",\n          \"Name\": \"2.example.com.\"\n      },\n      {\n          \"ResourceRecordSetCount\": 2,\n          \"CallerReference\": \"test20150527-1\",\n          \"Config\": {\n              \"Comment\": \"test\",\n              \"PrivateZone\": false\n          },\n          \"Id\": \"/hostedzone/Z3P5QSUBK4POTI\",\n          \"Name\": \"www.example.com.\"\n      }\n  ],\n  \"IsTruncated\": false,\n  \"MaxItems\": \"100\"\n}\n\n\nThe following command lists hosted zones ordered by name, beginning with www.example.com:\n\naws route53 list-hosted-zones-by-name --dns-name www.example.com\n\n\nOutput:\n\n{\n  \"HostedZones\": [\n      {\n          \"ResourceRecordSetCount\": 2,\n          \"CallerReference\": \"mwunderl20150527-1\",\n          \"Config\": {\n              \"Comment\": \"test\",\n              \"PrivateZone\": false\n          },\n          \"Id\": \"/hostedzone/Z3P5QSUBK4POTI\",\n          \"Name\": \"www.example.com.\"\n      }\n  ],\n  \"DNSName\": \"www.example.com\",\n  \"IsTruncated\": false,\n  \"MaxItems\": \"100\"\n}\n"
    },
    {
      "command_name": "list-hosted-zones-by-vpc",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-hosted-zones-by-vpc.html",
      "command_description": "Description\n\nLists all the private hosted zones that a specified VPC is associated with, regardless of which Amazon Web Services account or Amazon Web Services service owns the hosted zones. The HostedZoneOwner structure in the response contains one of the following values:\n\nAn OwningAccount element, which contains the account number of either the current Amazon Web Services account or another Amazon Web Services account. Some services, such as Cloud Map, create hosted zones using the current account.\n\nAn OwningService element, which identifies the Amazon Web Services service that created and owns the hosted zone. For example, if a hosted zone was created by Amazon Elastic File System (Amazon EFS), the value of Owner is efs.amazonaws.com .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-hosted-zones-by-vpc\n--vpc-id <value>\n--vpc-region <value>\n[--max-items <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--vpc-id <value>",
        "--vpc-region <value>",
        "[--max-items <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--vpc-id (string)\n\nThe ID of the Amazon VPC that you want to list hosted zones for.\n\n--vpc-region (string)\n\nFor the Amazon VPC that you specified for VPCId , the Amazon Web Services Region that you created the VPC in.\n\nPossible values:\n\nus-east-1\n\nus-east-2\n\nus-west-1\n\nus-west-2\n\neu-west-1\n\neu-west-2\n\neu-west-3\n\neu-central-1\n\nap-east-1\n\nme-south-1\n\nus-gov-west-1\n\nus-gov-east-1\n\nus-iso-east-1\n\nus-isob-east-1\n\nap-southeast-1\n\nap-southeast-2\n\nap-south-1\n\nap-northeast-1\n\nap-northeast-2\n\nap-northeast-3\n\neu-north-1\n\nsa-east-1\n\nca-central-1\n\ncn-north-1\n\naf-south-1\n\neu-south-1\n\n--max-items (string)\n\n(Optional) The maximum number of hosted zones that you want Amazon Route 53 to return. If the specified VPC is associated with more than MaxItems hosted zones, the response includes a NextToken element. NextToken contains an encrypted token that identifies the first hosted zone that Route 53 will return if you submit another request.\n\n--next-token (string)\n\nIf the previous response included a NextToken element, the specified VPC is associated with more hosted zones. To get more hosted zones, submit another ListHostedZonesByVPC request.\n\nFor the value of NextToken , specify the value of NextToken from the previous response.\n\nIf the previous response didn’t include a NextToken element, there are no more hosted zones to get.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZoneSummaries -> (list)\n\nA list that contains one HostedZoneSummary element for each hosted zone that the specified Amazon VPC is associated with. Each HostedZoneSummary element contains the hosted zone name and ID, and information about who owns the hosted zone.\n\n(structure)\n\nIn the response to a ListHostedZonesByVPC request, the HostedZoneSummaries element contains one HostedZoneSummary element for each hosted zone that the specified Amazon VPC is associated with. Each HostedZoneSummary element contains the hosted zone name and ID, and information about who owns the hosted zone.\n\nHostedZoneId -> (string)\n\nThe Route 53 hosted zone ID of a private hosted zone that the specified VPC is associated with.\n\nName -> (string)\n\nThe name of the private hosted zone, such as example.com .\n\nOwner -> (structure)\n\nThe owner of a private hosted zone that the specified VPC is associated with. The owner can be either an Amazon Web Services account or an Amazon Web Services service.\n\nOwningAccount -> (string)\n\nIf the hosted zone was created by an Amazon Web Services account, or was created by an Amazon Web Services service that creates hosted zones using the current account, OwningAccount contains the account ID of that account. For example, when you use Cloud Map to create a hosted zone, Cloud Map creates the hosted zone using the current Amazon Web Services account.\n\nOwningService -> (string)\n\nIf an Amazon Web Services service uses its own account to create a hosted zone and associate the specified VPC with that hosted zone, OwningService contains an abbreviation that identifies the service. For example, if Amazon Elastic File System (Amazon EFS) created a hosted zone and associated a VPC with the hosted zone, the value of OwningService is efs.amazonaws.com .\n\nMaxItems -> (string)\n\nThe value that you specified for MaxItems in the most recent ListHostedZonesByVPC request.\n\nNextToken -> (string)\n\nThe value that you will use for NextToken in the next ListHostedZonesByVPC request."
    },
    {
      "command_name": "list-query-logging-configs",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-query-logging-configs.html",
      "command_description": "Description\n\nLists the configurations for DNS query logging that are associated with the current Amazon Web Services account or the configuration that is associated with a specified hosted zone.\n\nFor more information about DNS query logs, see CreateQueryLoggingConfig . Additional information, including the format of DNS query logs, appears in Logging DNS Queries in the Amazon Route 53 Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-query-logging-configs is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: QueryLoggingConfigs",
      "command_synopsis": "Synopsis\n  list-query-logging-configs\n[--hosted-zone-id <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--hosted-zone-id <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\n(Optional) If you want to list the query logging configuration that is associated with a hosted zone, specify the ID in HostedZoneId .\n\nIf you don’t specify a hosted zone ID, ListQueryLoggingConfigs returns all of the configurations that are associated with the current Amazon Web Services account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nQueryLoggingConfigs -> (list)\n\nAn array that contains one QueryLoggingConfig element for each configuration for DNS query logging that is associated with the current Amazon Web Services account.\n\n(structure)\n\nA complex type that contains information about a configuration for DNS query logging.\n\nId -> (string)\n\nThe ID for a configuration for DNS query logging.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that CloudWatch Logs is logging queries for.\n\nCloudWatchLogsLogGroupArn -> (string)\n\nThe Amazon Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route 53 is publishing logs to.\n\nNextToken -> (string)\n\nIf a response includes the last of the query logging configurations that are associated with the current Amazon Web Services account, NextToken doesn’t appear in the response.\n\nIf a response doesn’t include the last of the configurations, you can get more configurations by submitting another ListQueryLoggingConfigs request. Get the value of NextToken that Amazon Route 53 returned in the previous response and include it in NextToken in the next request.",
      "command_examples": "Examples\n\nTo list query logging configurations\n\nThe following list-query-logging-configs example lists information about the first 100 query logging configurations in your AWS account, for the hosted zone Z1OX3WQEXAMPLE.\n\naws route53 list-query-logging-configs \\\n    --hosted-zone-id Z1OX3WQEXAMPLE\n\n\nOutput:\n\n{\n    \"QueryLoggingConfigs\": [\n        {\n            \"Id\": \"964ff34e-ae03-4f06-80a2-9683cexample\",\n            \"HostedZoneId\": \"Z1OX3WQEXAMPLE\",\n            \"CloudWatchLogsLogGroupArn\": \"arn:aws:logs:us-east-1:111122223333:log-group:/aws/route53/example.com:*\"\n        }\n    ]\n}\n\n\nFor more information, see Logging DNS queries in the Amazon Route 53 Developer Guide."
    },
    {
      "command_name": "list-resource-record-sets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-resource-record-sets.html",
      "command_description": "Description\n\nLists the resource record sets in a specified hosted zone.\n\nListResourceRecordSets returns up to 300 resource record sets at a time in ASCII order, beginning at a position specified by the name and type elements.\n\nSort order\n\nListResourceRecordSets sorts results first by DNS name with the labels reversed, for example:\n\ncom.example.www.\n\nNote the trailing dot, which can change the sort order when the record name contains characters that appear before . (decimal 46) in the ASCII table. These characters include the following: ! \" # $ % & ' ( ) * + , -\n\nWhen multiple records have the same DNS name, ListResourceRecordSets sorts results by the record type.\n\nSpecifying where to start listing records\n\nYou can use the name and type elements to specify the resource record set that the list begins with:\n\nIf you do not specify Name or Type\n\nThe results begin with the first resource record set that the hosted zone contains.\n\nIf you specify Name but not Type\n\nThe results begin with the first resource record set in the list whose name is greater than or equal to Name .\n\nIf you specify Type but not Name\n\nAmazon Route 53 returns the InvalidInput error.\n\nIf you specify both Name and Type\n\nThe results begin with the first resource record set in the list whose name is greater than or equal to Name , and whose type is greater than or equal to Type .\n\nResource record sets that are PENDING\n\nThis action returns the most current version of the records. This includes records that are PENDING , and that are not yet available on all Route 53 DNS servers.\n\nChanging resource record sets\n\nTo ensure that you get an accurate listing of the resource record sets for a hosted zone at a point in time, do not submit a ChangeResourceRecordSets request while you’re paging through the results of a ListResourceRecordSets request. If you do, some pages may display results without the latest changes while other pages display results with the latest changes.\n\nDisplaying the next page of results\n\nIf a ListResourceRecordSets command returns more than one page of results, the value of IsTruncated is true . To display the next page of results, get the values of NextRecordName , NextRecordType , and NextRecordIdentifier (if any) from the response. Then submit another ListResourceRecordSets request, and specify those values for StartRecordName , StartRecordType , and StartRecordIdentifier .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-resource-record-sets is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResourceRecordSets",
      "command_synopsis": "Synopsis\n  list-resource-record-sets\n--hosted-zone-id <value>\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that contains the resource record sets that you want to list.\n\n--max-items (string)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (string)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceRecordSets -> (list)\n\nInformation about multiple resource record sets.\n\n(structure)\n\nInformation about the resource record set to create or delete.\n\nName -> (string)\n\nFor ChangeResourceRecordSets requests, the name of the record that you want to create, update, or delete. For ListResourceRecordSets responses, the name of a record in the specified hosted zone.\n\nChangeResourceRecordSets Only\n\nEnter a fully qualified domain name, for example, www.example.com . You can optionally include a trailing dot. If you omit the trailing dot, Amazon Route 53 assumes that the domain name that you specify is fully qualified. This means that Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see DNS Domain Name Format in the Amazon Route 53 Developer Guide .\n\nYou can use the asterisk (*) wildcard to replace the leftmost label in a domain name, for example, *.example.com . Note the following:\n\nThe * must replace the entire label. For example, you can’t specify *prod.example.com or prod*.example.com .\n\nThe * can’t replace any of the middle labels, for example, marketing.*.example.com.\n\nIf you include * in any position other than the leftmost label in a domain name, DNS treats it as an * character (ASCII 42), not as a wildcard.\n\nWarning\n\nYou can’t use the * wildcard for resource records sets that have a type of NS.\n\nYou can use the * wildcard as the leftmost label in a domain name, for example, *.example.com . You can’t use an * for one of the middle labels, for example, marketing.*.example.com . In addition, the * must replace the entire label; for example, you can’t specify prod*.example.com .\n\nType -> (string)\n\nThe DNS record type. For information about different record types and how data is encoded for them, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide .\n\nValid values for basic resource record sets: A | AAAA | CAA | CNAME | DS |MX | NAPTR | NS | PTR | SOA | SPF | SRV | TXT\n\nValues for weighted, latency, geolocation, and failover resource record sets: A | AAAA | CAA | CNAME | MX | NAPTR | PTR | SPF | SRV | TXT . When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group.\n\nValid values for multivalue answer resource record sets: A | AAAA | MX | NAPTR | PTR | SPF | SRV | TXT\n\nNote\n\nSPF records were formerly used to verify the identity of the sender of email messages. However, we no longer recommend that you create resource record sets for which the value of Type is SPF . RFC 7208, Sender Policy Framework (SPF) for Authorizing Use of Domains in Email, Version 1 , has been updated to say, “…[I]ts existence and mechanism defined in [RFC4408] have led to some interoperability issues. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it.” In RFC 7208, see section 14.1, The SPF DNS Record Type .\n\nValues for alias resource record sets:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs: A\n\nCloudFront distributions: A If IPv6 is enabled for the distribution, create two resource record sets to route traffic to your distribution, one with a value of A and one with a value of AAAA .\n\nAmazon API Gateway environment that has a regionalized subdomain : A\n\nELB load balancers: A | AAAA\n\nAmazon S3 buckets: A\n\nAmazon Virtual Private Cloud interface VPC endpoints A\n\nAnother resource record set in this hosted zone: Specify the type of the resource record set that you’re creating the alias for. All values are supported except NS and SOA .\n\nNote\n\nIf you’re creating an alias record that has the same name as the hosted zone (known as the zone apex), you can’t route traffic to a record for which the value of Type is CNAME . This is because the alias record must have the same type as the record you’re routing traffic to, and creating a CNAME record for the zone apex isn’t supported even for an alias record.\n\nSetIdentifier -> (string)\n\nResource record sets that have a routing policy other than simple: An identifier that differentiates among multiple resource record sets that have the same combination of name and type, such as multiple weighted resource record sets named acme.example.com that have a type of A. In a group of resource record sets that have the same name and type, the value of SetIdentifier must be unique for each resource record set.\n\nFor information about routing policies, see Choosing a Routing Policy in the Amazon Route 53 Developer Guide .\n\nWeight -> (long)\n\nWeighted resource record sets only: Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Route 53 then responds to queries based on the ratio of a resource’s weight to the total. Note the following:\n\nYou must specify a value for the Weight element for every weighted resource record set.\n\nYou can only specify one ResourceRecord per weighted resource record set.\n\nYou can’t create latency, failover, or geolocation resource record sets that have the same values for the Name and Type elements as weighted resource record sets.\n\nYou can create a maximum of 100 weighted resource record sets that have the same values for the Name and Type elements.\n\nFor weighted (but not weighted alias) resource record sets, if you set Weight to 0 for a resource record set, Route 53 never responds to queries with the applicable value for that resource record set. However, if you set Weight to 0 for all resource record sets that have the same combination of DNS name and type, traffic is routed to all resources with equal probability. The effect of setting Weight to 0 is different when you associate health checks with weighted resource record sets. For more information, see Options for Configuring Route 53 Active-Active and Active-Passive Failover in the Amazon Route 53 Developer Guide .\n\nRegion -> (string)\n\nLatency-based resource record sets only: The Amazon EC2 Region where you created the resource that this resource record set refers to. The resource typically is an Amazon Web Services resource, such as an EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.\n\nNote\n\nAlthough creating latency and latency alias resource record sets in a private hosted zone is allowed, it’s not supported.\n\nWhen Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 Region. Route 53 then returns the value that is associated with the selected resource record set.\n\nNote the following:\n\nYou can only specify one ResourceRecord per latency resource record set.\n\nYou can only create one latency resource record set for each Amazon EC2 Region.\n\nYou aren’t required to create latency resource record sets for all Amazon EC2 Regions. Route 53 will choose the region with the best latency from among the regions that you create latency resource record sets for.\n\nYou can’t create non-latency resource record sets that have the same values for the Name and Type elements as latency resource record sets.\n\nGeoLocation -> (structure)\n\nGeolocation resource record sets only: A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of 192.0.2.111 , create a resource record set with a Type of A and a ContinentCode of AF .\n\nNote\n\nAlthough creating geolocation and geolocation alias resource record sets in a private hosted zone is allowed, it’s not supported.\n\nIf you create separate resource record sets for overlapping geographic regions (for example, one resource record set for a continent and one for a country on the same continent), priority goes to the smallest geographic region. This allows you to route most queries for a continent to one resource and to route queries for a country on that continent to a different resource.\n\nYou can’t create two geolocation resource record sets that specify the same geographic location.\n\nThe value * in the CountryCode element matches all geographic locations that aren’t specified in other geolocation resource record sets that have the same values for the Name and Type elements.\n\nWarning\n\nGeolocation works by mapping IP addresses to locations. However, some IP addresses aren’t mapped to geographic locations, so even if you create geolocation resource record sets that cover all seven continents, Route 53 will receive some DNS queries from locations that it can’t identify. We recommend that you create a resource record set for which the value of CountryCode is * . Two groups of queries are routed to the resource that you specify in this record: queries that come from locations for which you haven’t created geolocation resource record sets and queries from IP addresses that aren’t mapped to a location. If you don’t create a * resource record set, Route 53 returns a “no answer” response for queries from those locations.\n\nYou can’t create non-geolocation resource record sets that have the same values for the Name and Type elements as geolocation resource record sets.\n\nContinentCode -> (string)\n\nThe two-letter code for the continent.\n\nAmazon Route 53 supports the following continent codes:\n\nAF : Africa\n\nAN : Antarctica\n\nAS : Asia\n\nEU : Europe\n\nOC : Oceania\n\nNA : North America\n\nSA : South America\n\nConstraint: Specifying ContinentCode with either CountryCode or SubdivisionCode returns an InvalidInput error.\n\nCountryCode -> (string)\n\nFor geolocation resource record sets, the two-letter code for a country.\n\nAmazon Route 53 uses the two-letter country codes that are specified in ISO standard 3166-1 alpha-2 .\n\nSubdivisionCode -> (string)\n\nFor geolocation resource record sets, the two-letter code for a state of the United States. Route 53 doesn’t support any other values for SubdivisionCode . For a list of state abbreviations, see Appendix B: Two–Letter State and Possession Abbreviations on the United States Postal Service website.\n\nIf you specify subdivisioncode , you must also specify US for CountryCode .\n\nFailover -> (string)\n\nFailover resource record sets only: To configure failover, you add the Failover element to two resource record sets. For one resource record set, you specify PRIMARY as the value for Failover ; for the other resource record set, you specify SECONDARY . In addition, you include the HealthCheckId element and specify the health check that you want Amazon Route 53 to perform for each resource record set.\n\nExcept where noted, the following failover behaviors assume that you have included the HealthCheckId element in both resource record sets:\n\nWhen the primary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set.\n\nWhen the primary resource record set is unhealthy and the secondary resource record set is healthy, Route 53 responds to DNS queries with the applicable value from the secondary resource record set.\n\nWhen the secondary resource record set is unhealthy, Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set.\n\nIf you omit the HealthCheckId element for the secondary resource record set, and if the primary resource record set is unhealthy, Route 53 always responds to DNS queries with the applicable value from the secondary resource record set. This is true regardless of the health of the associated endpoint.\n\nYou can’t create non-failover resource record sets that have the same values for the Name and Type elements as failover resource record sets.\n\nFor failover alias resource record sets, you must also include the EvaluateTargetHealth element and set the value to true.\n\nFor more information about configuring failover for Route 53, see the following topics in the Amazon Route 53 Developer Guide :\n\nRoute 53 Health Checks and DNS Failover\n\nConfiguring Failover in a Private Hosted Zone\n\nMultiValueAnswer -> (boolean)\n\nMultivalue answer resource record sets only : To route traffic approximately randomly to multiple resources, such as web servers, create one multivalue answer record for each resource and specify true for MultiValueAnswer . Note the following:\n\nIf you associate a health check with a multivalue answer resource record set, Amazon Route 53 responds to DNS queries with the corresponding IP address only when the health check is healthy.\n\nIf you don’t associate a health check with a multivalue answer record, Route 53 always considers the record to be healthy.\n\nRoute 53 responds to DNS queries with up to eight healthy records; if you have eight or fewer healthy records, Route 53 responds to all DNS queries with all the healthy records.\n\nIf you have more than eight healthy records, Route 53 responds to different DNS resolvers with different combinations of healthy records.\n\nWhen all records are unhealthy, Route 53 responds to DNS queries with up to eight unhealthy records.\n\nIf a resource becomes unavailable after a resolver caches a response, client software typically tries another of the IP addresses in the response.\n\nYou can’t create multivalue answer alias records.\n\nTTL -> (long)\n\nThe resource record cache time to live (TTL), in seconds. Note the following:\n\nIf you’re creating or updating an alias resource record set, omit TTL . Amazon Route 53 uses the value of TTL for the alias target.\n\nIf you’re associating this resource record set with a health check (if you’re adding a HealthCheckId element), we recommend that you specify a TTL of 60 seconds or less so clients respond quickly to changes in health status.\n\nAll of the resource record sets in a group of weighted resource record sets must have the same value for TTL .\n\nIf a group of weighted resource record sets includes one or more weighted alias resource record sets for which the alias target is an ELB load balancer, we recommend that you specify a TTL of 60 seconds for all of the non-alias weighted resource record sets that have the same name and type. Values other than 60 seconds (the TTL for load balancers) will change the effect of the values that you specify for Weight .\n\nResourceRecords -> (list)\n\nInformation about the resource records to act upon.\n\nNote\n\nIf you’re creating an alias resource record set, omit ResourceRecords .\n\n(structure)\n\nInformation specific to the resource record.\n\nNote\n\nIf you’re creating an alias resource record set, omit ResourceRecord .\n\nValue -> (string)\n\nThe current or new DNS record value, not to exceed 4,000 characters. In the case of a DELETE action, if the current value does not match the actual value, an error is returned. For descriptions about how to format Value for different record types, see Supported DNS Resource Record Types in the Amazon Route 53 Developer Guide .\n\nYou can specify more than one value for all record types except CNAME and SOA .\n\nNote\n\nIf you’re creating an alias resource record set, omit Value .\n\nAliasTarget -> (structure)\n\nAlias resource record sets only: Information about the Amazon Web Services resource, such as a CloudFront distribution or an Amazon S3 bucket, that you want to route traffic to.\n\nIf you’re creating resource records sets for a private hosted zone, note the following:\n\nYou can’t create an alias resource record set in a private hosted zone to route traffic to a CloudFront distribution.\n\nCreating geolocation alias resource record sets or latency alias resource record sets in a private hosted zone is unsupported.\n\nFor information about creating failover resource record sets in a private hosted zone, see Configuring Failover in a Private Hosted Zone in the Amazon Route 53 Developer Guide .\n\nHostedZoneId -> (string)\n\nAlias resource records sets only : The value used depends on where you want to route traffic:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs\n\nSpecify the hosted zone ID for your API. You can get the applicable value using the CLI command get-domain-names :\n\nFor regional APIs, specify the value of regionalHostedZoneId .\n\nFor edge-optimized APIs, specify the value of distributionHostedZoneId .\n\nAmazon Virtual Private Cloud interface VPC endpoint\n\nSpecify the hosted zone ID for your interface endpoint. You can get the value of HostedZoneId using the CLI command describe-vpc-endpoints .\n\nCloudFront distribution\n\nSpecify Z2FDTNDATAQYW2 .\n\nNote\n\nAlias resource record sets for CloudFront can’t be created in a private zone.\n\nElastic Beanstalk environment\n\nSpecify the hosted zone ID for the region that you created the environment in. The environment must have a regionalized subdomain. For a list of regions and the corresponding hosted zone IDs, see Elastic Beanstalk endpoints and quotas in the the Amazon Web Services General Reference .\n\nELB load balancer\n\nSpecify the value of the hosted zone ID for the load balancer. Use the following methods to get the hosted zone ID:\n\nElastic Load Balancing endpoints and quotas topic in the Amazon Web Services General Reference : Use the value that corresponds with the region that you created your load balancer in. Note that there are separate columns for Application and Classic Load Balancers and for Network Load Balancers.\n\nAmazon Web Services Management Console : Go to the Amazon EC2 page, choose Load Balancers in the navigation pane, select the load balancer, and get the value of the Hosted zone field on the Description tab.\n\nElastic Load Balancing API : Use DescribeLoadBalancers to get the applicable value. For more information, see the applicable guide:\n\nClassic Load Balancers: Use DescribeLoadBalancers to get the value of CanonicalHostedZoneNameId .\n\nApplication and Network Load Balancers: Use DescribeLoadBalancers to get the value of CanonicalHostedZoneId .\n\nCLI : Use describe-load-balancers to get the applicable value. For more information, see the applicable guide:\n\nClassic Load Balancers: Use describe-load-balancers to get the value of CanonicalHostedZoneNameId .\n\nApplication and Network Load Balancers: Use describe-load-balancers to get the value of CanonicalHostedZoneId .\n\nGlobal Accelerator accelerator\n\nSpecify Z2BJ6XQ5FK7U4H .\n\nAn Amazon S3 bucket configured as a static website\n\nSpecify the hosted zone ID for the region that you created the bucket in. For more information about valid values, see the table Amazon S3 Website Endpoints in the Amazon Web Services General Reference .\n\nAnother Route 53 resource record set in your hosted zone\n\nSpecify the hosted zone ID of your hosted zone. (An alias resource record set can’t reference a resource record set in a different hosted zone.)\n\nDNSName -> (string)\n\nAlias resource record sets only: The value that you specify depends on where you want to route queries:\n\nAmazon API Gateway custom regional APIs and edge-optimized APIs\n\nSpecify the applicable domain name for your API. You can get the applicable value using the CLI command get-domain-names :\n\nFor regional APIs, specify the value of regionalDomainName .\n\nFor edge-optimized APIs, specify the value of distributionDomainName . This is the name of the associated CloudFront distribution, such as da1b2c3d4e5.cloudfront.net .\n\nNote\n\nThe name of the record that you’re creating must match a custom domain name for your API, such as api.example.com .\n\nAmazon Virtual Private Cloud interface VPC endpoint\n\nEnter the API endpoint for the interface endpoint, such as vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com . For edge-optimized APIs, this is the domain name for the corresponding CloudFront distribution. You can get the value of DnsName using the CLI command describe-vpc-endpoints .\n\nCloudFront distribution\n\nSpecify the domain name that CloudFront assigned when you created your distribution.\n\nYour CloudFront distribution must include an alternate domain name that matches the name of the resource record set. For example, if the name of the resource record set is acme.example.com , your CloudFront distribution must include acme.example.com as one of the alternate domain names. For more information, see Using Alternate Domain Names (CNAMEs) in the Amazon CloudFront Developer Guide .\n\nYou can’t create a resource record set in a private hosted zone to route traffic to a CloudFront distribution.\n\nNote\n\nFor failover alias records, you can’t specify a CloudFront distribution for both the primary and secondary records. A distribution must include an alternate domain name that matches the name of the record. However, the primary and secondary records have the same name, and you can’t include the same alternate domain name in more than one distribution.\n\nElastic Beanstalk environment\n\nIf the domain name for your Elastic Beanstalk environment includes the region that you deployed the environment in, you can create an alias record that routes traffic to the environment. For example, the domain name my-environment.*us-west-2* .elasticbeanstalk.com is a regionalized domain name.\n\nWarning\n\nFor environments that were created before early 2016, the domain name doesn’t include the region. To route traffic to these environments, you must create a CNAME record instead of an alias record. Note that you can’t create a CNAME record for the root domain name. For example, if your domain name is example.com, you can create a record that routes traffic for acme.example.com to your Elastic Beanstalk environment, but you can’t create a record that routes traffic for example.com to your Elastic Beanstalk environment.\n\nFor Elastic Beanstalk environments that have regionalized subdomains, specify the CNAME attribute for the environment. You can use the following methods to get the value of the CNAME attribute:\n\nAmazon Web Services Management Console : For information about how to get the value by using the console, see Using Custom Domains with Elastic Beanstalk in the Elastic Beanstalk Developer Guide .\n\nElastic Beanstalk API : Use the DescribeEnvironments action to get the value of the CNAME attribute. For more information, see DescribeEnvironments in the Elastic Beanstalk API Reference .\n\nCLI : Use the describe-environments command to get the value of the CNAME attribute. For more information, see describe-environments in the CLI Command Reference .\n\nELB load balancer\n\nSpecify the DNS name that is associated with the load balancer. Get the DNS name by using the Amazon Web Services Management Console, the ELB API, or the CLI.\n\nAmazon Web Services Management Console : Go to the EC2 page, choose Load Balancers in the navigation pane, choose the load balancer, choose the Description tab, and get the value of the DNS name field. If you’re routing traffic to a Classic Load Balancer, get the value that begins with dualstack . If you’re routing traffic to another type of load balancer, get the value that applies to the record type, A or AAAA.\n\nElastic Load Balancing API : Use DescribeLoadBalancers to get the value of DNSName . For more information, see the applicable guide:\n\nClassic Load Balancers: DescribeLoadBalancers\n\nApplication and Network Load Balancers: DescribeLoadBalancers\n\nCLI : Use describe-load-balancers to get the value of DNSName . For more information, see the applicable guide:\n\nClassic Load Balancers: describe-load-balancers\n\nApplication and Network Load Balancers: describe-load-balancers\n\nGlobal Accelerator accelerator\n\nSpecify the DNS name for your accelerator:\n\nGlobal Accelerator API: To get the DNS name, use DescribeAccelerator .\n\nCLI: To get the DNS name, use describe-accelerator .\n\nAmazon S3 bucket that is configured as a static website\n\nSpecify the domain name of the Amazon S3 website endpoint that you created the bucket in, for example, s3-website.us-east-2.amazonaws.com . For more information about valid values, see the table Amazon S3 Website Endpoints in the Amazon Web Services General Reference . For more information about using S3 buckets for websites, see Getting Started with Amazon Route 53 in the Amazon Route 53 Developer Guide.\n\nAnother Route 53 resource record set\n\nSpecify the value of the Name element for a resource record set in the current hosted zone.\n\nNote\n\nIf you’re creating an alias record that has the same name as the hosted zone (known as the zone apex), you can’t specify the domain name for a record for which the value of Type is CNAME . This is because the alias record must have the same type as the record that you’re routing traffic to, and creating a CNAME record for the zone apex isn’t supported even for an alias record.\n\nEvaluateTargetHealth -> (boolean)\n\nApplies only to alias, failover alias, geolocation alias, latency alias, and weighted alias resource record sets: When EvaluateTargetHealth is true , an alias resource record set inherits the health of the referenced Amazon Web Services resource, such as an ELB load balancer or another resource record set in the hosted zone.\n\nNote the following:\n\nCloudFront distributions\n\nYou can’t set EvaluateTargetHealth to true when the alias target is a CloudFront distribution.\n\nElastic Beanstalk environments that have regionalized subdomains\n\nIf you specify an Elastic Beanstalk environment in DNSName and the environment contains an ELB load balancer, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. (An environment automatically contains an ELB load balancer if it includes more than one Amazon EC2 instance.) If you set EvaluateTargetHealth to true and either no Amazon EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other available resources that are healthy, if any.\n\nIf the environment contains a single Amazon EC2 instance, there are no special requirements.\n\nELB load balancers\n\nHealth checking behavior depends on the type of load balancer:\n\nClassic Load Balancers : If you specify an ELB Classic Load Balancer in DNSName , Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. If you set EvaluateTargetHealth to true and either no EC2 instances are healthy or the load balancer itself is unhealthy, Route 53 routes queries to other resources.\n\nApplication and Network Load Balancers : If you specify an ELB Application or Network Load Balancer and you set EvaluateTargetHealth to true , Route 53 routes queries to the load balancer based on the health of the target groups that are associated with the load balancer:\n\nFor an Application or Network Load Balancer to be considered healthy, every target group that contains targets must contain at least one healthy target. If any target group contains only unhealthy targets, the load balancer is considered unhealthy, and Route 53 routes queries to other resources.\n\nA target group that has no registered targets is considered unhealthy.\n\nNote\n\nWhen you create a load balancer, you configure settings for Elastic Load Balancing health checks; they’re not Route 53 health checks, but they perform a similar function. Do not create Route 53 health checks for the EC2 instances that you register with an ELB load balancer.\n\nS3 buckets\n\nThere are no special requirements for setting EvaluateTargetHealth to true when the alias target is an S3 bucket.\n\nOther records in the same hosted zone\n\nIf the Amazon Web Services resource that you specify in DNSName is a record or a group of records (for example, a group of weighted records) but is not another alias record, we recommend that you associate a health check with all of the records in the alias target. For more information, see What Happens When You Omit Health Checks? in the Amazon Route 53 Developer Guide .\n\nFor more information and examples, see Amazon Route 53 Health Checks and DNS Failover in the Amazon Route 53 Developer Guide .\n\nHealthCheckId -> (string)\n\nIf you want Amazon Route 53 to return this resource record set in response to a DNS query only when the status of a health check is healthy, include the HealthCheckId element and specify the ID of the applicable health check.\n\nRoute 53 determines whether a resource record set is healthy based on one of the following:\n\nBy periodically sending a request to the endpoint that is specified in the health check\n\nBy aggregating the status of a specified group of health checks (calculated health checks)\n\nBy determining the current state of a CloudWatch alarm (CloudWatch metric health checks)\n\nWarning\n\nRoute 53 doesn’t check the health of the endpoint that is specified in the resource record set, for example, the endpoint specified by the IP address in the Value element. When you add a HealthCheckId element to a resource record set, Route 53 checks the health of the endpoint that you specified in the health check.\n\nFor more information, see the following topics in the Amazon Route 53 Developer Guide :\n\nHow Amazon Route 53 Determines Whether an Endpoint Is Healthy\n\nRoute 53 Health Checks and DNS Failover\n\nConfiguring Failover in a Private Hosted Zone\n\nWhen to Specify HealthCheckId\n\nSpecifying a value for HealthCheckId is useful only when Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Route 53 to base the choice in part on the status of a health check. Configuring health checks makes sense only in the following configurations:\n\nNon-alias resource record sets : You’re checking the health of a group of non-alias resource record sets that have the same routing policy, name, and type (such as multiple weighted records named www.example.com with a type of A) and you specify health check IDs for all the resource record sets. If the health check status for a resource record set is healthy, Route 53 includes the record among the records that it responds to DNS queries with. If the health check status for a resource record set is unhealthy, Route 53 stops responding to DNS queries using the value for that resource record set. If the health check status for all resource record sets in the group is unhealthy, Route 53 considers all resource record sets in the group healthy and responds to DNS queries accordingly.\n\nAlias resource record sets : You specify the following settings:\n\nYou set EvaluateTargetHealth to true for an alias resource record set in a group of resource record sets that have the same routing policy, name, and type (such as multiple weighted records named www.example.com with a type of A).\n\nYou configure the alias resource record set to route traffic to a non-alias resource record set in the same hosted zone.\n\nYou specify a health check ID for the non-alias resource record set.\n\nIf the health check status is healthy, Route 53 considers the alias resource record set to be healthy and includes the alias record among the records that it responds to DNS queries with.\n\nIf the health check status is unhealthy, Route 53 stops responding to DNS queries using the alias resource record set.\n\nNote\n\nThe alias resource record set can also route traffic to a group of non-alias resource record sets that have the same routing policy, name, and type. In that configuration, associate health checks with all of the resource record sets in the group of non-alias resource record sets.\n\nGeolocation Routing\n\nFor geolocation resource record sets, if an endpoint is unhealthy, Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the entire United States, for North America, and a resource record set that has * for CountryCode is * , which applies to all locations. If the endpoint for the state resource record set is unhealthy, Route 53 checks for healthy resource record sets in the following order until it finds a resource record set for which the endpoint is healthy:\n\nThe United States\n\nNorth America\n\nThe default resource record set\n\nSpecifying the Health Check Endpoint by Domain Name\n\nIf your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com . For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com ), not the name of the resource record sets (www.example.com ).\n\nWarning\n\nHealth check results will be unpredictable if you do the following:\n\nCreate a health check that has the same value for FullyQualifiedDomainName as the name of a resource record set.\n\nAssociate that health check with the resource record set.\n\nTrafficPolicyInstanceId -> (string)\n\nWhen you create a traffic policy instance, Amazon Route 53 automatically creates a resource record set. TrafficPolicyInstanceId is the ID of the traffic policy instance that Route 53 created this resource record set for.\n\nWarning\n\nTo delete the resource record set that is associated with a traffic policy instance, use DeleteTrafficPolicyInstance . Route 53 will delete the resource record set automatically. If you delete the resource record set by using ChangeResourceRecordSets , Route 53 doesn’t automatically delete the traffic policy instance, and you’ll continue to be charged for it even though it’s no longer in use.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether more resource record sets remain to be listed. If your results were truncated, you can make a follow-up pagination request by using the NextRecordName element.\n\nNextRecordName -> (string)\n\nIf the results were truncated, the name of the next record in the list.\n\nThis element is present only if IsTruncated is true.\n\nNextRecordType -> (string)\n\nIf the results were truncated, the type of the next record in the list.\n\nThis element is present only if IsTruncated is true.\n\nNextRecordIdentifier -> (string)\n\nResource record sets that have a routing policy other than simple: If results were truncated for a given DNS name and type, the value of SetIdentifier for the next resource record set that has the current DNS name and type.\n\nFor information about routing policies, see Choosing a Routing Policy in the Amazon Route 53 Developer Guide .\n\nMaxItems -> (string)\n\nThe maximum number of records you requested.",
      "command_examples": "Examples\n\nTo list the resource record sets in a hosted zone\n\nThe following list-resource-record-sets command lists summary information about the first 100 resource record sets in a specified hosted zone.:\n\naws route53 list-resource-record-sets --hosted-zone-id Z2LD58HEXAMPLE\n\n\nIf the hosted zone contains more than 100 resource record sets, or if you want to list them in groups smaller than 100, include the --maxitems parameter. For example, to list resource record sets one at a time, use the following command:\n\naws route53 list-resource-record-sets --hosted-zone-id Z2LD58HEXAMPLE --max-items 1\n\n\nTo view information about the next resource record set in the hosted zone, take the value of NextToken from the response to the previous command, and include it in the --starting-token parameter, for example:\n\naws route53 list-resource-record-sets --hosted-zone-id Z2LD58HEXAMPLE --max-items 1 --starting-token Z3M3LMPEXAMPLE\n\n\nTo view all the resource record sets of a particular name, use the --query parameter to filter them out. For example:\n\naws route53 list-resource-record-sets --hosted-zone-id Z2LD58HEXAMPLE --query \"ResourceRecordSets[?Name == 'example.domain.']\"\n"
    },
    {
      "command_name": "list-reusable-delegation-sets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-reusable-delegation-sets.html",
      "command_description": "Description\n\nRetrieves a list of the reusable delegation sets that are associated with the current Amazon Web Services account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-reusable-delegation-sets\n[--marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more reusable delegation sets. To get another group, submit another ListReusableDelegationSets request.\n\nFor the value of marker , specify the value of NextMarker from the previous response, which is the ID of the first reusable delegation set that Amazon Route 53 will return if you submit another request.\n\nIf the value of IsTruncated in the previous response was false , there are no more reusable delegation sets to get.\n\n--max-items (string)\n\nThe number of reusable delegation sets that you want Amazon Route 53 to return in the response to this request. If you specify a value greater than 100, Route 53 returns only the first 100 reusable delegation sets.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDelegationSets -> (list)\n\nA complex type that contains one DelegationSet element for each reusable delegation set that was created by the current Amazon Web Services account.\n\n(structure)\n\nA complex type that lists the name servers in a delegation set, as well as the CallerReference and the ID for the delegation set.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigns to a reusable delegation set.\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the reusable delegation set.\n\nNameServers -> (list)\n\nA complex type that contains a list of the authoritative name servers for a hosted zone or for a reusable delegation set.\n\n(string)\n\nMarker -> (string)\n\nFor the second and subsequent calls to ListReusableDelegationSets , Marker is the value that you specified for the marker parameter in the request that produced the current response.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more reusable delegation sets to be listed.\n\nNextMarker -> (string)\n\nIf IsTruncated is true , the value of NextMarker identifies the next reusable delegation set that Amazon Route 53 will return if you submit another ListReusableDelegationSets request and specify the value of NextMarker in the marker parameter.\n\nMaxItems -> (string)\n\nThe value that you specified for the maxitems parameter in the call to ListReusableDelegationSets that produced the current response."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-tags-for-resource.html",
      "command_description": "Description\n\nLists tags for one health check or hosted zone.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-type <value>\n--resource-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-type <value>",
        "--resource-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-type (string)\n\nThe type of the resource.\n\nThe resource type for health checks is healthcheck .\n\nThe resource type for hosted zones is hostedzone .\n\nPossible values:\n\nhealthcheck\n\nhostedzone\n\n--resource-id (string)\n\nThe ID of the resource for which you want to retrieve tags.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceTagSet -> (structure)\n\nA ResourceTagSet containing tags associated with the specified resource.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nThe resource type for health checks is healthcheck .\n\nThe resource type for hosted zones is hostedzone .\n\nResourceId -> (string)\n\nThe ID for the specified resource.\n\nTags -> (list)\n\nThe tags associated with the specified resource.\n\n(structure)\n\nA complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.\n\nKey -> (string)\n\nThe value of Key depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Key is the name that you want to give the new tag.\n\nEdit a tag : Key is the name of the tag that you want to change the Value for.\n\nDelete a key : Key is the name of the tag you want to remove.\n\nGive a name to a health check : Edit the default Name tag. In the Amazon Route 53 console, the list of your health checks includes a Name column that lets you see the name that you’ve given to each health check.\n\nValue -> (string)\n\nThe value of Value depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Value is the value that you want to give the new tag.\n\nEdit a tag : Value is the new value that you want to assign the tag."
    },
    {
      "command_name": "list-tags-for-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-tags-for-resources.html",
      "command_description": "Description\n\nLists tags for up to 10 health checks or hosted zones.\n\nFor information about using tags for cost allocation, see Using Cost Allocation Tags in the Billing and Cost Management User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resources\n--resource-type <value>\n--resource-ids <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-type <value>",
        "--resource-ids <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-type (string)\n\nThe type of the resources.\n\nThe resource type for health checks is healthcheck .\n\nThe resource type for hosted zones is hostedzone .\n\nPossible values:\n\nhealthcheck\n\nhostedzone\n\n--resource-ids (list)\n\nA complex type that contains the ResourceId element for each resource for which you want to get a list of tags.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResourceTagSets -> (list)\n\nA list of ResourceTagSet s containing tags associated with the specified resources.\n\n(structure)\n\nA complex type containing a resource and its associated tags.\n\nResourceType -> (string)\n\nThe type of the resource.\n\nThe resource type for health checks is healthcheck .\n\nThe resource type for hosted zones is hostedzone .\n\nResourceId -> (string)\n\nThe ID for the specified resource.\n\nTags -> (list)\n\nThe tags associated with the specified resource.\n\n(structure)\n\nA complex type that contains information about a tag that you want to add or edit for the specified health check or hosted zone.\n\nKey -> (string)\n\nThe value of Key depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Key is the name that you want to give the new tag.\n\nEdit a tag : Key is the name of the tag that you want to change the Value for.\n\nDelete a key : Key is the name of the tag you want to remove.\n\nGive a name to a health check : Edit the default Name tag. In the Amazon Route 53 console, the list of your health checks includes a Name column that lets you see the name that you’ve given to each health check.\n\nValue -> (string)\n\nThe value of Value depends on the operation that you want to perform:\n\nAdd a tag to a health check or hosted zone : Value is the value that you want to give the new tag.\n\nEdit a tag : Value is the new value that you want to assign the tag."
    },
    {
      "command_name": "list-traffic-policies",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-traffic-policies.html",
      "command_description": "Description\n\nGets information about the latest version for every traffic policy that is associated with the current Amazon Web Services account. Policies are listed in the order that they were created in.\n\nFor information about how of deleting a traffic policy affects the response from ListTrafficPolicies , see DeleteTrafficPolicy .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-traffic-policies\n[--traffic-policy-id-marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--traffic-policy-id-marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--traffic-policy-id-marker (string)\n\n(Conditional) For your first request to ListTrafficPolicies , don’t include the TrafficPolicyIdMarker parameter.\n\nIf you have more traffic policies than the value of MaxItems , ListTrafficPolicies returns only the first MaxItems traffic policies. To get the next group of policies, submit another request to ListTrafficPolicies . For the value of TrafficPolicyIdMarker , specify the value of TrafficPolicyIdMarker that was returned in the previous response.\n\n--max-items (string)\n\n(Optional) The maximum number of traffic policies that you want Amazon Route 53 to return in response to this request. If you have more than MaxItems traffic policies, the value of IsTruncated in the response is true , and the value of TrafficPolicyIdMarker is the ID of the first traffic policy that Route 53 will return if you submit another request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicySummaries -> (list)\n\nA list that contains one TrafficPolicySummary element for each traffic policy that was created by the current Amazon Web Services account.\n\n(structure)\n\nA complex type that contains information about the latest version of one traffic policy that is associated with the current Amazon Web Services account.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the traffic policy when you created it.\n\nName -> (string)\n\nThe name that you specified for the traffic policy when you created it.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nLatestVersion -> (integer)\n\nThe version number of the latest version of the traffic policy.\n\nTrafficPolicyCount -> (integer)\n\nThe number of traffic policies that are associated with the current Amazon Web Services account.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another ListTrafficPolicies request and specifying the value of TrafficPolicyIdMarker in the TrafficPolicyIdMarker request parameter.\n\nTrafficPolicyIdMarker -> (string)\n\nIf the value of IsTruncated is true , TrafficPolicyIdMarker is the ID of the first traffic policy in the next group of MaxItems traffic policies.\n\nMaxItems -> (string)\n\nThe value that you specified for the MaxItems parameter in the ListTrafficPolicies request that produced the current response."
    },
    {
      "command_name": "list-traffic-policy-instances",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-traffic-policy-instances.html",
      "command_description": "Description\n\nGets information about the traffic policy instances that you created by using the current Amazon Web Services account.\n\nNote\n\nAfter you submit an UpdateTrafficPolicyInstance request, there’s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the MaxItems parameter to list them in groups of up to 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-traffic-policy-instances\n[--hosted-zone-id-marker <value>]\n[--traffic-policy-instance-name-marker <value>]\n[--traffic-policy-instance-type-marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--hosted-zone-id-marker <value>]",
        "[--traffic-policy-instance-name-marker <value>]",
        "[--traffic-policy-instance-type-marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of HostedZoneId , specify the value of HostedZoneIdMarker from the previous response, which is the hosted zone ID of the first traffic policy instance in the next group of traffic policy instances.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\n--traffic-policy-instance-name-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancename , specify the value of TrafficPolicyInstanceNameMarker from the previous response, which is the name of the first traffic policy instance in the next group of traffic policy instances.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\n--traffic-policy-instance-type-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancetype , specify the value of TrafficPolicyInstanceTypeMarker from the previous response, which is the type of the first traffic policy instance in the next group of traffic policy instances.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\nPossible values:\n\nSOA\n\nA\n\nTXT\n\nNS\n\nCNAME\n\nMX\n\nNAPTR\n\nPTR\n\nSRV\n\nSPF\n\nAAAA\n\nCAA\n\nDS\n\n--max-items (string)\n\nThe maximum number of traffic policy instances that you want Amazon Route 53 to return in response to a ListTrafficPolicyInstances request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true , and the values of HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance in the next group of MaxItems traffic policy instances.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstances -> (list)\n\nA list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.\n\n(structure)\n\nA complex type that contains settings for the new traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance.\n\nHostedZoneIdMarker -> (string)\n\nIf IsTruncated is true , HostedZoneIdMarker is the ID of the hosted zone of the first traffic policy instance that Route 53 will return if you submit another ListTrafficPolicyInstances request.\n\nTrafficPolicyInstanceNameMarker -> (string)\n\nIf IsTruncated is true , TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance that Route 53 will return if you submit another ListTrafficPolicyInstances request.\n\nTrafficPolicyInstanceTypeMarker -> (string)\n\nIf IsTruncated is true , TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance that Amazon Route 53 will return if you submit another ListTrafficPolicyInstances request.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get more traffic policy instances by calling ListTrafficPolicyInstances again and specifying the values of the HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker in the corresponding request parameters.\n\nMaxItems -> (string)\n\nThe value that you specified for the MaxItems parameter in the call to ListTrafficPolicyInstances that produced the current response."
    },
    {
      "command_name": "list-traffic-policy-instances-by-hosted-zone",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-traffic-policy-instances-by-hosted-zone.html",
      "command_description": "Description\n\nGets information about the traffic policy instances that you created in a specified hosted zone.\n\nNote\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance request, there’s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the MaxItems parameter to list them in groups of up to 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-traffic-policy-instances-by-hosted-zone\n--hosted-zone-id <value>\n[--traffic-policy-instance-name-marker <value>]\n[--traffic-policy-instance-type-marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--traffic-policy-instance-name-marker <value>]",
        "[--traffic-policy-instance-type-marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that you want to list traffic policy instances for.\n\n--traffic-policy-instance-name-marker (string)\n\nIf the value of IsTruncated in the previous response is true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancename , specify the value of TrafficPolicyInstanceNameMarker from the previous response, which is the name of the first traffic policy instance in the next group of traffic policy instances.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\n--traffic-policy-instance-type-marker (string)\n\nIf the value of IsTruncated in the previous response is true, you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstances request. For the value of trafficpolicyinstancetype , specify the value of TrafficPolicyInstanceTypeMarker from the previous response, which is the type of the first traffic policy instance in the next group of traffic policy instances.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\nPossible values:\n\nSOA\n\nA\n\nTXT\n\nNS\n\nCNAME\n\nMX\n\nNAPTR\n\nPTR\n\nSRV\n\nSPF\n\nAAAA\n\nCAA\n\nDS\n\n--max-items (string)\n\nThe maximum number of traffic policy instances to be included in the response body for this request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true , and the values of HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance that Amazon Route 53 will return if you submit another request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstances -> (list)\n\nA list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.\n\n(structure)\n\nA complex type that contains settings for the new traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance.\n\nTrafficPolicyInstanceNameMarker -> (string)\n\nIf IsTruncated is true , TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance in the next group of traffic policy instances.\n\nTrafficPolicyInstanceTypeMarker -> (string)\n\nIf IsTruncated is true, TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of traffic policy instances.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by submitting another ListTrafficPolicyInstancesByHostedZone request and specifying the values of HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker in the corresponding request parameters.\n\nMaxItems -> (string)\n\nThe value that you specified for the MaxItems parameter in the ListTrafficPolicyInstancesByHostedZone request that produced the current response."
    },
    {
      "command_name": "list-traffic-policy-instances-by-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-traffic-policy-instances-by-policy.html",
      "command_description": "Description\n\nGets information about the traffic policy instances that you created by using a specify traffic policy version.\n\nNote\n\nAfter you submit a CreateTrafficPolicyInstance or an UpdateTrafficPolicyInstance request, there’s a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the State response element.\n\nRoute 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the MaxItems parameter to list them in groups of up to 100.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-traffic-policy-instances-by-policy\n--traffic-policy-id <value>\n--traffic-policy-version <value>\n[--hosted-zone-id-marker <value>]\n[--traffic-policy-instance-name-marker <value>]\n[--traffic-policy-instance-type-marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--traffic-policy-id <value>",
        "--traffic-policy-version <value>",
        "[--hosted-zone-id-marker <value>]",
        "[--traffic-policy-instance-name-marker <value>]",
        "[--traffic-policy-instance-type-marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--traffic-policy-id (string)\n\nThe ID of the traffic policy for which you want to list traffic policy instances.\n\n--traffic-policy-version (integer)\n\nThe version of the traffic policy for which you want to list traffic policy instances. The version must be associated with the traffic policy that is specified by TrafficPolicyId .\n\n--hosted-zone-id-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request.\n\nFor the value of hostedzoneid , specify the value of HostedZoneIdMarker from the previous response, which is the hosted zone ID of the first traffic policy instance that Amazon Route 53 will return if you submit another request.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\n--traffic-policy-instance-name-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request.\n\nFor the value of trafficpolicyinstancename , specify the value of TrafficPolicyInstanceNameMarker from the previous response, which is the name of the first traffic policy instance that Amazon Route 53 will return if you submit another request.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\n--traffic-policy-instance-type-marker (string)\n\nIf the value of IsTruncated in the previous response was true , you have more traffic policy instances. To get more traffic policy instances, submit another ListTrafficPolicyInstancesByPolicy request.\n\nFor the value of trafficpolicyinstancetype , specify the value of TrafficPolicyInstanceTypeMarker from the previous response, which is the name of the first traffic policy instance that Amazon Route 53 will return if you submit another request.\n\nIf the value of IsTruncated in the previous response was false , there are no more traffic policy instances to get.\n\nPossible values:\n\nSOA\n\nA\n\nTXT\n\nNS\n\nCNAME\n\nMX\n\nNAPTR\n\nPTR\n\nSRV\n\nSPF\n\nAAAA\n\nCAA\n\nDS\n\n--max-items (string)\n\nThe maximum number of traffic policy instances to be included in the response body for this request. If you have more than MaxItems traffic policy instances, the value of the IsTruncated element in the response is true , and the values of HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker represent the first traffic policy instance that Amazon Route 53 will return if you submit another request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstances -> (list)\n\nA list that contains one TrafficPolicyInstance element for each traffic policy instance that matches the elements in the request.\n\n(structure)\n\nA complex type that contains settings for the new traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance.\n\nHostedZoneIdMarker -> (string)\n\nIf IsTruncated is true , HostedZoneIdMarker is the ID of the hosted zone of the first traffic policy instance in the next group of traffic policy instances.\n\nTrafficPolicyInstanceNameMarker -> (string)\n\nIf IsTruncated is true , TrafficPolicyInstanceNameMarker is the name of the first traffic policy instance in the next group of MaxItems traffic policy instances.\n\nTrafficPolicyInstanceTypeMarker -> (string)\n\nIf IsTruncated is true , TrafficPolicyInstanceTypeMarker is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of MaxItems traffic policy instances.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of traffic policy instances by calling ListTrafficPolicyInstancesByPolicy again and specifying the values of the HostedZoneIdMarker , TrafficPolicyInstanceNameMarker , and TrafficPolicyInstanceTypeMarker elements in the corresponding request parameters.\n\nMaxItems -> (string)\n\nThe value that you specified for the MaxItems parameter in the call to ListTrafficPolicyInstancesByPolicy that produced the current response."
    },
    {
      "command_name": "list-traffic-policy-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-traffic-policy-versions.html",
      "command_description": "Description\n\nGets information about all of the versions for a specified traffic policy.\n\nTraffic policy versions are listed in numerical order by VersionNumber .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-traffic-policy-versions\n--id <value>\n[--traffic-policy-version-marker <value>]\n[--max-items <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--traffic-policy-version-marker <value>]",
        "[--max-items <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nSpecify the value of Id of the traffic policy for which you want to list all versions.\n\n--traffic-policy-version-marker (string)\n\nFor your first request to ListTrafficPolicyVersions , don’t include the TrafficPolicyVersionMarker parameter.\n\nIf you have more traffic policy versions than the value of MaxItems , ListTrafficPolicyVersions returns only the first group of MaxItems versions. To get more traffic policy versions, submit another ListTrafficPolicyVersions request. For the value of TrafficPolicyVersionMarker , specify the value of TrafficPolicyVersionMarker in the previous response.\n\n--max-items (string)\n\nThe maximum number of traffic policy versions that you want Amazon Route 53 to include in the response body for this request. If the specified traffic policy has more than MaxItems versions, the value of IsTruncated in the response is true , and the value of the TrafficPolicyVersionMarker element is the ID of the first version that Route 53 will return if you submit another request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicies -> (list)\n\nA list that contains one TrafficPolicy element for each traffic policy version that is associated with the specified traffic policy.\n\n(structure)\n\nA complex type that contains settings for a traffic policy.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to a traffic policy when you created it.\n\nVersion -> (integer)\n\nThe version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of Version is always 1.\n\nName -> (string)\n\nThe name that you specified when you created the traffic policy.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nDocument -> (string)\n\nThe definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the CreateTrafficPolicy request. For more information about the JSON format, see Traffic Policy Document Format .\n\nComment -> (string)\n\nThe comment that you specify in the CreateTrafficPolicy request, if any.\n\nIsTruncated -> (boolean)\n\nA flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of traffic policies by submitting another ListTrafficPolicyVersions request and specifying the value of NextMarker in the marker parameter.\n\nTrafficPolicyVersionMarker -> (string)\n\nIf IsTruncated is true , the value of TrafficPolicyVersionMarker identifies the first traffic policy that Amazon Route 53 will return if you submit another request. Call ListTrafficPolicyVersions again and specify the value of TrafficPolicyVersionMarker in the TrafficPolicyVersionMarker request parameter.\n\nThis element is present only if IsTruncated is true .\n\nMaxItems -> (string)\n\nThe value that you specified for the maxitems parameter in the ListTrafficPolicyVersions request that produced the current response."
    },
    {
      "command_name": "list-vpc-association-authorizations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/list-vpc-association-authorizations.html",
      "command_description": "Description\n\nGets a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone because you’ve submitted one or more CreateVPCAssociationAuthorization requests.\n\nThe response includes a VPCs element with a VPC child element for each VPC that can be associated with the hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-vpc-association-authorizations is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: VPCs",
      "command_synopsis": "Synopsis\n  list-vpc-association-authorizations\n--hosted-zone-id <value>\n[--max-results <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "[--max-results <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone for which you want a list of VPCs that can be associated with the hosted zone.\n\n--max-results (string)\n\nOptional : An integer that specifies the maximum number of VPCs that you want Amazon Route 53 to return. If you don’t specify a value for MaxResults , Route 53 returns up to 50 VPCs per page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that you can associate the listed VPCs with.\n\nNextToken -> (string)\n\nWhen the response includes a NextToken element, there are more VPCs that can be associated with the specified hosted zone. To get the next page of VPCs, submit another ListVPCAssociationAuthorizations request, and include the value of the NextToken element from the response in the nexttoken request parameter.\n\nVPCs -> (list)\n\nThe list of VPCs that are authorized to be associated with the specified hosted zone.\n\n(structure)\n\n(Private hosted zones only) A complex type that contains information about an Amazon VPC.\n\nVPCRegion -> (string)\n\n(Private hosted zones only) The region that an Amazon VPC was created in.\n\nVPCId -> (string)\n\n(Private hosted zones only) The ID of an Amazon VPC."
    },
    {
      "command_name": "test-dns-answer",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/test-dns-answer.html",
      "command_description": "Description\n\nGets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type. You can optionally specify the IP address of a DNS resolver, an EDNS0 client subnet IP address, and a subnet mask.\n\nThis call only supports querying public hosted zones.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  test-dns-answer\n--hosted-zone-id <value>\n--record-name <value>\n--record-type <value>\n[--resolver-ip <value>]\n[--edns0-client-subnet-ip <value>]\n[--edns0-client-subnet-mask <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--hosted-zone-id <value>",
        "--record-name <value>",
        "--record-type <value>",
        "[--resolver-ip <value>]",
        "[--edns0-client-subnet-ip <value>]",
        "[--edns0-client-subnet-mask <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--hosted-zone-id (string)\n\nThe ID of the hosted zone that you want Amazon Route 53 to simulate a query for.\n\n--record-name (string)\n\nThe name of the resource record set that you want Amazon Route 53 to simulate a query for.\n\n--record-type (string)\n\nThe type of the resource record set.\n\nPossible values:\n\nSOA\n\nA\n\nTXT\n\nNS\n\nCNAME\n\nMX\n\nNAPTR\n\nPTR\n\nSRV\n\nSPF\n\nAAAA\n\nCAA\n\nDS\n\n--resolver-ip (string)\n\nIf you want to simulate a request from a specific DNS resolver, specify the IP address for that resolver. If you omit this value, TestDnsAnswer uses the IP address of a DNS resolver in the Amazon Web Services US East (N. Virginia) Region (us-east-1 ).\n\n--edns0-client-subnet-ip (string)\n\nIf the resolver that you specified for resolverip supports EDNS0, specify the IPv4 or IPv6 address of a client in the applicable location, for example, 192.0.2.44 or 2001:db8:85a3::8a2e:370:7334 .\n\n--edns0-client-subnet-mask (string)\n\nIf you specify an IP address for edns0clientsubnetip , you can optionally specify the number of bits of the IP address that you want the checking tool to include in the DNS query. For example, if you specify 192.0.2.44 for edns0clientsubnetip and 24 for edns0clientsubnetmask , the checking tool will simulate a request from 192.0.2.0/24. The default value is 24 bits for IPv4 addresses and 64 bits for IPv6 addresses.\n\nThe range of valid values depends on whether edns0clientsubnetip is an IPv4 or an IPv6 address:\n\nIPv4 : Specify a value between 0 and 32\n\nIPv6 : Specify a value between 0 and 128\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNameserver -> (string)\n\nThe Amazon Route 53 name server used to respond to the request.\n\nRecordName -> (string)\n\nThe name of the resource record set that you submitted a request for.\n\nRecordType -> (string)\n\nThe type of the resource record set that you submitted a request for.\n\nRecordData -> (list)\n\nA list that contains values that Amazon Route 53 returned for this resource record set.\n\n(string)\n\nA value that Amazon Route 53 returned for this resource record set. A RecordDataEntry element is one of the following:\n\nFor non-alias resource record sets, a RecordDataEntry element contains one value in the resource record set. If the resource record set contains multiple values, the response includes one RecordDataEntry element for each value.\n\nFor multiple resource record sets that have the same name and type, which includes weighted, latency, geolocation, and failover, a RecordDataEntry element contains the value from the appropriate resource record set based on the request.\n\nFor alias resource record sets that refer to Amazon Web Services resources other than another resource record set, the RecordDataEntry element contains an IP address or a domain name for the Amazon Web Services resource, depending on the type of resource.\n\nFor alias resource record sets that refer to other resource record sets, a RecordDataEntry element contains one value from the referenced resource record set. If the referenced resource record set contains multiple values, the response includes one RecordDataEntry element for each value.\n\nResponseCode -> (string)\n\nA code that indicates whether the request is valid or not. The most common response code is NOERROR , meaning that the request is valid. If the response is not valid, Amazon Route 53 returns a response code that describes the error. For a list of possible response codes, see DNS RCODES on the IANA website.\n\nProtocol -> (string)\n\nThe protocol that Amazon Route 53 used to respond to the request, either UDP or TCP ."
    },
    {
      "command_name": "update-health-check",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/update-health-check.html",
      "command_description": "Description\n\nUpdates an existing health check. Note that some values can’t be updated.\n\nFor more information about updating health checks, see Creating, Updating, and Deleting Health Checks in the Amazon Route 53 Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-health-check\n--health-check-id <value>\n[--health-check-version <value>]\n[--ip-address <value>]\n[--port <value>]\n[--resource-path <value>]\n[--fully-qualified-domain-name <value>]\n[--search-string <value>]\n[--failure-threshold <value>]\n[--inverted | --no-inverted]\n[--disabled | --no-disabled]\n[--health-threshold <value>]\n[--child-health-checks <value>]\n[--enable-sni | --no-enable-sni]\n[--regions <value>]\n[--alarm-identifier <value>]\n[--insufficient-data-health-status <value>]\n[--reset-elements <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--health-check-id <value>",
        "[--health-check-version <value>]",
        "[--ip-address <value>]",
        "[--port <value>]",
        "[--resource-path <value>]",
        "[--fully-qualified-domain-name <value>]",
        "[--search-string <value>]",
        "[--failure-threshold <value>]",
        "[--inverted | --no-inverted]",
        "[--disabled | --no-disabled]",
        "[--health-threshold <value>]",
        "[--child-health-checks <value>]",
        "[--enable-sni | --no-enable-sni]",
        "[--regions <value>]",
        "[--alarm-identifier <value>]",
        "[--insufficient-data-health-status <value>]",
        "[--reset-elements <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--health-check-id (string)\n\nThe ID for the health check for which you want detailed information. When you created the health check, CreateHealthCheck returned the ID in the response, in the HealthCheckId element.\n\n--health-check-version (long)\n\nA sequential counter that Amazon Route 53 sets to 1 when you create a health check and increments by 1 each time you update settings for the health check.\n\nWe recommend that you use GetHealthCheck or ListHealthChecks to get the current value of HealthCheckVersion for the health check that you want to update, and that you include that value in your UpdateHealthCheck request. This prevents Route 53 from overwriting an intervening update:\n\nIf the value in the UpdateHealthCheck request matches the value of HealthCheckVersion in the health check, Route 53 updates the health check with the new settings.\n\nIf the value of HealthCheckVersion in the health check is greater, the health check was changed after you got the version number. Route 53 does not update the health check, and it returns a HealthCheckVersionMismatch error.\n\n--ip-address (string)\n\nThe IPv4 or IPv6 IP address for the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address that is returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance never changes. For more information, see the applicable documentation:\n\nLinux: Elastic IP Addresses (EIP) in the Amazon EC2 User Guide for Linux Instances\n\nWindows: Elastic IP Addresses (EIP) in the Amazon EC2 User Guide for Windows Instances\n\nNote\n\nIf a health check already has a value for IPAddress , you can change the value. However, you can’t update an existing health check to add or remove the value of IPAddress .\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\n--port (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\n--resource-path (string)\n\nThe path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nSpecify this value only if you want to change it.\n\n--fully-qualified-domain-name (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nNote\n\nIf a health check already has a value for IPAddress , you can change the value. However, you can’t update an existing health check to add or remove the value of IPAddress .\n\nIf you specify a value for IPAddress :\n\nRoute 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes * FullyQualifiedDomainName :Port * to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the above cases.\n\nIf you don’t specify a value for IPAddress :\n\nIf you don’t specify a value for IPAddress , Route 53 sends a DNS request to the domain that you specify in FullyQualifiedDomainName at the interval you specify in RequestInterval . Using an IPv4 address that is returned by DNS, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com ), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value of Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\n--search-string (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy. (You can’t change the value of Type when you update a health check.)\n\n--failure-threshold (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\n--inverted | --no-inverted (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\n--disabled | --no-disabled (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\n--health-threshold (integer)\n\nThe number of child health checks that are associated with a CALCULATED health that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks and ChildHealthCheck elements.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\n--child-health-checks (list)\n\nA complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--enable-sni | --no-enable-sni (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\n--regions (list)\n\nA complex type that contains one Region element for each region that you want Amazon Route 53 health checkers to check the specified endpoint from.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  us-east-1\n  us-west-1\n  us-west-2\n  eu-west-1\n  ap-southeast-1\n  ap-southeast-2\n  ap-northeast-1\n  sa-east-1\n\n\n--alarm-identifier (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nShorthand Syntax:\n\nRegion=string,Name=string\n\n\nJSON Syntax:\n\n{\n  \"Region\": \"us-east-1\"|\"us-east-2\"|\"us-west-1\"|\"us-west-2\"|\"ca-central-1\"|\"eu-central-1\"|\"eu-west-1\"|\"eu-west-2\"|\"eu-west-3\"|\"ap-east-1\"|\"me-south-1\"|\"ap-south-1\"|\"ap-southeast-1\"|\"ap-southeast-2\"|\"ap-northeast-1\"|\"ap-northeast-2\"|\"ap-northeast-3\"|\"eu-north-1\"|\"sa-east-1\"|\"cn-northwest-1\"|\"cn-north-1\"|\"af-south-1\"|\"eu-south-1\"|\"us-gov-west-1\"|\"us-gov-east-1\"|\"us-iso-east-1\"|\"us-isob-east-1\",\n  \"Name\": \"string\"\n}\n\n\n--insufficient-data-health-status (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nPossible values:\n\nHealthy\n\nUnhealthy\n\nLastKnownStatus\n\n--reset-elements (list)\n\nA complex type that contains one ResettableElementName element for each element that you want to reset to the default value. Valid values for ResettableElementName include the following:\n\nChildHealthChecks : Amazon Route 53 resets ChildHealthChecks to null.\n\nFullyQualifiedDomainName : Route 53 resets FullyQualifiedDomainName . to null.\n\nRegions : Route 53 resets the Regions list to the default set of regions.\n\nResourcePath : Route 53 resets ResourcePath to null.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  FullyQualifiedDomainName\n  Regions\n  ResourcePath\n  ChildHealthChecks\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHealthCheck -> (structure)\n\nA complex type that contains the response to an UpdateHealthCheck request.\n\nId -> (string)\n\nThe identifier that Amazon Route 53 assigned to the health check when you created it. When you add or update a resource record set, you use this value to specify which health check to use. The value can be up to 64 characters long.\n\nCallerReference -> (string)\n\nA unique string that you specified when you created the health check.\n\nLinkedService -> (structure)\n\nIf the health check was created by another service, the service that created the health check. When a health check is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nHealthCheckConfig -> (structure)\n\nA complex type that contains detailed information about one health check.\n\nIPAddress -> (string)\n\nThe IPv4 or IPv6 IP address of the endpoint that you want Amazon Route 53 to perform health checks on. If you don’t specify a value for IPAddress , Route 53 sends a DNS request to resolve the domain name that you specify in FullyQualifiedDomainName at the interval that you specify in RequestInterval . Using an IP address returned by DNS, Route 53 then checks the health of the endpoint.\n\nUse one of the following formats for the value of IPAddress :\n\nIPv4 address : four values between 0 and 255, separated by periods (.), for example, 192.0.2.44 .\n\nIPv6 address : eight groups of four hexadecimal values, separated by colons (:), for example, 2001:0db8:85a3:0000:0000:abcd:0001:2345 . You can also shorten IPv6 addresses as described in RFC 5952, for example, 2001:db8:85a3::abcd:1:2345 .\n\nIf the endpoint is an EC2 instance, we recommend that you create an Elastic IP address, associate it with your EC2 instance, and specify the Elastic IP address for IPAddress . This ensures that the IP address of your instance will never change.\n\nFor more information, see FullyQualifiedDomainName .\n\nConstraints: Route 53 can’t check the health of endpoints for which the IP address is in local, private, non-routable, or multicast ranges. For more information about IP addresses for which you can’t create health checks, see the following documents:\n\nRFC 5735, Special Use IPv4 Addresses\n\nRFC 6598, IANA-Reserved IPv4 Prefix for Shared Address Space\n\nRFC 5156, Special-Use IPv6 Addresses\n\nWhen the value of Type is CALCULATED or CLOUDWATCH_METRIC , omit IPAddress .\n\nPort -> (integer)\n\nThe port on the endpoint that you want Amazon Route 53 to perform health checks on.\n\nNote\n\nDon’t specify a value for Port when you specify a value for Type of CLOUDWATCH_METRIC or CALCULATED .\n\nType -> (string)\n\nThe type of health check that you want to create, which indicates how Amazon Route 53 determines whether an endpoint is healthy.\n\nWarning\n\nYou can’t change the value of Type after you create a health check.\n\nYou can create the following types of health checks:\n\nHTTP : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and waits for an HTTP status code of 200 or greater and less than 400.\n\nHTTPS : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and waits for an HTTP status code of 200 or greater and less than 400.\n\nWarning\n\nIf you specify HTTPS for the value of Type , the endpoint must support TLS v1.0 or later.\n\nHTTP_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTP request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nHTTPS_STR_MATCH : Route 53 tries to establish a TCP connection. If successful, Route 53 submits an HTTPS request and searches the first 5,120 bytes of the response body for the string that you specify in SearchString .\n\nTCP : Route 53 tries to establish a TCP connection.\n\nCLOUDWATCH_METRIC : The health check is associated with a CloudWatch alarm. If the state of the alarm is OK , the health check is considered healthy. If the state is ALARM , the health check is considered unhealthy. If CloudWatch doesn’t have sufficient data to determine whether the state is OK or ALARM , the health check status depends on the setting for InsufficientDataHealthStatus : Healthy , Unhealthy , or LastKnownStatus .\n\nCALCULATED : For health checks that monitor the status of other health checks, Route 53 adds up the number of health checks that Route 53 health checkers consider to be healthy and compares that number with the value of HealthThreshold .\n\nRECOVERY_CONTROL : The health check is assocated with a Route53 Application Recovery Controller routing control. If the routing control state is ON , the health check is considered healthy. If the state is OFF , the health check is considered unhealthy.\n\nFor more information, see How Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nResourcePath -> (string)\n\nThe path, if any, that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example, the file /docs/route53-health-check.html. You can also include query string parameters, for example, /welcome.html?language=jp&login=y .\n\nFullyQualifiedDomainName -> (string)\n\nAmazon Route 53 behavior depends on whether you specify a value for IPAddress .\n\nIf you specify a value for IPAddress :\n\nAmazon Route 53 sends health check requests to the specified IPv4 or IPv6 address and passes the value of FullyQualifiedDomainName in the Host header for all health checks except TCP health checks. This is typically the fully qualified DNS name of the endpoint on which you want Route 53 to perform health checks.\n\nWhen Route 53 checks the health of an endpoint, here is how it constructs the Host header:\n\nIf you specify a value of 80 for Port and HTTP or HTTP_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify a value of 443 for Port and HTTPS or HTTPS_STR_MATCH for Type , Route 53 passes the value of FullyQualifiedDomainName to the endpoint in the Host header.\n\nIf you specify another value for Port and any value except TCP for Type , Route 53 passes FullyQualifiedDomainName:Port to the endpoint in the Host header.\n\nIf you don’t specify a value for FullyQualifiedDomainName , Route 53 substitutes the value of IPAddress in the Host header in each of the preceding cases.\n\nIf you don’t specify a value for IPAddress :\n\nRoute 53 sends a DNS request to the domain that you specify for FullyQualifiedDomainName at the interval that you specify for RequestInterval . Using an IPv4 address that DNS returns, Route 53 then checks the health of the endpoint.\n\nNote\n\nIf you don’t specify a value for IPAddress , Route 53 uses only IPv4 to send health checks to the endpoint. If there’s no resource record set with a type of A for the name that you specify for FullyQualifiedDomainName , the health check fails with a “DNS resolution failed” error.\n\nIf you want to check the health of weighted, latency, or failover resource record sets and you choose to specify the endpoint only by FullyQualifiedDomainName , we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of FullyQualifiedDomainName , specify the domain name of the server (such as us-east-2-www.example.com), not the name of the resource record sets (www.example.com).\n\nWarning\n\nIn this configuration, if you create a health check for which the value of FullyQualifiedDomainName matches the name of the resource record sets and you then associate the health check with those resource record sets, health check results will be unpredictable.\n\nIn addition, if the value that you specify for Type is HTTP , HTTPS , HTTP_STR_MATCH , or HTTPS_STR_MATCH , Route 53 passes the value of FullyQualifiedDomainName in the Host header, as it does when you specify a value for IPAddress . If the value of Type is TCP , Route 53 doesn’t pass a Host header.\n\nSearchString -> (string)\n\nIf the value of Type is HTTP_STR_MATCH or HTTPS_STR_MATCH , the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Route 53 considers the resource healthy.\n\nRoute 53 considers case when searching for SearchString in the response body.\n\nRequestInterval -> (integer)\n\nThe number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health check request. Each Route 53 health checker makes requests at this interval.\n\nWarning\n\nYou can’t change the value of RequestInterval after you create a health check.\n\nIf you don’t specify a value for RequestInterval , the default value is 30 seconds.\n\nFailureThreshold -> (integer)\n\nThe number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa. For more information, see How Amazon Route 53 Determines Whether an Endpoint Is Healthy in the Amazon Route 53 Developer Guide .\n\nIf you don’t specify a value for FailureThreshold , the default value is three health checks.\n\nMeasureLatency -> (boolean)\n\nSpecify whether you want Amazon Route 53 to measure the latency between health checkers in multiple Amazon Web Services regions and your endpoint, and to display CloudWatch latency graphs on the Health Checks page in the Route 53 console.\n\nWarning\n\nYou can’t change the value of MeasureLatency after you create a health check.\n\nInverted -> (boolean)\n\nSpecify whether you want Amazon Route 53 to invert the status of a health check, for example, to consider a health check unhealthy when it otherwise would be considered healthy.\n\nDisabled -> (boolean)\n\nStops Route 53 from performing health checks. When you disable a health check, here’s what happens:\n\nHealth checks that check the health of endpoints: Route 53 stops submitting requests to your application, server, or other resource.\n\nCalculated health checks: Route 53 stops aggregating the status of the referenced health checks.\n\nHealth checks that monitor CloudWatch alarms: Route 53 stops monitoring the corresponding CloudWatch metrics.\n\nAfter you disable a health check, Route 53 considers the status of the health check to always be healthy. If you configured DNS failover, Route 53 continues to route traffic to the corresponding resources. If you want to stop routing traffic to a resource, change the value of Inverted .\n\nCharges for a health check still apply when the health check is disabled. For more information, see Amazon Route 53 Pricing .\n\nHealthThreshold -> (integer)\n\nThe number of child health checks that are associated with a CALCULATED health check that Amazon Route 53 must consider healthy for the CALCULATED health check to be considered healthy. To specify the child health checks that you want to associate with a CALCULATED health check, use the ChildHealthChecks element.\n\nNote the following:\n\nIf you specify a number greater than the number of child health checks, Route 53 always considers this health check to be unhealthy.\n\nIf you specify 0 , Route 53 always considers this health check to be healthy.\n\nChildHealthChecks -> (list)\n\n(CALCULATED Health Checks Only) A complex type that contains one ChildHealthCheck element for each health check that you want to associate with a CALCULATED health check.\n\n(string)\n\nEnableSNI -> (boolean)\n\nSpecify whether you want Amazon Route 53 to send the value of FullyQualifiedDomainName to the endpoint in the client_hello message during TLS negotiation. This allows the endpoint to respond to HTTPS health check requests with the applicable SSL/TLS certificate.\n\nSome endpoints require that HTTPS requests include the host name in the client_hello message. If you don’t enable SNI, the status of the health check will be SSL alert handshake_failure . A health check can also have that status for other reasons. If SNI is enabled and you’re still getting the error, check the SSL/TLS configuration on your endpoint and confirm that your certificate is valid.\n\nThe SSL/TLS certificate on your endpoint includes a domain name in the Common Name field and possibly several more in the Subject Alternative Names field. One of the domain names in the certificate should match the value that you specify for FullyQualifiedDomainName . If the endpoint responds to the client_hello message with a certificate that does not include the domain name that you specified in FullyQualifiedDomainName , a health checker will retry the handshake. In the second attempt, the health checker will omit FullyQualifiedDomainName from the client_hello message.\n\nRegions -> (list)\n\nA complex type that contains one Region element for each region from which you want Amazon Route 53 health checkers to check the specified endpoint.\n\nIf you don’t specify any regions, Route 53 health checkers automatically performs checks from all of the regions that are listed under Valid Values .\n\nIf you update a health check to remove a region that has been performing health checks, Route 53 will briefly continue to perform checks from that region to ensure that some health checkers are always checking the endpoint (for example, if you replace three regions with four different regions).\n\n(string)\n\nAlarmIdentifier -> (structure)\n\nA complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.\n\nRegion -> (string)\n\nFor the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.\n\nFor the current list of CloudWatch regions, see Amazon CloudWatch endpoints and quotas in the Amazon Web Services General Reference .\n\nName -> (string)\n\nThe name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.\n\nNote\n\nRoute 53 supports CloudWatch alarms with the following features:\n\nStandard-resolution metrics. High-resolution metrics aren’t supported. For more information, see High-Resolution Metrics in the Amazon CloudWatch User Guide .\n\nStatistics: Average, Minimum, Maximum, Sum, and SampleCount. Extended statistics aren’t supported.\n\nInsufficientDataHealthStatus -> (string)\n\nWhen CloudWatch has insufficient data about the metric to determine the alarm state, the status that you want Amazon Route 53 to assign to the health check:\n\nHealthy : Route 53 considers the health check to be healthy.\n\nUnhealthy : Route 53 considers the health check to be unhealthy.\n\nLastKnownStatus : Route 53 uses the status of the health check from the last time that CloudWatch had sufficient data to determine the alarm state. For new health checks that have no last known status, the default status for the health check is healthy.\n\nRoutingControlArn -> (string)\n\nThe Amazon Resource Name (ARN) for the Route 53 Application Recovery Controller routing control.\n\nFor more information about Route 53 Application Recovery Controller, see Route 53 Application Recovery Controller Developer Guide. .\n\nHealthCheckVersion -> (long)\n\nThe version of the health check. You can optionally pass this value in a call to UpdateHealthCheck to prevent overwriting another change to the health check.\n\nCloudWatchAlarmConfiguration -> (structure)\n\nA complex type that contains information about the CloudWatch alarm that Amazon Route 53 is monitoring for this health check.\n\nEvaluationPeriods -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the number of periods that the metric is compared to the threshold.\n\nThreshold -> (double)\n\nFor the metric that the CloudWatch alarm is associated with, the value the metric is compared with.\n\nComparisonOperator -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the arithmetic operation that is used for the comparison.\n\nPeriod -> (integer)\n\nFor the metric that the CloudWatch alarm is associated with, the duration of one evaluation period in seconds.\n\nMetricName -> (string)\n\nThe name of the CloudWatch metric that the alarm is associated with.\n\nNamespace -> (string)\n\nThe namespace of the metric that the alarm is associated with. For more information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\nStatistic -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the statistic that is applied to the metric.\n\nDimensions -> (list)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about the dimensions for the metric. For information, see Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference in the Amazon CloudWatch User Guide .\n\n(structure)\n\nFor the metric that the CloudWatch alarm is associated with, a complex type that contains information about one dimension.\n\nName -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the name of one dimension.\n\nValue -> (string)\n\nFor the metric that the CloudWatch alarm is associated with, the value of one dimension."
    },
    {
      "command_name": "update-hosted-zone-comment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/update-hosted-zone-comment.html",
      "command_description": "Description\n\nUpdates the comment for a specified hosted zone.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-hosted-zone-comment\n--id <value>\n[--comment <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "[--comment <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID for the hosted zone that you want to update the comment for.\n\n--comment (string)\n\nThe new comment for the hosted zone. If you don’t specify a value for Comment , Amazon Route 53 deletes the existing value of the Comment element, if any.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nHostedZone -> (structure)\n\nA complex type that contains the response to the UpdateHostedZoneComment request.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the hosted zone when you created it.\n\nName -> (string)\n\nThe name of the domain. For public hosted zones, this is the name that you have registered with your DNS registrar.\n\nFor information about how to specify characters other than a-z , 0-9 , and - (hyphen) and how to specify internationalized domain names, see CreateHostedZone .\n\nCallerReference -> (string)\n\nThe value that you specified for CallerReference when you created the hosted zone.\n\nConfig -> (structure)\n\nA complex type that includes the Comment and PrivateZone elements. If you omitted the HostedZoneConfig and Comment elements from the request, the Config and Comment elements don’t appear in the response.\n\nComment -> (string)\n\nAny comments that you want to include about the hosted zone.\n\nPrivateZone -> (boolean)\n\nA value that indicates whether this is a private hosted zone.\n\nResourceRecordSetCount -> (long)\n\nThe number of resource record sets in the hosted zone.\n\nLinkedService -> (structure)\n\nIf the hosted zone was created by another service, the service that created the hosted zone. When a hosted zone is created by another service, you can’t edit or delete it using Route 53.\n\nServicePrincipal -> (string)\n\nIf the health check or hosted zone was created by another service, the service that created the resource. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53.\n\nDescription -> (string)\n\nIf the health check or hosted zone was created by another service, an optional description that can be provided by the other service. When a resource is created by another service, you can’t edit or delete it using Amazon Route 53."
    },
    {
      "command_name": "update-traffic-policy-comment",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/update-traffic-policy-comment.html",
      "command_description": "Description\n\nUpdates the comment for a specified traffic policy version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-traffic-policy-comment\n--id <value>\n--comment <value>\n--traffic-policy-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--comment <value>",
        "--traffic-policy-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe value of Id for the traffic policy that you want to update the comment for.\n\n--comment (string)\n\nThe new comment for the specified traffic policy and version.\n\n--traffic-policy-version (integer)\n\nThe value of Version for the traffic policy that you want to update the comment for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicy -> (structure)\n\nA complex type that contains settings for the specified traffic policy.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to a traffic policy when you created it.\n\nVersion -> (integer)\n\nThe version number that Amazon Route 53 assigns to a traffic policy. For a new traffic policy, the value of Version is always 1.\n\nName -> (string)\n\nThe name that you specified when you created the traffic policy.\n\nType -> (string)\n\nThe DNS type of the resource record sets that Amazon Route 53 creates when you use a traffic policy to create a traffic policy instance.\n\nDocument -> (string)\n\nThe definition of a traffic policy in JSON format. You specify the JSON document to use for a new traffic policy in the CreateTrafficPolicy request. For more information about the JSON format, see Traffic Policy Document Format .\n\nComment -> (string)\n\nThe comment that you specify in the CreateTrafficPolicy request, if any."
    },
    {
      "command_name": "update-traffic-policy-instance",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/update-traffic-policy-instance.html",
      "command_description": "Description\n\nUpdates the resource record sets in a specified hosted zone that were created based on the settings in a specified traffic policy version.\n\nWhen you update a traffic policy instance, Amazon Route 53 continues to respond to DNS queries for the root resource record set name (such as example.com) while it replaces one group of resource record sets with another. Route 53 performs the following operations:\n\nRoute 53 creates a new group of resource record sets based on the specified traffic policy. This is true regardless of how significant the differences are between the existing resource record sets and the new resource record sets.\n\nWhen all of the new resource record sets have been created, Route 53 starts to respond to DNS queries for the root resource record set name (such as example.com) by using the new resource record sets.\n\nRoute 53 deletes the old group of resource record sets that are associated with the root resource record set name.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-traffic-policy-instance\n--id <value>\n--ttl <value>\n--traffic-policy-id <value>\n--traffic-policy-version <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--id <value>",
        "--ttl <value>",
        "--traffic-policy-id <value>",
        "--traffic-policy-version <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--id (string)\n\nThe ID of the traffic policy instance that you want to update.\n\n--ttl (long)\n\nThe TTL that you want Amazon Route 53 to assign to all of the updated resource record sets.\n\n--traffic-policy-id (string)\n\nThe ID of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.\n\n--traffic-policy-version (integer)\n\nThe version of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTrafficPolicyInstance -> (structure)\n\nA complex type that contains settings for the updated traffic policy instance.\n\nId -> (string)\n\nThe ID that Amazon Route 53 assigned to the new traffic policy instance.\n\nHostedZoneId -> (string)\n\nThe ID of the hosted zone that Amazon Route 53 created resource record sets in.\n\nName -> (string)\n\nThe DNS name, such as www.example.com, for which Amazon Route 53 responds to queries by using the resource record sets that are associated with this traffic policy instance.\n\nTTL -> (long)\n\nThe TTL that Amazon Route 53 assigned to all of the resource record sets that it created in the specified hosted zone.\n\nState -> (string)\n\nThe value of State is one of the following values:\n\nApplied\n\nAmazon Route 53 has finished creating resource record sets, and changes have propagated to all Route 53 edge locations.\n\nCreating\n\nRoute 53 is creating the resource record sets. Use GetTrafficPolicyInstance to confirm that the CreateTrafficPolicyInstance request completed successfully.\n\nFailed\n\nRoute 53 wasn’t able to create or update the resource record sets. When the value of State is Failed , see Message for an explanation of what caused the request to fail.\n\nMessage -> (string)\n\nIf State is Failed , an explanation of the reason for the failure. If State is another value, Message is empty.\n\nTrafficPolicyId -> (string)\n\nThe ID of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyVersion -> (integer)\n\nThe version of the traffic policy that Amazon Route 53 used to create resource record sets in the specified hosted zone.\n\nTrafficPolicyType -> (string)\n\nThe DNS type that Amazon Route 53 assigned to all of the resource record sets that it created for this traffic policy instance."
    },
    {
      "command_name": "wait",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/route53/wait/index.html",
      "command_description": "Description\n\nWait until a particular condition is satisfied. Each subcommand polls an API until the listed requirement is met.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_options": []
    }
  ],
  "service_description": "Description\n\nAmazon Route 53 is a highly available and scalable Domain Name System (DNS) web service."
}