{
  "service_name": "stepfunctions",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/index.html",
  "service_commands": [
    {
      "command_name": "create-activity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/create-activity.html",
      "command_description": "Description\n\nCreates an activity. An activity is a task that you write in any programming language and host on any machine that has access to AWS Step Functions. Activities must poll Step Functions using the GetActivityTask API action and respond using SendTask* API actions. This function lets Step Functions know the existence of your activity and returns an identifier for use in a state machine and when polling from the activity.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nNote\n\nCreateActivity is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. CreateActivity ‘s idempotency check is based on the activity name . If a following request has different tags values, Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, tags will not be updated, even if they are different.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-activity\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the activity to create. This name must be unique for your AWS account and region for 90 days. For more information, see Limits Related to State Machine Executions in the AWS Step Functions Developer Guide .\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\n--tags (list)\n\nThe list of tags to add to a resource.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\n(structure)\n\nTags are key-value pairs that can be associated with Step Functions state machines and activities.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nkey -> (string)\n\nThe key of a tag.\n\nvalue -> (string)\n\nThe value of a tag.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactivityArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the created activity.\n\ncreationDate -> (timestamp)\n\nThe date the activity is created."
    },
    {
      "command_name": "create-state-machine",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/create-state-machine.html",
      "command_description": "Description\n\nCreates a state machine. A state machine consists of a collection of states that can do work (Task states), determine to which states to transition next (Choice states), stop an execution with an error (Fail states), and so on. State machines are specified using a JSON-based, structured language. For more information, see Amazon States Language in the AWS Step Functions User Guide.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nNote\n\nCreateStateMachine is an idempotent API. Subsequent requests won’t create a duplicate resource if it was already created. CreateStateMachine ‘s idempotency check is based on the state machine name , definition , type , LoggingConfiguration and TracingConfiguration . If a following request has a different roleArn or tags , Step Functions will ignore these differences and treat it as an idempotent request of the previous. In this case, roleArn and tags will not be updated, even if they are different.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-state-machine\n--name <value>\n--definition <value>\n--role-arn <value>\n[--type <value>]\n[--logging-configuration <value>]\n[--tags <value>]\n[--tracing-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--definition <value>",
        "--role-arn <value>",
        "[--type <value>]",
        "[--logging-configuration <value>]",
        "[--tags <value>]",
        "[--tracing-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the state machine.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\n--definition (string)\n\nThe Amazon States Language definition of the state machine. See Amazon States Language .\n\n--role-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM role to use for this state machine.\n\n--type (string)\n\nDetermines whether a Standard or Express state machine is created. The default is STANDARD . You cannot update the type of a state machine once it has been created.\n\nPossible values:\n\nSTANDARD\n\nEXPRESS\n\n--logging-configuration (structure)\n\nDefines what execution history events are logged and where they are logged.\n\nNote\n\nBy default, the level is set to OFF . For more information see Log Levels in the AWS Step Functions User Guide.\n\nlevel -> (string)\n\nDefines which category of execution history events are logged.\n\nincludeExecutionData -> (boolean)\n\nDetermines whether execution data is included in your log. When set to false , data is excluded.\n\ndestinations -> (list)\n\nAn array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to OFF .\n\n(structure)\n\ncloudWatchLogsLogGroup -> (structure)\n\nAn object describing a CloudWatch log group. For more information, see AWS::Logs::LogGroup in the AWS CloudFormation User Guide.\n\nlogGroupArn -> (string)\n\nThe ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with :*\n\nJSON Syntax:\n\n{\n  \"level\": \"ALL\"|\"ERROR\"|\"FATAL\"|\"OFF\",\n  \"includeExecutionData\": true|false,\n  \"destinations\": [\n    {\n      \"cloudWatchLogsLogGroup\": {\n        \"logGroupArn\": \"string\"\n      }\n    }\n    ...\n  ]\n}\n\n\n--tags (list)\n\nTags to be added when creating a state machine.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\n(structure)\n\nTags are key-value pairs that can be associated with Step Functions state machines and activities.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nkey -> (string)\n\nThe key of a tag.\n\nvalue -> (string)\n\nThe value of a tag.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--tracing-configuration (structure)\n\nSelects whether AWS X-Ray tracing is enabled.\n\nenabled -> (boolean)\n\nWhen set to true , AWS X-Ray tracing is enabled.\n\nShorthand Syntax:\n\nenabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the created state machine.\n\ncreationDate -> (timestamp)\n\nThe date the state machine is created."
    },
    {
      "command_name": "delete-activity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/delete-activity.html",
      "command_description": "Description\n\nDeletes an activity.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-activity\n--activity-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--activity-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--activity-arn (string)\n\nThe Amazon Resource Name (ARN) of the activity to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-state-machine",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/delete-state-machine.html",
      "command_description": "Description\n\nDeletes a state machine. This is an asynchronous operation: It sets the state machine’s status to DELETING and begins the deletion process.\n\nNote\n\nFor EXPRESS state machines, the deletion will happen eventually (usually less than a minute). Running executions may emit logs after DeleteStateMachine API is called.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-state-machine\n--state-machine-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-activity",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/describe-activity.html",
      "command_description": "Description\n\nDescribes an activity.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-activity\n--activity-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--activity-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--activity-arn (string)\n\nThe Amazon Resource Name (ARN) of the activity to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactivityArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the activity.\n\nname -> (string)\n\nThe name of the activity.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\ncreationDate -> (timestamp)\n\nThe date the activity is created."
    },
    {
      "command_name": "describe-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/describe-execution.html",
      "command_description": "Description\n\nDescribes an execution.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nThis API action is not supported by EXPRESS state machines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-execution\n--execution-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--execution-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--execution-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the execution.\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the executed stated machine.\n\nname -> (string)\n\nThe name of the execution.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\nstatus -> (string)\n\nThe current status of the execution.\n\nstartDate -> (timestamp)\n\nThe date the execution is started.\n\nstopDate -> (timestamp)\n\nIf the execution has already ended, the date the execution stopped.\n\ninput -> (string)\n\nThe string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nProvides details about execution input or output.\n\nincluded -> (boolean)\n\nIndicates whether input or output was included in the response. Always true for API calls.\n\noutput -> (string)\n\nThe JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\nNote\n\nThis field is set only if the execution succeeds. If the execution fails, this field is null.\n\noutputDetails -> (structure)\n\nProvides details about execution input or output.\n\nincluded -> (boolean)\n\nIndicates whether input or output was included in the response. Always true for API calls.\n\ntraceHeader -> (string)\n\nThe AWS X-Ray trace header that was passed to the execution."
    },
    {
      "command_name": "describe-state-machine",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/describe-state-machine.html",
      "command_description": "Description\n\nDescribes a state machine.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-state-machine\n--state-machine-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine to describe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the state machine.\n\nname -> (string)\n\nThe name of the state machine.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\nstatus -> (string)\n\nThe current status of the state machine.\n\ndefinition -> (string)\n\nThe Amazon States Language definition of the state machine. See Amazon States Language .\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used when creating this state machine. (The IAM role maintains security by granting Step Functions access to AWS resources.)\n\ntype -> (string)\n\nThe type of the state machine (STANDARD or EXPRESS ).\n\ncreationDate -> (timestamp)\n\nThe date the state machine is created.\n\nloggingConfiguration -> (structure)\n\nThe LoggingConfiguration data type is used to set CloudWatch Logs options.\n\nlevel -> (string)\n\nDefines which category of execution history events are logged.\n\nincludeExecutionData -> (boolean)\n\nDetermines whether execution data is included in your log. When set to false , data is excluded.\n\ndestinations -> (list)\n\nAn array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to OFF .\n\n(structure)\n\ncloudWatchLogsLogGroup -> (structure)\n\nAn object describing a CloudWatch log group. For more information, see AWS::Logs::LogGroup in the AWS CloudFormation User Guide.\n\nlogGroupArn -> (string)\n\nThe ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with :*\n\ntracingConfiguration -> (structure)\n\nSelects whether AWS X-Ray tracing is enabled.\n\nenabled -> (boolean)\n\nWhen set to true , AWS X-Ray tracing is enabled."
    },
    {
      "command_name": "describe-state-machine-for-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/describe-state-machine-for-execution.html",
      "command_description": "Description\n\nDescribes the state machine associated with a specific execution.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nThis API action is not supported by EXPRESS state machines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-state-machine-for-execution\n--execution-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--execution-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--execution-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution you want state machine information for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the state machine associated with the execution.\n\nname -> (string)\n\nThe name of the state machine associated with the execution.\n\ndefinition -> (string)\n\nThe Amazon States Language definition of the state machine. See Amazon States Language .\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role of the State Machine for the execution.\n\nupdateDate -> (timestamp)\n\nThe date and time the state machine associated with an execution was updated. For a newly created state machine, this is the creation date.\n\nloggingConfiguration -> (structure)\n\nThe LoggingConfiguration data type is used to set CloudWatch Logs options.\n\nlevel -> (string)\n\nDefines which category of execution history events are logged.\n\nincludeExecutionData -> (boolean)\n\nDetermines whether execution data is included in your log. When set to false , data is excluded.\n\ndestinations -> (list)\n\nAn array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to OFF .\n\n(structure)\n\ncloudWatchLogsLogGroup -> (structure)\n\nAn object describing a CloudWatch log group. For more information, see AWS::Logs::LogGroup in the AWS CloudFormation User Guide.\n\nlogGroupArn -> (string)\n\nThe ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with :*\n\ntracingConfiguration -> (structure)\n\nSelects whether AWS X-Ray tracing is enabled.\n\nenabled -> (boolean)\n\nWhen set to true , AWS X-Ray tracing is enabled."
    },
    {
      "command_name": "get-activity-task",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/get-activity-task.html",
      "command_description": "Description\n\nUsed by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine. This initiates a long poll, where the service holds the HTTP connection open and responds as soon as a task becomes available (i.e. an execution of a task of this type is needed.) The maximum time the service holds on to the request before responding is 60 seconds. If no task is available within 60 seconds, the poll returns a taskToken with a null string.\n\nWarning\n\nWorkers should set their client side socket timeout to at least 65 seconds (5 seconds higher than the maximum time the service may hold the poll request).\n\nPolling with GetActivityTask can cause latency in some implementations. See Avoid Latency When Polling for Activity Tasks in the Step Functions Developer Guide.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-activity-task\n--activity-arn <value>\n[--worker-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--activity-arn <value>",
        "[--worker-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--activity-arn (string)\n\nThe Amazon Resource Name (ARN) of the activity to retrieve tasks from (assigned when you create the task using CreateActivity .)\n\n--worker-name (string)\n\nYou can provide an arbitrary name in order to identify the worker that the task is assigned to. This name is used when it is logged in the execution history.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntaskToken -> (string)\n\nA token that identifies the scheduled task. This token must be copied and included in subsequent calls to SendTaskHeartbeat , SendTaskSuccess or SendTaskFailure in order to report the progress or completion of the task.\n\ninput -> (string)\n\nThe string that contains the JSON input data for the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding."
    },
    {
      "command_name": "get-execution-history",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/get-execution-history.html",
      "command_description": "Description\n\nReturns the history of the specified execution as a list of events. By default, the results are returned in ascending order of the timeStamp of the events. Use the reverseOrder parameter to get the latest events first.\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.\n\nThis API action is not supported by EXPRESS state machines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-execution-history is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: events",
      "command_synopsis": "Synopsis\n  get-execution-history\n--execution-arn <value>\n[--reverse-order | --no-reverse-order]\n[--include-execution-data | --no-include-execution-data]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--execution-arn <value>",
        "[--reverse-order | --no-reverse-order]",
        "[--include-execution-data | --no-include-execution-data]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--execution-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution.\n\n--reverse-order | --no-reverse-order (boolean)\n\nLists events in descending order of their timeStamp .\n\n--include-execution-data | --no-include-execution-data (boolean)\n\nYou can select whether execution data (input or output of a history event) is returned. The default is true .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nevents -> (list)\n\nThe list of events that occurred in the execution.\n\n(structure)\n\nContains details about the events of an execution.\n\ntimestamp -> (timestamp)\n\nThe date and time the event occurred.\n\ntype -> (string)\n\nThe type of the event.\n\nid -> (long)\n\nThe id of the event. Events are numbered sequentially, starting at one.\n\npreviousEventId -> (long)\n\nThe id of the previous event.\n\nactivityFailedEventDetails -> (structure)\n\nContains details about an activity that failed during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nactivityScheduleFailedEventDetails -> (structure)\n\nContains details about an activity schedule event that failed during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nactivityScheduledEventDetails -> (structure)\n\nContains details about an activity scheduled during an execution.\n\nresource -> (string)\n\nThe Amazon Resource Name (ARN) of the scheduled activity.\n\ninput -> (string)\n\nThe JSON data input to the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nContains details about the input for an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\ntimeoutInSeconds -> (long)\n\nThe maximum allowed duration of the activity task.\n\nheartbeatInSeconds -> (long)\n\nThe maximum allowed duration between two heartbeats for the activity task.\n\nactivityStartedEventDetails -> (structure)\n\nContains details about the start of an activity during an execution.\n\nworkerName -> (string)\n\nThe name of the worker that the task is assigned to. These names are provided by the workers when calling GetActivityTask .\n\nactivitySucceededEventDetails -> (structure)\n\nContains details about an activity that successfully terminated during an execution.\n\noutput -> (string)\n\nThe JSON data output by the activity task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nactivityTimedOutEventDetails -> (structure)\n\nContains details about an activity timeout that occurred during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the timeout.\n\ntaskFailedEventDetails -> (structure)\n\nContains details about the failure of a task.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\ntaskScheduledEventDetails -> (structure)\n\nContains details about a task that was scheduled.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\nregion -> (string)\n\nThe region of the scheduled task\n\nparameters -> (string)\n\nThe JSON data passed to the resource referenced in a task state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ntimeoutInSeconds -> (long)\n\nThe maximum allowed duration of the task.\n\nheartbeatInSeconds -> (long)\n\nThe maximum allowed duration between two heartbeats for the task.\n\ntaskStartFailedEventDetails -> (structure)\n\nContains details about a task that failed to start.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\ntaskStartedEventDetails -> (structure)\n\nContains details about a task that was started.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\ntaskSubmitFailedEventDetails -> (structure)\n\nContains details about a task that where the submit failed.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\ntaskSubmittedEventDetails -> (structure)\n\nContains details about a submitted task.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\noutput -> (string)\n\nThe response from a resource when a task has started. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\ntaskSucceededEventDetails -> (structure)\n\nContains details about a task that succeeded.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\noutput -> (string)\n\nThe full JSON response from a resource when a task has succeeded. This response becomes the output of the related task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\ntaskTimedOutEventDetails -> (structure)\n\nContains details about a task that timed out.\n\nresourceType -> (string)\n\nThe action of the resource called by a task state.\n\nresource -> (string)\n\nThe service name of the resource in a task state.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nexecutionFailedEventDetails -> (structure)\n\nContains details about an execution failure event.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nexecutionStartedEventDetails -> (structure)\n\nContains details about the start of the execution.\n\ninput -> (string)\n\nThe JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nContains details about the input for an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nroleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role used for executing AWS Lambda tasks.\n\nexecutionSucceededEventDetails -> (structure)\n\nContains details about the successful termination of the execution.\n\noutput -> (string)\n\nThe JSON data output by the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nexecutionAbortedEventDetails -> (structure)\n\nContains details about an abort of an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nexecutionTimedOutEventDetails -> (structure)\n\nContains details about the execution timeout that occurred during the execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the timeout.\n\nmapStateStartedEventDetails -> (structure)\n\nContains details about Map state that was started.\n\nlength -> (integer)\n\nThe size of the array for Map state iterations.\n\nmapIterationStartedEventDetails -> (structure)\n\nContains details about an iteration of a Map state that was started.\n\nname -> (string)\n\nThe name of the iteration’s parent Map state.\n\nindex -> (integer)\n\nThe index of the array belonging to the Map state iteration.\n\nmapIterationSucceededEventDetails -> (structure)\n\nContains details about an iteration of a Map state that succeeded.\n\nname -> (string)\n\nThe name of the iteration’s parent Map state.\n\nindex -> (integer)\n\nThe index of the array belonging to the Map state iteration.\n\nmapIterationFailedEventDetails -> (structure)\n\nContains details about an iteration of a Map state that failed.\n\nname -> (string)\n\nThe name of the iteration’s parent Map state.\n\nindex -> (integer)\n\nThe index of the array belonging to the Map state iteration.\n\nmapIterationAbortedEventDetails -> (structure)\n\nContains details about an iteration of a Map state that was aborted.\n\nname -> (string)\n\nThe name of the iteration’s parent Map state.\n\nindex -> (integer)\n\nThe index of the array belonging to the Map state iteration.\n\nlambdaFunctionFailedEventDetails -> (structure)\n\nContains details about a lambda function that failed during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nlambdaFunctionScheduleFailedEventDetails -> (structure)\n\nContains details about a failed lambda function schedule event that occurred during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nlambdaFunctionScheduledEventDetails -> (structure)\n\nContains details about a lambda function scheduled during an execution.\n\nresource -> (string)\n\nThe Amazon Resource Name (ARN) of the scheduled lambda function.\n\ninput -> (string)\n\nThe JSON data input to the lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nContains details about input for an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\ntimeoutInSeconds -> (long)\n\nThe maximum allowed duration of the lambda function.\n\nlambdaFunctionStartFailedEventDetails -> (structure)\n\nContains details about a lambda function that failed to start during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\nlambdaFunctionSucceededEventDetails -> (structure)\n\nContains details about a lambda function that terminated successfully during an execution.\n\noutput -> (string)\n\nThe JSON data output by the lambda function. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nlambdaFunctionTimedOutEventDetails -> (structure)\n\nContains details about a lambda function timeout that occurred during an execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the timeout.\n\nstateEnteredEventDetails -> (structure)\n\nContains details about a state entered during an execution.\n\nname -> (string)\n\nThe name of the state.\n\ninput -> (string)\n\nThe string that contains the JSON input data for the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nContains details about the input for an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nstateExitedEventDetails -> (structure)\n\nContains details about an exit from a state during an execution.\n\nname -> (string)\n\nThe name of the state.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\noutput -> (string)\n\nThe JSON output data of the state. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\noutputDetails -> (structure)\n\nContains details about the output of an execution history event.\n\ntruncated -> (boolean)\n\nIndicates whether input or output was truncated in the response. Always false for API calls.\n\nnextToken -> (string)\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error."
    },
    {
      "command_name": "list-activities",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/list-activities.html",
      "command_description": "Description\n\nLists the existing activities.\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-activities is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: activities",
      "command_synopsis": "Synopsis\n  list-activities\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nactivities -> (list)\n\nThe list of activities.\n\n(structure)\n\nContains details about an activity.\n\nactivityArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the activity.\n\nname -> (string)\n\nThe name of the activity.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\ncreationDate -> (timestamp)\n\nThe date the activity is created.\n\nnextToken -> (string)\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error."
    },
    {
      "command_name": "list-executions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/list-executions.html",
      "command_description": "Description\n\nLists the executions of a state machine that meet the filtering criteria. Results are sorted by time, with the most recent execution first.\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nThis API action is not supported by EXPRESS state machines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-executions is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: executions",
      "command_synopsis": "Synopsis\n  list-executions\n--state-machine-arn <value>\n[--status-filter <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--status-filter <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine whose executions is listed.\n\n--status-filter (string)\n\nIf specified, only list the executions whose current execution status matches the given filter.\n\nPossible values:\n\nRUNNING\n\nSUCCEEDED\n\nFAILED\n\nTIMED_OUT\n\nABORTED\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexecutions -> (list)\n\nThe list of matching executions.\n\n(structure)\n\nContains details about an execution.\n\nexecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the execution.\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the executed state machine.\n\nname -> (string)\n\nThe name of the execution.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\nstatus -> (string)\n\nThe current status of the execution.\n\nstartDate -> (timestamp)\n\nThe date the execution started.\n\nstopDate -> (timestamp)\n\nIf the execution already ended, the date the execution stopped.\n\nnextToken -> (string)\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error."
    },
    {
      "command_name": "list-state-machines",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/list-state-machines.html",
      "command_description": "Description\n\nLists the existing state machines.\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.\n\nNote\n\nThis operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-state-machines is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: stateMachines",
      "command_synopsis": "Synopsis\n  list-state-machines\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstateMachines -> (list)\n\n(structure)\n\nContains details about the state machine.\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the state machine.\n\nname -> (string)\n\nThe name of the state machine.\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\ntype -> (string)\n\ncreationDate -> (timestamp)\n\nThe date the state machine is created.\n\nnextToken -> (string)\n\nIf nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/list-tags-for-resource.html",
      "command_description": "Description\n\nList tags for a given resource.\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the Step Functions state machine or activity.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (list)\n\nAn array of tags associated with the resource.\n\n(structure)\n\nTags are key-value pairs that can be associated with Step Functions state machines and activities.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nkey -> (string)\n\nThe key of a tag.\n\nvalue -> (string)\n\nThe value of a tag."
    },
    {
      "command_name": "send-task-failure",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/send-task-failure.html",
      "command_description": "Description\n\nUsed by activity workers and task states using the callback pattern to report that the task identified by the taskToken failed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-task-failure\n--task-token <value>\n[--error <value>]\n[--cause <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-token <value>",
        "[--error <value>]",
        "[--cause <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-token (string)\n\nThe token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the context object when a workflow enters a task state. See GetActivityTaskOutput$taskToken .\n\n--error (string)\n\nThe error code of the failure.\n\n--cause (string)\n\nA more detailed explanation of the cause of the failure.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "send-task-heartbeat",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/send-task-heartbeat.html",
      "command_description": "Description\n\nUsed by activity workers and task states using the callback pattern to report to Step Functions that the task represented by the specified taskToken is still making progress. This action resets the Heartbeat clock. The Heartbeat threshold is specified in the state machine’s Amazon States Language definition (HeartbeatSeconds ). This action does not in itself create an event in the execution history. However, if the task times out, the execution history contains an ActivityTimedOut entry for activities, or a TaskTimedOut entry for for tasks using the job run or callback pattern.\n\nNote\n\nThe Timeout of a task, defined in the state machine’s Amazon States Language definition, is its maximum allowed duration, regardless of the number of SendTaskHeartbeat requests received. Use HeartbeatSeconds to configure the timeout interval for heartbeats.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-task-heartbeat\n--task-token <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-token <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-token (string)\n\nThe token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the context object when a workflow enters a task state. See GetActivityTaskOutput$taskToken .\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "send-task-success",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/send-task-success.html",
      "command_description": "Description\n\nUsed by activity workers and task states using the callback pattern to report that the task identified by the taskToken completed successfully.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  send-task-success\n--task-token <value>\n--task-output <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--task-token <value>",
        "--task-output <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--task-token (string)\n\nThe token that represents this task. Task tokens are generated by Step Functions when tasks are assigned to a worker, or in the context object when a workflow enters a task state. See GetActivityTaskOutput$taskToken .\n\n--task-output (string)\n\nThe JSON output of the task. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "start-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/start-execution.html",
      "command_description": "Description\n\nStarts a state machine execution.\n\nNote\n\nStartExecution is idempotent. If StartExecution is called with the same name and input as a running execution, the call will succeed and return the same response as the original request. If the execution is closed or if the input is different, it will return a 400 ExecutionAlreadyExists error. Names can be reused after 90 days.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-execution\n--state-machine-arn <value>\n[--name <value>]\n[--input <value>]\n[--trace-header <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--name <value>]",
        "[--input <value>]",
        "[--trace-header <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine to execute.\n\n--name (string)\n\nThe name of the execution. This name must be unique for your AWS account, region, and state machine for 90 days. For more information, see Limits Related to State Machine Executions in the AWS Step Functions Developer Guide .\n\nA name must not contain:\n\nwhite space\n\nbrackets < > { } [ ]\n\nwildcard characters ? *\n\nspecial characters \" # % \\ ^ | ~ ` $ & , ; : /\n\ncontrol characters (U+0000-001F , U+007F-009F )\n\nTo enable logging with CloudWatch Logs, the name should only contain 0-9, A-Z, a-z, - and _.\n\n--input (string)\n\nThe string that contains the JSON input data for the execution, for example:\n\n\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"\n\nNote\n\nIf you don’t include any JSON input data, you still must include the two braces, for example: \"input\": \"{}\"\n\nLength constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\n--trace-header (string)\n\nPasses the AWS X-Ray trace header. The trace header can also be passed in the request payload.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the execution.\n\nstartDate -> (timestamp)\n\nThe date the execution is started."
    },
    {
      "command_name": "start-sync-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/start-sync-execution.html",
      "command_description": "Description\n\nStarts a Synchronous Express state machine execution.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-sync-execution\n--state-machine-arn <value>\n[--name <value>]\n[--input <value>]\n[--trace-header <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--name <value>]",
        "[--input <value>]",
        "[--trace-header <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine to execute.\n\n--name (string)\n\nThe name of the execution.\n\n--input (string)\n\nThe string that contains the JSON input data for the execution, for example:\n\n\"input\": \"{\\\"first_name\\\" : \\\"test\\\"}\"\n\nNote\n\nIf you don’t include any JSON input data, you still must include the two braces, for example: \"input\": \"{}\"\n\nLength constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\n--trace-header (string)\n\nPasses the AWS X-Ray trace header. The trace header can also be passed in the request payload.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nexecutionArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the execution.\n\nstateMachineArn -> (string)\n\nThe Amazon Resource Name (ARN) that identifies the state machine.\n\nname -> (string)\n\nThe name of the execution.\n\nstartDate -> (timestamp)\n\nThe date the execution is started.\n\nstopDate -> (timestamp)\n\nIf the execution has already ended, the date the execution stopped.\n\nstatus -> (string)\n\nThe current status of the execution.\n\nerror -> (string)\n\nThe error code of the failure.\n\ncause -> (string)\n\nA more detailed explanation of the cause of the failure.\n\ninput -> (string)\n\nThe string that contains the JSON input data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\ninputDetails -> (structure)\n\nProvides details about execution input or output.\n\nincluded -> (boolean)\n\nIndicates whether input or output was included in the response. Always true for API calls.\n\noutput -> (string)\n\nThe JSON output data of the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.\n\nNote\n\nThis field is set only if the execution succeeds. If the execution fails, this field is null.\n\noutputDetails -> (structure)\n\nProvides details about execution input or output.\n\nincluded -> (boolean)\n\nIndicates whether input or output was included in the response. Always true for API calls.\n\ntraceHeader -> (string)\n\nThe AWS X-Ray trace header that was passed to the execution.\n\nbillingDetails -> (structure)\n\nAn object that describes workflow billing details, including billed duration and memory use.\n\nbilledMemoryUsedInMB -> (long)\n\nBilled memory consumption of your workflow, in MB.\n\nbilledDurationInMilliseconds -> (long)\n\nBilled duration of your workflow, in milliseconds."
    },
    {
      "command_name": "stop-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/stop-execution.html",
      "command_description": "Description\n\nStops an execution.\n\nThis API action is not supported by EXPRESS state machines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  stop-execution\n--execution-arn <value>\n[--error <value>]\n[--cause <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--execution-arn <value>",
        "[--error <value>]",
        "[--cause <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--execution-arn (string)\n\nThe Amazon Resource Name (ARN) of the execution to stop.\n\n--error (string)\n\nThe error code of the failure.\n\n--cause (string)\n\nA more detailed explanation of the cause of the failure.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nstopDate -> (timestamp)\n\nThe date the execution is stopped."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/tag-resource.html",
      "command_description": "Description\n\nAdd a tag to a Step Functions resource.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the Step Functions state machine or activity.\n\n--tags (list)\n\nThe list of tags to add to a resource.\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\n(structure)\n\nTags are key-value pairs that can be associated with Step Functions state machines and activities.\n\nAn array of key-value pairs. For more information, see Using Cost Allocation Tags in the AWS Billing and Cost Management User Guide , and Controlling Access Using IAM Tags .\n\nTags may only contain Unicode letters, digits, white space, or these symbols: _ . : / = + - @ .\n\nkey -> (string)\n\nThe key of a tag.\n\nvalue -> (string)\n\nThe value of a tag.\n\nShorthand Syntax:\n\nkey=string,value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"key\": \"string\",\n    \"value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/untag-resource.html",
      "command_description": "Description\n\nRemove a tag from a Step Functions resource\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) for the Step Functions state machine or activity.\n\n--tag-keys (list)\n\nThe list of tags to remove from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-state-machine",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/stepfunctions/update-state-machine.html",
      "command_description": "Description\n\nUpdates an existing state machine by modifying its definition , roleArn , or loggingConfiguration . Running executions will continue to use the previous definition and roleArn . You must include at least one of definition or roleArn or you will receive a MissingRequiredParameter error.\n\nNote\n\nAll StartExecution calls within a few seconds will use the updated definition and roleArn . Executions started immediately after calling UpdateStateMachine may use the previous state machine definition and roleArn .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-state-machine\n--state-machine-arn <value>\n[--definition <value>]\n[--role-arn <value>]\n[--logging-configuration <value>]\n[--tracing-configuration <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--state-machine-arn <value>",
        "[--definition <value>]",
        "[--role-arn <value>]",
        "[--logging-configuration <value>]",
        "[--tracing-configuration <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--state-machine-arn (string)\n\nThe Amazon Resource Name (ARN) of the state machine.\n\n--definition (string)\n\nThe Amazon States Language definition of the state machine. See Amazon States Language .\n\n--role-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM role of the state machine.\n\n--logging-configuration (structure)\n\nThe LoggingConfiguration data type is used to set CloudWatch Logs options.\n\nlevel -> (string)\n\nDefines which category of execution history events are logged.\n\nincludeExecutionData -> (boolean)\n\nDetermines whether execution data is included in your log. When set to false , data is excluded.\n\ndestinations -> (list)\n\nAn array of objects that describes where your execution history events will be logged. Limited to size 1. Required, if your log level is not set to OFF .\n\n(structure)\n\ncloudWatchLogsLogGroup -> (structure)\n\nAn object describing a CloudWatch log group. For more information, see AWS::Logs::LogGroup in the AWS CloudFormation User Guide.\n\nlogGroupArn -> (string)\n\nThe ARN of the the CloudWatch log group to which you want your logs emitted to. The ARN must end with :*\n\nJSON Syntax:\n\n{\n  \"level\": \"ALL\"|\"ERROR\"|\"FATAL\"|\"OFF\",\n  \"includeExecutionData\": true|false,\n  \"destinations\": [\n    {\n      \"cloudWatchLogsLogGroup\": {\n        \"logGroupArn\": \"string\"\n      }\n    }\n    ...\n  ]\n}\n\n\n--tracing-configuration (structure)\n\nSelects whether AWS X-Ray tracing is enabled.\n\nenabled -> (boolean)\n\nWhen set to true , AWS X-Ray tracing is enabled.\n\nShorthand Syntax:\n\nenabled=boolean\n\n\nJSON Syntax:\n\n{\n  \"enabled\": true|false\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nupdateDate -> (timestamp)\n\nThe date and time the state machine was updated."
    }
  ],
  "service_description": "Description\n\nAWS Step Functions is a service that lets you coordinate the components of distributed applications and microservices using visual workflows.\n\nYou can use Step Functions to build applications from individual components, each of which performs a discrete function, or task , allowing you to scale and change applications quickly. Step Functions provides a console that helps visualize the components of your application as a series of steps. Step Functions automatically triggers and tracks each step, and retries steps when there are errors, so your application executes predictably and in the right order every time. Step Functions logs the state of each step, so you can quickly diagnose and debug any issues.\n\nStep Functions manages operations and underlying infrastructure to ensure your application is available at any scale. You can run tasks on AWS, your own servers, or any system that has access to AWS. You can access and use Step Functions using the console, the AWS SDKs, or an HTTP API. For more information about Step Functions, see the * AWS Step Functions Developer Guide * ."
}