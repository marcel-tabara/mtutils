{
  "service_name": "resourcegroupstaggingapi",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/index.html",
  "service_commands": [
    {
      "command_name": "describe-report-creation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/describe-report-creation.html",
      "command_description": "Description\n\nDescribes the status of the StartReportCreation operation.\n\nYou can call this operation only from the organization’s management account and from the us-east-1 Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-report-creation\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nStatus -> (string)\n\nReports the status of the operation.\n\nThe operation status can be one of the following:\n\nRUNNING - Report creation is in progress.\n\nSUCCEEDED - Report creation is complete. You can open the report from the Amazon S3 bucket that you specified when you ran StartReportCreation .\n\nFAILED - Report creation timed out or the Amazon S3 bucket is not accessible.\n\nNO REPORT - No report was generated in the last 90 days.\n\nS3Location -> (string)\n\nThe path to the Amazon S3 bucket where the report was stored on creation.\n\nErrorMessage -> (string)\n\nDetails of the common errors that all operations return."
    },
    {
      "command_name": "get-compliance-summary",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/get-compliance-summary.html",
      "command_description": "Description\n\nReturns a table that shows counts of resources that are noncompliant with their tag policies.\n\nFor more information on tag policies, see Tag Policies in the AWS Organizations User Guide.\n\nYou can call this operation only from the organization’s management account and from the us-east-1 Region.\n\nThis operation supports pagination, where the response can be sent in multiple pages. You should check the PaginationToken response parameter to determine if there are additional results available to return. Repeat the query, passing the PaginationToken response parameter value as an input to the next request until you recieve a null value. A null value for PaginationToken indicates that there are no more results waiting to be returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-compliance-summary is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: SummaryList",
      "command_synopsis": "Synopsis\n  get-compliance-summary\n[--target-id-filters <value>]\n[--region-filters <value>]\n[--resource-type-filters <value>]\n[--tag-key-filters <value>]\n[--group-by <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--target-id-filters <value>]",
        "[--region-filters <value>]",
        "[--resource-type-filters <value>]",
        "[--tag-key-filters <value>]",
        "[--group-by <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--target-id-filters (list)\n\nSpecifies target identifiers (usually, specific account IDs) to limit the output by. If you use this parameter, the count of returned noncompliant resources includes only resources with the specified target IDs.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--region-filters (list)\n\nSpecifies a list of AWS Regions to limit the output by. If you use this parameter, the count of returned noncompliant resources includes only resources in the specified Regions.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--resource-type-filters (list)\n\nSpecifies that you want the response to include information for only resources of the specified types. The format of each resource type is service[:resourceType] . For example, specifying a resource type of ec2 returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of ec2:instance returns only EC2 instances.\n\nThe string for each service name and resource type is the same as that embedded in a resource’s Amazon Resource Name (ARN). Consult the AWS General Reference for the following:\n\nFor a list of service name strings, see AWS Service Namespaces .\n\nFor resource type strings, see Example ARNs .\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces .\n\nYou can specify multiple resource types by using a comma separated array. The array can include up to 100 items. Note that the length constraint requirement applies to each resource type filter.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tag-key-filters (list)\n\nSpecifies that you want the response to include information for only resources that have tags with the specified tag keys. If you use this parameter, the count of returned noncompliant resources includes only resources that have the specified tag keys.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--group-by (list)\n\nSpecifies a list of attributes to group the counts of noncompliant resources by. If supplied, the counts are sorted by those attributes.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\nWhere valid values are:\n  TARGET_ID\n  REGION\n  RESOURCE_TYPE\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nSummaryList -> (list)\n\nA table that shows counts of noncompliant resources.\n\n(structure)\n\nA count of noncompliant resources.\n\nLastUpdated -> (string)\n\nThe timestamp that shows when this summary was generated in this Region.\n\nTargetId -> (string)\n\nThe account identifier or the root identifier of the organization. If you don’t know the root ID, you can call the AWS Organizations ListRoots API.\n\nTargetIdType -> (string)\n\nWhether the target is an account, an OU, or the organization root.\n\nRegion -> (string)\n\nThe AWS Region that the summary applies to.\n\nResourceType -> (string)\n\nThe AWS resource type.\n\nNonCompliantResources -> (long)\n\nThe count of noncompliant resources.\n\nPaginationToken -> (string)\n\nA string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the PaginationToken value in the request for the next page."
    },
    {
      "command_name": "get-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/get-resources.html",
      "command_description": "Description\n\nReturns all the tagged or previously tagged resources that are located in the specified Region for the AWS account.\n\nDepending on what information you want returned, you can also specify the following:\n\nFilters that specify what tags and resource types you want returned. The response includes all tags that are associated with the requested resources.\n\nInformation about compliance with the account’s effective tag policy. For more information on tag policies, see Tag Policies in the AWS Organizations User Guide.\n\nThis operation supports pagination, where the response can be sent in multiple pages. You should check the PaginationToken response parameter to determine if there are additional results available to return. Repeat the query, passing the PaginationToken response parameter value as an input to the next request until you recieve a null value. A null value for PaginationToken indicates that there are no more results waiting to be returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-resources is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: ResourceTagMappingList",
      "command_synopsis": "Synopsis\n  get-resources\n[--tag-filters <value>]\n[--tags-per-page <value>]\n[--resource-type-filters <value>]\n[--include-compliance-details | --no-include-compliance-details]\n[--exclude-compliant-resources | --no-exclude-compliant-resources]\n[--resource-arn-list <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--tag-filters <value>]",
        "[--tags-per-page <value>]",
        "[--resource-type-filters <value>]",
        "[--include-compliance-details | --no-include-compliance-details]",
        "[--exclude-compliant-resources | --no-exclude-compliant-resources]",
        "[--resource-arn-list <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--tag-filters (list)\n\nSpecifies a list of TagFilters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. Each TagFilter must contain a key with values optional. A request can include up to 50 keys, and each key can include up to 20 values.\n\nNote the following when deciding how to use TagFilters:\n\nIf you don’t specify a TagFilter , the response includes all resources that are currently tagged or ever had a tag. Resources that currently don’t have tags are shown with an empty tag set, like this: \"Tags\": [] .\n\nIf you specify more than one filter in a single request, the response returns only those resources that satisfy all filters.\n\nIf you specify a filter that contains more than one value for a key, the response returns resources that match any of the specified values for that key.\n\nIf you don’t specify any values for a key, the response returns resources that are tagged with that key and any or no value. For example, for the following filters: filter1= {keyA,{value1}} , filter2={keyB,{value2,value3,value4}} , filter3= {keyC} :\n\nGetResources({filter1}) returns resources tagged with key1=value1\n\nGetResources({filter2}) returns resources tagged with key2=value2 or key2=value3 or key2=value4\n\nGetResources({filter3}) returns resources tagged with any tag with the key key3 , and with any or no value\n\nGetResources({filter1,filter2,filter3}) returns resources tagged with (key1=value1) and (key2=value2 or key2=value3 or key2=value4) and (key3, any or no value)\n\n(structure)\n\nA list of tags (keys and values) that are used to specify the associated resources.\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValues -> (list)\n\nOne part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). The value can be empty or null.\n\n(string)\n\nShorthand Syntax:\n\nKey=string,Values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--tags-per-page (integer)\n\nAWS recommends using ResourcesPerPage instead of this parameter.\n\nA limit that restricts the number of tags (key and value pairs) returned by GetResources in paginated output. A resource with no tags is counted as having one tag (one key and value pair).\n\nGetResources does not split a resource and its associated tags across pages. If the specified TagsPerPage would cause such a break, a PaginationToken is returned in place of the affected resource and its tags. Use that token in another request to get the remaining data. For example, if you specify a TagsPerPage of 100 and the account has 22 resources with 10 tags each (meaning that each resource has 10 key and value pairs), the output will consist of three pages. The first page displays the first 10 resources, each with its 10 tags. The second page displays the next 10 resources, each with its 10 tags. The third page displays the remaining 2 resources, each with its 10 tags.\n\nYou can set TagsPerPage to a minimum of 100 items up to a maximum of 500 items.\n\n--resource-type-filters (list)\n\nSpecifies the resource types that you want included in the response. The format of each resource type is service[:resourceType] . For example, specifying a resource type of ec2 returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of ec2:instance returns only EC2 instances.\n\nThe string for each service name and resource type is the same as that embedded in a resource’s Amazon Resource Name (ARN). Consult the AWS General Reference for the following:\n\nFor more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces .\n\nYou can specify multiple resource types by using an array. The array can include up to 100 items. Note that the length constraint requirement applies to each resource type filter.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--include-compliance-details | --no-include-compliance-details (boolean)\n\nSpecifies whether to include details regarding the compliance with the effective tag policy. Set this to true to determine whether resources are compliant with the tag policy and to get details.\n\n--exclude-compliant-resources | --no-exclude-compliant-resources (boolean)\n\nSpecifies whether to exclude resources that are compliant with the tag policy. Set this to true if you are interested in retrieving information on noncompliant resources only.\n\nYou can use this parameter only if the IncludeComplianceDetails parameter is also set to true .\n\n--resource-arn-list (list)\n\nSpecifies a list of ARNs of resources for which you want to retrieve tag data. You can’t specify both this parameter and any of the pagination parameters (ResourcesPerPage , TagsPerPage , PaginationToken ) in the same request. If you specify both, you get an Invalid Parameter exception.\n\nIf a resource specified by this parameter doesn’t exist, it doesn’t generate an error; it simply isn’t included in the response.\n\nAn ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPaginationToken -> (string)\n\nA string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the PaginationToken value in the request for the next page.\n\nResourceTagMappingList -> (list)\n\nA list of resource ARNs and the tags (keys and values) associated with those ARNs.\n\n(structure)\n\nA list of resource ARNs and the tags (keys and values) that are associated with each.\n\nResourceARN -> (string)\n\nThe ARN of the resource.\n\nTags -> (list)\n\nThe tags that have been applied to one or more AWS resources.\n\n(structure)\n\nThe metadata that you apply to AWS resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see Tagging AWS Resources in the AWS General Reference .\n\nKey -> (string)\n\nOne part of a key-value pair that makes up a tag. A key is a general label that acts like a category for more specific tag values.\n\nValue -> (string)\n\nOne part of a key-value pair that make up a tag. A value acts as a descriptor within a tag category (key). The value can be empty or null.\n\nComplianceDetails -> (structure)\n\nInformation that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.\n\nNoncompliantKeys -> (list)\n\nThese tag keys on the resource are noncompliant with the effective tag policy.\n\n(string)\n\nKeysWithNoncompliantValues -> (list)\n\nThese are keys defined in the effective policy that are on the resource with either incorrect case treatment or noncompliant values.\n\n(string)\n\nComplianceStatus -> (boolean)\n\nWhether a resource is compliant with the effective tag policy.",
      "command_examples": "Examples\n\nTo get a list of tagged resources\n\nThe following get-resources example displays a list of resources in the account that are tagged with the specified key name and value.\n\naws resourcegroupstaggingapi get-resources \\\n    --tag-filters Key=Environment,Values=Production \\\n    --tags-per-page 100\n\n\nOutput:\n\n{\n    \"ResourceTagMappingList\": [\n        {\n            \"ResourceARN\": \" arn:aws:inspector:us-west-2:123456789012:target/0-nvgVhaxX/template/0-7sbz2Kz0\",\n            \"Tags\": [\n                {\n                    \"Key\": \"Environment\",\n                    \"Value\": \"Production\"\n                }\n            ]\n        }\n    ]\n}\n\n\nFor more information, see GetResources in the Resource Groups Tagging API Reference."
    },
    {
      "command_name": "get-tag-keys",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/get-tag-keys.html",
      "command_description": "Description\n\nReturns all tag keys currently in use in the specified Region for the calling AWS account.\n\nThis operation supports pagination, where the response can be sent in multiple pages. You should check the PaginationToken response parameter to determine if there are additional results available to return. Repeat the query, passing the PaginationToken response parameter value as an input to the next request until you recieve a null value. A null value for PaginationToken indicates that there are no more results waiting to be returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-tag-keys is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TagKeys",
      "command_synopsis": "Synopsis\n  get-tag-keys\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPaginationToken -> (string)\n\nA string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the PaginationToken value in the request for the next page.\n\nTagKeys -> (list)\n\nA list of all tag keys in the AWS account.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of all tag keys\n\nThe following get-tag-keys example retrieves the list of all tag key names used by resources in the account.\n\naws resourcegroupstaggingapi get-tag-keys\n\n\nOutput:\n\n{\n    \"TagKeys\": [\n        \"Environment\",\n        \"CostCenter\",\n        \"Department\"\n    ]\n}\n\n\nFor more information, see GetTagKeys in the Resource Groups Tagging API Reference."
    },
    {
      "command_name": "get-tag-values",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/get-tag-values.html",
      "command_description": "Description\n\nReturns all tag values for the specified key that are used in the specified AWS Region for the calling AWS account.\n\nThis operation supports pagination, where the response can be sent in multiple pages. You should check the PaginationToken response parameter to determine if there are additional results available to return. Repeat the query, passing the PaginationToken response parameter value as an input to the next request until you recieve a null value. A null value for PaginationToken indicates that there are no more results waiting to be returned.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nget-tag-values is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: TagValues",
      "command_synopsis": "Synopsis\n  get-tag-values\n--key <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--key <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--key (string)\n\nSpecifies the tag key for which you want to list all existing values that are currently used in the specified AWS Region for the calling AWS account.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPaginationToken -> (string)\n\nA string that indicates that there is more data available than this response contains. To receive the next part of the response, specify this response value as the PaginationToken value in the request for the next page.\n\nTagValues -> (list)\n\nA list of all tag values for the specified key currently used in the specified AWS Region for the calling AWS account.\n\n(string)",
      "command_examples": "Examples\n\nTo get a list of all tag values\n\nThe following get-tag-values example displays all of the values used for the specified key for all resources in the\n\naws resourcegroupstaggingapi get-tag-values \\\n    --key=Environment\n\n\nOutput:\n\n{\n    \"TagValues\": [\n        \"Alpha\",\n        \"Gamma\",\n        \"Production\"\n    ]\n}\n\n\nFor more information, see GetTagValues in the Resource Groups Tagging API Reference."
    },
    {
      "command_name": "start-report-creation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/start-report-creation.html",
      "command_description": "Description\n\nGenerates a report that lists all tagged resources in the accounts across your organization and tells whether each resource is compliant with the effective tag policy. Compliance data is refreshed daily. The report is generated asynchronously.\n\nThe generated report is saved to the following location:\n\ns3://example-bucket/AwsTagPolicies/o-exampleorgid/YYYY-MM-ddTHH:mm:ssZ/report.csv\n\nYou can call this operation only from the organization’s management account and from the us-east-1 Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-report-creation\n--s3-bucket <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--s3-bucket <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--s3-bucket (string)\n\nThe name of the Amazon S3 bucket where the report will be stored; for example:\n\nawsexamplebucket\n\nFor more information on S3 bucket requirements, including an example bucket policy, see the example S3 bucket policy on this page.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "tag-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/tag-resources.html",
      "command_description": "Description\n\nApplies one or more tags to the specified resources. Note the following:\n\nNot all resources can have tags. For a list of services with resources that support tagging using this operation, see Services that support the Resource Groups Tagging API .\n\nEach resource can have up to 50 tags. For other limits, see Tag Naming and Usage Conventions in the AWS General Reference.\n\nYou can only tag resources that are located in the specified AWS Region for the AWS account.\n\nTo add tags to a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for adding tags. For more information, see the documentation for each service.\n\nWarning\n\nDo not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resources\n--resource-arn-list <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn-list <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn-list (list)\n\nSpecifies the list of ARNs of the resources that you want to apply tags to.\n\nAn ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (map)\n\nSpecifies a list of tags that you want to add to the specified resources. A tag consists of a key and a value that you define.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedResourcesMap -> (map)\n\nA map containing a key-value pair for each failed item that couldn’t be tagged. The key is the ARN of the failed resource. The value is a FailureInfo object that contains an error code, a status code, and an error message. If there are no errors, the FailedResourcesMap is empty.\n\nkey -> (string)\n\nvalue -> (structure)\n\nInformation about the errors that are returned for each failed resource. This information can include InternalServiceException and InvalidParameterException errors. It can also include any valid error code returned by the AWS service that hosts the resource that the ARN key represents.\n\nThe following are common error codes that you might receive from other AWS services:\n\nInternalServiceException – This can mean that the Resource Groups Tagging API didn’t receive a response from another AWS service. It can also mean the the resource type in the request is not supported by the Resource Groups Tagging API. In these cases, it’s safe to retry the request and then call GetResources to verify the changes.\n\nAccessDeniedException – This can mean that you need permission to calling tagging operations in the AWS service that contains the resource. For example, to use the Resource Groups Tagging API to tag a CloudWatch alarm resource, you need permission to call ` TagResources http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html`__ and ` TagResource http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html`__ in the CloudWatch API.\n\nFor more information on errors that are generated from other AWS services, see the documentation for that service.\n\nStatusCode -> (integer)\n\nThe HTTP status code of the common error.\n\nErrorCode -> (string)\n\nThe code of the common error. Valid values include InternalServiceException , InvalidParameterException , and any valid error code returned by the AWS service that hosts the resource that you want to tag.\n\nErrorMessage -> (string)\n\nThe message of the common error.",
      "command_examples": "Examples\n\nTo attach a tag to a resource\n\nThe following tag-resources example tags the specified resource with a key name and value.\n\naws resourcegroupstaggingapi tag-resources \\\n    --resource-arn-list arn:aws:s3:::MyProductionBucket \\\n    --tags Environment=Production,CostCenter=1234\n\n\nOutput:\n\n{\n    \"FailedResourcesMap\": {}\n}\n\n\nFor more information, see TagResources in the Resource Groups Tagging API Reference."
    },
    {
      "command_name": "untag-resources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/resourcegroupstaggingapi/untag-resources.html",
      "command_description": "Description\n\nRemoves the specified tags from the specified resources. When you specify a tag key, the action removes both that key and its associated value. The operation succeeds even if you attempt to remove tags from a resource that were already removed. Note the following:\n\nTo remove tags from a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for removing tags. For more information, see the documentation for the service whose resource you want to untag.\n\nYou can only tag resources that are located in the specified AWS Region for the calling AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resources\n--resource-arn-list <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn-list <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn-list (list)\n\nSpecifies a list of ARNs of the resources that you want to remove tags from.\n\nAn ARN (Amazon Resource Name) uniquely identifies a resource. For more information, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference .\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tag-keys (list)\n\nSpecifies a list of tag keys that you want to remove from the specified resources.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedResourcesMap -> (map)\n\nA map containing a key-value pair for each failed item that couldn’t be untagged. The key is the ARN of the failed resource. The value is a FailureInfo object that contains an error code, a status code, and an error message. If there are no errors, the FailedResourcesMap is empty.\n\nkey -> (string)\n\nvalue -> (structure)\n\nInformation about the errors that are returned for each failed resource. This information can include InternalServiceException and InvalidParameterException errors. It can also include any valid error code returned by the AWS service that hosts the resource that the ARN key represents.\n\nThe following are common error codes that you might receive from other AWS services:\n\nInternalServiceException – This can mean that the Resource Groups Tagging API didn’t receive a response from another AWS service. It can also mean the the resource type in the request is not supported by the Resource Groups Tagging API. In these cases, it’s safe to retry the request and then call GetResources to verify the changes.\n\nAccessDeniedException – This can mean that you need permission to calling tagging operations in the AWS service that contains the resource. For example, to use the Resource Groups Tagging API to tag a CloudWatch alarm resource, you need permission to call ` TagResources http://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_TagResources.html`__ and ` TagResource http://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html`__ in the CloudWatch API.\n\nFor more information on errors that are generated from other AWS services, see the documentation for that service.\n\nStatusCode -> (integer)\n\nThe HTTP status code of the common error.\n\nErrorCode -> (string)\n\nThe code of the common error. Valid values include InternalServiceException , InvalidParameterException , and any valid error code returned by the AWS service that hosts the resource that you want to tag.\n\nErrorMessage -> (string)\n\nThe message of the common error.",
      "command_examples": "Examples\n\nTo remove a tag from a resource\n\nThe following untag-resources example removes the specified tag keys and any associated values from the specified resource.\n\naws resourcegroupstaggingapi untag-resources \\\n    --resource-arn-list arn:aws:s3:::awsexamplebucket \\\n    --tag-keys Environment CostCenter\n\n\nOutput:\n\n{\n    \"FailedResourcesMap\": {}\n}\n\n\nFor more information, see UntagResources in the Resource Groups Tagging API Reference."
    }
  ],
  "service_description": "Description"
}