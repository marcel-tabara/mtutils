{
  "service_name": "mq",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/index.html",
  "service_commands": [
    {
      "command_name": "create-broker",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/create-broker.html",
      "command_description": "Description\n\nCreates a broker. Note: This API is asynchronous.\n\nTo create a broker, you must either use the AmazonMQFullAccess IAM policy or include the following EC2 permissions in your IAM policy.\n\nec2:CreateNetworkInterface This permission is required to allow Amazon MQ to create an elastic network interface (ENI) on behalf of your account.\n\nec2:CreateNetworkInterfacePermission This permission is required to attach the ENI to the broker instance.\n\nec2:DeleteNetworkInterface\n\nec2:DeleteNetworkInterfacePermission\n\nec2:DetachNetworkInterface\n\nec2:DescribeInternetGateways\n\nec2:DescribeNetworkInterfaces\n\nec2:DescribeNetworkInterfacePermissions\n\nec2:DescribeRouteTables\n\nec2:DescribeSecurityGroups\n\nec2:DescribeSubnets\n\nec2:DescribeVpcs\n\nFor more information, see Create an IAM User and Get Your AWS Credentials and Never Modify or Delete the Amazon MQ Elastic Network Interface in the Amazon MQ Developer Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-broker\n[--authentication-strategy <value>]\n--auto-minor-version-upgrade | --no-auto-minor-version-upgrade\n--broker-name <value>\n[--configuration <value>]\n[--creator-request-id <value>]\n--deployment-mode <value>\n[--encryption-options <value>]\n--engine-type <value>\n--engine-version <value>\n--host-instance-type <value>\n[--ldap-server-metadata <value>]\n[--logs <value>]\n[--maintenance-window-start-time <value>]\n--publicly-accessible | --no-publicly-accessible\n[--security-groups <value>]\n[--storage-type <value>]\n[--subnet-ids <value>]\n[--tags <value>]\n--users <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--authentication-strategy <value>]",
        "--auto-minor-version-upgrade | --no-auto-minor-version-upgrade",
        "--broker-name <value>",
        "[--configuration <value>]",
        "[--creator-request-id <value>]",
        "--deployment-mode <value>",
        "[--encryption-options <value>]",
        "--engine-type <value>",
        "--engine-version <value>",
        "--host-instance-type <value>",
        "[--ldap-server-metadata <value>]",
        "[--logs <value>]",
        "[--maintenance-window-start-time <value>]",
        "--publicly-accessible | --no-publicly-accessible",
        "[--security-groups <value>]",
        "[--storage-type <value>]",
        "[--subnet-ids <value>]",
        "[--tags <value>]",
        "--users <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--authentication-strategy (string)\n\nOptional. The authentication strategy used to secure the broker. The default is SIMPLE.\n\nPossible values:\n\nSIMPLE\n\nLDAP\n\n--auto-minor-version-upgrade | --no-auto-minor-version-upgrade (boolean)\n\nEnables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot. Set to true by default, if no value is specified.\n\n--broker-name (string)\n\nRequired. The broker’s name. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.\n\n--configuration (structure)\n\nA list of information about the configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nShorthand Syntax:\n\nId=string,Revision=integer\n\n\nJSON Syntax:\n\n{\n  \"Id\": \"string\",\n  \"Revision\": integer\n}\n\n\n--creator-request-id (string)\n\nThe unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn’t require idempotency.\n\n--deployment-mode (string)\n\nRequired. The broker’s deployment mode.\n\nPossible values:\n\nSINGLE_INSTANCE\n\nACTIVE_STANDBY_MULTI_AZ\n\nCLUSTER_MULTI_AZ\n\n--encryption-options (structure)\n\nEncryption options for the broker. Does not apply to RabbitMQ brokers.\n\nKmsKeyId -> (string)\n\nThe customer master key (CMK) to use for the AWS Key Management Service (KMS). This key is used to encrypt your data at rest. If not provided, Amazon MQ will use a default CMK to encrypt your data.\n\nUseAwsOwnedKey -> (boolean)\n\nEnables the use of an AWS owned CMK using AWS Key Management Service (KMS). Set to true by default, if no value is provided, for example, for RabbitMQ brokers.\n\nShorthand Syntax:\n\nKmsKeyId=string,UseAwsOwnedKey=boolean\n\n\nJSON Syntax:\n\n{\n  \"KmsKeyId\": \"string\",\n  \"UseAwsOwnedKey\": true|false\n}\n\n\n--engine-type (string)\n\nRequired. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.\n\nPossible values:\n\nACTIVEMQ\n\nRABBITMQ\n\n--engine-version (string)\n\nRequired. The broker engine’s version. For a list of supported engine versions, see Supported engines .\n\n--host-instance-type (string)\n\nRequired. The broker’s instance type.\n\n--ldap-server-metadata (structure)\n\nOptional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.\n\nHosts -> (list)\n\nSpecifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.\n\n(string)\n\nRoleBase -> (string)\n\nThe distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.\n\nRoleName -> (string)\n\nSpecifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.\n\nRoleSearchMatching -> (string)\n\nThe LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client’s username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.\n\nRoleSearchSubtree -> (boolean)\n\nThe directory search scope for the role. If set to true, scope is to search the entire subtree.\n\nServiceAccountPassword -> (string)\n\nService account password. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nServiceAccountUsername -> (string)\n\nService account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nUserBase -> (string)\n\nSelect a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.\n\nUserRoleName -> (string)\n\nSpecifies the name of the LDAP attribute for the user group membership.\n\nUserSearchMatching -> (string)\n\nThe LDAP search filter used to find users within the userBase. The client’s username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.\n\nUserSearchSubtree -> (boolean)\n\nThe directory search scope for the user. If set to true, scope is to search the entire subtree.\n\nShorthand Syntax:\n\nHosts=string,string,RoleBase=string,RoleName=string,RoleSearchMatching=string,RoleSearchSubtree=boolean,ServiceAccountPassword=string,ServiceAccountUsername=string,UserBase=string,UserRoleName=string,UserSearchMatching=string,UserSearchSubtree=boolean\n\n\nJSON Syntax:\n\n{\n  \"Hosts\": [\"string\", ...],\n  \"RoleBase\": \"string\",\n  \"RoleName\": \"string\",\n  \"RoleSearchMatching\": \"string\",\n  \"RoleSearchSubtree\": true|false,\n  \"ServiceAccountPassword\": \"string\",\n  \"ServiceAccountUsername\": \"string\",\n  \"UserBase\": \"string\",\n  \"UserRoleName\": \"string\",\n  \"UserSearchMatching\": \"string\",\n  \"UserSearchSubtree\": true|false\n}\n\n\n--logs (structure)\n\nEnables Amazon CloudWatch logging for brokers.\n\nAudit -> (boolean)\n\nEnables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged. Does not apply to RabbitMQ brokers.\n\nGeneral -> (boolean)\n\nEnables general logging.\n\nShorthand Syntax:\n\nAudit=boolean,General=boolean\n\n\nJSON Syntax:\n\n{\n  \"Audit\": true|false,\n  \"General\": true|false\n}\n\n\n--maintenance-window-start-time (structure)\n\nThe parameters that determine the WeeklyStartTime.\n\nDayOfWeek -> (string)\n\nRequired. The day of the week.\n\nTimeOfDay -> (string)\n\nRequired. The time, in 24-hour format.\n\nTimeZone -> (string)\n\nThe time zone, UTC by default, in either the Country/City format, or the UTC offset format.\n\nShorthand Syntax:\n\nDayOfWeek=string,TimeOfDay=string,TimeZone=string\n\n\nJSON Syntax:\n\n{\n  \"DayOfWeek\": \"MONDAY\"|\"TUESDAY\"|\"WEDNESDAY\"|\"THURSDAY\"|\"FRIDAY\"|\"SATURDAY\"|\"SUNDAY\",\n  \"TimeOfDay\": \"string\",\n  \"TimeZone\": \"string\"\n}\n\n\n--publicly-accessible | --no-publicly-accessible (boolean)\n\nEnables connections from applications outside of the VPC that hosts the broker’s subnets. Set to false by default, if no value is provided.\n\n--security-groups (list)\n\nThe list of rules (1 minimum, 125 maximum) that authorize connections to brokers.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--storage-type (string)\n\nThe broker’s storage type.\n\nPossible values:\n\nEBS\n\nEFS\n\n--subnet-ids (list)\n\nThe list of groups that define which subnets and IP ranges the broker can use from different Availability Zones. If you specify more than one subnet, the subnets must be in different Availability Zones. Amazon MQ will not be able to create VPC endpoints for your broker with multiple subnets in the same Availability Zone. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ Amazon MQ for ActiveMQ deployment requires two subnets. A CLUSTER_MULTI_AZ Amazon MQ for RabbitMQ deployment has no subnet requirements when deployed with public accessibility. Deployment without public accessibility requires at least one subnet.\n\nWarning\n\nIf you specify subnets in a shared VPC for a RabbitMQ broker, the associated VPC to which the specified subnets belong must be owned by your AWS account. Amazon MQ will not be able to create VPC endpoints in VPCs that are not owned by your AWS account.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--tags (map)\n\nCreate tags when creating the broker.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--users (list)\n\nRequired. The list of broker users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\nWarning\n\nAmazon MQ for RabbitMQ\n\nWhen you create an Amazon MQ for RabbitMQ broker, one and only one administrative user is accepted and created when a broker is first provisioned. All subsequent broker users are created by making RabbitMQ API calls directly to brokers or via the RabbitMQ web console.\n\n(structure)\n\nA user associated with the broker. For RabbitMQ brokers, one and only one administrative user is accepted and created when a broker is first provisioned. All subsequent broker users are created by making RabbitMQ API calls directly to brokers or via the RabbitMQ web console.\n\nConsoleAccess -> (boolean)\n\nEnables access to the ActiveMQ Web Console for the ActiveMQ user. Does not apply to RabbitMQ brokers.\n\nGroups -> (list)\n\nThe list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long. Does not apply to RabbitMQ brokers.\n\n(string)\n\nPassword -> (string)\n\nRequired. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas, colons, or equal signs (,:=).\n\nUsername -> (string)\n\nimportant>Amazon MQ for ActiveMQ For ActiveMQ brokers, this value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n/important>\n\nWarning\n\nAmazon MQ for RabbitMQ\n\nFor RabbitMQ brokers, this value can contain only alphanumeric characters, dashes, periods, underscores (- . _). This value must not contain a tilde (~) character. Amazon MQ prohibts using guest as a valid usename. This value must be 2-100 characters long.\n\nShorthand Syntax:\n\nConsoleAccess=boolean,Groups=string,string,Password=string,Username=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"ConsoleAccess\": true|false,\n    \"Groups\": [\"string\", ...],\n    \"Password\": \"string\",\n    \"Username\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerArn -> (string)\n\nThe broker’s Amazon Resource Name (ARN).\n\nBrokerId -> (string)\n\nThe unique ID that Amazon MQ generates for the broker."
    },
    {
      "command_name": "create-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/create-configuration.html",
      "command_description": "Description\n\nCreates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-configuration\n[--authentication-strategy <value>]\n--engine-type <value>\n--engine-version <value>\n--name <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--authentication-strategy <value>]",
        "--engine-type <value>",
        "--engine-version <value>",
        "--name <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--authentication-strategy (string)\n\nOptional. The authentication strategy associated with the configuration. The default is SIMPLE.\n\nPossible values:\n\nSIMPLE\n\nLDAP\n\n--engine-type (string)\n\nRequired. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.\n\nPossible values:\n\nACTIVEMQ\n\nRABBITMQ\n\n--engine-version (string)\n\nRequired. The broker engine’s version. For a list of supported engine versions, see Supported engines .\n\n--name (string)\n\nRequired. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.\n\n--tags (map)\n\nCreate tags when creating the configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nRequired. The Amazon Resource Name (ARN) of the configuration.\n\nAuthenticationStrategy -> (string)\n\nOptional. The authentication strategy associated with the configuration. The default is SIMPLE.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nLatestRevision -> (structure)\n\nThe latest revision of the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nThe description of the configuration revision.\n\nRevision -> (integer)\n\nRequired. The revision number of the configuration.\n\nName -> (string)\n\nRequired. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long."
    },
    {
      "command_name": "create-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/create-tags.html",
      "command_description": "Description\n\nAdd a tag to a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-tags\n--resource-arn <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource tag.\n\n--tags (map)\n\nThe key-value pair for the resource tag.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "create-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/create-user.html",
      "command_description": "Description\n\nCreates an ActiveMQ user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-user\n--broker-id <value>\n[--console-access | --no-console-access]\n[--groups <value>]\n--password <value>\n--username <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--console-access | --no-console-access]",
        "[--groups <value>]",
        "--password <value>",
        "--username <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--console-access | --no-console-access (boolean)\n\nEnables access to the ActiveMQ Web Console for the ActiveMQ user.\n\n--groups (list)\n\nThe list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--password (string)\n\nRequired. The password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas, colons, or equal signs (,:=).\n\n--username (string)\n\nThe username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-broker",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/delete-broker.html",
      "command_description": "Description\n\nDeletes a broker. Note: This API is asynchronous.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-broker\n--broker-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerId -> (string)\n\nThe unique ID that Amazon MQ generates for the broker."
    },
    {
      "command_name": "delete-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/delete-tags.html",
      "command_description": "Description\n\nRemoves a tag from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-tags\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource tag.\n\n--tag-keys (list)\n\nAn array of tag keys to delete\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/delete-user.html",
      "command_description": "Description\n\nDeletes an ActiveMQ user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-user\n--broker-id <value>\n--username <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "--username <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--username (string)\n\nThe username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "describe-broker",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-broker.html",
      "command_description": "Description\n\nReturns information about the specified broker.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-broker\n--broker-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAuthenticationStrategy -> (string)\n\nThe authentication strategy used to secure the broker. The default is SIMPLE.\n\nAutoMinorVersionUpgrade -> (boolean)\n\nEnables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.\n\nBrokerArn -> (string)\n\nThe broker’s Amazon Resource Name (ARN).\n\nBrokerId -> (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\nBrokerInstances -> (list)\n\nA list of information about allocated brokers.\n\n(structure)\n\nReturns information about all brokers.\n\nConsoleURL -> (string)\n\nThe brokers web console URL.\n\nEndpoints -> (list)\n\nThe broker’s wire-level protocol endpoints.\n\n(string)\n\nIpAddress -> (string)\n\nThe IP address of the Elastic Network Interface (ENI) attached to the broker. Does not apply to RabbitMQ brokers.\n\nBrokerName -> (string)\n\nThe broker’s name. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.\n\nBrokerState -> (string)\n\nThe broker’s status.\n\nConfigurations -> (structure)\n\nThe list of all revisions for the specified configuration.\n\nCurrent -> (structure)\n\nThe broker’s current configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nHistory -> (list)\n\nThe history of configurations applied to the broker.\n\n(structure)\n\nA list of information about the configuration.\n\nWarning\n\nDoes not apply to RabbitMQ brokers.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nPending -> (structure)\n\nThe broker’s pending configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nCreated -> (timestamp)\n\nThe time when the broker was created.\n\nDeploymentMode -> (string)\n\nThe broker’s deployment mode.\n\nEncryptionOptions -> (structure)\n\nEncryption options for the broker. Does not apply to RabbitMQ brokers.\n\nKmsKeyId -> (string)\n\nThe customer master key (CMK) to use for the AWS Key Management Service (KMS). This key is used to encrypt your data at rest. If not provided, Amazon MQ will use a default CMK to encrypt your data.\n\nUseAwsOwnedKey -> (boolean)\n\nEnables the use of an AWS owned CMK using AWS Key Management Service (KMS). Set to true by default, if no value is provided, for example, for RabbitMQ brokers.\n\nEngineType -> (string)\n\nThe type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.\n\nEngineVersion -> (string)\n\nThe broker engine’s version. For a list of supported engine versions, see Supported engines .\n\nHostInstanceType -> (string)\n\nThe broker’s instance type.\n\nLdapServerMetadata -> (structure)\n\nThe metadata of the LDAP server used to authenticate and authorize connections to the broker.\n\nHosts -> (list)\n\nSpecifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.\n\n(string)\n\nRoleBase -> (string)\n\nThe distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.\n\nRoleName -> (string)\n\nSpecifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.\n\nRoleSearchMatching -> (string)\n\nThe LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client’s username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.\n\nRoleSearchSubtree -> (boolean)\n\nThe directory search scope for the role. If set to true, scope is to search the entire subtree.\n\nServiceAccountUsername -> (string)\n\nService account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nUserBase -> (string)\n\nSelect a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.\n\nUserRoleName -> (string)\n\nSpecifies the name of the LDAP attribute for the user group membership.\n\nUserSearchMatching -> (string)\n\nThe LDAP search filter used to find users within the userBase. The client’s username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.\n\nUserSearchSubtree -> (boolean)\n\nThe directory search scope for the user. If set to true, scope is to search the entire subtree.\n\nLogs -> (structure)\n\nThe list of information about logs currently enabled and pending to be deployed for the specified broker.\n\nAudit -> (boolean)\n\nEnables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.\n\nAuditLogGroup -> (string)\n\nThe location of the CloudWatch Logs log group where audit logs are sent.\n\nGeneral -> (boolean)\n\nEnables general logging.\n\nGeneralLogGroup -> (string)\n\nThe location of the CloudWatch Logs log group where general logs are sent.\n\nPending -> (structure)\n\nThe list of information about logs pending to be deployed for the specified broker.\n\nAudit -> (boolean)\n\nEnables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged.\n\nGeneral -> (boolean)\n\nEnables general logging.\n\nMaintenanceWindowStartTime -> (structure)\n\nThe parameters that determine the WeeklyStartTime.\n\nDayOfWeek -> (string)\n\nRequired. The day of the week.\n\nTimeOfDay -> (string)\n\nRequired. The time, in 24-hour format.\n\nTimeZone -> (string)\n\nThe time zone, UTC by default, in either the Country/City format, or the UTC offset format.\n\nPendingAuthenticationStrategy -> (string)\n\nThe authentication strategy that will be applied when the broker is rebooted. The default is SIMPLE.\n\nPendingEngineVersion -> (string)\n\nThe broker engine version to upgrade to. For a list of supported engine versions, see Supported engines .\n\nPendingHostInstanceType -> (string)\n\nThe broker’s host instance type to upgrade to. For a list of supported instance types, see Broker instance types .\n\nPendingLdapServerMetadata -> (structure)\n\nThe metadata of the LDAP server that will be used to authenticate and authorize connections to the broker after it is rebooted.\n\nHosts -> (list)\n\nSpecifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.\n\n(string)\n\nRoleBase -> (string)\n\nThe distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.\n\nRoleName -> (string)\n\nSpecifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.\n\nRoleSearchMatching -> (string)\n\nThe LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client’s username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.\n\nRoleSearchSubtree -> (boolean)\n\nThe directory search scope for the role. If set to true, scope is to search the entire subtree.\n\nServiceAccountUsername -> (string)\n\nService account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nUserBase -> (string)\n\nSelect a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.\n\nUserRoleName -> (string)\n\nSpecifies the name of the LDAP attribute for the user group membership.\n\nUserSearchMatching -> (string)\n\nThe LDAP search filter used to find users within the userBase. The client’s username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.\n\nUserSearchSubtree -> (boolean)\n\nThe directory search scope for the user. If set to true, scope is to search the entire subtree.\n\nPendingSecurityGroups -> (list)\n\nThe list of pending security groups to authorize connections to brokers.\n\n(string)\n\nPubliclyAccessible -> (boolean)\n\nEnables connections from applications outside of the VPC that hosts the broker’s subnets.\n\nSecurityGroups -> (list)\n\nThe list of rules (1 minimum, 125 maximum) that authorize connections to brokers.\n\n(string)\n\nStorageType -> (string)\n\nThe broker’s storage type.\n\nSubnetIds -> (list)\n\nThe list of groups that define which subnets and IP ranges the broker can use from different Availability Zones.\n\n(string)\n\nTags -> (map)\n\nThe list of all tags associated with this broker.\n\nkey -> (string)\n\nvalue -> (string)\n\nUsers -> (list)\n\nThe list of all broker usernames for the specified broker.\n\n(structure)\n\nReturns a list of all broker users. Does not apply to RabbitMQ brokers.\n\nPendingChange -> (string)\n\nThe type of change pending for the broker user.\n\nUsername -> (string)\n\nRequired. The username of the broker user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long."
    },
    {
      "command_name": "describe-broker-engine-types",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-broker-engine-types.html",
      "command_description": "Description\n\nDescribe available engine types and versions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-broker-engine-types\n[--engine-type <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--engine-type <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--engine-type (string)\n\nFilter response by engine type.\n\n--max-results (integer)\n\nThe maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\n--next-token (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerEngineTypes -> (list)\n\nList of available engine types and versions.\n\n(structure)\n\nTypes of broker engines.\n\nEngineType -> (string)\n\nThe broker’s engine type.\n\nEngineVersions -> (list)\n\nThe list of engine versions.\n\n(structure)\n\nId of the engine version.\n\nName -> (string)\n\nId for the version.\n\nMaxResults -> (integer)\n\nRequired. The maximum number of engine types that can be returned per page (20 by default). This value must be an integer from 5 to 100.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
    },
    {
      "command_name": "describe-broker-instance-options",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-broker-instance-options.html",
      "command_description": "Description\n\nDescribe available broker instance options.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-broker-instance-options\n[--engine-type <value>]\n[--host-instance-type <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--storage-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--engine-type <value>]",
        "[--host-instance-type <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--storage-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--engine-type (string)\n\nFilter response by engine type.\n\n--host-instance-type (string)\n\nFilter response by host instance type.\n\n--max-results (integer)\n\nThe maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\n--next-token (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\n--storage-type (string)\n\nFilter response by storage type.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerInstanceOptions -> (list)\n\nList of available broker instance options.\n\n(structure)\n\nOption for host instance type.\n\nAvailabilityZones -> (list)\n\nThe list of available az.\n\n(structure)\n\nName of the availability zone.\n\nName -> (string)\n\nId for the availability zone.\n\nEngineType -> (string)\n\nThe broker’s engine type.\n\nHostInstanceType -> (string)\n\nThe broker’s instance type.\n\nStorageType -> (string)\n\nThe broker’s storage type.\n\nSupportedDeploymentModes -> (list)\n\nThe list of supported deployment modes.\n\n(string)\n\nThe broker’s deployment mode.\n\nSupportedEngineVersions -> (list)\n\nThe list of supported engine versions.\n\n(string)\n\nMaxResults -> (integer)\n\nRequired. The maximum number of instance options that can be returned per page (20 by default). This value must be an integer from 5 to 100.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
    },
    {
      "command_name": "describe-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-configuration.html",
      "command_description": "Description\n\nReturns information about the specified configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-configuration\n--configuration-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nThe unique ID that Amazon MQ generates for the configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nRequired. The ARN of the configuration.\n\nAuthenticationStrategy -> (string)\n\nOptional. The authentication strategy associated with the configuration. The default is SIMPLE.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nRequired. The description of the configuration.\n\nEngineType -> (string)\n\nRequired. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.\n\nEngineVersion -> (string)\n\nRequired. The broker engine’s version. For a list of supported engine versions, see, Supported engines .\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nLatestRevision -> (structure)\n\nRequired. The latest revision of the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nThe description of the configuration revision.\n\nRevision -> (integer)\n\nRequired. The revision number of the configuration.\n\nName -> (string)\n\nRequired. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.\n\nTags -> (map)\n\nThe list of all tags associated with this configuration.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "describe-configuration-revision",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-configuration-revision.html",
      "command_description": "Description\n\nReturns the specified configuration revision for the specified configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-configuration-revision\n--configuration-id <value>\n--configuration-revision <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "--configuration-revision <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nThe unique ID that Amazon MQ generates for the configuration.\n\n--configuration-revision (string)\n\nThe revision of the configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConfigurationId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration.\n\nData -> (string)\n\nRequired. The base64-encoded XML configuration.\n\nDescription -> (string)\n\nThe description of the configuration."
    },
    {
      "command_name": "describe-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/describe-user.html",
      "command_description": "Description\n\nReturns information about an ActiveMQ user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-user\n--broker-id <value>\n--username <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "--username <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--username (string)\n\nThe username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the broker.\n\nConsoleAccess -> (boolean)\n\nEnables access to the the ActiveMQ Web Console for the ActiveMQ user.\n\nGroups -> (list)\n\nThe list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n(string)\n\nPending -> (structure)\n\nThe status of the changes pending for the ActiveMQ user.\n\nConsoleAccess -> (boolean)\n\nEnables access to the the ActiveMQ Web Console for the ActiveMQ user.\n\nGroups -> (list)\n\nThe list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n(string)\n\nPendingChange -> (string)\n\nRequired. The type of change pending for the ActiveMQ user.\n\nUsername -> (string)\n\nRequired. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long."
    },
    {
      "command_name": "list-brokers",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/list-brokers.html",
      "command_description": "Description\n\nReturns a list of all brokers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-brokers is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: BrokerSummaries",
      "command_synopsis": "Synopsis\n  list-brokers\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerSummaries -> (list)\n\nA list of information about all brokers.\n\n(structure)\n\nReturns information about all brokers.\n\nBrokerArn -> (string)\n\nThe broker’s Amazon Resource Name (ARN).\n\nBrokerId -> (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\nBrokerName -> (string)\n\nThe broker’s name. This value is unique in your AWS account, 1-50 characters long, and containing only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.\n\nBrokerState -> (string)\n\nThe broker’s status.\n\nCreated -> (timestamp)\n\nThe time when the broker was created.\n\nDeploymentMode -> (string)\n\nThe broker’s deployment mode.\n\nEngineType -> (string)\n\nThe type of broker engine.\n\nHostInstanceType -> (string)\n\nThe broker’s instance type.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
    },
    {
      "command_name": "list-configuration-revisions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/list-configuration-revisions.html",
      "command_description": "Description\n\nReturns a list of all revisions for the specified configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-configuration-revisions\n--configuration-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nThe unique ID that Amazon MQ generates for the configuration.\n\n--max-results (integer)\n\nThe maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\n--next-token (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConfigurationId -> (string)\n\nThe unique ID that Amazon MQ generates for the configuration.\n\nMaxResults -> (integer)\n\nThe maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\nRevisions -> (list)\n\nThe list of all revisions for the specified configuration.\n\n(structure)\n\nReturns information about the specified configuration revision.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nThe description of the configuration revision.\n\nRevision -> (integer)\n\nRequired. The revision number of the configuration."
    },
    {
      "command_name": "list-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/list-configurations.html",
      "command_description": "Description\n\nReturns a list of all configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-configurations\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--max-results (integer)\n\nThe maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\n--next-token (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConfigurations -> (list)\n\nThe list of all revisions for the specified configuration.\n\n(structure)\n\nReturns information about all configurations.\n\nArn -> (string)\n\nRequired. The ARN of the configuration.\n\nAuthenticationStrategy -> (string)\n\nOptional. The authentication strategy associated with the configuration. The default is SIMPLE.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nRequired. The description of the configuration.\n\nEngineType -> (string)\n\nRequired. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.\n\nEngineVersion -> (string)\n\nRequired. The broker engine’s version. For a list of supported engine versions, see, Supported engines .\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nLatestRevision -> (structure)\n\nRequired. The latest revision of the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nThe description of the configuration revision.\n\nRevision -> (integer)\n\nRequired. The revision number of the configuration.\n\nName -> (string)\n\nRequired. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.\n\nTags -> (map)\n\nThe list of all tags associated with this configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nMaxResults -> (integer)\n\nThe maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
    },
    {
      "command_name": "list-tags",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/list-tags.html",
      "command_description": "Description\n\nLists tags for a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource tag.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nThe key-value pair for the resource tag.\n\nkey -> (string)\n\nvalue -> (string)"
    },
    {
      "command_name": "list-users",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/list-users.html",
      "command_description": "Description\n\nReturns a list of all ActiveMQ users.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-users\n--broker-id <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--max-results (integer)\n\nThe maximum number of brokers that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100.\n\n--next-token (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nBrokerId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the broker.\n\nMaxResults -> (integer)\n\nRequired. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100.\n\nNextToken -> (string)\n\nThe token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty.\n\nUsers -> (list)\n\nRequired. The list of all ActiveMQ usernames for the specified broker. Does not apply to RabbitMQ brokers.\n\n(structure)\n\nReturns a list of all broker users. Does not apply to RabbitMQ brokers.\n\nPendingChange -> (string)\n\nThe type of change pending for the broker user.\n\nUsername -> (string)\n\nRequired. The username of the broker user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long."
    },
    {
      "command_name": "reboot-broker",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/reboot-broker.html",
      "command_description": "Description\n\nReboots a broker. Note: This API is asynchronous.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  reboot-broker\n--broker-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-broker",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/update-broker.html",
      "command_description": "Description\n\nAdds a pending configuration change to a broker.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-broker\n[--authentication-strategy <value>]\n[--auto-minor-version-upgrade | --no-auto-minor-version-upgrade]\n--broker-id <value>\n[--configuration <value>]\n[--engine-version <value>]\n[--host-instance-type <value>]\n[--ldap-server-metadata <value>]\n[--logs <value>]\n[--maintenance-window-start-time <value>]\n[--security-groups <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--authentication-strategy <value>]",
        "[--auto-minor-version-upgrade | --no-auto-minor-version-upgrade]",
        "--broker-id <value>",
        "[--configuration <value>]",
        "[--engine-version <value>]",
        "[--host-instance-type <value>]",
        "[--ldap-server-metadata <value>]",
        "[--logs <value>]",
        "[--maintenance-window-start-time <value>]",
        "[--security-groups <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--authentication-strategy (string)\n\nOptional. The authentication strategy used to secure the broker. The default is SIMPLE.\n\nPossible values:\n\nSIMPLE\n\nLDAP\n\n--auto-minor-version-upgrade | --no-auto-minor-version-upgrade (boolean)\n\nEnables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot.\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--configuration (structure)\n\nA list of information about the configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nShorthand Syntax:\n\nId=string,Revision=integer\n\n\nJSON Syntax:\n\n{\n  \"Id\": \"string\",\n  \"Revision\": integer\n}\n\n\n--engine-version (string)\n\nThe broker engine version. For a list of supported engine versions, see Supported engines .\n\n--host-instance-type (string)\n\nThe broker’s host instance type to upgrade to. For a list of supported instance types, see Broker instance types .\n\n--ldap-server-metadata (structure)\n\nOptional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.\n\nHosts -> (list)\n\nSpecifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.\n\n(string)\n\nRoleBase -> (string)\n\nThe distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.\n\nRoleName -> (string)\n\nSpecifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.\n\nRoleSearchMatching -> (string)\n\nThe LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client’s username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.\n\nRoleSearchSubtree -> (boolean)\n\nThe directory search scope for the role. If set to true, scope is to search the entire subtree.\n\nServiceAccountPassword -> (string)\n\nService account password. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nServiceAccountUsername -> (string)\n\nService account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nUserBase -> (string)\n\nSelect a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.\n\nUserRoleName -> (string)\n\nSpecifies the name of the LDAP attribute for the user group membership.\n\nUserSearchMatching -> (string)\n\nThe LDAP search filter used to find users within the userBase. The client’s username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.\n\nUserSearchSubtree -> (boolean)\n\nThe directory search scope for the user. If set to true, scope is to search the entire subtree.\n\nShorthand Syntax:\n\nHosts=string,string,RoleBase=string,RoleName=string,RoleSearchMatching=string,RoleSearchSubtree=boolean,ServiceAccountPassword=string,ServiceAccountUsername=string,UserBase=string,UserRoleName=string,UserSearchMatching=string,UserSearchSubtree=boolean\n\n\nJSON Syntax:\n\n{\n  \"Hosts\": [\"string\", ...],\n  \"RoleBase\": \"string\",\n  \"RoleName\": \"string\",\n  \"RoleSearchMatching\": \"string\",\n  \"RoleSearchSubtree\": true|false,\n  \"ServiceAccountPassword\": \"string\",\n  \"ServiceAccountUsername\": \"string\",\n  \"UserBase\": \"string\",\n  \"UserRoleName\": \"string\",\n  \"UserSearchMatching\": \"string\",\n  \"UserSearchSubtree\": true|false\n}\n\n\n--logs (structure)\n\nEnables Amazon CloudWatch logging for brokers.\n\nAudit -> (boolean)\n\nEnables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged. Does not apply to RabbitMQ brokers.\n\nGeneral -> (boolean)\n\nEnables general logging.\n\nShorthand Syntax:\n\nAudit=boolean,General=boolean\n\n\nJSON Syntax:\n\n{\n  \"Audit\": true|false,\n  \"General\": true|false\n}\n\n\n--maintenance-window-start-time (structure)\n\nThe parameters that determine the WeeklyStartTime.\n\nDayOfWeek -> (string)\n\nRequired. The day of the week.\n\nTimeOfDay -> (string)\n\nRequired. The time, in 24-hour format.\n\nTimeZone -> (string)\n\nThe time zone, UTC by default, in either the Country/City format, or the UTC offset format.\n\nShorthand Syntax:\n\nDayOfWeek=string,TimeOfDay=string,TimeZone=string\n\n\nJSON Syntax:\n\n{\n  \"DayOfWeek\": \"MONDAY\"|\"TUESDAY\"|\"WEDNESDAY\"|\"THURSDAY\"|\"FRIDAY\"|\"SATURDAY\"|\"SUNDAY\",\n  \"TimeOfDay\": \"string\",\n  \"TimeZone\": \"string\"\n}\n\n\n--security-groups (list)\n\nThe list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nAuthenticationStrategy -> (string)\n\nOptional. The authentication strategy used to secure the broker. The default is SIMPLE.\n\nAutoMinorVersionUpgrade -> (boolean)\n\nThe new boolean value that specifies whether broker engines automatically upgrade to new minor versions as new versions are released and supported by Amazon MQ.\n\nBrokerId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the broker.\n\nConfiguration -> (structure)\n\nThe ID of the updated configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nRevision -> (integer)\n\nThe revision number of the configuration.\n\nEngineVersion -> (string)\n\nThe broker engine version to upgrade to. For a list of supported engine versions, see Supported engines .\n\nHostInstanceType -> (string)\n\nThe broker’s host instance type to upgrade to. For a list of supported instance types, see Broker instance types .\n\nLdapServerMetadata -> (structure)\n\nOptional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.\n\nHosts -> (list)\n\nSpecifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.\n\n(string)\n\nRoleBase -> (string)\n\nThe distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.\n\nRoleName -> (string)\n\nSpecifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.\n\nRoleSearchMatching -> (string)\n\nThe LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client’s username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.\n\nRoleSearchSubtree -> (boolean)\n\nThe directory search scope for the role. If set to true, scope is to search the entire subtree.\n\nServiceAccountUsername -> (string)\n\nService account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.\n\nUserBase -> (string)\n\nSelect a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.\n\nUserRoleName -> (string)\n\nSpecifies the name of the LDAP attribute for the user group membership.\n\nUserSearchMatching -> (string)\n\nThe LDAP search filter used to find users within the userBase. The client’s username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.\n\nUserSearchSubtree -> (boolean)\n\nThe directory search scope for the user. If set to true, scope is to search the entire subtree.\n\nLogs -> (structure)\n\nThe list of information about logs to be enabled for the specified broker.\n\nAudit -> (boolean)\n\nEnables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged. Does not apply to RabbitMQ brokers.\n\nGeneral -> (boolean)\n\nEnables general logging.\n\nMaintenanceWindowStartTime -> (structure)\n\nThe parameters that determine the WeeklyStartTime.\n\nDayOfWeek -> (string)\n\nRequired. The day of the week.\n\nTimeOfDay -> (string)\n\nRequired. The time, in 24-hour format.\n\nTimeZone -> (string)\n\nThe time zone, UTC by default, in either the Country/City format, or the UTC offset format.\n\nSecurityGroups -> (list)\n\nThe list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers.\n\n(string)"
    },
    {
      "command_name": "update-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/update-configuration.html",
      "command_description": "Description\n\nUpdates the specified configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-configuration\n--configuration-id <value>\n--data <value>\n[--description <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--configuration-id <value>",
        "--data <value>",
        "[--description <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--configuration-id (string)\n\nThe unique ID that Amazon MQ generates for the configuration.\n\n--data (string)\n\nRequired. The base64-encoded XML configuration.\n\n--description (string)\n\nThe description of the configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nRequired. The Amazon Resource Name (ARN) of the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration.\n\nId -> (string)\n\nRequired. The unique ID that Amazon MQ generates for the configuration.\n\nLatestRevision -> (structure)\n\nThe latest revision of the configuration.\n\nCreated -> (timestamp)\n\nRequired. The date and time of the configuration revision.\n\nDescription -> (string)\n\nThe description of the configuration revision.\n\nRevision -> (integer)\n\nRequired. The revision number of the configuration.\n\nName -> (string)\n\nRequired. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long.\n\nWarnings -> (list)\n\nThe list of the first 20 warnings about the configuration XML elements or attributes that were sanitized.\n\n(structure)\n\nReturns information about the XML element or attribute that was sanitized in the configuration.\n\nAttributeName -> (string)\n\nThe name of the XML attribute that has been sanitized.\n\nElementName -> (string)\n\nThe name of the XML element that has been sanitized.\n\nReason -> (string)\n\nRequired. The reason for which the XML elements or attributes were sanitized."
    },
    {
      "command_name": "update-user",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/mq/update-user.html",
      "command_description": "Description\n\nUpdates the information for an ActiveMQ user.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-user\n--broker-id <value>\n[--console-access | --no-console-access]\n[--groups <value>]\n[--password <value>]\n--username <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--broker-id <value>",
        "[--console-access | --no-console-access]",
        "[--groups <value>]",
        "[--password <value>]",
        "--username <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--broker-id (string)\n\nThe unique ID that Amazon MQ generates for the broker.\n\n--console-access | --no-console-access (boolean)\n\nEnables access to the the ActiveMQ Web Console for the ActiveMQ user.\n\n--groups (list)\n\nThe list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--password (string)\n\nThe password of the user. This value must be at least 12 characters long, must contain at least 4 unique characters, and must not contain commas, colons, or equal signs (,:=).\n\n--username (string)\n\nThe username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    }
  ],
  "service_description": "Description\n\nAmazon MQ is a managed message broker service for Apache ActiveMQ and RabbitMQ that makes it easy to set up and operate message brokers in the cloud. A message broker allows software applications and components to communicate using various programming languages, operating systems, and formal messaging protocols."
}