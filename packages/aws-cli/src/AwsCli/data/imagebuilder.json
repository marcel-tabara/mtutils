{
  "service_name": "imagebuilder",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/index.html",
  "service_commands": [
    {
      "command_name": "cancel-image-creation",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/cancel-image-creation.html",
      "command_description": "Description\n\nCancelImageCreation cancels the creation of Image. This operation can only be used on images in a non-terminal state.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-image-creation\n--image-build-version-arn <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-build-version-arn <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-build-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the image whose creation you want to cancel.\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimageBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image whose creation has been cancelled."
    },
    {
      "command_name": "create-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-component.html",
      "command_description": "Description\n\nCreates a new component that can be used to build, validate, test, and assess your image.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-component\n--name <value>\n--semantic-version <value>\n[--description <value>]\n[--change-description <value>]\n--platform <value>\n[--supported-os-versions <value>]\n[--data <value>]\n[--uri <value>]\n[--kms-key-id <value>]\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--semantic-version <value>",
        "[--description <value>]",
        "[--change-description <value>]",
        "--platform <value>",
        "[--supported-os-versions <value>]",
        "[--data <value>]",
        "[--uri <value>]",
        "[--kms-key-id <value>]",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the component.\n\n--semantic-version (string)\n\nThe semantic version of the component. This version follows the semantic version syntax.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\n--description (string)\n\nThe description of the component. Describes the contents of the component.\n\n--change-description (string)\n\nThe change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.\n\n--platform (string)\n\nThe platform of the component.\n\nPossible values:\n\nWindows\n\nLinux\n\n--supported-os-versions (list)\n\nThe operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--data (string)\n\nThe data of the component. Used to specify the data inline. Either data or uri can be used to specify the data within the component.\n\n--uri (string)\n\nThe uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either data or uri can be used to specify the data within the component.\n\n--kms-key-id (string)\n\nThe ID of the KMS key that should be used to encrypt this component.\n\n--tags (map)\n\nThe tags of the component.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token of the component.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ncomponentBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component that was created by this request.",
      "command_examples": "Examples\n\nTo create a component\n\nThe following create-component example creates a component that uses a JSON document file and references a component document in YAML format that is uploaded to an Amazon S3 bucket.\n\naws imagebuilder create-component \\\n    --cli-input-json file://create-component.json\n\n\nContents of create-component.json:\n\n{\n    \"name\": \"MyExampleComponent\",\n    \"semanticVersion\": \"2019.12.02\",\n    \"description\": \"An example component that builds, validates and tests an image\",\n    \"changeDescription\": \"Initial version.\",\n    \"platform\": \"Windows\",\n    \"uri\": \"s3://s3-bucket-name/s3-bucket-path/component.yaml\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"componentBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/examplecomponent/2019.12.02/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "create-container-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-container-recipe.html",
      "command_description": "Description\n\nCreates a new container recipe. Container recipes define how images are configured, tested, and assessed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-container-recipe\n--container-type <value>\n--name <value>\n[--description <value>]\n--semantic-version <value>\n--components <value>\n[--instance-configuration <value>]\n[--dockerfile-template-data <value>]\n[--dockerfile-template-uri <value>]\n[--platform-override <value>]\n[--image-os-version-override <value>]\n--parent-image <value>\n[--tags <value>]\n[--working-directory <value>]\n--target-repository <value>\n[--kms-key-id <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--container-type <value>",
        "--name <value>",
        "[--description <value>]",
        "--semantic-version <value>",
        "--components <value>",
        "[--instance-configuration <value>]",
        "[--dockerfile-template-data <value>]",
        "[--dockerfile-template-uri <value>]",
        "[--platform-override <value>]",
        "[--image-os-version-override <value>]",
        "--parent-image <value>",
        "[--tags <value>]",
        "[--working-directory <value>]",
        "--target-repository <value>",
        "[--kms-key-id <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--container-type (string)\n\nThe type of container to create.\n\nPossible values:\n\nDOCKER\n\n--name (string)\n\nThe name of the container recipe.\n\n--description (string)\n\nThe description of the container recipe.\n\n--semantic-version (string)\n\nThe semantic version of the container recipe. This version follows the semantic version syntax.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\n--components (list)\n\nComponents for build and test that are included in the container recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"componentArn\": \"string\",\n    \"parameters\": [\n      {\n        \"name\": \"string\",\n        \"value\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--instance-configuration (structure)\n\nA group of options that can be used to configure an instance for building and testing container images.\n\nimage -> (string)\n\nThe AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.\n\nblockDeviceMappings -> (list)\n\nDefines the block devices to attach for building an instance from this Image Builder AMI.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\nJSON Syntax:\n\n{\n  \"image\": \"string\",\n  \"blockDeviceMappings\": [\n    {\n      \"deviceName\": \"string\",\n      \"ebs\": {\n        \"encrypted\": true|false,\n        \"deleteOnTermination\": true|false,\n        \"iops\": integer,\n        \"kmsKeyId\": \"string\",\n        \"snapshotId\": \"string\",\n        \"volumeSize\": integer,\n        \"volumeType\": \"standard\"|\"io1\"|\"io2\"|\"gp2\"|\"gp3\"|\"sc1\"|\"st1\",\n        \"throughput\": integer\n      },\n      \"virtualName\": \"string\",\n      \"noDevice\": \"string\"\n    }\n    ...\n  ]\n}\n\n\n--dockerfile-template-data (string)\n\nThe Dockerfile template used to build your image as an inline data blob.\n\n--dockerfile-template-uri (string)\n\nThe Amazon S3 URI for the Dockerfile that will be used to build your container image.\n\n--platform-override (string)\n\nSpecifies the operating system platform when you use a custom base image.\n\nPossible values:\n\nWindows\n\nLinux\n\n--image-os-version-override (string)\n\nSpecifies the operating system version for the base image.\n\n--parent-image (string)\n\nThe base image for the container recipe.\n\n--tags (map)\n\nTags that are attached to the container recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--working-directory (string)\n\nThe working directory for use during build and test workflows.\n\n--target-repository (structure)\n\nThe destination repository for the container image.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nShorthand Syntax:\n\nservice=string,repositoryName=string\n\n\nJSON Syntax:\n\n{\n  \"service\": \"ECR\",\n  \"repositoryName\": \"string\"\n}\n\n\n--kms-key-id (string)\n\nIdentifies which KMS key is used to encrypt the container image.\n\n--client-token (string)\n\nThe client token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe client token used to make this request idempotent.\n\ncontainerRecipeArn -> (string)\n\nReturns the Amazon Resource Name (ARN) of the container recipe that the request created."
    },
    {
      "command_name": "create-distribution-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-distribution-configuration.html",
      "command_description": "Description\n\nCreates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-distribution-configuration\n--name <value>\n[--description <value>]\n--distributions <value>\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--distributions <value>",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the distribution configuration.\n\n--description (string)\n\nThe description of the distribution configuration.\n\n--distributions (list)\n\nThe distributions of the distribution configuration.\n\n(structure)\n\nDefines the settings for a specific Region.\n\nregion -> (string)\n\nThe target Region.\n\namiDistributionConfiguration -> (structure)\n\nThe specific AMI settings; for example, launch permissions or AMI tags.\n\nname -> (string)\n\nThe name of the output AMI.\n\ndescription -> (string)\n\nThe description of the distribution configuration. Minimum and maximum length are in characters.\n\ntargetAccountIds -> (list)\n\nThe ID of an account to which you want to distribute an image.\n\n(string)\n\namiTags -> (map)\n\nThe tags to apply to AMIs distributed to this Region.\n\nkey -> (string)\n\nvalue -> (string)\n\nkmsKeyId -> (string)\n\nThe KMS key identifier used to encrypt the distributed image.\n\nlaunchPermission -> (structure)\n\nLaunch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.\n\nuserIds -> (list)\n\nThe Amazon Web Services account ID.\n\n(string)\n\nuserGroups -> (list)\n\nThe name of the group.\n\n(string)\n\ncontainerDistributionConfiguration -> (structure)\n\nContainer distribution settings for encryption, licensing, and sharing in a specific Region.\n\ndescription -> (string)\n\nThe description of the container distribution configuration.\n\ncontainerTags -> (list)\n\nTags that are attached to the container distribution configuration.\n\n(string)\n\ntargetRepository -> (structure)\n\nThe destination repository for the container distribution configuration.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nlicenseConfigurationArns -> (list)\n\nThe License Manager Configuration to associate with the AMI in the specified Region.\n\n(string)\n\nlaunchTemplateConfigurations -> (list)\n\nA group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.\n\n(structure)\n\nIdentifies an Amazon EC2 launch template to use for a specific account.\n\nlaunchTemplateId -> (string)\n\nIdentifies the Amazon EC2 launch template to use.\n\naccountId -> (string)\n\nThe account ID that this configuration applies to.\n\nsetDefaultVersion -> (boolean)\n\nSet the specified Amazon EC2 launch template as the default launch template for the specified account.\n\nJSON Syntax:\n\n[\n  {\n    \"region\": \"string\",\n    \"amiDistributionConfiguration\": {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"targetAccountIds\": [\"string\", ...],\n      \"amiTags\": {\"string\": \"string\"\n        ...},\n      \"kmsKeyId\": \"string\",\n      \"launchPermission\": {\n        \"userIds\": [\"string\", ...],\n        \"userGroups\": [\"string\", ...]\n      }\n    },\n    \"containerDistributionConfiguration\": {\n      \"description\": \"string\",\n      \"containerTags\": [\"string\", ...],\n      \"targetRepository\": {\n        \"service\": \"ECR\",\n        \"repositoryName\": \"string\"\n      }\n    },\n    \"licenseConfigurationArns\": [\"string\", ...],\n    \"launchTemplateConfigurations\": [\n      {\n        \"launchTemplateId\": \"string\",\n        \"accountId\": \"string\",\n        \"setDefaultVersion\": true|false\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--tags (map)\n\nThe tags of the distribution configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token of the distribution configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ndistributionConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that was created by this request.",
      "command_examples": "Examples\n\nTo create a distribution configuration\n\nThe following create-distribution-configuration example creates a distribution configuration using a JSON file.\n\naws imagebuilder create-distribution-configuration \\\n    --cli-input-json file:/create-distribution-configuration.json\n\n\nContents of create-distribution-configuration.json:\n\n{\n    \"name\": \"MyExampleDistribution\",\n    \"description\": \"Copies AMI to eu-west-1\",\n    \"distributions\": [\n        {\n            \"region\": \"us-west-2\",\n            \"amiDistributionConfiguration\": {\n                \"name\": \"Name {{imagebuilder:buildDate}}\",\n                \"description\": \"An example image name with parameter references\",\n                \"amiTags\": {\n                    \"KeyName\": \"{{ssm:parameter_name}}\"\n                },\n                \"launchPermission\": {\n                    \"userIds\": [\n                        \"123456789012\"\n                    ]\n                }\n            }\n        },\n        {\n            \"region\": \"eu-west-1\",\n            \"amiDistributionConfiguration\": {\n                \"name\": \"My {{imagebuilder:buildVersion}} image {{imagebuilder:buildDate}}\",\n                \"amiTags\": {\n                    \"KeyName\": \"Value\"\n                },\n                \"launchPermission\": {\n                    \"userIds\": [\n                        \"123456789012\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "create-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-image.html",
      "command_description": "Description\n\nCreates a new image. This request will create a new image along with all of the configured output resources defined in the distribution configuration. You must specify exactly one recipe for your image, using either a ContainerRecipeArn or an ImageRecipeArn.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-image\n[--image-recipe-arn <value>]\n[--container-recipe-arn <value>]\n[--distribution-configuration-arn <value>]\n--infrastructure-configuration-arn <value>\n[--image-tests-configuration <value>]\n[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--image-recipe-arn <value>]",
        "[--container-recipe-arn <value>]",
        "[--distribution-configuration-arn <value>]",
        "--infrastructure-configuration-arn <value>",
        "[--image-tests-configuration <value>]",
        "[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.\n\n--image-tests-configuration (structure)\n\nThe image tests configuration of the image.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\nShorthand Syntax:\n\nimageTestsEnabled=boolean,timeoutMinutes=integer\n\n\nJSON Syntax:\n\n{\n  \"imageTestsEnabled\": true|false,\n  \"timeoutMinutes\": integer\n}\n\n\n--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\n--tags (map)\n\nThe tags of the image.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimageBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image that was created by this request.",
      "command_examples": "Examples\n\nTo create an image\n\nThe following create-image example creates an image.\n\naws imagebuilder create-image \\\n    --image-recipe-arn arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03 \\\n    --infrastructure-configuration-arn arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"imageBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "create-image-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-image-pipeline.html",
      "command_description": "Description\n\nCreates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-image-pipeline\n--name <value>\n[--description <value>]\n[--image-recipe-arn <value>]\n[--container-recipe-arn <value>]\n--infrastructure-configuration-arn <value>\n[--distribution-configuration-arn <value>]\n[--image-tests-configuration <value>]\n[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]\n[--schedule <value>]\n[--status <value>]\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--image-recipe-arn <value>]",
        "[--container-recipe-arn <value>]",
        "--infrastructure-configuration-arn <value>",
        "[--distribution-configuration-arn <value>]",
        "[--image-tests-configuration <value>]",
        "[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]",
        "[--schedule <value>]",
        "[--status <value>]",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the image pipeline.\n\n--description (string)\n\nThe description of the image pipeline.\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that is used to configure images created by this container pipeline.\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.\n\n--image-tests-configuration (structure)\n\nThe image test configuration of the image pipeline.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\nShorthand Syntax:\n\nimageTestsEnabled=boolean,timeoutMinutes=integer\n\n\nJSON Syntax:\n\n{\n  \"imageTestsEnabled\": true|false,\n  \"timeoutMinutes\": integer\n}\n\n\n--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\n--schedule (structure)\n\nThe schedule of the image pipeline.\n\nscheduleExpression -> (string)\n\nThe cron expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition .\n\nFor information on how to format a cron expression in Image Builder, see Use cron expressions in EC2 Image Builder .\n\ntimezone -> (string)\n\nThe timezone that applies to the scheduling expression. For example, “Etc/UTC”, “America/Los_Angeles” in the IANA timezone format . If not specified this defaults to UTC.\n\npipelineExecutionStartCondition -> (string)\n\nThe condition configures when the pipeline should trigger a new image build. When the pipelineExecutionStartCondition is set to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE , and you use semantic version filters on the base image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to EXPRESSION_MATCH_ONLY , it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see CreateComponent in the EC2 Image Builder API Reference .\n\nShorthand Syntax:\n\nscheduleExpression=string,timezone=string,pipelineExecutionStartCondition=string\n\n\nJSON Syntax:\n\n{\n  \"scheduleExpression\": \"string\",\n  \"timezone\": \"string\",\n  \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_ONLY\"|\"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n}\n\n\n--status (string)\n\nThe status of the image pipeline.\n\nPossible values:\n\nDISABLED\n\nENABLED\n\n--tags (map)\n\nThe tags of the image pipeline.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimagePipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that was created by this request.",
      "command_examples": "Examples\n\nTo create an image pipeline\n\nThe following create-image-pipeline example creates an image pipeline using a JSON file.\n\naws imagebuilder create-image-pipeline \\\n    --cli-input-json file://create-image-pipeline.json\n\n\nContents of create-image-pipeline.json:\n\n{\n    \"name\": \"MyWindows2016Pipeline\",\n    \"description\": \"Builds Windows 2016 Images\",\n    \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n    \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n    \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n    \"imageTestsConfiguration\": {\n        \"imageTestsEnabled\": true,\n        \"timeoutMinutes\": 60\n    },\n    \"schedule\": {\n        \"scheduleExpression\": \"cron(0 0 * * SUN)\",\n        \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n    },\n    \"status\": \"ENABLED\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"imagePipelineArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "create-image-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-image-recipe.html",
      "command_description": "Description\n\nCreates a new image recipe. Image recipes define how images are configured, tested, and assessed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-image-recipe\n--name <value>\n[--description <value>]\n--semantic-version <value>\n--components <value>\n--parent-image <value>\n[--block-device-mappings <value>]\n[--tags <value>]\n[--working-directory <value>]\n[--additional-instance-configuration <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--semantic-version <value>",
        "--components <value>",
        "--parent-image <value>",
        "[--block-device-mappings <value>]",
        "[--tags <value>]",
        "[--working-directory <value>]",
        "[--additional-instance-configuration <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the image recipe.\n\n--description (string)\n\nThe description of the image recipe.\n\n--semantic-version (string)\n\nThe semantic version of the image recipe. This version follows the semantic version syntax.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\n--components (list)\n\nThe components of the image recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\nJSON Syntax:\n\n[\n  {\n    \"componentArn\": \"string\",\n    \"parameters\": [\n      {\n        \"name\": \"string\",\n        \"value\": [\"string\", ...]\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--parent-image (string)\n\nThe base image of the image recipe. The value of the string can be the ARN of the base image or an AMI ID. The format for the ARN follows this example: arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x . You can provide the specific version that you want to use, or you can use a wildcard in all of the fields. If you enter an AMI ID for the string value, you must have access to the AMI, and the AMI must be in the same Region in which you are using Image Builder.\n\n--block-device-mappings (list)\n\nThe block device mappings of the image recipe.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\nShorthand Syntax:\n\ndeviceName=string,ebs={encrypted=boolean,deleteOnTermination=boolean,iops=integer,kmsKeyId=string,snapshotId=string,volumeSize=integer,volumeType=string,throughput=integer},virtualName=string,noDevice=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"deviceName\": \"string\",\n    \"ebs\": {\n      \"encrypted\": true|false,\n      \"deleteOnTermination\": true|false,\n      \"iops\": integer,\n      \"kmsKeyId\": \"string\",\n      \"snapshotId\": \"string\",\n      \"volumeSize\": integer,\n      \"volumeType\": \"standard\"|\"io1\"|\"io2\"|\"gp2\"|\"gp3\"|\"sc1\"|\"st1\",\n      \"throughput\": integer\n    },\n    \"virtualName\": \"string\",\n    \"noDevice\": \"string\"\n  }\n  ...\n]\n\n\n--tags (map)\n\nThe tags of the image recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--working-directory (string)\n\nThe working directory used during build and test workflows.\n\n--additional-instance-configuration (structure)\n\nSpecify additional settings and launch scripts for your build instances.\n\nsystemsManagerAgent -> (structure)\n\nContains settings for the Systems Manager agent on your build instance.\n\nuninstallAfterBuild -> (boolean)\n\nControls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it’s set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.\n\nuserDataOverride -> (string)\n\nUse this property to provide commands or a command script to run when you launch your build instance.\n\nNote\n\nThe userDataOverride property replaces any commands that Image Builder might have added to ensure that Systems Manager is installed on your Linux build instance. If you override the user data, make sure that you add commands to install Systems Manager, if it is not pre-installed on your base image.\n\nShorthand Syntax:\n\nsystemsManagerAgent={uninstallAfterBuild=boolean},userDataOverride=string\n\n\nJSON Syntax:\n\n{\n  \"systemsManagerAgent\": {\n    \"uninstallAfterBuild\": true|false\n  },\n  \"userDataOverride\": \"string\"\n}\n\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimageRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that was created by this request.",
      "command_examples": "Examples\n\nTo create a recipe\n\nThe following create-image-recipe example creates an image recipe using a JSON file. Components are installed in the order in which they are specified.\n\naws imagebuilder create-image-recipe \\\n    --cli-input-json file://create-image-recipe.json\n\n\nContents of create-image-recipe.json:\n\n{\n    \"name\": \"MyBasicRecipe\",\n    \"description\": \"This example image recipe creates a Windows 2016 image.\",\n    \"semanticVersion\": \"2019.12.03\",\n    \"components\":\n    [\n        {\n            \"componentArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02/1\"\n        },\n        {\n            \"componentArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myimportedcomponent/1.0.0/1\"\n        }\n    ],\n    \"parentImage\": \"arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/xxxx.x.x\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "create-infrastructure-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/create-infrastructure-configuration.html",
      "command_description": "Description\n\nCreates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-infrastructure-configuration\n--name <value>\n[--description <value>]\n[--instance-types <value>]\n--instance-profile-name <value>\n[--security-group-ids <value>]\n[--subnet-id <value>]\n[--logging <value>]\n[--key-pair <value>]\n[--terminate-instance-on-failure | --no-terminate-instance-on-failure]\n[--sns-topic-arn <value>]\n[--resource-tags <value>]\n[--instance-metadata-options <value>]\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--instance-types <value>]",
        "--instance-profile-name <value>",
        "[--security-group-ids <value>]",
        "[--subnet-id <value>]",
        "[--logging <value>]",
        "[--key-pair <value>]",
        "[--terminate-instance-on-failure | --no-terminate-instance-on-failure]",
        "[--sns-topic-arn <value>]",
        "[--resource-tags <value>]",
        "[--instance-metadata-options <value>]",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the infrastructure configuration.\n\n--description (string)\n\nThe description of the infrastructure configuration.\n\n--instance-types (list)\n\nThe instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--instance-profile-name (string)\n\nThe instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n\n--security-group-ids (list)\n\nThe security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subnet-id (string)\n\nThe subnet ID in which to place the instance used to customize your Amazon EC2 AMI.\n\n--logging (structure)\n\nThe logging configuration of the infrastructure configuration.\n\ns3Logs -> (structure)\n\nThe Amazon S3 logging configuration.\n\ns3BucketName -> (string)\n\nThe Amazon S3 bucket in which to store the logs.\n\ns3KeyPrefix -> (string)\n\nThe Amazon S3 path in which to store the logs.\n\nShorthand Syntax:\n\ns3Logs={s3BucketName=string,s3KeyPrefix=string}\n\n\nJSON Syntax:\n\n{\n  \"s3Logs\": {\n    \"s3BucketName\": \"string\",\n    \"s3KeyPrefix\": \"string\"\n  }\n}\n\n\n--key-pair (string)\n\nThe key pair of the infrastructure configuration. You can use this to log on to and debug the instance used to create your image.\n\n--terminate-instance-on-failure | --no-terminate-instance-on-failure (boolean)\n\nThe terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n\n--sns-topic-arn (string)\n\nThe SNS topic on which to send image build events.\n\n--resource-tags (map)\n\nThe tags attached to the resource created by Image Builder.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--instance-metadata-options (structure)\n\nThe instance metadata options that you can set for the HTTP requests that pipeline builds use to launch EC2 build and test instances.\n\nhttpTokens -> (string)\n\nIndicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:\n\nrequired – When you retrieve the IAM role credentials, version 2.0 credentials are returned in all cases.\n\noptional – You can include a signed token header in your request to retrieve instance metadata, or you can leave it out. If you include it, version 2.0 credentials are returned for the IAM role. Otherwise, version 1.0 credentials are returned.\n\nThe default setting is optional .\n\nhttpPutResponseHopLimit -> (integer)\n\nLimit the number of hops that an instance metadata request can traverse to reach its destination.\n\nShorthand Syntax:\n\nhttpTokens=string,httpPutResponseHopLimit=integer\n\n\nJSON Syntax:\n\n{\n  \"httpTokens\": \"string\",\n  \"httpPutResponseHopLimit\": integer\n}\n\n\n--tags (map)\n\nThe tags of the infrastructure configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ninfrastructureConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.",
      "command_examples": "Examples\n\nTo create an infrastructure configuration\n\nThe following create-infrastructure-configuration example creates an infrastructure configuration using a JSON file.\n\naws imagebuilder create-infrastructure-configuration \\\n    --cli-input-json file://create-infrastructure-configuration.json\n\n\nContents of create-infrastructure-configuration.json:\n\n{\n    \"name\": \"MyExampleInfrastructure\",\n    \"description\": \"An example that will retain instances of failed builds\",\n    \"instanceTypes\": [\n        \"m5.large\", \"m5.xlarge\"\n    ],\n    \"instanceProfileName\": \"EC2InstanceProfileForImageBuilder\",\n    \"securityGroupIds\": [\n        \"sg-a1b2c3d4\"\n    ],\n    \"subnetId\": \"subnet-a1b2c3d4\",\n    \"logging\": {\n        \"s3Logs\": {\n            \"s3BucketName\": \"bucket-name\",\n            \"s3KeyPrefix\": \"bucket-path\"\n        }\n    },\n    \"keyPair\": \"key-pair-name\",\n    \"terminateInstanceOnFailure\": false,\n    \"snsTopicArn\": \"arn:aws:sns:us-west-2:123456789012:sns-topic-name\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "delete-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-component.html",
      "command_description": "Description\n\nDeletes a component build version.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-component\n--component-build-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--component-build-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--component-build-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the component build version to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncomponentBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component build version that was deleted.",
      "command_examples": "Examples\n\nTo delete a component\n\nThe following delete-component example deletes a component build version by specifying its ARN.\n\naws imagebuilder delete-component \\\n    --component-build-version-arn arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02/1\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"componentBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "delete-container-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-container-recipe.html",
      "command_description": "Description\n\nDeletes a container recipe.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-container-recipe\n--container-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--container-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncontainerRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that was deleted."
    },
    {
      "command_name": "delete-distribution-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-distribution-configuration.html",
      "command_description": "Description\n\nDeletes a distribution configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-distribution-configuration\n--distribution-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ndistributionConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that was deleted."
    },
    {
      "command_name": "delete-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-image.html",
      "command_description": "Description\n\nDeletes an Image Builder image resource. This does not delete any EC2 AMIs or ECR container images that are created during the image build process. You must clean those up separately, using the appropriate Amazon EC2 or Amazon ECR console actions, or API or CLI commands.\n\nTo deregister an EC2 Linux AMI, see Deregister your Linux AMI in the * Amazon EC2 User Guide * .\n\nTo deregister an EC2 Windows AMI, see Deregister your Windows AMI in the * Amazon EC2 Windows Guide * .\n\nTo delete a container image from Amazon ECR, see Deleting an image in the Amazon ECR User Guide .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-image\n--image-build-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-build-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-build-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the Image Builder image resource to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the Image Builder image resource that was deleted.",
      "command_examples": "Examples\n\nTo delete an image\n\nThe following delete-image example deletes an image build version by specifying its ARN.\n\naws imagebuilder delete-image \\\n    --image-build-version-arn arn:aws:imagebuilder:us-west-2:123456789012:image/my-example-image/2019.12.02/1\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "delete-image-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-image-pipeline.html",
      "command_description": "Description\n\nDeletes an image pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-image-pipeline\n--image-pipeline-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-pipeline-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-pipeline-arn (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimagePipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that was deleted.",
      "command_examples": "Examples\n\nTo delete an image pipeline\n\nThe following delete-image-pipeline example deletes an image pipeline by specifying its ARN.\n\naws imagebuilder delete-image-pipeline \\\n    --image-pipeline-arn arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/my-example-pipeline\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imagePipelineArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "delete-image-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-image-recipe.html",
      "command_description": "Description\n\nDeletes an image recipe.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-image-recipe\n--image-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that was deleted.",
      "command_examples": "Examples\n\nTo delete an image recipe\n\nThe following delete-image-recipe example deletes an image recipe by specifying its ARN.\n\naws imagebuilder delete-image-recipe \\\n    --image-recipe-arn arn:aws:imagebuilder:us-east-1:123456789012:image-recipe/mybasicrecipe/2019.12.03\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "delete-infrastructure-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/delete-infrastructure-configuration.html",
      "command_description": "Description\n\nDeletes an infrastructure configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-infrastructure-configuration\n--infrastructure-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--infrastructure-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ninfrastructureConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that was deleted.",
      "command_examples": "Examples\n\nTo delete an infrastructure configuration\n\nThe following delete-infrastructure-configuration example deletes an image pipeline by specifying its ARN.\n\naws imagebuilder delete-infrastructure-configuration \\\n    --infrastructure-configuration-arn arn:aws:imagebuilder:us-east-1:123456789012:infrastructure-configuration/myexampleinfrastructure\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-component.html",
      "command_description": "Description\n\nGets a component object.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-component\n--component-build-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--component-build-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--component-build-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the component that you want to retrieve. Regex requires “/d+$” suffix.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncomponent -> (structure)\n\nThe component object associated with the specified ARN.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nname -> (string)\n\nThe name of the component.\n\nversion -> (string)\n\nThe version of the component.\n\ndescription -> (string)\n\nThe description of the component.\n\nchangeDescription -> (string)\n\nThe change description of the component.\n\ntype -> (string)\n\nThe type of the component denotes whether the component is used to build the image or only to test it.\n\nplatform -> (string)\n\nThe platform of the component.\n\nsupportedOsVersions -> (list)\n\nThe operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.\n\n(string)\n\nstate -> (structure)\n\nDescribes the current status of the component. This is used for components that are no longer active.\n\nstatus -> (string)\n\nThe current state of the component.\n\nreason -> (string)\n\nDescribes how or why the component changed state.\n\nparameters -> (list)\n\nContains parameter details for each of the parameters that are defined for the component.\n\n(structure)\n\nDefines a parameter that is used to provide configuration details for the component.\n\nname -> (string)\n\nThe name of this input parameter.\n\ntype -> (string)\n\nThe type of input this parameter provides. The currently supported value is “string”.\n\ndefaultValue -> (list)\n\nThe default value of this parameter if no input is provided.\n\n(string)\n\ndescription -> (string)\n\nDescribes this parameter.\n\nowner -> (string)\n\nThe owner of the component.\n\ndata -> (string)\n\nThe data of the component.\n\nkmsKeyId -> (string)\n\nThe KMS key identifier used to encrypt the component.\n\nencrypted -> (boolean)\n\nThe encryption status of the component.\n\ndateCreated -> (string)\n\nThe date that the component was created.\n\ntags -> (map)\n\nThe tags associated with the component.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get component details\n\nThe following get-component example lists the details of a component by specifying its ARN.\n\naws imagebuilder get-component \\\n    --component-build-version-arn arn:aws:imagebuilder:us-west-2:123456789012:component/component-name/1.0.0/1\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"component\": {\n        \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/component-name/1.0.0/1\",\n        \"name\": \"component-name\",\n        \"version\": \"1.0.0\",\n        \"type\": \"TEST\",\n        \"platform\": \"Linux\",\n        \"owner\": \"123456789012\",\n        \"data\": \"name: HelloWorldTestingDocument\\ndescription: This is hello world testing document.\\nschemaVersion: 1.0\\n\\nphases:\\n  - name: test\\n    steps:\\n      - name: HelloWorldStep\\n        action: ExecuteBash\\n        inputs:\\n          commands:\\n            - echo \\\"Hello World! Test.\\\"\\n\",\n        \"encrypted\": true,\n        \"dateCreated\": \"2020-01-27T20:43:30.306Z\",\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-component-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-component-policy.html",
      "command_description": "Description\n\nGets a component policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-component-policy\n--component-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--component-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--component-arn (string)\n\nThe Amazon Resource Name (ARN) of the component whose policy you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\npolicy -> (string)\n\nThe component policy.",
      "command_examples": "Examples\n\nTo get component policy details\n\nThe following get-component-policy example lists the details of a component policy by specifying its ARN.\n\naws imagebuilder get-component-policy \\\n    --component-arn arn:aws:imagebuilder:us-west-2:123456789012:component/my-example-component/2019.12.03/1\n\n\nOutput:\n\n{\n    \"Policy\": \"{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetComponent\", \"imagebuilder:ListComponents\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:component/my-example-component/2019.12.03/1\" ] } ] }\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI <https://docs.aws.amazon.com/imagebuilder/latest/userguide/managing-image-builder-cli.html>`__ in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-container-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-container-recipe.html",
      "command_description": "Description\n\nRetrieves a container recipe.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-container-recipe\n--container-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--container-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncontainerRecipe -> (structure)\n\nThe container recipe object that is returned.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe.\n\nNote\n\nSemantic versioning is included in each object’s Amazon Resource Name (ARN), at the level that applies to that object as follows:\n\nVersionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.\n\nVersion ARNs have only the first three nodes: <major>.<minor>.<patch>\n\nBuild version ARNs have all four nodes, and point to a specific build for a specific version of an object.\n\ncontainerType -> (string)\n\nSpecifies the type of container, such as Docker.\n\nname -> (string)\n\nThe name of the container recipe.\n\ndescription -> (string)\n\nThe description of the container recipe.\n\nplatform -> (string)\n\nThe system platform for the container, such as Windows or Linux.\n\nowner -> (string)\n\nThe owner of the container recipe.\n\nversion -> (string)\n\nThe semantic version of the container recipe.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\ncomponents -> (list)\n\nComponents for build and test that are included in the container recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\ninstanceConfiguration -> (structure)\n\nA group of options that can be used to configure an instance for building and testing container images.\n\nimage -> (string)\n\nThe AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.\n\nblockDeviceMappings -> (list)\n\nDefines the block devices to attach for building an instance from this Image Builder AMI.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\ndockerfileTemplateData -> (string)\n\nDockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.\n\nkmsKeyId -> (string)\n\nIdentifies which KMS key is used to encrypt the container image for distribution to the target Region.\n\nencrypted -> (boolean)\n\nA flag that indicates if the target container is encrypted.\n\nparentImage -> (string)\n\nThe base image for the container recipe.\n\ndateCreated -> (string)\n\nThe date when this container recipe was created.\n\ntags -> (map)\n\nTags that are attached to the container recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nworkingDirectory -> (string)\n\nThe working directory for use during build and test workflows.\n\ntargetRepository -> (structure)\n\nThe destination repository for the container image.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location."
    },
    {
      "command_name": "get-container-recipe-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-container-recipe-policy.html",
      "command_description": "Description\n\nRetrieves the policy for a container recipe.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-container-recipe-policy\n--container-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--container-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe for the policy being requested.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\npolicy -> (string)\n\nThe container recipe policy object that is returned."
    },
    {
      "command_name": "get-distribution-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-distribution-configuration.html",
      "command_description": "Description\n\nGets a distribution configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-distribution-configuration\n--distribution-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ndistributionConfiguration -> (structure)\n\nThe distribution configuration object.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration.\n\nname -> (string)\n\nThe name of the distribution configuration.\n\ndescription -> (string)\n\nThe description of the distribution configuration.\n\ndistributions -> (list)\n\nThe distribution objects that apply Region-specific settings for the deployment of the image to targeted Regions.\n\n(structure)\n\nDefines the settings for a specific Region.\n\nregion -> (string)\n\nThe target Region.\n\namiDistributionConfiguration -> (structure)\n\nThe specific AMI settings; for example, launch permissions or AMI tags.\n\nname -> (string)\n\nThe name of the output AMI.\n\ndescription -> (string)\n\nThe description of the distribution configuration. Minimum and maximum length are in characters.\n\ntargetAccountIds -> (list)\n\nThe ID of an account to which you want to distribute an image.\n\n(string)\n\namiTags -> (map)\n\nThe tags to apply to AMIs distributed to this Region.\n\nkey -> (string)\n\nvalue -> (string)\n\nkmsKeyId -> (string)\n\nThe KMS key identifier used to encrypt the distributed image.\n\nlaunchPermission -> (structure)\n\nLaunch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.\n\nuserIds -> (list)\n\nThe Amazon Web Services account ID.\n\n(string)\n\nuserGroups -> (list)\n\nThe name of the group.\n\n(string)\n\ncontainerDistributionConfiguration -> (structure)\n\nContainer distribution settings for encryption, licensing, and sharing in a specific Region.\n\ndescription -> (string)\n\nThe description of the container distribution configuration.\n\ncontainerTags -> (list)\n\nTags that are attached to the container distribution configuration.\n\n(string)\n\ntargetRepository -> (structure)\n\nThe destination repository for the container distribution configuration.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nlicenseConfigurationArns -> (list)\n\nThe License Manager Configuration to associate with the AMI in the specified Region.\n\n(string)\n\nlaunchTemplateConfigurations -> (list)\n\nA group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.\n\n(structure)\n\nIdentifies an Amazon EC2 launch template to use for a specific account.\n\nlaunchTemplateId -> (string)\n\nIdentifies the Amazon EC2 launch template to use.\n\naccountId -> (string)\n\nThe account ID that this configuration applies to.\n\nsetDefaultVersion -> (boolean)\n\nSet the specified Amazon EC2 launch template as the default launch template for the specified account.\n\ntimeoutMinutes -> (integer)\n\nThe maximum duration in minutes for this distribution configuration.\n\ndateCreated -> (string)\n\nThe date on which this distribution configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which this distribution configuration was last updated.\n\ntags -> (map)\n\nThe tags of the distribution configuration.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get the details of a distribution configuration\n\nThe following get-distribution-configuration example displays the details of a distribution configuration by specifying its ARN.\n\naws imagebuilder get-distribution-configuration \\\n    --distribution-configuration-arn arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"distributionConfiguration\": {\n        \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n        \"name\": \"MyExampleDistribution\",\n        \"description\": \"Copies AMI to eu-west-1 and exports to S3\",\n        \"distributions\": [\n            {\n                \"region\": \"us-west-2\",\n                \"amiDistributionConfiguration\": {\n                    \"name\": \"Name {{imagebuilder:buildDate}}\",\n                    \"description\": \"An example image name with parameter references\",\n                    \"amiTags\": {\n                        \"KeyName\": \"{{ssm:parameter_name}}\"\n                    },\n                    \"launchPermission\": {\n                        \"userIds\": [\n                            \"123456789012\"\n                        ]\n                    }\n                }\n            },\n            {\n                \"region\": \"eu-west-1\",\n                \"amiDistributionConfiguration\": {\n                    \"name\": \"My {{imagebuilder:buildVersion}} image {{imagebuilder:buildDate}}\",\n                    \"amiTags\": {\n                        \"KeyName\": \"Value\"\n                    },\n                    \"launchPermission\": {\n                        \"userIds\": [\n                            \"123456789012\"\n                        ]\n                    }\n                }\n            }\n        ],\n        \"dateCreated\": \"2020-02-19T18:40:10.529Z\",\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-image",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-image.html",
      "command_description": "Description\n\nGets an image.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-image\n--image-build-version-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-build-version-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-build-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the image that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimage -> (structure)\n\nThe image object.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image.\n\nNote\n\nSemantic versioning is included in each object’s Amazon Resource Name (ARN), at the level that applies to that object as follows:\n\nVersionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.\n\nVersion ARNs have only the first three nodes: <major>.<minor>.<patch>\n\nBuild version ARNs have all four nodes, and point to a specific build for a specific version of an object.\n\ntype -> (string)\n\nSpecifies whether this is an AMI or container image.\n\nname -> (string)\n\nThe name of the image.\n\nversion -> (string)\n\nThe semantic version of the image.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\nplatform -> (string)\n\nThe platform of the image.\n\nenhancedImageMetadataEnabled -> (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\nosVersion -> (string)\n\nThe operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.\n\nstate -> (structure)\n\nThe state of the image.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\nimageRecipe -> (structure)\n\nThe image recipe used when creating the image.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe.\n\ntype -> (string)\n\nSpecifies which type of image is created by the recipe - an AMI or a container image.\n\nname -> (string)\n\nThe name of the image recipe.\n\ndescription -> (string)\n\nThe description of the image recipe.\n\nplatform -> (string)\n\nThe platform of the image recipe.\n\nowner -> (string)\n\nThe owner of the image recipe.\n\nversion -> (string)\n\nThe version of the image recipe.\n\ncomponents -> (list)\n\nThe components of the image recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\nparentImage -> (string)\n\nThe base image of the image recipe.\n\nblockDeviceMappings -> (list)\n\nThe block device mappings to apply when creating images from this recipe.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\ndateCreated -> (string)\n\nThe date on which this image recipe was created.\n\ntags -> (map)\n\nThe tags of the image recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nworkingDirectory -> (string)\n\nThe working directory to be used during build and test workflows.\n\nadditionalInstanceConfiguration -> (structure)\n\nBefore you create a new AMI, Image Builder launches temporary Amazon EC2 instances to build and test your image configuration. Instance configuration adds a layer of control over those instances. You can define settings and add scripts to run when an instance is launched from your AMI.\n\nsystemsManagerAgent -> (structure)\n\nContains settings for the Systems Manager agent on your build instance.\n\nuninstallAfterBuild -> (boolean)\n\nControls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it’s set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.\n\nuserDataOverride -> (string)\n\nUse this property to provide commands or a command script to run when you launch your build instance.\n\nNote\n\nThe userDataOverride property replaces any commands that Image Builder might have added to ensure that Systems Manager is installed on your Linux build instance. If you override the user data, make sure that you add commands to install Systems Manager, if it is not pre-installed on your base image.\n\ncontainerRecipe -> (structure)\n\nThe recipe that is used to create an Image Builder container image.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe.\n\nNote\n\nSemantic versioning is included in each object’s Amazon Resource Name (ARN), at the level that applies to that object as follows:\n\nVersionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.\n\nVersion ARNs have only the first three nodes: <major>.<minor>.<patch>\n\nBuild version ARNs have all four nodes, and point to a specific build for a specific version of an object.\n\ncontainerType -> (string)\n\nSpecifies the type of container, such as Docker.\n\nname -> (string)\n\nThe name of the container recipe.\n\ndescription -> (string)\n\nThe description of the container recipe.\n\nplatform -> (string)\n\nThe system platform for the container, such as Windows or Linux.\n\nowner -> (string)\n\nThe owner of the container recipe.\n\nversion -> (string)\n\nThe semantic version of the container recipe.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\ncomponents -> (list)\n\nComponents for build and test that are included in the container recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\ninstanceConfiguration -> (structure)\n\nA group of options that can be used to configure an instance for building and testing container images.\n\nimage -> (string)\n\nThe AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.\n\nblockDeviceMappings -> (list)\n\nDefines the block devices to attach for building an instance from this Image Builder AMI.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\ndockerfileTemplateData -> (string)\n\nDockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.\n\nkmsKeyId -> (string)\n\nIdentifies which KMS key is used to encrypt the container image for distribution to the target Region.\n\nencrypted -> (boolean)\n\nA flag that indicates if the target container is encrypted.\n\nparentImage -> (string)\n\nThe base image for the container recipe.\n\ndateCreated -> (string)\n\nThe date when this container recipe was created.\n\ntags -> (map)\n\nTags that are attached to the container recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nworkingDirectory -> (string)\n\nThe working directory for use during build and test workflows.\n\ntargetRepository -> (structure)\n\nThe destination repository for the container image.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nsourcePipelineName -> (string)\n\nThe name of the image pipeline that created this image.\n\nsourcePipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that created this image.\n\ninfrastructureConfiguration -> (structure)\n\nThe infrastructure used when creating this image.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration.\n\nname -> (string)\n\nThe name of the infrastructure configuration.\n\ndescription -> (string)\n\nThe description of the infrastructure configuration.\n\ninstanceTypes -> (list)\n\nThe instance types of the infrastructure configuration.\n\n(string)\n\ninstanceProfileName -> (string)\n\nThe instance profile of the infrastructure configuration.\n\nsecurityGroupIds -> (list)\n\nThe security group IDs of the infrastructure configuration.\n\n(string)\n\nsubnetId -> (string)\n\nThe subnet ID of the infrastructure configuration.\n\nlogging -> (structure)\n\nThe logging configuration of the infrastructure configuration.\n\ns3Logs -> (structure)\n\nThe Amazon S3 logging configuration.\n\ns3BucketName -> (string)\n\nThe Amazon S3 bucket in which to store the logs.\n\ns3KeyPrefix -> (string)\n\nThe Amazon S3 path in which to store the logs.\n\nkeyPair -> (string)\n\nThe Amazon EC2 key pair of the infrastructure configuration.\n\nterminateInstanceOnFailure -> (boolean)\n\nThe terminate instance on failure configuration of the infrastructure configuration.\n\nsnsTopicArn -> (string)\n\nThe SNS topic Amazon Resource Name (ARN) of the infrastructure configuration.\n\ndateCreated -> (string)\n\nThe date on which the infrastructure configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which the infrastructure configuration was last updated.\n\nresourceTags -> (map)\n\nThe tags attached to the resource created by Image Builder.\n\nkey -> (string)\n\nvalue -> (string)\n\ninstanceMetadataOptions -> (structure)\n\nThe instance metadata option settings for the infrastructure configuration.\n\nhttpTokens -> (string)\n\nIndicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:\n\nrequired – When you retrieve the IAM role credentials, version 2.0 credentials are returned in all cases.\n\noptional – You can include a signed token header in your request to retrieve instance metadata, or you can leave it out. If you include it, version 2.0 credentials are returned for the IAM role. Otherwise, version 1.0 credentials are returned.\n\nThe default setting is optional .\n\nhttpPutResponseHopLimit -> (integer)\n\nLimit the number of hops that an instance metadata request can traverse to reach its destination.\n\ntags -> (map)\n\nThe tags of the infrastructure configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\ndistributionConfiguration -> (structure)\n\nThe distribution configuration used when creating this image.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration.\n\nname -> (string)\n\nThe name of the distribution configuration.\n\ndescription -> (string)\n\nThe description of the distribution configuration.\n\ndistributions -> (list)\n\nThe distribution objects that apply Region-specific settings for the deployment of the image to targeted Regions.\n\n(structure)\n\nDefines the settings for a specific Region.\n\nregion -> (string)\n\nThe target Region.\n\namiDistributionConfiguration -> (structure)\n\nThe specific AMI settings; for example, launch permissions or AMI tags.\n\nname -> (string)\n\nThe name of the output AMI.\n\ndescription -> (string)\n\nThe description of the distribution configuration. Minimum and maximum length are in characters.\n\ntargetAccountIds -> (list)\n\nThe ID of an account to which you want to distribute an image.\n\n(string)\n\namiTags -> (map)\n\nThe tags to apply to AMIs distributed to this Region.\n\nkey -> (string)\n\nvalue -> (string)\n\nkmsKeyId -> (string)\n\nThe KMS key identifier used to encrypt the distributed image.\n\nlaunchPermission -> (structure)\n\nLaunch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.\n\nuserIds -> (list)\n\nThe Amazon Web Services account ID.\n\n(string)\n\nuserGroups -> (list)\n\nThe name of the group.\n\n(string)\n\ncontainerDistributionConfiguration -> (structure)\n\nContainer distribution settings for encryption, licensing, and sharing in a specific Region.\n\ndescription -> (string)\n\nThe description of the container distribution configuration.\n\ncontainerTags -> (list)\n\nTags that are attached to the container distribution configuration.\n\n(string)\n\ntargetRepository -> (structure)\n\nThe destination repository for the container distribution configuration.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nlicenseConfigurationArns -> (list)\n\nThe License Manager Configuration to associate with the AMI in the specified Region.\n\n(string)\n\nlaunchTemplateConfigurations -> (list)\n\nA group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.\n\n(structure)\n\nIdentifies an Amazon EC2 launch template to use for a specific account.\n\nlaunchTemplateId -> (string)\n\nIdentifies the Amazon EC2 launch template to use.\n\naccountId -> (string)\n\nThe account ID that this configuration applies to.\n\nsetDefaultVersion -> (boolean)\n\nSet the specified Amazon EC2 launch template as the default launch template for the specified account.\n\ntimeoutMinutes -> (integer)\n\nThe maximum duration in minutes for this distribution configuration.\n\ndateCreated -> (string)\n\nThe date on which this distribution configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which this distribution configuration was last updated.\n\ntags -> (map)\n\nThe tags of the distribution configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nimageTestsConfiguration -> (structure)\n\nThe image tests configuration used when creating this image.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\ndateCreated -> (string)\n\nThe date on which this image was created.\n\noutputResources -> (structure)\n\nThe output resources produced when creating this image.\n\namis -> (list)\n\nThe Amazon EC2 AMIs created by this image.\n\n(structure)\n\nDetails of an Amazon EC2 AMI.\n\nregion -> (string)\n\nThe Amazon Web Services Region of the Amazon EC2 AMI.\n\nimage -> (string)\n\nThe AMI ID of the Amazon EC2 AMI.\n\nname -> (string)\n\nThe name of the Amazon EC2 AMI.\n\ndescription -> (string)\n\nThe description of the Amazon EC2 AMI. Minimum and maximum length are in characters.\n\nstate -> (structure)\n\nImage state shows the image status and the reason for that status.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\naccountId -> (string)\n\nThe account ID of the owner of the AMI.\n\ncontainers -> (list)\n\nContainer images that the pipeline has generated and stored in the output repository.\n\n(structure)\n\nA container encapsulates the runtime environment for an application.\n\nregion -> (string)\n\nContainers and container images are Region-specific. This is the Region context for the container.\n\nimageUris -> (list)\n\nA list of URIs for containers created in the context Region.\n\n(string)\n\ntags -> (map)\n\nThe tags of the image.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get image details\n\nThe following get-image example lists the details of an image by specifying its ARN.\n\naws imagebuilder get-image \\\n    --image-build-version-arn arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/1\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"image\": {\n        \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/1\",\n        \"name\": \"MyBasicRecipe\",\n        \"version\": \"2019.12.03/1\",\n        \"platform\": \"Windows\",\n        \"state\": {\n            \"status\": \"BUILDING\"\n        },\n        \"imageRecipe\": {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n            \"name\": \"MyBasicRecipe\",\n            \"description\": \"This example image recipe creates a Windows 2016 image.\",\n            \"platform\": \"Windows\",\n            \"version\": \"2019.12.03\",\n            \"components\": [\n                {\n                    \"componentArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02/1\"\n                },\n                {\n                    \"componentArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myimportedcomponent/1.0.0/1\"\n                }\n            ],\n            \"parentImage\": \"arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/2019.12.17/1\",\n            \"dateCreated\": \"2020-02-14T19:46:16.904Z\",\n            \"tags\": {}\n        },\n        \"infrastructureConfiguration\": {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n            \"name\": \"MyExampleInfrastructure\",\n            \"description\": \"An example that will retain instances of failed builds\",\n            \"instanceTypes\": [\n                \"m5.large\",\n                \"m5.xlarge\"\n            ],\n            \"instanceProfileName\": \"EC2InstanceProfileForImageFactory\",\n            \"securityGroupIds\": [\n                \"sg-a1b2c3d4\"\n            ],\n            \"subnetId\": \"subnet-a1b2c3d4\",\n            \"logging\": {\n                \"s3Logs\": {\n                    \"s3BucketName\": \"bucket-name\",\n                    \"s3KeyPrefix\": \"bucket-path\"\n                }\n            },\n            \"keyPair\": \"Sam\",\n            \"terminateInstanceOnFailure\": false,\n            \"snsTopicArn\": \"arn:aws:sns:us-west-2:123456789012:sns-name\",\n            \"dateCreated\": \"2020-02-14T21:21:05.098Z\",\n            \"tags\": {}\n        },\n        \"imageTestsConfiguration\": {\n            \"imageTestsEnabled\": true,\n            \"timeoutMinutes\": 720\n        },\n        \"dateCreated\": \"2020-02-14T23:14:13.597Z\",\n        \"outputResources\": {\n            \"amis\": []\n        },\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-image-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-image-pipeline.html",
      "command_description": "Description\n\nGets an image pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-image-pipeline\n--image-pipeline-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-pipeline-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-pipeline-arn (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimagePipeline -> (structure)\n\nThe image pipeline object.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline.\n\nname -> (string)\n\nThe name of the image pipeline.\n\ndescription -> (string)\n\nThe description of the image pipeline.\n\nplatform -> (string)\n\nThe platform of the image pipeline.\n\nenhancedImageMetadataEnabled -> (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\nimageRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.\n\ncontainerRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.\n\ninfrastructureConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.\n\ndistributionConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.\n\nimageTestsConfiguration -> (structure)\n\nThe image tests configuration of the image pipeline.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\nschedule -> (structure)\n\nThe schedule of the image pipeline.\n\nscheduleExpression -> (string)\n\nThe cron expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition .\n\nFor information on how to format a cron expression in Image Builder, see Use cron expressions in EC2 Image Builder .\n\ntimezone -> (string)\n\nThe timezone that applies to the scheduling expression. For example, “Etc/UTC”, “America/Los_Angeles” in the IANA timezone format . If not specified this defaults to UTC.\n\npipelineExecutionStartCondition -> (string)\n\nThe condition configures when the pipeline should trigger a new image build. When the pipelineExecutionStartCondition is set to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE , and you use semantic version filters on the base image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to EXPRESSION_MATCH_ONLY , it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see CreateComponent in the EC2 Image Builder API Reference .\n\nstatus -> (string)\n\nThe status of the image pipeline.\n\ndateCreated -> (string)\n\nThe date on which this image pipeline was created.\n\ndateUpdated -> (string)\n\nThe date on which this image pipeline was last updated.\n\ndateLastRun -> (string)\n\nThe date on which this image pipeline was last run.\n\ndateNextRun -> (string)\n\nThe date on which this image pipeline will next be run.\n\ntags -> (map)\n\nThe tags of this image pipeline.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get image pipeline details\n\nThe following get-image-pipeline example lists the details of an image pipeline by specifying its ARN.\n\naws imagebuilder get-image-pipeline \\\n    --image-pipeline-arn arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imagePipeline\": {\n        \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\",\n        \"name\": \"MyWindows2016Pipeline\",\n        \"description\": \"Builds Windows 2016 Images\",\n        \"platform\": \"Windows\",\n        \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n        \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n        \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n        \"imageTestsConfiguration\": {\n            \"imageTestsEnabled\": true,\n            \"timeoutMinutes\": 60\n        },\n        \"schedule\": {\n            \"scheduleExpression\": \"cron(0 0 * * SUN)\",\n            \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n        },\n        \"status\": \"ENABLED\",\n        \"dateCreated\": \"2020-02-19T19:04:01.253Z\",\n        \"dateUpdated\": \"2020-02-19T19:04:01.253Z\",\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-image-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-image-policy.html",
      "command_description": "Description\n\nGets an image policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-image-policy\n--image-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-arn (string)\n\nThe Amazon Resource Name (ARN) of the image whose policy you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\npolicy -> (string)\n\nThe image policy object.",
      "command_examples": "Examples\n\nTo get image policy details\n\nThe following get-image-policy example lists the details of an image policy by specifying its ARN.\n\naws imagebuilder get-image-policy \\\n    --image-arn arn:aws:imagebuilder:us-west-2:123456789012:image/my-example-image/2019.12.03/1\n\n\nOutput:\n\n{\n    \"Policy\": \"{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetImage\", \"imagebuilder:ListImages\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:image/my-example-image/2019.12.03/1\" ] } ] }\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-image-recipe",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-image-recipe.html",
      "command_description": "Description\n\nGets an image recipe.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-image-recipe\n--image-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageRecipe -> (structure)\n\nThe image recipe object.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe.\n\ntype -> (string)\n\nSpecifies which type of image is created by the recipe - an AMI or a container image.\n\nname -> (string)\n\nThe name of the image recipe.\n\ndescription -> (string)\n\nThe description of the image recipe.\n\nplatform -> (string)\n\nThe platform of the image recipe.\n\nowner -> (string)\n\nThe owner of the image recipe.\n\nversion -> (string)\n\nThe version of the image recipe.\n\ncomponents -> (list)\n\nThe components of the image recipe.\n\n(structure)\n\nConfiguration details of the component.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nparameters -> (list)\n\nA group of parameter settings that are used to configure the component for a specific recipe.\n\n(structure)\n\nContains a key/value pair that sets the named component parameter.\n\nname -> (string)\n\nThe name of the component parameter to set.\n\nvalue -> (list)\n\nSets the value for the named component parameter.\n\n(string)\n\nparentImage -> (string)\n\nThe base image of the image recipe.\n\nblockDeviceMappings -> (list)\n\nThe block device mappings to apply when creating images from this recipe.\n\n(structure)\n\nDefines block device mappings for the instance used to configure your image.\n\ndeviceName -> (string)\n\nThe device to which these mappings apply.\n\nebs -> (structure)\n\nUse to manage Amazon EBS-specific configuration for this mapping.\n\nencrypted -> (boolean)\n\nUse to configure device encryption.\n\ndeleteOnTermination -> (boolean)\n\nUse to configure delete on termination of the associated device.\n\niops -> (integer)\n\nUse to configure device IOPS.\n\nkmsKeyId -> (string)\n\nUse to configure the KMS key to use when encrypting the device.\n\nsnapshotId -> (string)\n\nThe snapshot that defines the device contents.\n\nvolumeSize -> (integer)\n\nUse to override the device’s volume size.\n\nvolumeType -> (string)\n\nUse to override the device’s volume type.\n\nthroughput -> (integer)\n\nFor GP3 volumes only – The throughput in MiB/s that the volume supports.\n\nvirtualName -> (string)\n\nUse to manage instance ephemeral devices.\n\nnoDevice -> (string)\n\nUse to remove a mapping from the base image.\n\ndateCreated -> (string)\n\nThe date on which this image recipe was created.\n\ntags -> (map)\n\nThe tags of the image recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nworkingDirectory -> (string)\n\nThe working directory to be used during build and test workflows.\n\nadditionalInstanceConfiguration -> (structure)\n\nBefore you create a new AMI, Image Builder launches temporary Amazon EC2 instances to build and test your image configuration. Instance configuration adds a layer of control over those instances. You can define settings and add scripts to run when an instance is launched from your AMI.\n\nsystemsManagerAgent -> (structure)\n\nContains settings for the Systems Manager agent on your build instance.\n\nuninstallAfterBuild -> (boolean)\n\nControls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it’s set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.\n\nuserDataOverride -> (string)\n\nUse this property to provide commands or a command script to run when you launch your build instance.\n\nNote\n\nThe userDataOverride property replaces any commands that Image Builder might have added to ensure that Systems Manager is installed on your Linux build instance. If you override the user data, make sure that you add commands to install Systems Manager, if it is not pre-installed on your base image."
    },
    {
      "command_name": "get-image-recipe-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-image-recipe-policy.html",
      "command_description": "Description\n\nGets an image recipe policy.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-image-recipe-policy\n--image-recipe-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-recipe-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe whose policy you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\npolicy -> (string)\n\nThe image recipe policy object.",
      "command_examples": "Examples\n\nTo get image recipe policy details\n\nThe following get-image-recipe-policy example lists the details of an image recipe policy by specifying its ARN.\n\naws imagebuilder get-image-recipe-policy \\\n    --image-arn arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/my-example-image-recipe/2019.12.03/1\n\n\nOutput:\n\n{\n    \"Policy\": \"{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetImageRecipe\", \"imagebuilder:ListImageRecipes\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/my-example-image-recipe/2019.12.03/1\" ] } ] }\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "get-infrastructure-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/get-infrastructure-configuration.html",
      "command_description": "Description\n\nGets an infrastructure configuration.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-infrastructure-configuration\n--infrastructure-configuration-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--infrastructure-configuration-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ninfrastructureConfiguration -> (structure)\n\nThe infrastructure configuration object.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration.\n\nname -> (string)\n\nThe name of the infrastructure configuration.\n\ndescription -> (string)\n\nThe description of the infrastructure configuration.\n\ninstanceTypes -> (list)\n\nThe instance types of the infrastructure configuration.\n\n(string)\n\ninstanceProfileName -> (string)\n\nThe instance profile of the infrastructure configuration.\n\nsecurityGroupIds -> (list)\n\nThe security group IDs of the infrastructure configuration.\n\n(string)\n\nsubnetId -> (string)\n\nThe subnet ID of the infrastructure configuration.\n\nlogging -> (structure)\n\nThe logging configuration of the infrastructure configuration.\n\ns3Logs -> (structure)\n\nThe Amazon S3 logging configuration.\n\ns3BucketName -> (string)\n\nThe Amazon S3 bucket in which to store the logs.\n\ns3KeyPrefix -> (string)\n\nThe Amazon S3 path in which to store the logs.\n\nkeyPair -> (string)\n\nThe Amazon EC2 key pair of the infrastructure configuration.\n\nterminateInstanceOnFailure -> (boolean)\n\nThe terminate instance on failure configuration of the infrastructure configuration.\n\nsnsTopicArn -> (string)\n\nThe SNS topic Amazon Resource Name (ARN) of the infrastructure configuration.\n\ndateCreated -> (string)\n\nThe date on which the infrastructure configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which the infrastructure configuration was last updated.\n\nresourceTags -> (map)\n\nThe tags attached to the resource created by Image Builder.\n\nkey -> (string)\n\nvalue -> (string)\n\ninstanceMetadataOptions -> (structure)\n\nThe instance metadata option settings for the infrastructure configuration.\n\nhttpTokens -> (string)\n\nIndicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:\n\nrequired – When you retrieve the IAM role credentials, version 2.0 credentials are returned in all cases.\n\noptional – You can include a signed token header in your request to retrieve instance metadata, or you can leave it out. If you include it, version 2.0 credentials are returned for the IAM role. Otherwise, version 1.0 credentials are returned.\n\nThe default setting is optional .\n\nhttpPutResponseHopLimit -> (integer)\n\nLimit the number of hops that an instance metadata request can traverse to reach its destination.\n\ntags -> (map)\n\nThe tags of the infrastructure configuration.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo get infrastructure configuration details\n\nThe following get-infrastructure-configuration example lists the details of an infrastructure configuration by specifying its ARN.\n\naws imagebuilder get-infrastructure-configuration \\\n    --infrastructure-configuration-arn arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"infrastructureConfiguration\": {\n        \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n        \"name\": \"MyExampleInfrastructure\",\n        \"description\": \"An example that will retain instances of failed builds\",\n        \"instanceTypes\": [\n            \"m5.large\",\n            \"m5.xlarge\"\n        ],\n        \"instanceProfileName\": \"EC2InstanceProfileForImageBuilder\",\n        \"securityGroupIds\": [\n            \"sg-a48c95ef\"\n        ],\n        \"subnetId\": \"subnet-a48c95ef\",\n        \"logging\": {\n            \"s3Logs\": {\n                \"s3BucketName\": \"bucket-name\",\n                \"s3KeyPrefix\": \"bucket-path\"\n            }\n        },\n        \"keyPair\": \"Name\",\n        \"terminateInstanceOnFailure\": false,\n        \"snsTopicArn\": \"arn:aws:sns:us-west-2:123456789012:sns-name\",\n        \"dateCreated\": \"2020-02-19T19:11:51.858Z\",\n        \"tags\": {}\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "import-component",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/import-component.html",
      "command_description": "Description\n\nImports a component and transforms its data into a component document.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  import-component\n--name <value>\n--semantic-version <value>\n[--description <value>]\n[--change-description <value>]\n--type <value>\n--format <value>\n--platform <value>\n[--data <value>]\n[--uri <value>]\n[--kms-key-id <value>]\n[--tags <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--semantic-version <value>",
        "[--description <value>]",
        "[--change-description <value>]",
        "--type <value>",
        "--format <value>",
        "--platform <value>",
        "[--data <value>]",
        "[--uri <value>]",
        "[--kms-key-id <value>]",
        "[--tags <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the component.\n\n--semantic-version (string)\n\nThe semantic version of the component. This version follows the semantic version syntax.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\n--description (string)\n\nThe description of the component. Describes the contents of the component.\n\n--change-description (string)\n\nThe change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.\n\n--type (string)\n\nThe type of the component denotes whether the component is used to build the image, or only to test it.\n\nPossible values:\n\nBUILD\n\nTEST\n\n--format (string)\n\nThe format of the resource that you want to import as a component.\n\nPossible values:\n\nSHELL\n\n--platform (string)\n\nThe platform of the component.\n\nPossible values:\n\nWindows\n\nLinux\n\n--data (string)\n\nThe data of the component. Used to specify the data inline. Either data or uri can be used to specify the data within the component.\n\n--uri (string)\n\nThe uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either data or uri can be used to specify the data within the component.\n\n--kms-key-id (string)\n\nThe ID of the KMS key that should be used to encrypt this component.\n\n--tags (map)\n\nThe tags of the component.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--client-token (string)\n\nThe idempotency token of the component.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ncomponentBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the imported component.",
      "command_examples": "Examples\n\nTo import a component\n\nThe following import-component example imports a preexisting script using a JSON file.\n\naws imagebuilder import-component \\\n    --cli-input-json file://import-component.json\n\n\nContents of import-component.json:\n\n{\n    \"name\": \"MyImportedComponent\",\n    \"semanticVersion\": \"1.0.0\",\n    \"description\": \"An example of how to import a component\",\n    \"changeDescription\": \"First commit message.\",\n    \"format\": \"SHELL\",\n    \"platform\": \"Windows\",\n    \"type\": \"BUILD\",\n    \"uri\": \"s3://s3-bucket-name/s3-bucket-path/component.yaml\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"componentBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myimportedcomponent/1.0.0/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-component-build-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-component-build-versions.html",
      "command_description": "Description\n\nReturns the list of component build versions for the specified semantic version.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-component-build-versions\n--component-version-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--component-version-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--component-version-arn (string)\n\nThe component version Amazon Resource Name (ARN) whose versions you want to list.\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncomponentSummaryList -> (list)\n\nThe list of component summaries for the specified semantic version.\n\n(structure)\n\nA high-level summary of a component.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nname -> (string)\n\nThe name of the component.\n\nversion -> (string)\n\nThe version of the component.\n\nplatform -> (string)\n\nThe platform of the component.\n\nsupportedOsVersions -> (list)\n\nThe operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.\n\n(string)\n\nstate -> (structure)\n\nDescribes the current status of the component.\n\nstatus -> (string)\n\nThe current state of the component.\n\nreason -> (string)\n\nDescribes how or why the component changed state.\n\ntype -> (string)\n\nThe type of the component denotes whether the component is used to build the image or only to test it.\n\nowner -> (string)\n\nThe owner of the component.\n\ndescription -> (string)\n\nThe description of the component.\n\nchangeDescription -> (string)\n\nThe change description of the component.\n\ndateCreated -> (string)\n\nThe date that the component was created.\n\ntags -> (map)\n\nThe tags associated with the component.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list component build versions\n\nThe following list-component-build-versions example lists the component build versions with a specific semantic version.\n\naws imagebuilder list-component-build-versions --component-version-arn arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"componentSummaryList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/myexamplecomponent/2019.12.02/1\",\n            \"name\": \"MyExampleComponent\",\n            \"version\": \"2019.12.02\",\n            \"platform\": \"Windows\",\n            \"type\": \"BUILD\",\n            \"owner\": \"123456789012\",\n            \"description\": \"An example component that builds, validates and tests an image\",\n            \"changeDescription\": \"Initial version.\",\n            \"dateCreated\": \"2020-02-19T18:53:45.940Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-components",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-components.html",
      "command_description": "Description\n\nReturns the list of component build versions for the specified semantic version.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-components\n[--owner <value>]\n[--filters <value>]\n[--by-name | --no-by-name]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--owner <value>]",
        "[--filters <value>]",
        "[--by-name | --no-by-name]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--owner (string)\n\nThe owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers.\n\nPossible values:\n\nSelf\n\nShared\n\nAmazon\n\n--filters (list)\n\nUse the following filters to streamline results:\n\ndescription\n\nname\n\nplatform\n\nsupportedOsVersion\n\ntype\n\nversion\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--by-name | --no-by-name (boolean)\n\nReturns the list of component build versions for the specified name.\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncomponentVersionList -> (list)\n\nThe list of component semantic versions.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\n(structure)\n\nThe defining characteristics of a specific version of an Amazon Web Services TOE component.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the component.\n\nNote\n\nSemantic versioning is included in each object’s Amazon Resource Name (ARN), at the level that applies to that object as follows:\n\nVersionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.\n\nVersion ARNs have only the first three nodes: <major>.<minor>.<patch>\n\nBuild version ARNs have all four nodes, and point to a specific build for a specific version of an object.\n\nname -> (string)\n\nThe name of the component.\n\nversion -> (string)\n\nThe semantic version of the component.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\ndescription -> (string)\n\nThe description of the component.\n\nplatform -> (string)\n\nThe platform of the component.\n\nsupportedOsVersions -> (list)\n\nhe operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.\n\n(string)\n\ntype -> (string)\n\nThe type of the component denotes whether the component is used to build the image or only to test it.\n\nowner -> (string)\n\nThe owner of the component.\n\ndateCreated -> (string)\n\nThe date that the component was created.\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list all of the component semantic versions\n\nThe following list-components example lists all of the component semantic versions to which you have access. You can optionally filter on whether to list components owned by you, by Amazon, or that have been shared with you by other accounts.\n\naws imagebuilder list-components\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"componentVersionList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/component-name/1.0.0\",\n            \"name\": \"component-name\",\n            \"version\": \"1.0.0\",\n            \"platform\": \"Linux\",\n            \"type\": \"TEST\",\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-01-27T20:43:30.306Z\"\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-container-recipes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-container-recipes.html",
      "command_description": "Description\n\nReturns a list of container recipes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-container-recipes\n[--owner <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--owner <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--owner (string)\n\nReturns container recipes belonging to the specified owner, that have been shared with you. You can omit this field to return container recipes belonging to your account.\n\nPossible values:\n\nSelf\n\nShared\n\nAmazon\n\n--filters (list)\n\nUse the following filters to streamline results:\n\ncontainerType\n\nname\n\nparentImage\n\nplatform\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum number of results to return in the list.\n\n--next-token (string)\n\nProvides a token for pagination, which determines where to begin the next set of results when the current set reaches the maximum for one request.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncontainerRecipeSummaryList -> (list)\n\nThe list of container recipes returned for the request.\n\n(structure)\n\nA summary of a container recipe\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe.\n\ncontainerType -> (string)\n\nSpecifies the type of container, such as “Docker”.\n\nname -> (string)\n\nThe name of the container recipe.\n\nplatform -> (string)\n\nThe system platform for the container, such as Windows or Linux.\n\nowner -> (string)\n\nThe owner of the container recipe.\n\nparentImage -> (string)\n\nThe base image for the container recipe.\n\ndateCreated -> (string)\n\nThe date when this container recipe was created.\n\ntags -> (map)\n\nTags that are attached to the container recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token field is used for paginated responses. When this is not empty, there are additional container recipes that the service has not included in this response. Use this token with the next request to retrieve additional list items."
    },
    {
      "command_name": "list-distribution-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-distribution-configurations.html",
      "command_description": "Description\n\nReturns a list of distribution configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-distribution-configurations\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nYou can filter on name to streamline results.\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ndistributionConfigurationSummaryList -> (list)\n\nThe list of distributions.\n\n(structure)\n\nA high-level overview of a distribution configuration.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration.\n\nname -> (string)\n\nThe name of the distribution configuration.\n\ndescription -> (string)\n\nThe description of the distribution configuration.\n\ndateCreated -> (string)\n\nThe date on which the distribution configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which the distribution configuration was updated.\n\ntags -> (map)\n\nThe tags associated with the distribution configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\nregions -> (list)\n\nA list of Regions where the container image is distributed to.\n\n(string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list distributions\n\nThe following list-distribution-configurations example lists all of your distributions.\n\naws imagebuilder list-distribution-configurations\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"distributionConfigurationSummaryList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n            \"name\": \"MyExampleDistribution\",\n            \"description\": \"Copies AMI to eu-west-1 and exports to S3\",\n            \"dateCreated\": \"2020-02-19T18:40:10.529Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-image-build-versions",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-image-build-versions.html",
      "command_description": "Description\n\nReturns a list of image build versions.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-image-build-versions\n--image-version-arn <value>\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-version-arn <value>",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-version-arn (string)\n\nThe Amazon Resource Name (ARN) of the image whose build versions you want to retrieve.\n\n--filters (list)\n\nUse the following filters to streamline results:\n\nname\n\nosVersion\n\nplatform\n\ntype\n\nversion\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageSummaryList -> (list)\n\nThe list of image build versions.\n\n(structure)\n\nAn image summary.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image.\n\nname -> (string)\n\nThe name of the image.\n\ntype -> (string)\n\nSpecifies whether this is an AMI or container image.\n\nversion -> (string)\n\nThe version of the image.\n\nplatform -> (string)\n\nThe platform of the image.\n\nosVersion -> (string)\n\nThe operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.\n\nstate -> (structure)\n\nThe state of the image.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\nowner -> (string)\n\nThe owner of the image.\n\ndateCreated -> (string)\n\nThe date on which this image was created.\n\noutputResources -> (structure)\n\nThe output resources produced when creating this image.\n\namis -> (list)\n\nThe Amazon EC2 AMIs created by this image.\n\n(structure)\n\nDetails of an Amazon EC2 AMI.\n\nregion -> (string)\n\nThe Amazon Web Services Region of the Amazon EC2 AMI.\n\nimage -> (string)\n\nThe AMI ID of the Amazon EC2 AMI.\n\nname -> (string)\n\nThe name of the Amazon EC2 AMI.\n\ndescription -> (string)\n\nThe description of the Amazon EC2 AMI. Minimum and maximum length are in characters.\n\nstate -> (structure)\n\nImage state shows the image status and the reason for that status.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\naccountId -> (string)\n\nThe account ID of the owner of the AMI.\n\ncontainers -> (list)\n\nContainer images that the pipeline has generated and stored in the output repository.\n\n(structure)\n\nA container encapsulates the runtime environment for an application.\n\nregion -> (string)\n\nContainers and container images are Region-specific. This is the Region context for the container.\n\nimageUris -> (list)\n\nA list of URIs for containers created in the context Region.\n\n(string)\n\ntags -> (map)\n\nThe tags of the image.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list image build versions\n\nThe following list-image-build-versions example lists all of the image build versions with a semantic version.\n\naws imagebuilder list-image-build-versions \\\n    --image-version-arn arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageSummaryList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/7\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/7\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"FAILED\",\n                \"reason\": \"Can't start SSM Automation for arn arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/7 during building. Parameter \\\"iamInstanceProfileName\\\" has a null value.\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-19T18:56:11.511Z\",\n            \"outputResources\": {\n                \"amis\": []\n            },\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/6\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/6\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"FAILED\",\n                \"reason\": \"An internal error has occurred.\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-18T22:49:08.142Z\",\n            \"outputResources\": {\n                \"amis\": [\n                    {\n                        \"region\": \"us-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"MyBasicRecipe 2020-02-18T22-49-38.704Z\",\n                        \"description\": \"This example image recipe creates a Windows 2016 image.\"\n                    },\n                    {\n                        \"region\": \"us-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"Name 2020-02-18T22-49-08.131Z\",\n                        \"description\": \"Copies AMI to eu-west-2 and exports to S3\"\n                    },\n                    {\n                        \"region\": \"eu-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"My 6 image 2020-02-18T22-49-08.131Z\",\n                        \"description\": \"Copies AMI to eu-west-2 and exports to S3\"\n                    }\n                ]\n            },\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/5\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/5\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"AVAILABLE\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-18T16:51:48.403Z\",\n            \"outputResources\": {\n                \"amis\": [\n                    {\n                        \"region\": \"us-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"MyBasicRecipe 2020-02-18T16-52-18.965Z\",\n                        \"description\": \"This example image recipe creates a Windows 2016 image.\"\n                    }\n                ]\n            },\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/4\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/4\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"AVAILABLE\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-18T16:50:01.827Z\",\n            \"outputResources\": {\n                \"amis\": [\n                    {\n                        \"region\": \"us-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"MyBasicRecipe 2020-02-18T16-50-32.280Z\",\n                        \"description\": \"This example image recipe creates a Windows 2016 image.\"\n                    }\n                ]\n            },\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/3\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/3\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"AVAILABLE\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-14T23:14:13.597Z\",\n            \"outputResources\": {\n                \"amis\": [\n                    {\n                        \"region\": \"us-west-2\",\n                        \"image\": \"ami-a1b2c3d4567890ab\",\n                        \"name\": \"MyBasicRecipe 2020-02-14T23-14-44.243Z\",\n                        \"description\": \"This example image recipe creates a Windows 2016 image.\"\n                    }\n                ]\n            },\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/2\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03/2\",\n            \"platform\": \"Windows\",\n            \"state\": {\n                \"status\": \"FAILED\",\n                \"reason\": \"SSM execution 'a1b2c3d4-5678-90ab-cdef-EXAMPLE11111' failed with status = 'Failed' and failure message = 'Step fails when it is verifying the command has completed. Command a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 returns unexpected invocation result: \\n{Status=[Failed], ResponseCode=[1], Output=[\\n----------ERROR-------\\nfailed to run commands: exit status 1], OutputPayload=[{\\\"Status\\\":\\\"Failed\\\",\\\"ResponseCode\\\":1,\\\"Output\\\":\\\"\\\\n----------ERROR-------\\\\nfailed to run commands: exit status 1\\\",\\\"CommandId\\\":\\\"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\\\"}], CommandId=[a1b2c3d4-5678-90ab-cdef-EXAMPLE11111]}. Please refer to Automation Service Troubleshooting Guide for more diagnosis details.'\"\n            },\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-14T22:57:42.593Z\",\n            \"outputResources\": {\n                \"amis\": []\n            },\n            \"tags\": {}\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-image-packages",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-image-packages.html",
      "command_description": "Description\n\nList the Packages that are associated with an Image Build Version, as determined by Amazon Web Services Systems Manager Inventory at build time.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-image-packages\n--image-build-version-arn <value>\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-build-version-arn <value>",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-build-version-arn (string)\n\nFilter results for the ListImagePackages request by the Image Build Version ARN\n\n--max-results (integer)\n\nThe maxiumum number of results to return from the ListImagePackages request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimagePackageList -> (list)\n\nThe list of Image Packages returned in the response.\n\n(structure)\n\nRepresents a package installed on an Image Builder image.\n\npackageName -> (string)\n\nThe name of the package as reported to the operating system package manager.\n\npackageVersion -> (string)\n\nThe version of the package as reported to the operating system package manager.\n\nnextToken -> (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response."
    },
    {
      "command_name": "list-image-pipeline-images",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-image-pipeline-images.html",
      "command_description": "Description\n\nReturns a list of images created by the specified pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-image-pipeline-images\n--image-pipeline-arn <value>\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-pipeline-arn <value>",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-pipeline-arn (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline whose images you want to view.\n\n--filters (list)\n\nUse the following filters to streamline results:\n\nname\n\nversion\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageSummaryList -> (list)\n\nThe list of images built by this pipeline.\n\n(structure)\n\nAn image summary.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image.\n\nname -> (string)\n\nThe name of the image.\n\ntype -> (string)\n\nSpecifies whether this is an AMI or container image.\n\nversion -> (string)\n\nThe version of the image.\n\nplatform -> (string)\n\nThe platform of the image.\n\nosVersion -> (string)\n\nThe operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.\n\nstate -> (structure)\n\nThe state of the image.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\nowner -> (string)\n\nThe owner of the image.\n\ndateCreated -> (string)\n\nThe date on which this image was created.\n\noutputResources -> (structure)\n\nThe output resources produced when creating this image.\n\namis -> (list)\n\nThe Amazon EC2 AMIs created by this image.\n\n(structure)\n\nDetails of an Amazon EC2 AMI.\n\nregion -> (string)\n\nThe Amazon Web Services Region of the Amazon EC2 AMI.\n\nimage -> (string)\n\nThe AMI ID of the Amazon EC2 AMI.\n\nname -> (string)\n\nThe name of the Amazon EC2 AMI.\n\ndescription -> (string)\n\nThe description of the Amazon EC2 AMI. Minimum and maximum length are in characters.\n\nstate -> (structure)\n\nImage state shows the image status and the reason for that status.\n\nstatus -> (string)\n\nThe status of the image.\n\nreason -> (string)\n\nThe reason for the image’s status.\n\naccountId -> (string)\n\nThe account ID of the owner of the AMI.\n\ncontainers -> (list)\n\nContainer images that the pipeline has generated and stored in the output repository.\n\n(structure)\n\nA container encapsulates the runtime environment for an application.\n\nregion -> (string)\n\nContainers and container images are Region-specific. This is the Region context for the container.\n\nimageUris -> (list)\n\nA list of URIs for containers created in the context Region.\n\n(string)\n\ntags -> (map)\n\nThe tags of the image.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list image pipeline pipeline images\n\nThe following list-image-pipeline-images example lists all images that were created by a specific image pipeline.\n\naws imagebuilder list-image-pipeline-images \\\n    --image-pipeline-arn arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imagePipelineList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\",\n            \"name\": \"MyWindows2016Pipeline\",\n            \"description\": \"Builds Windows 2016 Images\",\n            \"platform\": \"Windows\",\n            \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n            \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n            \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n            \"imageTestsConfiguration\": {\n                \"imageTestsEnabled\": true,\n                \"timeoutMinutes\": 60\n            },\n            \"schedule\": {\n                \"scheduleExpression\": \"cron(0 0 * * SUN)\",\n                \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n            },\n            \"status\": \"ENABLED\",\n            \"dateCreated\": \"2020-02-19T19:04:01.253Z\",\n            \"dateUpdated\": \"2020-02-19T19:04:01.253Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/sam\",\n            \"name\": \"PipelineName\",\n            \"platform\": \"Linux\",\n            \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/recipe-name-a1b2c3d45678/1.0.0\",\n            \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/infrastructureconfiguration-name-a1b2c3d45678\",\n            \"imageTestsConfiguration\": {\n                \"imageTestsEnabled\": true,\n                \"timeoutMinutes\": 720\n            },\n            \"status\": \"ENABLED\",\n            \"dateCreated\": \"2019-12-16T18:19:02.068Z\",\n            \"dateUpdated\": \"2019-12-16T18:19:02.068Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-image-pipelines",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-image-pipelines.html",
      "command_description": "Description\n\nReturns a list of image pipelines.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-image-pipelines\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nUse the following filters to streamline results:\n\ndescription\n\ndistributionConfigurationArn\n\nimageRecipeArn\n\ninfrastructureConfigurationArn\n\nname\n\nstatus\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimagePipelineList -> (list)\n\nThe list of image pipelines.\n\n(structure)\n\nDetails of an image pipeline.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline.\n\nname -> (string)\n\nThe name of the image pipeline.\n\ndescription -> (string)\n\nThe description of the image pipeline.\n\nplatform -> (string)\n\nThe platform of the image pipeline.\n\nenhancedImageMetadataEnabled -> (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\nimageRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.\n\ncontainerRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.\n\ninfrastructureConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.\n\ndistributionConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.\n\nimageTestsConfiguration -> (structure)\n\nThe image tests configuration of the image pipeline.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\nschedule -> (structure)\n\nThe schedule of the image pipeline.\n\nscheduleExpression -> (string)\n\nThe cron expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition .\n\nFor information on how to format a cron expression in Image Builder, see Use cron expressions in EC2 Image Builder .\n\ntimezone -> (string)\n\nThe timezone that applies to the scheduling expression. For example, “Etc/UTC”, “America/Los_Angeles” in the IANA timezone format . If not specified this defaults to UTC.\n\npipelineExecutionStartCondition -> (string)\n\nThe condition configures when the pipeline should trigger a new image build. When the pipelineExecutionStartCondition is set to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE , and you use semantic version filters on the base image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to EXPRESSION_MATCH_ONLY , it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see CreateComponent in the EC2 Image Builder API Reference .\n\nstatus -> (string)\n\nThe status of the image pipeline.\n\ndateCreated -> (string)\n\nThe date on which this image pipeline was created.\n\ndateUpdated -> (string)\n\nThe date on which this image pipeline was last updated.\n\ndateLastRun -> (string)\n\nThe date on which this image pipeline was last run.\n\ndateNextRun -> (string)\n\nThe date on which this image pipeline will next be run.\n\ntags -> (map)\n\nThe tags of this image pipeline.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects."
    },
    {
      "command_name": "list-image-recipes",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-image-recipes.html",
      "command_description": "Description\n\nReturns a list of image recipes.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-image-recipes\n[--owner <value>]\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--owner <value>]",
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--owner (string)\n\nThe owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.\n\nPossible values:\n\nSelf\n\nShared\n\nAmazon\n\n--filters (list)\n\nUse the following filters to streamline results:\n\nname\n\nparentImage\n\nplatform\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageRecipeSummaryList -> (list)\n\nThe list of image pipelines.\n\n(structure)\n\nA summary of an image recipe.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe.\n\nname -> (string)\n\nThe name of the image recipe.\n\nplatform -> (string)\n\nThe platform of the image recipe.\n\nowner -> (string)\n\nThe owner of the image recipe.\n\nparentImage -> (string)\n\nThe base image of the image recipe.\n\ndateCreated -> (string)\n\nThe date on which this image recipe was created.\n\ntags -> (map)\n\nThe tags of the image recipe.\n\nkey -> (string)\n\nvalue -> (string)\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list image recipes\n\nThe following list-image-recipes example lists all of your image recipes.\n\naws imagebuilder list-image-recipes\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageRecipeSummaryList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n            \"name\": \"MyBasicRecipe\",\n            \"platform\": \"Windows\",\n            \"owner\": \"123456789012\",\n            \"parentImage\": \"arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/2019.x.x\",\n            \"dateCreated\": \"2020-02-19T18:54:25.975Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/recipe-name-a1b2c3d45678/1.0.0\",\n            \"name\": \"recipe-name-a1b2c3d45678\",\n            \"platform\": \"Linux\",\n            \"owner\": \"123456789012\",\n            \"parentImage\": \"arn:aws:imagebuilder:us-west-2:aws:image/amazon-linux-2-x86/2019.11.21\",\n            \"dateCreated\": \"2019-12-16T18:19:00.120Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-images",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-images.html",
      "command_description": "Description\n\nReturns the list of images that you have access to.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-images\n[--owner <value>]\n[--filters <value>]\n[--by-name | --no-by-name]\n[--max-results <value>]\n[--next-token <value>]\n[--include-deprecated | --no-include-deprecated]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--owner <value>]",
        "[--filters <value>]",
        "[--by-name | --no-by-name]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--include-deprecated | --no-include-deprecated]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--owner (string)\n\nThe owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.\n\nPossible values:\n\nSelf\n\nShared\n\nAmazon\n\n--filters (list)\n\nUse the following filters to streamline results:\n\nname\n\nosVersion\n\nplatform\n\ntype\n\nversion\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--by-name | --no-by-name (boolean)\n\nRequests a list of images with a specific recipe name.\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--include-deprecated | --no-include-deprecated (boolean)\n\nIncludes deprecated images in the response list.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageVersionList -> (list)\n\nThe list of image semantic versions.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\n(structure)\n\nThe defining characteristics of a specific version of an Image Builder image.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of a specific version of an Image Builder image.\n\nNote\n\nSemantic versioning is included in each object’s Amazon Resource Name (ARN), at the level that applies to that object as follows:\n\nVersionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.\n\nVersion ARNs have only the first three nodes: <major>.<minor>.<patch>\n\nBuild version ARNs have all four nodes, and point to a specific build for a specific version of an object.\n\nname -> (string)\n\nThe name of this specific version of an Image Builder image.\n\ntype -> (string)\n\nSpecifies whether this image is an AMI or a container image.\n\nversion -> (string)\n\nDetails for a specific version of an Image Builder image. This version follows the semantic version syntax.\n\nNote\n\nThe semantic version has four nodes: <major>.<minor>.<patch>/<build>. You can assign values for the first three, and can filter on all of them.\n\nAssignment: For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.\n\nPatterns: You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.\n\nFiltering: With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.\n\nplatform -> (string)\n\nThe platform of the image version, for example “Windows” or “Linux”.\n\nosVersion -> (string)\n\nThe operating system version of the Amazon EC2 build instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.\n\nowner -> (string)\n\nThe owner of the image version.\n\ndateCreated -> (string)\n\nThe date on which this specific version of the Image Builder image was created.\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list images\n\nThe following list-images example lists all of the semantic versions you have access to.\n\naws imagebuilder list-images\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageVersionList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03\",\n            \"name\": \"MyBasicRecipe\",\n            \"version\": \"2019.12.03\",\n            \"platform\": \"Windows\",\n            \"owner\": \"123456789012\",\n            \"dateCreated\": \"2020-02-14T21:29:18.810Z\"\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-infrastructure-configurations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-infrastructure-configurations.html",
      "command_description": "Description\n\nReturns a list of infrastructure configurations.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-infrastructure-configurations\n[--filters <value>]\n[--max-results <value>]\n[--next-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--filters <value>]",
        "[--max-results <value>]",
        "[--next-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--filters (list)\n\nYou can filter on name to streamline results.\n\n(structure)\n\nA filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.\n\nname -> (string)\n\nThe name of the filter. Filter names are case-sensitive.\n\nvalues -> (list)\n\nThe filter values. Filter values are case-sensitive.\n\n(string)\n\nShorthand Syntax:\n\nname=string,values=string,string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"name\": \"string\",\n    \"values\": [\"string\", ...]\n  }\n  ...\n]\n\n\n--max-results (integer)\n\nThe maximum items to return in a request.\n\n--next-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ninfrastructureConfigurationSummaryList -> (list)\n\nThe list of infrastructure configurations.\n\n(structure)\n\nThe infrastructure used when building Amazon EC2 AMIs.\n\narn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration.\n\nname -> (string)\n\nThe name of the infrastructure configuration.\n\ndescription -> (string)\n\nThe description of the infrastructure configuration.\n\ndateCreated -> (string)\n\nThe date on which the infrastructure configuration was created.\n\ndateUpdated -> (string)\n\nThe date on which the infrastructure configuration was last updated.\n\nresourceTags -> (map)\n\nThe tags attached to the image created by Image Builder.\n\nkey -> (string)\n\nvalue -> (string)\n\ntags -> (map)\n\nThe tags of the infrastructure configuration.\n\nkey -> (string)\n\nvalue -> (string)\n\ninstanceTypes -> (list)\n\nThe instance types of the infrastructure configuration.\n\n(string)\n\ninstanceProfileName -> (string)\n\nThe instance profile of the infrastructure configuration.\n\nnextToken -> (string)\n\nThe next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.",
      "command_examples": "Examples\n\nTo list infrastructure configurations\n\nThe following list-infrastructure-configurations example lists all of your infrastructure configurations.\n\naws imagebuilder list-infrastructure-configurations\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"infrastructureConfigurationSummaryList\": [\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n            \"name\": \"MyExampleInfrastructure\",\n            \"description\": \"An example that will retain instances of failed builds\",\n            \"dateCreated\": \"2020-02-19T19:11:51.858Z\",\n            \"tags\": {}\n        },\n        {\n            \"arn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/infrastructureconfiguration-name-a1b2c3d45678\",\n            \"name\": \"infrastructureConfiguration-name-a1b2c3d45678\",\n            \"dateCreated\": \"2019-12-16T18:19:01.038Z\",\n            \"tags\": {\n                \"KeyName\": \"KeyValue\"\n            }\n        }\n    ]\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/list-tags-for-resource.html",
      "command_description": "Description\n\nReturns the list of tags for the specified resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\ntags -> (map)\n\nThe tags for the specified resource.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list tags for a specific resource\n\nThe following list-tags-for-resource example lists all of the tags for a specific resource.\n\naws imagebuilder list-tags-for-resource \\\n    --resource-arn arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\n\n\nOutput:\n\n{\n    \"tags\": {\n        \"KeyName\": \"KeyValue\"\n    }\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "put-component-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/put-component-policy.html",
      "command_description": "Description\n\nApplies a policy to a component. We recommend that you call the RAM API CreateResourceShare to share resources. If you call the Image Builder API PutComponentPolicy , you must also call the RAM API PromoteResourceShareCreatedFromPolicy in order for the resource to be visible to all principals with whom the resource is shared.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-component-policy\n--component-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--component-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--component-arn (string)\n\nThe Amazon Resource Name (ARN) of the component that this policy should be applied to.\n\n--policy (string)\n\nThe policy to apply.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncomponentArn -> (string)\n\nThe Amazon Resource Name (ARN) of the component that this policy was applied to.",
      "command_examples": "Examples\n\nTo apply a resource policy to a component\n\nThe following put-component-policy command applies a resource policy to a build component to enable cross-account sharing of build components. We recommend you use the RAM CLI command create-resource-share. If you use the EC2 Image Builder CLI command put-component-policy, you must also use the RAM CLI command promote-resource-share-create-from-policy in order for the resource to be visible to all principals with whom the resource is shared.\n\naws imagebuilder put-component-policy \\\n    --image-arn arn:aws:imagebuilder:us-west-2:123456789012:component/examplecomponent/2019.12.02/1 \\\n    --policy '{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetComponent\", \"imagebuilder:ListComponents\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:component/examplecomponent/2019.12.02/1\" ] } ] }'\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"componentArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:component/examplecomponent/2019.12.02/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "put-container-recipe-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/put-container-recipe-policy.html",
      "command_description": "Description\n\nApplies a policy to a container image. We recommend that you call the RAM API CreateResourceShare (https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html) to share resources. If you call the Image Builder API PutContainerImagePolicy , you must also call the RAM API PromoteResourceShareCreatedFromPolicy (https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html) in order for the resource to be visible to all principals with whom the resource is shared.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-container-recipe-policy\n--container-recipe-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--container-recipe-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that this policy should be applied to.\n\n--policy (string)\n\nThe policy to apply to the container recipe.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\ncontainerRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the container recipe that this policy was applied to."
    },
    {
      "command_name": "put-image-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/put-image-policy.html",
      "command_description": "Description\n\nApplies a policy to an image. We recommend that you call the RAM API CreateResourceShare to share resources. If you call the Image Builder API PutImagePolicy , you must also call the RAM API PromoteResourceShareCreatedFromPolicy in order for the resource to be visible to all principals with whom the resource is shared.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-image-policy\n--image-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-arn (string)\n\nThe Amazon Resource Name (ARN) of the image that this policy should be applied to.\n\n--policy (string)\n\nThe policy to apply.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image that this policy was applied to.",
      "command_examples": "Examples\n\nTo apply a resource policy to an image\n\nThe following put-image-policy command applies a resource policy to an image to enable cross-account sharing of images. We recommend you use the RAM CLI command create-resource-share. If you use the EC2 Image Builder CLI command put-image-policy, you must also use the RAM CLI command promote-resource-share-create-from-policy in order for the resource to be visible to all principals with whom the resource is shared.\n\naws imagebuilder put-image-policy \\\n    --image-arn arn:aws:imagebuilder:us-west-2:123456789012:image/example-image/2019.12.02/1 \\\n    --policy '{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetImage\", \"imagebuilder:ListImages\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:image/example-image/2019.12.02/1\" ] } ] }'\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/example-image/2019.12.02/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "put-image-recipe-policy",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/put-image-recipe-policy.html",
      "command_description": "Description\n\nApplies a policy to an image recipe. We recommend that you call the RAM API CreateResourceShare to share resources. If you call the Image Builder API PutImageRecipePolicy , you must also call the RAM API PromoteResourceShareCreatedFromPolicy in order for the resource to be visible to all principals with whom the resource is shared.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-image-recipe-policy\n--image-recipe-arn <value>\n--policy <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-recipe-arn <value>",
        "--policy <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that this policy should be applied to.\n\n--policy (string)\n\nThe policy to apply.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nimageRecipeArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that this policy was applied to.",
      "command_examples": "Examples\n\nTo apply a resource policy to an image recipe\n\nThe following put-image-recipe-policy command applies a resource policy to an image recipe to enable cross-account sharing of image recipes. We recommend that you use the RAM CLI command create-resource-share. If you use the EC2 Image Builder CLI command put-image-recipe-policy, you must also use the RAM CLI command promote-resource-share-create-from-policy in order for the resource to be visible to all principals with whom the resource is shared.\n\naws imagebuilder put-image-recipe-policy \\\n    --image-recipe-arn arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/example-image-recipe/2019.12.02/1 \\\n    --policy '{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": [ \"123456789012\" ] }, \"Action\": [ \"imagebuilder:GetImageRecipe\", \"imagebuilder:ListImageRecipes\" ], \"Resource\": [ \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/example-image-recipe/2019.12.02/1\" ] } ] }'\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/example-image-recipe/2019.12.02/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "start-image-pipeline-execution",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/start-image-pipeline-execution.html",
      "command_description": "Description\n\nManually triggers a pipeline to create an image.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-image-pipeline-execution\n--image-pipeline-arn <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-pipeline-arn <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-pipeline-arn (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke.\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimageBuildVersionArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image that was created by this request.",
      "command_examples": "Examples\n\nTo start an image pipeline manually\n\nThe following start-image-pipeline-execution example manually starts an image pipeline.\n\naws imagebuilder start-image-pipeline-execution \\\n    --image-pipeline-arn arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\",\n    \"clientToken\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE22222\",\n    \"imageBuildVersionArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image/mybasicrecipe/2019.12.03/1\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/tag-resource.html",
      "command_description": "Description\n\nAdds a tag to a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to tag.\n\n--tags (map)\n\nThe tags to apply to the resource.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo tag a resource\n\nThe following tag-resource example adds and tags a resource to EC2 Image Builder using a JSON file.\n\naws imagebuilder tag-resource \\\n    --cli-input-json file://tag-resource.json\n\n\nContents of tag-resource.json:\n\n{\n    \"resourceArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\",\n    \"tags\": {\n        \"KeyName: \"KeyValue\"\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/untag-resource.html",
      "command_description": "Description\n\nRemoves a tag from a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe Amazon Resource Name (ARN) of the resource that you want to untag.\n\n--tag-keys (list)\n\nThe tag keys to remove from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove a tag from a resource\n\nThe following untag-resource example removes a tag from a resource using a JSON file.\n\naws imagebuilder untag-resource \\\n    --cli-input-json file://tag-resource.json\n\n\nContents of untag-resource.json:\n\n{\n    \"resourceArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\",\n    \"tagKeys\": [\n        \"KeyName\"\n    ]\n}\n\n\nThis command produces no output.\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "update-distribution-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/update-distribution-configuration.html",
      "command_description": "Description\n\nUpdates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-distribution-configuration\n--distribution-configuration-arn <value>\n[--description <value>]\n--distributions <value>\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--distribution-configuration-arn <value>",
        "[--description <value>]",
        "--distributions <value>",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that you want to update.\n\n--description (string)\n\nThe description of the distribution configuration.\n\n--distributions (list)\n\nThe distributions of the distribution configuration.\n\n(structure)\n\nDefines the settings for a specific Region.\n\nregion -> (string)\n\nThe target Region.\n\namiDistributionConfiguration -> (structure)\n\nThe specific AMI settings; for example, launch permissions or AMI tags.\n\nname -> (string)\n\nThe name of the output AMI.\n\ndescription -> (string)\n\nThe description of the distribution configuration. Minimum and maximum length are in characters.\n\ntargetAccountIds -> (list)\n\nThe ID of an account to which you want to distribute an image.\n\n(string)\n\namiTags -> (map)\n\nThe tags to apply to AMIs distributed to this Region.\n\nkey -> (string)\n\nvalue -> (string)\n\nkmsKeyId -> (string)\n\nThe KMS key identifier used to encrypt the distributed image.\n\nlaunchPermission -> (structure)\n\nLaunch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.\n\nuserIds -> (list)\n\nThe Amazon Web Services account ID.\n\n(string)\n\nuserGroups -> (list)\n\nThe name of the group.\n\n(string)\n\ncontainerDistributionConfiguration -> (structure)\n\nContainer distribution settings for encryption, licensing, and sharing in a specific Region.\n\ndescription -> (string)\n\nThe description of the container distribution configuration.\n\ncontainerTags -> (list)\n\nTags that are attached to the container distribution configuration.\n\n(string)\n\ntargetRepository -> (structure)\n\nThe destination repository for the container distribution configuration.\n\nservice -> (string)\n\nSpecifies the service in which this image was registered.\n\nrepositoryName -> (string)\n\nThe name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\nlicenseConfigurationArns -> (list)\n\nThe License Manager Configuration to associate with the AMI in the specified Region.\n\n(string)\n\nlaunchTemplateConfigurations -> (list)\n\nA group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.\n\n(structure)\n\nIdentifies an Amazon EC2 launch template to use for a specific account.\n\nlaunchTemplateId -> (string)\n\nIdentifies the Amazon EC2 launch template to use.\n\naccountId -> (string)\n\nThe account ID that this configuration applies to.\n\nsetDefaultVersion -> (boolean)\n\nSet the specified Amazon EC2 launch template as the default launch template for the specified account.\n\nJSON Syntax:\n\n[\n  {\n    \"region\": \"string\",\n    \"amiDistributionConfiguration\": {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"targetAccountIds\": [\"string\", ...],\n      \"amiTags\": {\"string\": \"string\"\n        ...},\n      \"kmsKeyId\": \"string\",\n      \"launchPermission\": {\n        \"userIds\": [\"string\", ...],\n        \"userGroups\": [\"string\", ...]\n      }\n    },\n    \"containerDistributionConfiguration\": {\n      \"description\": \"string\",\n      \"containerTags\": [\"string\", ...],\n      \"targetRepository\": {\n        \"service\": \"ECR\",\n        \"repositoryName\": \"string\"\n      }\n    },\n    \"licenseConfigurationArns\": [\"string\", ...],\n    \"launchTemplateConfigurations\": [\n      {\n        \"launchTemplateId\": \"string\",\n        \"accountId\": \"string\",\n        \"setDefaultVersion\": true|false\n      }\n      ...\n    ]\n  }\n  ...\n]\n\n\n--client-token (string)\n\nThe idempotency token of the distribution configuration.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ndistributionConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that was updated by this request.",
      "command_examples": "Examples\n\nTo update a distribution configuration\n\nThe following update-distribution-configuration example updates a distribution configuration using a JSON file.\n\naws imagebuilder update-distribution-configuration \\\n    --cli-input-json file://update-distribution-configuration.json\n\n\nContents of update-distribution-configuration.json:\n\n{\n    \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n    \"description\": \"Copies AMI to eu-west-2 and exports to S3\",\n    \"distributions\": [\n        {\n            \"region\": \"us-west-2\",\n            \"amiDistributionConfiguration\": {\n                \"name\": \"Name {{imagebuilder:buildDate}}\",\n                \"description\": \"An example image name with parameter references\"\n            }\n        },\n        {\n            \"region\": \"eu-west-2\",\n            \"amiDistributionConfiguration\": {\n                \"name\": \"My {{imagebuilder:buildVersion}} image {{imagebuilder:buildDate}}\"\n            }\n        }\n    ]\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "update-image-pipeline",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/update-image-pipeline.html",
      "command_description": "Description\n\nUpdates an image pipeline. Image pipelines enable you to automate the creation and distribution of images.\n\nNote\n\nUpdateImagePipeline does not support selective updates for the pipeline. You must specify all of the required properties in the update request, not just the properties that have changed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-image-pipeline\n--image-pipeline-arn <value>\n[--description <value>]\n[--image-recipe-arn <value>]\n[--container-recipe-arn <value>]\n--infrastructure-configuration-arn <value>\n[--distribution-configuration-arn <value>]\n[--image-tests-configuration <value>]\n[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]\n[--schedule <value>]\n[--status <value>]\n[--client-token <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--image-pipeline-arn <value>",
        "[--description <value>]",
        "[--image-recipe-arn <value>]",
        "[--container-recipe-arn <value>]",
        "--infrastructure-configuration-arn <value>",
        "[--distribution-configuration-arn <value>]",
        "[--image-tests-configuration <value>]",
        "[--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled]",
        "[--schedule <value>]",
        "[--status <value>]",
        "[--client-token <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--image-pipeline-arn (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that you want to update.\n\n--description (string)\n\nThe description of the image pipeline.\n\n--image-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline.\n\n--container-recipe-arn (string)\n\nThe Amazon Resource Name (ARN) of the container pipeline to update.\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline.\n\n--distribution-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline.\n\n--image-tests-configuration (structure)\n\nThe image test configuration of the image pipeline.\n\nimageTestsEnabled -> (boolean)\n\nDefines if tests should be executed when building this image.\n\ntimeoutMinutes -> (integer)\n\nThe maximum time in minutes that tests are permitted to run.\n\nShorthand Syntax:\n\nimageTestsEnabled=boolean,timeoutMinutes=integer\n\n\nJSON Syntax:\n\n{\n  \"imageTestsEnabled\": true|false,\n  \"timeoutMinutes\": integer\n}\n\n\n--enhanced-image-metadata-enabled | --no-enhanced-image-metadata-enabled (boolean)\n\nCollects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.\n\n--schedule (structure)\n\nThe schedule of the image pipeline.\n\nscheduleExpression -> (string)\n\nThe cron expression determines how often EC2 Image Builder evaluates your pipelineExecutionStartCondition .\n\nFor information on how to format a cron expression in Image Builder, see Use cron expressions in EC2 Image Builder .\n\ntimezone -> (string)\n\nThe timezone that applies to the scheduling expression. For example, “Etc/UTC”, “America/Los_Angeles” in the IANA timezone format . If not specified this defaults to UTC.\n\npipelineExecutionStartCondition -> (string)\n\nThe condition configures when the pipeline should trigger a new image build. When the pipelineExecutionStartCondition is set to EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE , and you use semantic version filters on the base image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to EXPRESSION_MATCH_ONLY , it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see CreateComponent in the EC2 Image Builder API Reference .\n\nShorthand Syntax:\n\nscheduleExpression=string,timezone=string,pipelineExecutionStartCondition=string\n\n\nJSON Syntax:\n\n{\n  \"scheduleExpression\": \"string\",\n  \"timezone\": \"string\",\n  \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_ONLY\"|\"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n}\n\n\n--status (string)\n\nThe status of the image pipeline.\n\nPossible values:\n\nDISABLED\n\nENABLED\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\nimagePipelineArn -> (string)\n\nThe Amazon Resource Name (ARN) of the image pipeline that was updated by this request.",
      "command_examples": "Examples\n\nTo update an image pipeline\n\nThe following update-image-pipeline example updates an image pipeline using a JSON file.\n\naws imagebuilder update-image-pipeline \\\n    --cli-input-json file://update-image-pipeline.json\n\n\nContents of update-image-pipeline.json:\n\n{\n    \"imagePipelineArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-pipeline/mywindows2016pipeline\",\n    \"imageRecipeArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:image-recipe/mybasicrecipe/2019.12.03\",\n    \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n    \"distributionConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:distribution-configuration/myexampledistribution\",\n    \"imageTestsConfiguration\": {\n        \"imageTestsEnabled\": true,\n        \"timeoutMinutes\": 120\n    },\n    \"schedule\": {\n        \"scheduleExpression\": \"cron(0 0 * * MON)\",\n        \"pipelineExecutionStartCondition\": \"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE\"\n    },\n    \"status\": \"DISABLED\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    },
    {
      "command_name": "update-infrastructure-configuration",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/imagebuilder/update-infrastructure-configuration.html",
      "command_description": "Description\n\nUpdates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-infrastructure-configuration\n--infrastructure-configuration-arn <value>\n[--description <value>]\n[--instance-types <value>]\n--instance-profile-name <value>\n[--security-group-ids <value>]\n[--subnet-id <value>]\n[--logging <value>]\n[--key-pair <value>]\n[--terminate-instance-on-failure | --no-terminate-instance-on-failure]\n[--sns-topic-arn <value>]\n[--client-token <value>]\n[--resource-tags <value>]\n[--instance-metadata-options <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--infrastructure-configuration-arn <value>",
        "[--description <value>]",
        "[--instance-types <value>]",
        "--instance-profile-name <value>",
        "[--security-group-ids <value>]",
        "[--subnet-id <value>]",
        "[--logging <value>]",
        "[--key-pair <value>]",
        "[--terminate-instance-on-failure | --no-terminate-instance-on-failure]",
        "[--sns-topic-arn <value>]",
        "[--client-token <value>]",
        "[--resource-tags <value>]",
        "[--instance-metadata-options <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--infrastructure-configuration-arn (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that you want to update.\n\n--description (string)\n\nThe description of the infrastructure configuration.\n\n--instance-types (list)\n\nThe instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--instance-profile-name (string)\n\nThe instance profile to associate with the instance used to customize your Amazon EC2 AMI.\n\n--security-group-ids (list)\n\nThe security group IDs to associate with the instance used to customize your Amazon EC2 AMI.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--subnet-id (string)\n\nThe subnet ID to place the instance used to customize your Amazon EC2 AMI in.\n\n--logging (structure)\n\nThe logging configuration of the infrastructure configuration.\n\ns3Logs -> (structure)\n\nThe Amazon S3 logging configuration.\n\ns3BucketName -> (string)\n\nThe Amazon S3 bucket in which to store the logs.\n\ns3KeyPrefix -> (string)\n\nThe Amazon S3 path in which to store the logs.\n\nShorthand Syntax:\n\ns3Logs={s3BucketName=string,s3KeyPrefix=string}\n\n\nJSON Syntax:\n\n{\n  \"s3Logs\": {\n    \"s3BucketName\": \"string\",\n    \"s3KeyPrefix\": \"string\"\n  }\n}\n\n\n--key-pair (string)\n\nThe key pair of the infrastructure configuration. You can use this to log on to and debug the instance used to create your image.\n\n--terminate-instance-on-failure | --no-terminate-instance-on-failure (boolean)\n\nThe terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.\n\n--sns-topic-arn (string)\n\nThe SNS topic on which to send image build events.\n\n--client-token (string)\n\nThe idempotency token used to make this request idempotent.\n\n--resource-tags (map)\n\nThe tags attached to the resource created by Image Builder.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--instance-metadata-options (structure)\n\nThe instance metadata options that you can set for the HTTP requests that pipeline builds use to launch EC2 build and test instances. For more information about instance metadata options, see one of the following links:\n\nConfigure the instance metadata options in the * Amazon EC2 User Guide * for Linux instances.\n\nConfigure the instance metadata options in the * Amazon EC2 Windows Guide * for Windows instances.\n\nhttpTokens -> (string)\n\nIndicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:\n\nrequired – When you retrieve the IAM role credentials, version 2.0 credentials are returned in all cases.\n\noptional – You can include a signed token header in your request to retrieve instance metadata, or you can leave it out. If you include it, version 2.0 credentials are returned for the IAM role. Otherwise, version 1.0 credentials are returned.\n\nThe default setting is optional .\n\nhttpPutResponseHopLimit -> (integer)\n\nLimit the number of hops that an instance metadata request can traverse to reach its destination.\n\nShorthand Syntax:\n\nhttpTokens=string,httpPutResponseHopLimit=integer\n\n\nJSON Syntax:\n\n{\n  \"httpTokens\": \"string\",\n  \"httpPutResponseHopLimit\": integer\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nrequestId -> (string)\n\nThe request ID that uniquely identifies this request.\n\nclientToken -> (string)\n\nThe idempotency token used to make this request idempotent.\n\ninfrastructureConfigurationArn -> (string)\n\nThe Amazon Resource Name (ARN) of the infrastructure configuration that was updated by this request.",
      "command_examples": "Examples\n\nTo update an infrastructure configuration\n\nThe following update-infrastructure-configuration example updates an infrastructure configuration using a JSON file.\n\naws imagebuilder update-infrastructure-configuration \\\n    --cli-input-json file:/update-infrastructure-configuration.json\n\n\nContents of update-infrastructure-configuration.json:\n\n{\n    \"infrastructureConfigurationArn\": \"arn:aws:imagebuilder:us-west-2:123456789012:infrastructure-configuration/myexampleinfrastructure\",\n    \"description\": \"An example that will terminate instances of failed builds\",\n    \"instanceTypes\": [\n        \"m5.large\", \"m5.2xlarge\"\n    ],\n    \"instanceProfileName\": \"EC2InstanceProfileForImageFactory\",\n    \"securityGroupIds\": [\n        \"sg-a48c95ef\"\n    ],\n    \"subnetId\": \"subnet-a48c95ef\",\n    \"logging\": {\n        \"s3Logs\": {\n            \"s3BucketName\": \"bucket-name\",\n            \"s3KeyPrefix\": \"bucket-path\"\n        }\n    },\n    \"terminateInstanceOnFailure\": true,\n    \"snsTopicArn\": \"arn:aws:sns:us-west-2:123456789012:sns-name\"\n}\n\n\nOutput:\n\n{\n    \"requestId\": \"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111\"\n}\n\n\nFor more information, see Setting Up and Managing an EC2 Image Builder Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide."
    }
  ],
  "service_description": "Description\n\nEC2 Image Builder is a fully managed Amazon Web Services service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date “golden” server images that are pre-installed and pre-configured with software and settings to meet specific IT standards."
}