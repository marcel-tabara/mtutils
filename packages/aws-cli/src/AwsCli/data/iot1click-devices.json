{
  "service_name": "iot1click-devices",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/index.html",
  "service_commands": [
    {
      "command_name": "claim-devices-by-claim-code",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/claim-devices-by-claim-code.html",
      "command_description": "Description\n\nAdds device(s) to your account (i.e., claim one or more devices) if and only if you received a claim code with the device(s).\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  claim-devices-by-claim-code\n--claim-code <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--claim-code <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--claim-code (string)\n\nThe claim code, starting with “C-“, as provided by the device manufacturer.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nClaimCode -> (string)\n\nThe claim code provided by the device manufacturer.\n\nTotal -> (integer)\n\nThe total number of devices associated with the claim code that has been processed in the claim request.",
      "command_examples": "Examples\n\nTo claim one or more AWS IoT 1-Click devices using a claim code\n\nThe following claim-devices-by-claim-code example claims the specified AWS IoT 1-Click device using a claim code (instead of a device ID).\n\naws iot1click-devices claim-devices-by-claim-code \\\n    --claim-code C-123EXAMPLE\n\n\nOutput:\n\n{\n   \"Total\": 9\n   \"ClaimCode\": \"C-123EXAMPLE\"\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "describe-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/describe-device.html",
      "command_description": "Description\n\nGiven a device ID, returns a DescribeDeviceResponse object describing the details of the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-device\n--device-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeviceDescription -> (structure)\n\nDevice details.\n\nArn -> (string)\n\nThe ARN of the device.\n\nAttributes -> (map)\n\nAn array of zero or more elements of DeviceAttribute objects providing user specified device attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nDeviceId -> (string)\n\nThe unique identifier of the device.\n\nEnabled -> (boolean)\n\nA Boolean value indicating whether or not the device is enabled.\n\nRemainingLife -> (double)\n\nA value between 0 and 1 inclusive, representing the fraction of life remaining for the device.\n\nType -> (string)\n\nThe type of the device, such as “button”.\n\nTags -> (map)\n\nThe tags currently associated with the AWS IoT 1-Click device.\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo describe a device\n\nThe following describe-device example describes the specified device.\n\naws iot1click-devices describe-device \\\n    --device-id G030PM0123456789\n\n\nOutput:\n\n{\n    \"DeviceDescription\": {\n        \"Arn\": \"arn:aws:iot1click:us-west-2:012345678901:devices/G030PM0123456789\",\n        \"Attributes\": {\n            \"projectRegion\": \"us-west-2\",\n            \"projectName\": \"AnytownDumpsters\",\n            \"placementName\": \"customer217\",\n            \"deviceTemplateName\": \"empty-dumpster-request\"\n        },\n        \"DeviceId\": \"G030PM0123456789\",\n        \"Enabled\": false,\n        \"RemainingLife\": 99.9,\n        \"Type\": \"button\",\n        \"Tags\": {}\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "finalize-device-claim",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/finalize-device-claim.html",
      "command_description": "Description\n\nGiven a device ID, finalizes the claim request for the associated device.\n\nNote\n\nClaiming a device consists of initiating a claim, then publishing a device event, and finalizing the claim. For a device of type button, a device event can be published by simply clicking the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  finalize-device-claim\n--device-id <value>\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--tags (map)\n\nA collection of key/value pairs defining the resource tags. For example, { “tags”: {“key1”: “value1”, “key2”: “value2”} }. For more information, see AWS Tagging Strategies .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nState -> (string)\n\nThe device’s final claim state.",
      "command_examples": "Examples\n\nTo finalize a claim request for an AWS IoT 1-Click device using a device ID\n\nThe following finalize-device-claim example finalizes a claim request for the specified AWS IoT 1-Click device using a device ID (instead of a claim code).\n\naws iot1click-devices finalize-device-claim \\\n    --device-id G030PM0123456789\n\n\nOutput:\n\n{\n    \"State\": \"CLAIMED\"\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "get-device-methods",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/get-device-methods.html",
      "command_description": "Description\n\nGiven a device ID, returns the invokable methods associated with the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-device-methods\n--device-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeviceMethods -> (list)\n\nList of available device APIs.\n\n(structure)\n\nDeviceType -> (string)\n\nThe type of the device, such as “button”.\n\nMethodName -> (string)\n\nThe name of the method applicable to the deviceType.",
      "command_examples": "Examples\n\nTo list the available methods for a device\n\nThe following get-device-methods example lists the available methods for a device.\n\naws iot1click-devices get-device-methods \\\n    --device-id G030PM0123456789\n\n\nOutput:\n\n{\n    \"DeviceMethods\": [\n        {\n            \"MethodName\": \"getDeviceHealthParameters\"\n        },\n        {\n            \"MethodName\": \"setDeviceHealthMonitorCallback\"\n        },\n        {\n            \"MethodName\": \"getDeviceHealthMonitorCallback\"\n        },\n        {\n            \"MethodName\": \"setOnClickCallback\"\n        },\n        {\n            \"MethodName\": \"getOnClickCallback\"\n        }\n    ]\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "initiate-device-claim",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/initiate-device-claim.html",
      "command_description": "Description\n\nGiven a device ID, initiates a claim request for the associated device.\n\nNote\n\nClaiming a device consists of initiating a claim, then publishing a device event, and finalizing the claim. For a device of type button, a device event can be published by simply clicking the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  initiate-device-claim\n--device-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nState -> (string)\n\nThe device’s final claim state.",
      "command_examples": "Examples\n\nTo initiate a claim request for an AWS IoT 1-Click device using a device ID\n\nThe following initiate-device-claim example initiates a claim request for the specified AWS IoT 1-Click device using a device ID (instead of a claim code).\n\naws iot1click-devices initiate-device-claim \\\n    --device-id G030PM0123456789\n\n\nOutput:\n\n{\n    \"State\": \"CLAIM_INITIATED\"\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "invoke-device-method",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/invoke-device-method.html",
      "command_description": "Description\n\nGiven a device ID, issues a request to invoke a named device method (with possible parameters). See the “Example POST” code snippet below.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  invoke-device-method\n--device-id <value>\n[--device-method <value>]\n[--device-method-parameters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--device-method <value>]",
        "[--device-method-parameters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--device-method (structure)\n\nThe device method to invoke.\n\nDeviceType -> (string)\n\nThe type of the device, such as “button”.\n\nMethodName -> (string)\n\nThe name of the method applicable to the deviceType.\n\nShorthand Syntax:\n\nDeviceType=string,MethodName=string\n\n\nJSON Syntax:\n\n{\n  \"DeviceType\": \"string\",\n  \"MethodName\": \"string\"\n}\n\n\n--device-method-parameters (string)\n\nA JSON encoded string containing the device method request parameters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDeviceMethodResponse -> (string)\n\nA JSON encoded string containing the device method response.",
      "command_examples": "Examples\n\nTo invoke a device method on a device\n\nThe following invoke-device-method example invokes the specified method on a device.\n\naws iot1click-devices invoke-device-method \\\n    --cli-input-json file://invoke-device-method.json\n\n\nContents of invoke-device-method.json:\n\n{\n    \"DeviceId\": \"G030PM0123456789\",\n    \"DeviceMethod\": {\n        \"DeviceType\": \"device\",\n        \"MethodName\": \"getDeviceHealthParameters\"\n    }\n}\n\n\nOutput:\n\n{\n    \"DeviceMethodResponse\": \"{\\\"remainingLife\\\": 99.8}\"\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-device-events",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/list-device-events.html",
      "command_description": "Description\n\nUsing a device ID, returns a DeviceEventsResponse object containing an array of events for the device.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-device-events is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Events",
      "command_synopsis": "Synopsis\n  list-device-events\n--device-id <value>\n--from-time-stamp <value>\n--to-time-stamp <value>\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "--from-time-stamp <value>",
        "--to-time-stamp <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--from-time-stamp (timestamp)\n\nThe start date for the device event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z\n\n--to-time-stamp (timestamp)\n\nThe end date for the device event query, in ISO8061 format. For example, 2018-03-28T15:45:12.880Z\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEvents -> (list)\n\nAn array of zero or more elements describing the event(s) associated with the device.\n\n(structure)\n\nDevice -> (structure)\n\nAn object representing the device associated with the event.\n\nAttributes -> (structure)\n\nThe user specified attributes associated with the device for an event.\n\nDeviceId -> (string)\n\nThe unique identifier of the device.\n\nType -> (string)\n\nThe device type, such as “button”.\n\nStdEvent -> (string)\n\nA serialized JSON object representing the device-type specific event.\n\nNextToken -> (string)\n\nThe token to retrieve the next set of results.",
      "command_examples": "Examples\n\nTo list a device’s events for a specified time range\n\nThe following list-device-events example lists the specified device’s events for the specified time range.\n\naws iot1click-devices list-device-events \\\n    --device-id G030PM0123456789 \\\n    --from-time-stamp 2019-07-17T15:45:12.880Z --to-time-stamp 2019-07-19T15:45:12.880Z\n\n\nOutput:\n\n{\n    \"Events\": [\n        {\n            \"Device\": {\n                \"Attributes\": {},\n                \"DeviceId\": \"G030PM0123456789\",\n                \"Type\": \"button\"\n            },\n            \"StdEvent\": \"{\\\"clickType\\\": \\\"SINGLE\\\", \\\"reportedTime\\\": \\\"2019-07-18T23:47:55.015Z\\\", \\\"certificateId\\\": \\\"fe8798a6c97c62ef8756b80eeefdcf2280f3352f82faa8080c74cc4f4a4d1811\\\", \\\"remainingLife\\\": 99.85000000000001, \\\"testMode\\\": false}\"\n        },\n        {\n            \"Device\": {\n                \"Attributes\": {},\n                \"DeviceId\": \"G030PM0123456789\",\n                \"Type\": \"button\"\n            },\n            \"StdEvent\": \"{\\\"clickType\\\": \\\"DOUBLE\\\", \\\"reportedTime\\\": \\\"2019-07-19T00:14:41.353Z\\\", \\\"certificateId\\\": \\\"fe8798a6c97c62ef8756b80eeefdcf2280f3352f82faa8080c74cc4f4a4d1811\\\", \\\"remainingLife\\\": 99.8, \\\"testMode\\\": false}\"\n        }\n    ]\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-devices",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/list-devices.html",
      "command_description": "Description\n\nLists the 1-Click compatible devices associated with your AWS account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-devices is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Devices",
      "command_synopsis": "Synopsis\n  list-devices\n[--device-type <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--device-type <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-type (string)\n\nThe type of the device, such as “button”.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nDevices -> (list)\n\nA list of devices.\n\n(structure)\n\nArn -> (string)\n\nThe ARN of the device.\n\nAttributes -> (map)\n\nAn array of zero or more elements of DeviceAttribute objects providing user specified device attributes.\n\nkey -> (string)\n\nvalue -> (string)\n\nDeviceId -> (string)\n\nThe unique identifier of the device.\n\nEnabled -> (boolean)\n\nA Boolean value indicating whether or not the device is enabled.\n\nRemainingLife -> (double)\n\nA value between 0 and 1 inclusive, representing the fraction of life remaining for the device.\n\nType -> (string)\n\nThe type of the device, such as “button”.\n\nTags -> (map)\n\nThe tags currently associated with the AWS IoT 1-Click device.\n\nkey -> (string)\n\nvalue -> (string)\n\nNextToken -> (string)\n\nThe token to retrieve the next set of results.",
      "command_examples": "Examples\n\nTo list the devices of a specified type\n\nThe following list-devices example lists the devices of a specified type.\n\naws iot1click-devices list-devices \\\n    --device-type button\n\n\nThis command produces no output.\n\nOutput:\n\n{\n    \"Devices\": [\n        {\n            \"remainingLife\": 99.9,\n            \"attributes\": {\n                \"arn\": \"arn:aws:iot1click:us-west-2:123456789012:devices/G030PM0123456789\",\n                \"type\": \"button\",\n                \"deviceId\": \"G030PM0123456789\",\n                \"enabled\": false\n            }\n        }\n    ]\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/list-tags-for-resource.html",
      "command_description": "Description\n\nLists the tags associated with the specified resource ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (map)\n\nA collection of key/value pairs defining the resource tags. For example, { “tags”: {“key1”: “value1”, “key2”: “value2”} }. For more information, see AWS Tagging Strategies .\n\nkey -> (string)\n\nvalue -> (string)",
      "command_examples": "Examples\n\nTo list the tags for a device\n\nThe following list-tags-for-resource example list the tags for the specified device.\n\naws iot1click-devices list-tags-for-resource \\\n    --resource-arn \"arn:aws:iot1click:us-west-2:012345678901:devices/G030PM0123456789\"\n\n\nOutput:\n\n{\n    \"Tags\": {\n        \"Driver Phone\": \"123-555-0199\",\n        \"Driver\": \"Jorge Souza\"\n    }\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/tag-resource.html",
      "command_description": "Description\n\nAdds or updates the tags associated with the resource ARN. See AWS IoT 1-Click Service Limits for the maximum number of tags allowed per resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--tags (map)\n\nA collection of key/value pairs defining the resource tags. For example, { “tags”: {“key1”: “value1”, “key2”: “value2”} }. For more information, see AWS Tagging Strategies .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo add tags to a device AWS resource\n\nThe following tag-resource example adds two tags to the specified resource.\n\naws iot1click-devices tag-resource \\\n    --cli-input-json file://devices-tag-resource.json\n\n\nContents of devices-tag-resource.json:\n\n{\n    \"ResourceArn\": \"arn:aws:iot1click:us-west-2:123456789012:devices/G030PM0123456789\",\n    \"Tags\": {\n        \"Driver\": \"Jorge Souza\",\n        \"Driver Phone\": \"123-555-0199\"\n    }\n}\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "unclaim-device",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/unclaim-device.html",
      "command_description": "Description\n\nDisassociates a device from your AWS account using its device ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  unclaim-device\n--device-id <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nState -> (string)\n\nThe device’s final claim state.",
      "command_examples": "Examples\n\nTo unclaim (deregister) a device from your AWS account\n\nThe following unclaim-device example unclaims (deregisters) the specified device from your AWS account.\n\naws iot1click-devices unclaim-device \\\n    --device-id G030PM0123456789\n\n\nOutput:\n\n{\n    \"State\": \"UNCLAIMED\"\n}\n\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/untag-resource.html",
      "command_description": "Description\n\nUsing tag keys, deletes the tags (key/value pairs) associated with the specified resource ARN.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the resource.\n\n--tag-keys (list)\n\nA collections of tag keys. For example, {“key1”,”key2”}\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo remove tags from a device AWS resource\n\nThe following untag-resource example removes the tags with the names Driver Phone and Driver from the specified device resource.\n\naws iot1click-devices untag-resource \\\n    --resource-arn \"arn:aws:iot1click:us-west-2:123456789012:projects/AnytownDumpsters\" \\\n    --tag-keys \"Driver Phone\" \"Driver\"\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    },
    {
      "command_name": "update-device-state",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iot1click-devices/update-device-state.html",
      "command_description": "Description\n\nUsing a Boolean value (true or false), this operation enables or disables the device given a device ID.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-device-state\n--device-id <value>\n[--enabled | --no-enabled]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--device-id <value>",
        "[--enabled | --no-enabled]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--device-id (string)\n\nThe unique identifier of the device.\n\n--enabled | --no-enabled (boolean)\n\nIf true, the device is enabled. If false, the device is disabled.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo update the ``enabled`` state for a device\n\nThe following update-device-state sets the state of the specified device to enabled.\n\naws iot1click-devices update-device-state \\\n    --device-id G030PM0123456789 \\\n    --enabled\n\n\nThis command produces no output.\n\nFor more information, see Using AWS IoT 1-Click with the AWS CLI in the AWS IoT 1-Click Developer Guide."
    }
  ],
  "service_description": "Description\n\nDescribes all of the AWS IoT 1-Click device-related API operations for the service. Also provides sample requests, responses, and errors for the supported web services protocols."
}