{
  "service_name": "personalize-runtime",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-runtime/index.html",
  "service_commands": [
    {
      "command_name": "get-personalized-ranking",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-runtime/get-personalized-ranking.html",
      "command_description": "Description\n\nRe-ranks a list of recommended items for the given user. The first item in the list is deemed the most likely item to be of interest to the user.\n\nNote\n\nThe solution backing the campaign must have been created using a recipe of type PERSONALIZED_RANKING.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-personalized-ranking\n--campaign-arn <value>\n--input-list <value>\n--user-id <value>\n[--context <value>]\n[--filter-arn <value>]\n[--filter-values <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--campaign-arn <value>",
        "--input-list <value>",
        "--user-id <value>",
        "[--context <value>]",
        "[--filter-arn <value>]",
        "[--filter-values <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--campaign-arn (string)\n\nThe Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.\n\n--input-list (list)\n\nA list of items (by itemId ) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--user-id (string)\n\nThe user for which you want the campaign to provide a personalized ranking.\n\n--context (map)\n\nThe contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user’s recommendations, such as the user’s current location or device type.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--filter-arn (string)\n\nThe Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see Filtering Recommendations .\n\n--filter-values (map)\n\nThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma.\n\nFor filter expressions that use an INCLUDE element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an EXCLUDE element to exclude items, you can omit the filter-values .In this case, Amazon Personalize doesn’t use that portion of the expression to filter recommendations.\n\nFor more information, see Filtering Recommendations .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\npersonalizedRanking -> (list)\n\nA list of items in order of most likely interest to the user. The maximum is 500.\n\n(structure)\n\nAn object that identifies an item.\n\nThe and APIs return a list of PredictedItem s.\n\nitemId -> (string)\n\nThe recommended item ID.\n\nscore -> (double)\n\nA numeric representation of the model’s certainty that the item will be the next user selection. For more information on scoring logic, see how-scores-work .\n\nrecommendationId -> (string)\n\nThe ID of the recommendation."
    },
    {
      "command_name": "get-recommendations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/personalize-runtime/get-recommendations.html",
      "command_description": "Description\n\nReturns a list of recommended items. The required input depends on the recipe type used to create the solution backing the campaign, as follows:\n\nRELATED_ITEMS - itemId required, userId not used\n\nUSER_PERSONALIZATION - itemId optional, userId required\n\nNote\n\nCampaigns that are backed by a solution created using a recipe of type PERSONALIZED_RANKING use the API.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  get-recommendations\n--campaign-arn <value>\n[--item-id <value>]\n[--user-id <value>]\n[--num-results <value>]\n[--context <value>]\n[--filter-arn <value>]\n[--filter-values <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--campaign-arn <value>",
        "[--item-id <value>]",
        "[--user-id <value>]",
        "[--num-results <value>]",
        "[--context <value>]",
        "[--filter-arn <value>]",
        "[--filter-values <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--campaign-arn (string)\n\nThe Amazon Resource Name (ARN) of the campaign to use for getting recommendations.\n\n--item-id (string)\n\nThe item ID to provide recommendations for.\n\nRequired for RELATED_ITEMS recipe type.\n\n--user-id (string)\n\nThe user ID to provide recommendations for.\n\nRequired for USER_PERSONALIZATION recipe type.\n\n--num-results (integer)\n\nThe number of results to return. The default is 25. The maximum is 500.\n\n--context (map)\n\nThe contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user’s recommendations, such as the user’s current location or device type.\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--filter-arn (string)\n\nThe ARN of the filter to apply to the returned recommendations. For more information, see Filtering Recommendations .\n\nWhen using this parameter, be sure the filter resource is ACTIVE .\n\n--filter-values (map)\n\nThe values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma.\n\nFor filter expressions that use an INCLUDE element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an EXCLUDE element to exclude items, you can omit the filter-values .In this case, Amazon Personalize doesn’t use that portion of the expression to filter recommendations.\n\nFor more information, see Filtering Recommendations .\n\nkey -> (string)\n\nvalue -> (string)\n\nShorthand Syntax:\n\nKeyName1=string,KeyName2=string\n\n\nJSON Syntax:\n\n{\"string\": \"string\"\n  ...}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nitemList -> (list)\n\nA list of recommendations sorted in ascending order by prediction score. There can be a maximum of 500 items in the list.\n\n(structure)\n\nAn object that identifies an item.\n\nThe and APIs return a list of PredictedItem s.\n\nitemId -> (string)\n\nThe recommended item ID.\n\nscore -> (double)\n\nA numeric representation of the model’s certainty that the item will be the next user selection. For more information on scoring logic, see how-scores-work .\n\nrecommendationId -> (string)\n\nThe ID of the recommendation."
    }
  ],
  "service_description": "Description"
}