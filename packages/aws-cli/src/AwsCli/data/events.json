{
  "service_name": "events",
  "service_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/index.html",
  "service_commands": [
    {
      "command_name": "activate-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/activate-event-source.html",
      "command_description": "Description\n\nActivates a partner event source that has been deactivated. Once activated, your matching event bus will start receiving events from the event source.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  activate-event-source\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the partner event source to activate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "cancel-replay",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/cancel-replay.html",
      "command_description": "Description\n\nCancels the specified replay.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  cancel-replay\n--replay-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--replay-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--replay-name (string)\n\nThe name of the replay to cancel.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReplayArn -> (string)\n\nThe ARN of the replay to cancel.\n\nState -> (string)\n\nThe current state of the replay.\n\nStateReason -> (string)\n\nThe reason that the replay is in the current state."
    },
    {
      "command_name": "create-api-destination",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/create-api-destination.html",
      "command_description": "Description\n\nCreates an API destination, which is an HTTP invocation endpoint configured as a target for events.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-api-destination\n--name <value>\n[--description <value>]\n--connection-arn <value>\n--invocation-endpoint <value>\n--http-method <value>\n[--invocation-rate-limit-per-second <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--connection-arn <value>",
        "--invocation-endpoint <value>",
        "--http-method <value>",
        "[--invocation-rate-limit-per-second <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name for the API destination to create.\n\n--description (string)\n\nA description for the API destination to create.\n\n--connection-arn (string)\n\nThe ARN of the connection to use for the API destination. The destination endpoint must support the authorization type specified for the connection.\n\n--invocation-endpoint (string)\n\nThe URL to the HTTP invocation endpoint for the API destination.\n\n--http-method (string)\n\nThe method to use for the request to the HTTP invocation endpoint.\n\nPossible values:\n\nPOST\n\nGET\n\nHEAD\n\nOPTIONS\n\nPUT\n\nPATCH\n\nDELETE\n\n--invocation-rate-limit-per-second (integer)\n\nThe maximum number of requests per second to send to the HTTP invocation endpoint.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApiDestinationArn -> (string)\n\nThe ARN of the API destination that was created by the request.\n\nApiDestinationState -> (string)\n\nThe state of the API destination that was created by the request.\n\nCreationTime -> (timestamp)\n\nA time stamp indicating the time that the API destination was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp indicating the time that the API destination was last modified."
    },
    {
      "command_name": "create-archive",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/create-archive.html",
      "command_description": "Description\n\nCreates an archive of events with the specified settings. When you create an archive, incoming events might not immediately start being sent to the archive. Allow a short period of time for changes to take effect. If you do not specify a pattern to filter events sent to the archive, all events are sent to the archive except replayed events. Replayed events are not sent to an archive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-archive\n--archive-name <value>\n--event-source-arn <value>\n[--description <value>]\n[--event-pattern <value>]\n[--retention-days <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--archive-name <value>",
        "--event-source-arn <value>",
        "[--description <value>]",
        "[--event-pattern <value>]",
        "[--retention-days <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--archive-name (string)\n\nThe name for the archive to create.\n\n--event-source-arn (string)\n\nThe ARN of the event bus that sends events to the archive.\n\n--description (string)\n\nA description for the archive.\n\n--event-pattern (string)\n\nAn event pattern to use to filter events sent to the archive.\n\n--retention-days (integer)\n\nThe number of days to retain events for. Default value is 0. If set to 0, events are retained indefinitely\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArchiveArn -> (string)\n\nThe ARN of the archive that was created.\n\nState -> (string)\n\nThe state of the archive that was created.\n\nStateReason -> (string)\n\nThe reason that the archive is in the state.\n\nCreationTime -> (timestamp)\n\nThe time at which the archive was created."
    },
    {
      "command_name": "create-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/create-connection.html",
      "command_description": "Description\n\nCreates a connection. A connection defines the authorization type and credentials to use for authorization with an API destination HTTP endpoint.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-connection\n--name <value>\n[--description <value>]\n--authorization-type <value>\n--auth-parameters <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "--authorization-type <value>",
        "--auth-parameters <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name for the connection to create.\n\n--description (string)\n\nA description for the connection to create.\n\n--authorization-type (string)\n\nThe type of authorization to use for the connection.\n\nPossible values:\n\nBASIC\n\nOAUTH_CLIENT_CREDENTIALS\n\nAPI_KEY\n\n--auth-parameters (structure)\n\nA CreateConnectionAuthRequestParameters object that contains the authorization parameters to use to authorize with the endpoint.\n\nBasicAuthParameters -> (structure)\n\nA CreateConnectionBasicAuthRequestParameters object that contains the Basic authorization parameters to use for the connection.\n\nUsername -> (string)\n\nThe user name to use for Basic authorization.\n\nPassword -> (string)\n\nThe password associated with the user name to use for Basic authorization.\n\nOAuthParameters -> (structure)\n\nA CreateConnectionOAuthRequestParameters object that contains the OAuth authorization parameters to use for the connection.\n\nClientParameters -> (structure)\n\nA CreateConnectionOAuthClientRequestParameters object that contains the client parameters for OAuth authorization.\n\nClientID -> (string)\n\nThe client ID to use for OAuth authorization for the connection.\n\nClientSecret -> (string)\n\nThe client secret associated with the client ID to use for OAuth authorization for the connection.\n\nAuthorizationEndpoint -> (string)\n\nThe URL to the authorization endpoint when OAuth is specified as the authorization type.\n\nHttpMethod -> (string)\n\nThe method to use for the authorization request.\n\nOAuthHttpParameters -> (structure)\n\nA ConnectionHttpParameters object that contains details about the additional parameters to use for the connection.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nApiKeyAuthParameters -> (structure)\n\nA CreateConnectionApiKeyAuthRequestParameters object that contains the API key authorization parameters to use for the connection.\n\nApiKeyName -> (string)\n\nThe name of the API key to use for authorization.\n\nApiKeyValue -> (string)\n\nThe value for the API key to use for authorization.\n\nInvocationHttpParameters -> (structure)\n\nA ConnectionHttpParameters object that contains the API key authorization parameters to use for the connection. Note that if you include additional parameters for the target of a rule via HttpParameters , including query strings, the parameters added for the connection take precedence.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nJSON Syntax:\n\n{\n  \"BasicAuthParameters\": {\n    \"Username\": \"string\",\n    \"Password\": \"string\"\n  },\n  \"OAuthParameters\": {\n    \"ClientParameters\": {\n      \"ClientID\": \"string\",\n      \"ClientSecret\": \"string\"\n    },\n    \"AuthorizationEndpoint\": \"string\",\n    \"HttpMethod\": \"GET\"|\"POST\"|\"PUT\",\n    \"OAuthHttpParameters\": {\n      \"HeaderParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ],\n      \"QueryStringParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ],\n      \"BodyParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ]\n    }\n  },\n  \"ApiKeyAuthParameters\": {\n    \"ApiKeyName\": \"string\",\n    \"ApiKeyValue\": \"string\"\n  },\n  \"InvocationHttpParameters\": {\n    \"HeaderParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ],\n    \"QueryStringParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ],\n    \"BodyParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionArn -> (string)\n\nThe ARN of the connection that was created by the request.\n\nConnectionState -> (string)\n\nThe state of the connection that was created by the request.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last updated."
    },
    {
      "command_name": "create-event-bus",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/create-event-bus.html",
      "command_description": "Description\n\nCreates a new event bus within your account. This can be a custom event bus which you can use to receive events from your custom applications and services, or it can be a partner event bus which can be matched to a partner event source.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-event-bus\n--name <value>\n[--event-source-name <value>]\n[--tags <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--event-source-name <value>]",
        "[--tags <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the new event bus.\n\nEvent bus names cannot contain the / character. You can’t use the name default for a custom event bus, as this name is already used for your account’s default event bus.\n\nIf this is a partner event bus, the name must exactly match the name of the partner event source that this event bus is matched to.\n\n--event-source-name (string)\n\nIf you are creating a partner event bus, this specifies the partner event source that the new event bus will be matched with.\n\n--tags (list)\n\nTags to associate with the event bus.\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventBusArn -> (string)\n\nThe ARN of the new event bus."
    },
    {
      "command_name": "create-partner-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/create-partner-event-source.html",
      "command_description": "Description\n\nCalled by an SaaS partner to create a partner event source. This operation is not used by Amazon Web Services customers.\n\nEach partner event source can be used by one Amazon Web Services account to create a matching partner event bus in that Amazon Web Services account. A SaaS partner must create one partner event source for each Amazon Web Services account that wants to receive those event types.\n\nA partner event source creates events based on resources within the SaaS partner’s service or application.\n\nAn Amazon Web Services account that creates a partner event bus that matches the partner event source can use that event bus to receive events from the partner, and then process them using Amazon Web Services Events rules and targets.\n\nPartner event source names follow this format:\n\n`` partner_name /event_namespace /event_name ``\n\npartner_name is determined during partner registration and identifies the partner to Amazon Web Services customers. event_namespace is determined by the partner and is a way for the partner to categorize their events. event_name is determined by the partner, and should uniquely identify an event-generating resource within the partner system. The combination of event_namespace and event_name should help Amazon Web Services customers decide whether to create an event bus to receive these events.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  create-partner-event-source\n--name <value>\n--account <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--account <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the partner event source. This name must be unique and must be in the format `` partner_name /event_namespace /event_name `` . The Amazon Web Services account that wants to use this partner event source must create a partner event bus with a name that matches the name of the partner event source.\n\n--account (string)\n\nThe Amazon Web Services account ID that is permitted to create a matching partner event bus for this partner event source.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventSourceArn -> (string)\n\nThe ARN of the partner event source."
    },
    {
      "command_name": "deactivate-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/deactivate-event-source.html",
      "command_description": "Description\n\nYou can use this operation to temporarily stop receiving events from the specified partner event source. The matching event bus is not deleted.\n\nWhen you deactivate a partner event source, the source goes into PENDING state. If it remains in PENDING state for more than two weeks, it is deleted.\n\nTo activate a deactivated partner event source, use ActivateEventSource .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deactivate-event-source\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the partner event source to deactivate.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "deauthorize-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/deauthorize-connection.html",
      "command_description": "Description\n\nRemoves all authorization parameters from the connection. This lets you remove the secret from the connection so you can reuse it without having to create a new connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  deauthorize-connection\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the connection to remove authorization from.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionArn -> (string)\n\nThe ARN of the connection that authorization was removed from.\n\nConnectionState -> (string)\n\nThe state of the connection.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last updated.\n\nLastAuthorizedTime -> (timestamp)\n\nA time stamp for the time that the connection was last authorized."
    },
    {
      "command_name": "delete-api-destination",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-api-destination.html",
      "command_description": "Description\n\nDeletes the specified API destination.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-api-destination\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the destination to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-archive",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-archive.html",
      "command_description": "Description\n\nDeletes the specified archive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-archive\n--archive-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--archive-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--archive-name (string)\n\nThe name of the archive to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-connection.html",
      "command_description": "Description\n\nDeletes a connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-connection\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the connection to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionArn -> (string)\n\nThe ARN of the connection that was deleted.\n\nConnectionState -> (string)\n\nThe state of the connection before it was deleted.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last modified before it was deleted.\n\nLastAuthorizedTime -> (timestamp)\n\nA time stamp for the time that the connection was last authorized before it wa deleted."
    },
    {
      "command_name": "delete-event-bus",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-event-bus.html",
      "command_description": "Description\n\nDeletes the specified custom event bus or partner event bus. All rules associated with this event bus need to be deleted. You can’t delete your account’s default event bus.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-event-bus\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the event bus to delete.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-partner-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-partner-event-source.html",
      "command_description": "Description\n\nThis operation is used by SaaS partners to delete a partner event source. This operation is not used by Amazon Web Services customers.\n\nWhen you delete an event source, the status of the corresponding partner event bus in the Amazon Web Services customer account becomes DELETED.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-partner-event-source\n--name <value>\n--account <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "--account <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the event source to delete.\n\n--account (string)\n\nThe Amazon Web Services account ID of the Amazon Web Services customer that the event source was created for.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "delete-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/delete-rule.html",
      "command_description": "Description\n\nDeletes the specified rule.\n\nBefore you can delete the rule, you must remove all targets, using RemoveTargets .\n\nWhen you delete a rule, incoming events might continue to match to the deleted rule. Allow a short period of time for changes to take effect.\n\nIf you call delete rule multiple times for the same rule, all calls will succeed. When you call delete rule for a non-existent custom eventbus, ResourceNotFoundException is returned.\n\nManaged rules are rules created and managed by another Amazon Web Services service on your behalf. These rules are created by those other Amazon Web Services services to support functionality in those services. You can delete these rules using the Force option, but you should do so only if you are sure the other service is not still using that rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  delete-rule\n--name <value>\n[--event-bus-name <value>]\n[--force | --no-force]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--event-bus-name <value>]",
        "[--force | --no-force]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--force | --no-force (boolean)\n\nIf this is a managed rule, created by an Amazon Web Services service on your behalf, you must specify Force as True to delete the rule. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using DescribeRule or ListRules and checking the ManagedBy field of the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo delete a CloudWatch Events rule\n\nThis example deletes the rule named EC2InstanceStateChanges:\n\naws events delete-rule --name \"EC2InstanceStateChanges\"\n"
    },
    {
      "command_name": "describe-api-destination",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-api-destination.html",
      "command_description": "Description\n\nRetrieves details about an API destination.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-api-destination\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the API destination to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApiDestinationArn -> (string)\n\nThe ARN of the API destination retrieved.\n\nName -> (string)\n\nThe name of the API destination retrieved.\n\nDescription -> (string)\n\nThe description for the API destination retrieved.\n\nApiDestinationState -> (string)\n\nThe state of the API destination retrieved.\n\nConnectionArn -> (string)\n\nThe ARN of the connection specified for the API destination retrieved.\n\nInvocationEndpoint -> (string)\n\nThe URL to use to connect to the HTTP endpoint.\n\nHttpMethod -> (string)\n\nThe method to use to connect to the HTTP endpoint.\n\nInvocationRateLimitPerSecond -> (integer)\n\nThe maximum number of invocations per second to specified for the API destination. Note that if you set the invocation rate maximum to a value lower the rate necessary to send all events received on to the destination HTTP endpoint, some events may not be delivered within the 24-hour retry window. If you plan to set the rate lower than the rate necessary to deliver all events, consider using a dead-letter queue to catch events that are not delivered within 24 hours.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the API destination was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the API destination was last modified."
    },
    {
      "command_name": "describe-archive",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-archive.html",
      "command_description": "Description\n\nRetrieves details about an archive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-archive\n--archive-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--archive-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--archive-name (string)\n\nThe name of the archive to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArchiveArn -> (string)\n\nThe ARN of the archive.\n\nArchiveName -> (string)\n\nThe name of the archive.\n\nEventSourceArn -> (string)\n\nThe ARN of the event source associated with the archive.\n\nDescription -> (string)\n\nThe description of the archive.\n\nEventPattern -> (string)\n\nThe event pattern used to filter events sent to the archive.\n\nState -> (string)\n\nThe state of the archive.\n\nStateReason -> (string)\n\nThe reason that the archive is in the state.\n\nRetentionDays -> (integer)\n\nThe number of days to retain events for in the archive.\n\nSizeBytes -> (long)\n\nThe size of the archive in bytes.\n\nEventCount -> (long)\n\nThe number of events in the archive.\n\nCreationTime -> (timestamp)\n\nThe time at which the archive was created."
    },
    {
      "command_name": "describe-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-connection.html",
      "command_description": "Description\n\nRetrieves details about a connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-connection\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the connection to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionArn -> (string)\n\nThe ARN of the connection retrieved.\n\nName -> (string)\n\nThe name of the connection retrieved.\n\nDescription -> (string)\n\nThe description for the connection retrieved.\n\nConnectionState -> (string)\n\nThe state of the connection retrieved.\n\nStateReason -> (string)\n\nThe reason that the connection is in the current connection state.\n\nAuthorizationType -> (string)\n\nThe type of authorization specified for the connection.\n\nSecretArn -> (string)\n\nThe ARN of the secret created from the authorization parameters specified for the connection.\n\nAuthParameters -> (structure)\n\nThe parameters to use for authorization for the connection.\n\nBasicAuthParameters -> (structure)\n\nThe authorization parameters for Basic authorization.\n\nUsername -> (string)\n\nThe user name to use for Basic authorization.\n\nOAuthParameters -> (structure)\n\nThe OAuth parameters to use for authorization.\n\nClientParameters -> (structure)\n\nA ConnectionOAuthClientResponseParameters object that contains details about the client parameters returned when OAuth is specified as the authorization type.\n\nClientID -> (string)\n\nThe client ID associated with the response to the connection request.\n\nAuthorizationEndpoint -> (string)\n\nThe URL to the HTTP endpoint that authorized the request.\n\nHttpMethod -> (string)\n\nThe method used to connect to the HTTP endpoint.\n\nOAuthHttpParameters -> (structure)\n\nThe additional HTTP parameters used for the OAuth authorization request.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nApiKeyAuthParameters -> (structure)\n\nThe API Key parameters to use for authorization.\n\nApiKeyName -> (string)\n\nThe name of the header to use for the APIKeyValue used for authorization.\n\nInvocationHttpParameters -> (structure)\n\nAdditional parameters for the connection that are passed through with every invocation to the HTTP endpoint.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last modified.\n\nLastAuthorizedTime -> (timestamp)\n\nA time stamp for the time that the connection was last authorized."
    },
    {
      "command_name": "describe-event-bus",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-event-bus.html",
      "command_description": "Description\n\nDisplays details about an event bus in your account. This can include the external Amazon Web Services accounts that are permitted to write events to your default event bus, and the associated policy. For custom event buses and partner event buses, it displays the name, ARN, policy, state, and creation time.\n\nTo enable your account to receive events from other accounts on its default event bus, use PutPermission .\n\nFor more information about partner event buses, see CreateEventBus .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-event-bus\n[--name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name or ARN of the event bus to show details for. If you omit this, the default event bus is displayed.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the event bus. Currently, this is always default .\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the account permitted to write events to the current account.\n\nPolicy -> (string)\n\nThe policy that enables the external account to send events to your account."
    },
    {
      "command_name": "describe-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-event-source.html",
      "command_description": "Description\n\nThis operation lists details about a partner event source that is shared with your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-event-source\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the partner event source to display the details of.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the partner event source.\n\nCreatedBy -> (string)\n\nThe name of the SaaS partner that created the event source.\n\nCreationTime -> (timestamp)\n\nThe date and time that the event source was created.\n\nExpirationTime -> (timestamp)\n\nThe date and time that the event source will expire if you do not create a matching event bus.\n\nName -> (string)\n\nThe name of the partner event source.\n\nState -> (string)\n\nThe state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven’t yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted."
    },
    {
      "command_name": "describe-partner-event-source",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-partner-event-source.html",
      "command_description": "Description\n\nAn SaaS partner can use this operation to list details about a partner event source that they have created. Amazon Web Services customers do not use this operation. Instead, Amazon Web Services customers can use DescribeEventSource to see details about a partner event source that is shared with them.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-partner-event-source\n--name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the event source to display.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArn -> (string)\n\nThe ARN of the event source.\n\nName -> (string)\n\nThe name of the event source."
    },
    {
      "command_name": "describe-replay",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-replay.html",
      "command_description": "Description\n\nRetrieves details about a replay. Use DescribeReplay to determine the progress of a running replay. A replay processes events to replay based on the time in the event, and replays them using 1 minute intervals. If you use StartReplay and specify an EventStartTime and an EventEndTime that covers a 20 minute time range, the events are replayed from the first minute of that 20 minute range first. Then the events from the second minute are replayed. You can use DescribeReplay to determine the progress of a replay. The value returned for EventLastReplayedTime indicates the time within the specified time range associated with the last event replayed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-replay\n--replay-name <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--replay-name <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--replay-name (string)\n\nThe name of the replay to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReplayName -> (string)\n\nThe name of the replay.\n\nReplayArn -> (string)\n\nThe ARN of the replay.\n\nDescription -> (string)\n\nThe description of the replay.\n\nState -> (string)\n\nThe current state of the replay.\n\nStateReason -> (string)\n\nThe reason that the replay is in the current state.\n\nEventSourceArn -> (string)\n\nThe ARN of the archive events were replayed from.\n\nDestination -> (structure)\n\nA ReplayDestination object that contains details about the replay.\n\nArn -> (string)\n\nThe ARN of the event bus to replay event to. You can replay events only to the event bus specified to create the archive.\n\nFilterArns -> (list)\n\nA list of ARNs for rules to replay events to.\n\n(string)\n\nEventStartTime -> (timestamp)\n\nThe time stamp of the first event that was last replayed from the archive.\n\nEventEndTime -> (timestamp)\n\nThe time stamp for the last event that was replayed from the archive.\n\nEventLastReplayedTime -> (timestamp)\n\nThe time that the event was last replayed.\n\nReplayStartTime -> (timestamp)\n\nA time stamp for the time that the replay started.\n\nReplayEndTime -> (timestamp)\n\nA time stamp for the time that the replay stopped."
    },
    {
      "command_name": "describe-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/describe-rule.html",
      "command_description": "Description\n\nDescribes the specified rule.\n\nDescribeRule does not list the targets of a rule. To see the targets associated with a rule, use ListTargetsByRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  describe-rule\n--name <value>\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nName -> (string)\n\nThe name of the rule.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule.\n\nEventPattern -> (string)\n\nThe event pattern. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide .\n\nScheduleExpression -> (string)\n\nThe scheduling expression. For example, “cron(0 20 * * ? *)”, “rate(5 minutes)”.\n\nState -> (string)\n\nSpecifies whether the rule is enabled or disabled.\n\nDescription -> (string)\n\nThe description of the rule.\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role associated with the rule.\n\nManagedBy -> (string)\n\nIf this is a managed rule, created by an Amazon Web Services service on your behalf, this field displays the principal name of the Amazon Web Services service that created the rule.\n\nEventBusName -> (string)\n\nThe name of the event bus associated with the rule.\n\nCreatedBy -> (string)\n\nThe account ID of the user that created the rule. If you use PutRule to put a rule on an event bus in another account, the other account is the owner of the rule, and the rule ARN includes the account ID for that account. However, the value for CreatedBy is the account ID as the account that created the rule in the other account.",
      "command_examples": "Examples\n\nTo display information about a CloudWatch Events rule\n\nThis example displays information about the rule named DailyLambdaFunction:\n\naws events describe-rule --name \"DailyLambdaFunction\"\n"
    },
    {
      "command_name": "disable-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/disable-rule.html",
      "command_description": "Description\n\nDisables the specified rule. A disabled rule won’t match any events, and won’t self-trigger if it has a schedule expression.\n\nWhen you disable a rule, incoming events might continue to match to the disabled rule. Allow a short period of time for changes to take effect.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  disable-rule\n--name <value>\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo disable a CloudWatch Events rule\n\nThis example disables the rule named DailyLambdaFunction. The rule is not deleted:\n\naws events disable-rule --name \"DailyLambdaFunction\"\n"
    },
    {
      "command_name": "enable-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/enable-rule.html",
      "command_description": "Description\n\nEnables the specified rule. If the rule does not exist, the operation fails.\n\nWhen you enable a rule, incoming events might not immediately start matching to a newly enabled rule. Allow a short period of time for changes to take effect.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  enable-rule\n--name <value>\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone",
      "command_examples": "Examples\n\nTo enable a CloudWatch Events rule\n\nThis example enables the rule named DailyLambdaFunction, which had been previously disabled:\n\naws events enable-rule --name \"DailyLambdaFunction\"\n"
    },
    {
      "command_name": "list-api-destinations",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-api-destinations.html",
      "command_description": "Description\n\nRetrieves a list of API destination in the account in the current Region.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-api-destinations\n[--name-prefix <value>]\n[--connection-arn <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--connection-arn <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nA name prefix to filter results returned. Only API destinations with a name that starts with the prefix are returned.\n\n--connection-arn (string)\n\nThe ARN of the connection specified for the API destination.\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nThe maximum number of API destinations to include in the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApiDestinations -> (list)\n\nAn array of ApiDestination objects that include information about an API destination.\n\n(structure)\n\nContains details about an API destination.\n\nApiDestinationArn -> (string)\n\nThe ARN of the API destination.\n\nName -> (string)\n\nThe name of the API destination.\n\nApiDestinationState -> (string)\n\nThe state of the API destination.\n\nConnectionArn -> (string)\n\nThe ARN of the connection specified for the API destination.\n\nInvocationEndpoint -> (string)\n\nThe URL to the endpoint for the API destination.\n\nHttpMethod -> (string)\n\nThe method to use to connect to the HTTP endpoint.\n\nInvocationRateLimitPerSecond -> (integer)\n\nThe maximum number of invocations per second to send to the HTTP endpoint.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the API destination was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the API destination was last modified.\n\nNextToken -> (string)\n\nA token you can use in a subsequent request to retrieve the next set of results."
    },
    {
      "command_name": "list-archives",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-archives.html",
      "command_description": "Description\n\nLists your archives. You can either list all the archives or you can provide a prefix to match to the archive names. Filter parameters are exclusive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-archives\n[--name-prefix <value>]\n[--event-source-arn <value>]\n[--state <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--event-source-arn <value>]",
        "[--state <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nA name prefix to filter the archives returned. Only archives with name that match the prefix are returned.\n\n--event-source-arn (string)\n\nThe ARN of the event source associated with the archive.\n\n--state (string)\n\nThe state of the archive.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\nCREATING\n\nUPDATING\n\nCREATE_FAILED\n\nUPDATE_FAILED\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nThe maximum number of results to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArchives -> (list)\n\nAn array of Archive objects that include details about an archive.\n\n(structure)\n\nAn Archive object that contains details about an archive.\n\nArchiveName -> (string)\n\nThe name of the archive.\n\nEventSourceArn -> (string)\n\nThe ARN of the event bus associated with the archive. Only events from this event bus are sent to the archive.\n\nState -> (string)\n\nThe current state of the archive.\n\nStateReason -> (string)\n\nA description for the reason that the archive is in the current state.\n\nRetentionDays -> (integer)\n\nThe number of days to retain events in the archive before they are deleted.\n\nSizeBytes -> (long)\n\nThe size of the archive, in bytes.\n\nEventCount -> (long)\n\nThe number of events in the archive.\n\nCreationTime -> (timestamp)\n\nThe time stamp for the time that the archive was created.\n\nNextToken -> (string)\n\nThe token returned by a previous call to retrieve the next set of results."
    },
    {
      "command_name": "list-connections",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-connections.html",
      "command_description": "Description\n\nRetrieves a list of connections from the account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-connections\n[--name-prefix <value>]\n[--connection-state <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--connection-state <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nA name prefix to filter results returned. Only connections with a name that starts with the prefix are returned.\n\n--connection-state (string)\n\nThe state of the connection.\n\nPossible values:\n\nCREATING\n\nUPDATING\n\nDELETING\n\nAUTHORIZED\n\nDEAUTHORIZED\n\nAUTHORIZING\n\nDEAUTHORIZING\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nThe maximum number of connections to return.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnections -> (list)\n\nAn array of connections objects that include details about the connections.\n\n(structure)\n\nContains information about a connection.\n\nConnectionArn -> (string)\n\nThe ARN of the connection.\n\nName -> (string)\n\nThe name of the connection.\n\nConnectionState -> (string)\n\nThe state of the connection.\n\nStateReason -> (string)\n\nThe reason that the connection is in the connection state.\n\nAuthorizationType -> (string)\n\nThe authorization type specified for the connection.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last modified.\n\nLastAuthorizedTime -> (timestamp)\n\nA time stamp for the time that the connection was last authorized.\n\nNextToken -> (string)\n\nA token you can use in a subsequent request to retrieve the next set of results."
    },
    {
      "command_name": "list-event-buses",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-event-buses.html",
      "command_description": "Description\n\nLists all the event buses in your account, including the default event bus, custom event buses, and partner event buses.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-event-buses\n[--name-prefix <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nSpecifying this limits the results to only those event buses with names that start with the specified prefix.\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nSpecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventBuses -> (list)\n\nThis list of event buses.\n\n(structure)\n\nAn event bus receives events from a source and routes them to rules associated with that event bus. Your account’s default event bus receives events from Amazon Web Services services. A custom event bus can receive events from your custom applications and services. A partner event bus receives events from an event source created by an SaaS partner. These events come from the partners services or applications.\n\nName -> (string)\n\nThe name of the event bus.\n\nArn -> (string)\n\nThe ARN of the event bus.\n\nPolicy -> (string)\n\nThe permissions policy of the event bus, describing which other Amazon Web Services accounts can write events to this event bus.\n\nNextToken -> (string)\n\nA token you can use in a subsequent operation to retrieve the next set of results."
    },
    {
      "command_name": "list-event-sources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-event-sources.html",
      "command_description": "Description\n\nYou can use this to see all the partner event sources that have been shared with your Amazon Web Services account. For more information about partner event sources, see CreateEventBus .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-event-sources\n[--name-prefix <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nSpecifying this limits the results to only those partner event sources with names that start with the specified prefix.\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nSpecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nEventSources -> (list)\n\nThe list of event sources.\n\n(structure)\n\nA partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that Amazon Web Services account can receive events from the partner’s applications or services.\n\nArn -> (string)\n\nThe ARN of the event source.\n\nCreatedBy -> (string)\n\nThe name of the partner that created the event source.\n\nCreationTime -> (timestamp)\n\nThe date and time the event source was created.\n\nExpirationTime -> (timestamp)\n\nThe date and time that the event source will expire, if the Amazon Web Services account doesn’t create a matching event bus for it.\n\nName -> (string)\n\nThe name of the event source.\n\nState -> (string)\n\nThe state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven’t yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted.\n\nNextToken -> (string)\n\nA token you can use in a subsequent operation to retrieve the next set of results."
    },
    {
      "command_name": "list-partner-event-source-accounts",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-partner-event-source-accounts.html",
      "command_description": "Description\n\nAn SaaS partner can use this operation to display the Amazon Web Services account ID that a particular partner event source name is associated with. This operation is not used by Amazon Web Services customers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-partner-event-source-accounts\n--event-source-name <value>\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--event-source-name <value>",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--event-source-name (string)\n\nThe name of the partner event source to display account information about.\n\n--next-token (string)\n\nThe token returned by a previous call to this operation. Specifying this retrieves the next set of results.\n\n--limit (integer)\n\nSpecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartnerEventSourceAccounts -> (list)\n\nThe list of partner event sources returned by the operation.\n\n(structure)\n\nThe Amazon Web Services account that a partner event source has been offered to.\n\nAccount -> (string)\n\nThe Amazon Web Services account ID that the partner event source was offered to.\n\nCreationTime -> (timestamp)\n\nThe date and time the event source was created.\n\nExpirationTime -> (timestamp)\n\nThe date and time that the event source will expire, if the Amazon Web Services account doesn’t create a matching event bus for it.\n\nState -> (string)\n\nThe state of the event source. If it is ACTIVE, you have already created a matching event bus for this event source, and that event bus is active. If it is PENDING, either you haven’t yet created a matching event bus, or that event bus is deactivated. If it is DELETED, you have created a matching event bus, but the event source has since been deleted.\n\nNextToken -> (string)\n\nA token you can use in a subsequent operation to retrieve the next set of results."
    },
    {
      "command_name": "list-partner-event-sources",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-partner-event-sources.html",
      "command_description": "Description\n\nAn SaaS partner can use this operation to list all the partner event source names that they have created. This operation is not used by Amazon Web Services customers.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-partner-event-sources\n--name-prefix <value>\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name-prefix <value>",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nIf you specify this, the results are limited to only those partner event sources that start with the string you specify.\n\n--next-token (string)\n\nThe token returned by a previous call to this operation. Specifying this retrieves the next set of results.\n\n--limit (integer)\n\npecifying this limits the number of results returned by this operation. The operation also returns a NextToken which you can use in a subsequent operation to retrieve the next set of results.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nPartnerEventSources -> (list)\n\nThe list of partner event sources returned by the operation.\n\n(structure)\n\nA partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that Amazon Web Services account can receive events from the partner’s applications or services.\n\nArn -> (string)\n\nThe ARN of the partner event source.\n\nName -> (string)\n\nThe name of the partner event source.\n\nNextToken -> (string)\n\nA token you can use in a subsequent operation to retrieve the next set of results."
    },
    {
      "command_name": "list-replays",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-replays.html",
      "command_description": "Description\n\nLists your replays. You can either list all the replays or you can provide a prefix to match to the replay names. Filter parameters are exclusive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-replays\n[--name-prefix <value>]\n[--state <value>]\n[--event-source-arn <value>]\n[--next-token <value>]\n[--limit <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--state <value>]",
        "[--event-source-arn <value>]",
        "[--next-token <value>]",
        "[--limit <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nA name prefix to filter the replays returned. Only replays with name that match the prefix are returned.\n\n--state (string)\n\nThe state of the replay.\n\nPossible values:\n\nSTARTING\n\nRUNNING\n\nCANCELLING\n\nCOMPLETED\n\nCANCELLED\n\nFAILED\n\n--event-source-arn (string)\n\nThe ARN of the archive from which the events are replayed.\n\n--next-token (string)\n\nThe token returned by a previous call to retrieve the next set of results.\n\n--limit (integer)\n\nThe maximum number of replays to retrieve.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReplays -> (list)\n\nAn array of Replay objects that contain information about the replay.\n\n(structure)\n\nA Replay object that contains details about a replay.\n\nReplayName -> (string)\n\nThe name of the replay.\n\nEventSourceArn -> (string)\n\nThe ARN of the archive to replay event from.\n\nState -> (string)\n\nThe current state of the replay.\n\nStateReason -> (string)\n\nA description of why the replay is in the current state.\n\nEventStartTime -> (timestamp)\n\nA time stamp for the time to start replaying events. This is determined by the time in the event as described in Time .\n\nEventEndTime -> (timestamp)\n\nA time stamp for the time to start replaying events. Any event with a creation time prior to the EventEndTime specified is replayed.\n\nEventLastReplayedTime -> (timestamp)\n\nA time stamp for the time that the last event was replayed.\n\nReplayStartTime -> (timestamp)\n\nA time stamp for the time that the replay started.\n\nReplayEndTime -> (timestamp)\n\nA time stamp for the time that the replay completed.\n\nNextToken -> (string)\n\nThe token returned by a previous call to retrieve the next set of results."
    },
    {
      "command_name": "list-rule-names-by-target",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-rule-names-by-target.html",
      "command_description": "Description\n\nLists the rules for the specified target. You can see which of the rules in Amazon EventBridge can invoke a specific target in your account.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-rule-names-by-target is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: RuleNames",
      "command_synopsis": "Synopsis\n  list-rule-names-by-target\n--target-arn <value>\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--target-arn <value>",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--target-arn (string)\n\nThe Amazon Resource Name (ARN) of the target resource.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus to list rules for. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRuleNames -> (list)\n\nThe names of the rules that can invoke the given target.\n\n(string)\n\nNextToken -> (string)\n\nIndicates whether there are additional results to retrieve. If there are no more results, the value is null.",
      "command_examples": "Examples\n\nTo display all the rules that have a specified target\n\nThis example displays all rules that have the Lambda function named “MyFunctionName” as the target:\n\naws events list-rule-names-by-target --target-arn \"arn:aws:lambda:us-east-1:123456789012:function:MyFunctionName\"\n"
    },
    {
      "command_name": "list-rules",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-rules.html",
      "command_description": "Description\n\nLists your Amazon EventBridge rules. You can either list all the rules or you can provide a prefix to match to the rule names.\n\nListRules does not list the targets of a rule. To see the targets associated with a rule, use ListTargetsByRule .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-rules is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Rules",
      "command_synopsis": "Synopsis\n  list-rules\n[--name-prefix <value>]\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--name-prefix <value>]",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name-prefix (string)\n\nThe prefix matching the rule name.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus to list the rules for. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRules -> (list)\n\nThe rules that match the specified criteria.\n\n(structure)\n\nContains information about a rule in Amazon EventBridge.\n\nName -> (string)\n\nThe name of the rule.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule.\n\nEventPattern -> (string)\n\nThe event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide .\n\nState -> (string)\n\nThe state of the rule.\n\nDescription -> (string)\n\nThe description of the rule.\n\nScheduleExpression -> (string)\n\nThe scheduling expression. For example, “cron(0 20 * * ? *)”, “rate(5 minutes)”. For more information, see Creating an Amazon EventBridge rule that runs on a schedule .\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the role that is used for target invocation.\n\nIf you’re setting an event bus in another account as the target and that account granted permission to your account through an organization instead of directly by the account ID, you must specify a RoleArn with proper permissions in the Target structure, instead of here in this parameter.\n\nManagedBy -> (string)\n\nIf the rule was created on behalf of your account by an Amazon Web Services service, this field displays the principal name of the service that created the rule.\n\nEventBusName -> (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\nNextToken -> (string)\n\nIndicates whether there are additional results to retrieve. If there are no more results, the value is null.",
      "command_examples": "Examples\n\nTo display a list of all CloudWatch Events rules\n\nThis example displays all CloudWatch Events rules in the region:\n\naws events list-rules\n\n\nTo display a list of CloudWatch Events rules beginning with a certain string.\n\nThis example displays all CloudWatch Events rules in the region that have a name starting with “Daily”:\n\naws events list-rules --name-prefix \"Daily\"\n"
    },
    {
      "command_name": "list-tags-for-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-tags-for-resource.html",
      "command_description": "Description\n\nDisplays the tags associated with an EventBridge resource. In EventBridge, rules and event buses can be tagged.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  list-tags-for-resource\n--resource-arn <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the EventBridge resource for which you want to view tags.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTags -> (list)\n\nThe list of tag keys and values associated with the resource you specified\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key."
    },
    {
      "command_name": "list-targets-by-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/list-targets-by-rule.html",
      "command_description": "Description\n\nLists the targets assigned to the specified rule.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.\n\nlist-targets-by-rule is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the --no-paginate argument. When using --output text and the --query argument on a paginated response, the --query argument must extract data from the results of the following query expressions: Targets",
      "command_synopsis": "Synopsis\n  list-targets-by-rule\n--rule <value>\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--starting-token <value>]\n[--page-size <value>]\n[--max-items <value>]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rule <value>",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--starting-token <value>]",
        "[--page-size <value>]",
        "[--max-items <value>]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--starting-token (string)\n\nA token to specify where to start paginating. This is the NextToken from a previously truncated response.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--page-size (integer)\n\nThe size of each page to get in the AWS service call. This does not affect the number of items returned in the command’s output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--max-items (integer)\n\nThe total number of items to return in the command’s output. If the total number of items available is more than the value specified, a NextToken is provided in the command’s output. To resume pagination, provide the NextToken value in the starting-token argument of a subsequent command. Do not use the NextToken response element directly outside of the AWS CLI.\n\nFor usage examples, see Pagination in the AWS Command Line Interface User Guide .\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nTargets -> (list)\n\nThe targets assigned to the rule.\n\n(structure)\n\nTargets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see PutTargets .\n\nIf you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a RoleArn with proper permissions in the Target structure. For more information, see Sending and Receiving Events Between Amazon Web Services Accounts in the Amazon EventBridge User Guide .\n\nId -> (string)\n\nThe ID of the target. We recommend using a memorable and unique string.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target.\n\nInput -> (string)\n\nValid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see The JavaScript Object Notation (JSON) Data Interchange Format .\n\nInputPath -> (string)\n\nThe value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see JSONPath .\n\nInputTransformer -> (structure)\n\nSettings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target.\n\nInputPathsMap -> (map)\n\nMap of JSON paths to be extracted from the event. You can then insert these in the template in InputTemplate to produce the output you want to be sent to the target.\n\nInputPathsMap is an array key-value pairs, where each value is a valid JSON path. You can have as many as 100 key-value pairs. You must use JSON dot notation, not bracket notation.\n\nThe keys cannot start with “Amazon Web Services.”\n\nkey -> (string)\n\nvalue -> (string)\n\nInputTemplate -> (string)\n\nInput template where you specify placeholders that will be filled with the values of the keys from InputPathsMap to customize the data sent to the target. Enclose each InputPathsMaps value in brackets: <value > The InputTemplate must be valid JSON.\n\nIf InputTemplate is a JSON object (surrounded by curly braces), the following restrictions apply:\n\nThe placeholder cannot be used as an object key.\n\nThe following example shows the syntax for using InputPathsMap and InputTemplate .\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": \"<instance> is in state <status>\"\n\n}\n\nTo have the InputTemplate include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": \"<instance> is in state \\\"<status>\\\"\"\n\n}\n\nThe InputTemplate can also be valid JSON with varibles in quotes or out, as in the following example:\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": '{\"myInstance\": <instance>,\"myStatus\": \"<instance> is in state \\\"<status>\\\"\"}'\n\n}\n\nKinesisParameters -> (structure)\n\nThe custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the eventId as the partition key.\n\nPartitionKeyPath -> (string)\n\nThe JSON path to be extracted from the event and used as the partition key. For more information, see Amazon Kinesis Streams Key Concepts in the Amazon Kinesis Streams Developer Guide .\n\nRunCommandParameters -> (structure)\n\nParameters used when you are using the rule to invoke Amazon EC2 Run Command.\n\nRunCommandTargets -> (list)\n\nCurrently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.\n\n(structure)\n\nInformation about the EC2 instances that are to be sent the command, specified as key-value pairs. Each RunCommandTarget block can include only one key, but this key may specify multiple values.\n\nKey -> (string)\n\nCan be either tag: tag-key or InstanceIds .\n\nValues -> (list)\n\nIf Key is tag: tag-key , Values is a list of tag values. If Key is InstanceIds , Values is a list of Amazon EC2 instance IDs.\n\n(string)\n\nEcsParameters -> (structure)\n\nContains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see Task Definitions in the Amazon EC2 Container Service Developer Guide .\n\nTaskDefinitionArn -> (string)\n\nThe ARN of the task definition to use if the event target is an Amazon ECS task.\n\nTaskCount -> (integer)\n\nThe number of tasks to create based on TaskDefinition . The default is 1.\n\nLaunchType -> (string)\n\nSpecifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where Fargate witt Amazon ECS is supported. For more information, see Fargate on Amazon ECS in the Amazon Elastic Container Service Developer Guide .\n\nNetworkConfiguration -> (structure)\n\nUse this structure if the Amazon ECS task uses the awsvpc network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if LaunchType is FARGATE because the awsvpc mode is required for Fargate tasks.\n\nIf you specify NetworkConfiguration when the target ECS task does not use the awsvpc network mode, the task fails.\n\nawsvpcConfiguration -> (structure)\n\nUse this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.\n\nSubnets -> (list)\n\nSpecifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.\n\n(string)\n\nSecurityGroups -> (list)\n\nSpecifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.\n\n(string)\n\nAssignPublicIp -> (string)\n\nSpecifies whether the task’s elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE .\n\nPlatformVersion -> (string)\n\nSpecifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0 .\n\nThis structure is used only if LaunchType is FARGATE . For more information about valid platform versions, see Fargate Platform Versions in the Amazon Elastic Container Service Developer Guide .\n\nGroup -> (string)\n\nSpecifies an ECS task group for the task. The maximum length is 255 characters.\n\nCapacityProviderStrategy -> (list)\n\nThe capacity provider strategy to use for the task.\n\nIf a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used.\n\n(structure)\n\nThe details of a capacity provider strategy. To learn more, see CapacityProviderStrategyItem in the Amazon ECS API Reference.\n\ncapacityProvider -> (string)\n\nThe short name of the capacity provider.\n\nweight -> (integer)\n\nThe weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.\n\nbase -> (integer)\n\nThe base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used.\n\nEnableECSManagedTags -> (boolean)\n\nSpecifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon Elastic Container Service Developer Guide.\n\nEnableExecuteCommand -> (boolean)\n\nWhether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.\n\nPlacementConstraints -> (list)\n\nAn array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).\n\n(structure)\n\nAn object representing a constraint on task placement. To learn more, see Task Placement Constraints in the Amazon Elastic Container Service Developer Guide.\n\ntype -> (string)\n\nThe type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates.\n\nexpression -> (string)\n\nA cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance . To learn more, see Cluster Query Language in the Amazon Elastic Container Service Developer Guide.\n\nPlacementStrategy -> (list)\n\nThe placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.\n\n(structure)\n\nThe task placement strategy for a task or service. To learn more, see Task Placement Strategies in the Amazon Elastic Container Service Service Developer Guide.\n\ntype -> (string)\n\nThe type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task).\n\nfield -> (string)\n\nThe field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used.\n\nPropagateTags -> (string)\n\nSpecifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.\n\nReferenceId -> (string)\n\nThe reference ID to use for the task.\n\nTags -> (list)\n\nThe metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see RunTask in the Amazon ECS API Reference.\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key.\n\nBatchParameters -> (structure)\n\nIf the event target is an Batch job, this contains the job definition, job name, and other parameters. For more information, see Jobs in the Batch User Guide .\n\nJobDefinition -> (string)\n\nThe ARN or name of the job definition to use if the event target is an Batch job. This job definition must already exist.\n\nJobName -> (string)\n\nThe name to use for this execution of the job, if the target is an Batch job.\n\nArrayProperties -> (structure)\n\nThe array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an Batch job.\n\nSize -> (integer)\n\nThe size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.\n\nRetryStrategy -> (structure)\n\nThe retry strategy to use for failed jobs, if the target is an Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition.\n\nAttempts -> (integer)\n\nThe number of times to attempt to retry, if the job fails. Valid values are 1–10.\n\nSqsParameters -> (structure)\n\nContains the message group ID to use when the target is a FIFO queue.\n\nIf you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.\n\nMessageGroupId -> (string)\n\nThe FIFO message group ID to use as the target.\n\nHttpParameters -> (structure)\n\nContains the HTTP parameters to use when the target is a API Gateway REST endpoint or EventBridge ApiDestination.\n\nIf you specify an API Gateway REST API or EventBridge ApiDestination as a target, you can use this parameter to specify headers, path parameters, and query string keys/values as part of your target invoking request. If you’re using ApiDestinations, the corresponding Connection can also have these values configured. In case of any conflicting keys, values from the Connection take precedence.\n\nPathParameterValues -> (list)\n\nThe path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards (“*”).\n\n(string)\n\nHeaderParameters -> (map)\n\nThe headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.\n\nkey -> (string)\n\nvalue -> (string)\n\nQueryStringParameters -> (map)\n\nThe query string keys/values that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.\n\nkey -> (string)\n\nvalue -> (string)\n\nRedshiftDataParameters -> (structure)\n\nContains the Amazon Redshift Data API parameters to use when the target is a Amazon Redshift cluster.\n\nIf you specify a Amazon Redshift Cluster as a Target, you can use this to specify parameters to invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge events.\n\nSecretManagerArn -> (string)\n\nThe name or ARN of the secret that enables access to the database. Required when authenticating using Amazon Web Services Secrets Manager.\n\nDatabase -> (string)\n\nThe name of the database. Required when authenticating using temporary credentials.\n\nDbUser -> (string)\n\nThe database user name. Required when authenticating using temporary credentials.\n\nSql -> (string)\n\nThe SQL statement text to run.\n\nStatementName -> (string)\n\nThe name of the SQL statement. You can name the SQL statement when you create it to identify the query.\n\nWithEvent -> (boolean)\n\nIndicates whether to send an event back to EventBridge after the SQL statement runs.\n\nSageMakerPipelineParameters -> (structure)\n\nContains the SageMaker Model Building Pipeline parameters to start execution of a SageMaker Model Building Pipeline.\n\nIf you specify a SageMaker Model Building Pipeline as a target, you can use this to specify parameters to start a pipeline execution based on EventBridge events.\n\nPipelineParameterList -> (list)\n\nList of Parameter names and values for SageMaker Model Building Pipeline execution.\n\n(structure)\n\nName/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.\n\nName -> (string)\n\nName of parameter to start execution of a SageMaker Model Building Pipeline.\n\nValue -> (string)\n\nValue of parameter to start execution of a SageMaker Model Building Pipeline.\n\nDeadLetterConfig -> (structure)\n\nThe DeadLetterConfig that defines the target queue to send dead-letter queue events to.\n\nArn -> (string)\n\nThe ARN of the SQS queue specified as the target for the dead-letter queue.\n\nRetryPolicy -> (structure)\n\nThe RetryPolicy object that contains the retry policy configuration to use for the dead-letter queue.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of retry attempts to make before the request fails. Retry attempts continue until either the maximum number of attempts is made or until the duration of the MaximumEventAgeInSeconds is met.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum amount of time, in seconds, to continue to make retry attempts.\n\nNextToken -> (string)\n\nIndicates whether there are additional results to retrieve. If there are no more results, the value is null.",
      "command_examples": "Examples\n\nTo display all the targets for a CloudWatch Events rule\n\nThis example displays all the targets of the rule named DailyLambdaFunction:\n\naws events list-targets-by-rule --rule  \"DailyLambdaFunction\"\n"
    },
    {
      "command_name": "put-events",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/put-events.html",
      "command_description": "Description\n\nSends custom events to Amazon EventBridge so that they can be matched to rules.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-events\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entries (list)\n\nThe entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on.\n\n(structure)\n\nRepresents an event to be submitted.\n\nTime -> (timestamp)\n\nThe time stamp of the event, per RFC3339 . If no time stamp is provided, the time stamp of the PutEvents call is used.\n\nSource -> (string)\n\nThe source of the event.\n\nResources -> (list)\n\nAmazon Web Services resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.\n\n(string)\n\nDetailType -> (string)\n\nFree-form string used to decide what fields to expect in the event detail.\n\nDetail -> (string)\n\nA valid JSON string. There is no other schema imposed. The JSON string may contain fields and nested subobjects.\n\nEventBusName -> (string)\n\nThe name or ARN of the event bus to receive the event. Only the rules that are associated with this event bus are used to match the event. If you omit this, the default event bus is used.\n\nTraceHeader -> (string)\n\nAn X-Ray trade header, which is an http header (X-Amzn-Trace-Id) that contains the trace-id associated with the event.\n\nTo learn more about X-Ray trace headers, see Tracing header in the X-Ray Developer Guide.\n\nShorthand Syntax:\n\nTime=timestamp,Source=string,Resources=string,string,DetailType=string,Detail=string,EventBusName=string,TraceHeader=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Time\": timestamp,\n    \"Source\": \"string\",\n    \"Resources\": [\"string\", ...],\n    \"DetailType\": \"string\",\n    \"Detail\": \"string\",\n    \"EventBusName\": \"string\",\n    \"TraceHeader\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedEntryCount -> (integer)\n\nThe number of failed entries.\n\nEntries -> (list)\n\nThe successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.\n\n(structure)\n\nRepresents an event that failed to be submitted.\n\nEventId -> (string)\n\nThe ID of the event.\n\nErrorCode -> (string)\n\nThe error code that indicates why the event submission failed.\n\nErrorMessage -> (string)\n\nThe error message that explains why the event submission failed.",
      "command_examples": "Examples\n\nTo send a custom event to CloudWatch Events\n\nThis example sends a custom event to CloudWatch Events. The event is contained within the putevents.json file:\n\naws events put-events --entries file://putevents.json\n\n\nHere are the contents of the putevents.json file:\n\n[\n  {\n    \"Source\": \"com.mycompany.myapp\",\n    \"Detail\": \"{ \\\"key1\\\": \\\"value1\\\", \\\"key2\\\": \\\"value2\\\" }\",\n    \"Resources\": [\n      \"resource1\",\n      \"resource2\"\n    ],\n    \"DetailType\": \"myDetailType\"\n  },\n  {\n    \"Source\": \"com.mycompany.myapp\",\n    \"Detail\": \"{ \\\"key1\\\": \\\"value3\\\", \\\"key2\\\": \\\"value4\\\" }\",\n    \"Resources\": [\n      \"resource1\",\n      \"resource2\"\n    ],\n    \"DetailType\": \"myDetailType\"\n   }\n]\n"
    },
    {
      "command_name": "put-partner-events",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/put-partner-events.html",
      "command_description": "Description\n\nThis is used by SaaS partners to write events to a customer’s partner event bus. Amazon Web Services customers do not use this operation.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-partner-events\n--entries <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--entries <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--entries (list)\n\nThe list of events to write to the event bus.\n\n(structure)\n\nThe details about an event generated by an SaaS partner.\n\nTime -> (timestamp)\n\nThe date and time of the event.\n\nSource -> (string)\n\nThe event source that is generating the entry.\n\nResources -> (list)\n\nAmazon Web Services resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.\n\n(string)\n\nDetailType -> (string)\n\nA free-form string used to decide what fields to expect in the event detail.\n\nDetail -> (string)\n\nA valid JSON string. There is no other schema imposed. The JSON string may contain fields and nested subobjects.\n\nShorthand Syntax:\n\nTime=timestamp,Source=string,Resources=string,string,DetailType=string,Detail=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Time\": timestamp,\n    \"Source\": \"string\",\n    \"Resources\": [\"string\", ...],\n    \"DetailType\": \"string\",\n    \"Detail\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedEntryCount -> (integer)\n\nThe number of events from this operation that could not be written to the partner event bus.\n\nEntries -> (list)\n\nThe list of events from this operation that were successfully written to the partner event bus.\n\n(structure)\n\nRepresents an event that a partner tried to generate, but failed.\n\nEventId -> (string)\n\nThe ID of the event.\n\nErrorCode -> (string)\n\nThe error code that indicates why the event submission failed.\n\nErrorMessage -> (string)\n\nThe error message that explains why the event submission failed."
    },
    {
      "command_name": "put-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/put-permission.html",
      "command_description": "Description\n\nRunning PutPermission permits the specified Amazon Web Services account or Amazon Web Services organization to put events to the specified event bus . Amazon EventBridge (CloudWatch Events) rules in your account are triggered by these events arriving to an event bus in your account.\n\nFor another account to send events to your account, that external account must have an EventBridge rule with your account’s event bus as a target.\n\nTo enable multiple Amazon Web Services accounts to put events to your event bus, run PutPermission once for each of these accounts. Or, if all the accounts are members of the same Amazon Web Services organization, you can run PutPermission once specifying Principal as “*” and specifying the Amazon Web Services organization ID in Condition , to grant permissions to all accounts in that organization.\n\nIf you grant permissions using an organization, then accounts in that organization must specify a RoleArn with proper permissions when they use PutTarget to add your account’s event bus as a target. For more information, see Sending and Receiving Events Between Amazon Web Services Accounts in the Amazon EventBridge User Guide .\n\nThe permission policy on the event bus cannot exceed 10 KB in size.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-permission\n[--event-bus-name <value>]\n[--action <value>]\n[--principal <value>]\n[--statement-id <value>]\n[--condition <value>]\n[--policy <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--event-bus-name <value>]",
        "[--action <value>]",
        "[--principal <value>]",
        "[--statement-id <value>]",
        "[--condition <value>]",
        "[--policy <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--event-bus-name (string)\n\nThe name of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--action (string)\n\nThe action that you are enabling the other account to perform.\n\n--principal (string)\n\nThe 12-digit Amazon Web Services account ID that you are permitting to put events to your default event bus. Specify “*” to permit any account to put events to your default event bus.\n\nIf you specify “*” without specifying Condition , avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an account field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.\n\n--statement-id (string)\n\nAn identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this StatementId when you run RemovePermission .\n\n--condition (structure)\n\nThis parameter enables you to limit the permission to accounts that fulfill a certain condition, such as being a member of a certain Amazon Web Services organization. For more information about Amazon Web Services Organizations, see What Is Amazon Web Services Organizations in the Amazon Web Services Organizations User Guide .\n\nIf you specify Condition with an Amazon Web Services organization ID, and specify “*” as the value for Principal , you grant permission to all the accounts in the named organization.\n\nThe Condition is a JSON string which must contain Type , Key , and Value fields.\n\nType -> (string)\n\nSpecifies the type of condition. Currently the only supported value is StringEquals .\n\nKey -> (string)\n\nSpecifies the key for the condition. Currently the only supported key is aws:PrincipalOrgID .\n\nValue -> (string)\n\nSpecifies the value for the key. Currently, this must be the ID of the organization.\n\nShorthand Syntax:\n\nType=string,Key=string,Value=string\n\n\nJSON Syntax:\n\n{\n  \"Type\": \"string\",\n  \"Key\": \"string\",\n  \"Value\": \"string\"\n}\n\n\n--policy (string)\n\nA JSON string that describes the permission policy statement. You can include a Policy parameter in the request instead of using the StatementId , Action , Principal , or Condition parameters.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "put-rule",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/put-rule.html",
      "command_description": "Description\n\nCreates or updates the specified rule. Rules are enabled by default, or based on value of the state. You can disable a rule using DisableRule .\n\nA single rule watches for events from a single event bus. Events generated by Amazon Web Services services go to your account’s default event bus. Events generated by SaaS partner services or applications go to the matching partner event bus. If you have custom applications or services, you can specify whether their events go to your default event bus or a custom event bus that you have created. For more information, see CreateEventBus .\n\nIf you are updating an existing rule, the rule is replaced with what you specify in this PutRule command. If you omit arguments in PutRule , the old values for those arguments are not kept. Instead, they are replaced with null values.\n\nWhen you create or update a rule, incoming events might not immediately start matching to new or updated rules. Allow a short period of time for changes to take effect.\n\nA rule must contain at least an EventPattern or ScheduleExpression. Rules with EventPatterns are triggered when a matching event is observed. Rules with ScheduleExpressions self-trigger based on the given schedule. A rule can have both an EventPattern and a ScheduleExpression, in which case the rule triggers on matching events as well as on a schedule.\n\nWhen you initially create a rule, you can optionally assign one or more tags to the rule. Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only rules with certain tag values. To use the PutRule operation and assign tags, you must have both the events:PutRule and events:TagResource permissions.\n\nIf you are updating an existing rule, any tags you specify in the PutRule operation are ignored. To update the tags of an existing rule, use TagResource and UntagResource .\n\nMost services in Amazon Web Services treat : or / as the same character in Amazon Resource Names (ARNs). However, EventBridge uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.\n\nIn EventBridge, it is possible to create rules that lead to infinite loops, where a rule is fired repeatedly. For example, a rule might detect that ACLs have changed on an S3 bucket, and trigger software to change them to the desired state. If the rule is not written carefully, the subsequent change to the ACLs fires the rule again, creating an infinite loop.\n\nTo prevent this, write the rules so that the triggered actions do not re-fire the same rule. For example, your rule could fire only if ACLs are found to be in a bad state, instead of after any change.\n\nAn infinite loop can quickly cause higher than expected charges. We recommend that you use budgeting, which alerts you when charges exceed your specified limit. For more information, see Managing Your Costs with Budgets .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-rule\n--name <value>\n[--schedule-expression <value>]\n[--event-pattern <value>]\n[--state <value>]\n[--description <value>]\n[--role-arn <value>]\n[--tags <value>]\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--schedule-expression <value>]",
        "[--event-pattern <value>]",
        "[--state <value>]",
        "[--description <value>]",
        "[--role-arn <value>]",
        "[--tags <value>]",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the rule that you are creating or updating.\n\n--schedule-expression (string)\n\nThe scheduling expression. For example, “cron(0 20 * * ? *)” or “rate(5 minutes)”.\n\n--event-pattern (string)\n\nThe event pattern. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide .\n\n--state (string)\n\nIndicates whether the rule is enabled or disabled.\n\nPossible values:\n\nENABLED\n\nDISABLED\n\n--description (string)\n\nA description of the rule.\n\n--role-arn (string)\n\nThe Amazon Resource Name (ARN) of the IAM role associated with the rule.\n\nIf you’re setting an event bus in another account as the target and that account granted permission to your account through an organization instead of directly by the account ID, you must specify a RoleArn with proper permissions in the Target structure, instead of here in this parameter.\n\n--tags (list)\n\nThe list of key-value pairs to associate with the rule.\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus to associate with this rule. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nRuleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the rule.",
      "command_examples": "Examples\n\nTo create CloudWatch Events rules\n\nThis example creates a rule that triggers every day at 9:00am (UTC). If you use put-targets to add a Lambda function as a target of this rule, you could run the Lambda function every day at the specified time:\n\naws events put-rule --name \"DailyLambdaFunction\" --schedule-expression \"cron(0 9 * * ? *)\"\n\n\nThis example creates a rule that triggers when any EC2 instance in the region changes state:\n\naws events put-rule --name \"EC2InstanceStateChanges\" --event-pattern \"{\\\"source\\\":[\\\"aws.ec2\\\"],\\\"detail-type\\\":[\\\"EC2 Instance State-change Notification\\\"]}\"  --role-arn \"arn:aws:iam::123456789012:role/MyRoleForThisRule\"\n\n\nThis example creates a rule that triggers when any EC2 instance in the region is stopped or terminated:\n\naws events put-rule --name \"EC2InstanceStateChangeStopOrTerminate\" --event-pattern \"{\\\"source\\\":[\\\"aws.ec2\\\"],\\\"detail-type\\\":[\\\"EC2 Instance State-change Notification\\\"],\\\"detail\\\":{\\\"state\\\":[\\\"stopped\\\",\\\"terminated\\\"]}}\" --role-arn \"arn:aws:iam::123456789012:role/MyRoleForThisRule\"\n"
    },
    {
      "command_name": "put-targets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/put-targets.html",
      "command_description": "Description\n\nAdds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.\n\nTargets are the resources that are invoked when a rule is triggered.\n\nYou can configure the following as targets for Events:\n\nAPI destination\n\nAmazon API Gateway REST API endpoints\n\nAPI Gateway\n\nBatch job queue\n\nCloudWatch Logs group\n\nCodeBuild project\n\nCodePipeline\n\nAmazon EC2 CreateSnapshot API call\n\nAmazon EC2 RebootInstances API call\n\nAmazon EC2 StopInstances API call\n\nAmazon EC2 TerminateInstances API call\n\nAmazon ECS tasks\n\nEvent bus in a different Amazon Web Services account or Region. You can use an event bus in the US East (N. Virginia) us-east-1, US West (Oregon) us-west-2, or Europe (Ireland) eu-west-1 Regions as a target for a rule.\n\nFirehose delivery stream (Kinesis Data Firehose)\n\nInspector assessment template (Amazon Inspector)\n\nKinesis stream (Kinesis Data Stream)\n\nLambda function\n\nRedshift clusters (Data API statement execution)\n\nAmazon SNS topic\n\nAmazon SQS queues (includes FIFO queues\n\nSSM Automation\n\nSSM OpsItem\n\nSSM Run Command\n\nStep Functions state machines\n\nCreating rules with built-in targets is supported only in the Amazon Web Services Management Console. The built-in targets are EC2 CreateSnapshot API call , EC2 RebootInstances API call , EC2 StopInstances API call , and EC2 TerminateInstances API call .\n\nFor some target types, PutTargets provides target-specific parameters. If the target is a Kinesis data stream, you can optionally specify which shard the event goes to by using the KinesisParameters argument. To invoke a command on multiple EC2 instances with one rule, you can use the RunCommandParameters field.\n\nTo be able to make API calls against the resources that you own, Amazon EventBridge needs the appropriate permissions. For Lambda and Amazon SNS resources, EventBridge relies on resource-based policies. For EC2 instances, Kinesis Data Streams, Step Functions state machines and API Gateway REST APIs, EventBridge relies on IAM roles that you specify in the RoleARN argument in PutTargets . For more information, see Authentication and Access Control in the Amazon EventBridge User Guide .\n\nIf another Amazon Web Services account is in the same region and has granted you permission (using PutPermission ), you can send events to that account. Set that account’s event bus as a target of the rules in your account. To send the matched events to the other account, specify that account’s event bus as the Arn value when you run PutTargets . If your account sends events to another account, your account is charged for each sent event. Each event sent to another account is charged as a custom event. The account receiving the event is not charged. For more information, see Amazon EventBridge Pricing .\n\nNote\n\nInput , InputPath , and InputTransformer are not available with PutTarget if the target is an event bus of a different Amazon Web Services account.\n\nIf you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a RoleArn with proper permissions in the Target structure. For more information, see Sending and Receiving Events Between Amazon Web Services Accounts in the Amazon EventBridge User Guide .\n\nFor more information about enabling cross-account events, see PutPermission .\n\nInput , InputPath , and InputTransformer are mutually exclusive and optional parameters of a target. When a rule is triggered due to a matched event:\n\nIf none of the following arguments are specified for a target, then the entire event is passed to the target in JSON format (unless the target is Amazon EC2 Run Command or Amazon ECS task, in which case nothing from the event is passed to the target).\n\nIf Input is specified in the form of valid JSON, then the matched event is overridden with this constant.\n\nIf InputPath is specified in the form of JSONPath (for example, $.detail ), then only the part of the event specified in the path is passed to the target (for example, only the detail part of the event is passed).\n\nIf InputTransformer is specified, then one or more specified JSONPaths are extracted from the event and used as values in a template that you specify as the input to the target.\n\nWhen you specify InputPath or InputTransformer , you must use JSON dot notation, not bracket notation.\n\nWhen you add targets to a rule and the associated rule triggers soon after, new or updated targets might not be immediately invoked. Allow a short period of time for changes to take effect.\n\nThis action can partially fail if too many requests are made at the same time. If that happens, FailedEntryCount is non-zero in the response and each entry in FailedEntries provides the ID of the failed target and the error code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  put-targets\n--rule <value>\n[--event-bus-name <value>]\n--targets <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rule <value>",
        "[--event-bus-name <value>]",
        "--targets <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--targets (list)\n\nThe targets to update or add to the rule.\n\n(structure)\n\nTargets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see PutTargets .\n\nIf you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a RoleArn with proper permissions in the Target structure. For more information, see Sending and Receiving Events Between Amazon Web Services Accounts in the Amazon EventBridge User Guide .\n\nId -> (string)\n\nThe ID of the target. We recommend using a memorable and unique string.\n\nArn -> (string)\n\nThe Amazon Resource Name (ARN) of the target.\n\nRoleArn -> (string)\n\nThe Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target.\n\nInput -> (string)\n\nValid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. For more information, see The JavaScript Object Notation (JSON) Data Interchange Format .\n\nInputPath -> (string)\n\nThe value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see JSONPath .\n\nInputTransformer -> (structure)\n\nSettings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target.\n\nInputPathsMap -> (map)\n\nMap of JSON paths to be extracted from the event. You can then insert these in the template in InputTemplate to produce the output you want to be sent to the target.\n\nInputPathsMap is an array key-value pairs, where each value is a valid JSON path. You can have as many as 100 key-value pairs. You must use JSON dot notation, not bracket notation.\n\nThe keys cannot start with “Amazon Web Services.”\n\nkey -> (string)\n\nvalue -> (string)\n\nInputTemplate -> (string)\n\nInput template where you specify placeholders that will be filled with the values of the keys from InputPathsMap to customize the data sent to the target. Enclose each InputPathsMaps value in brackets: <value > The InputTemplate must be valid JSON.\n\nIf InputTemplate is a JSON object (surrounded by curly braces), the following restrictions apply:\n\nThe placeholder cannot be used as an object key.\n\nThe following example shows the syntax for using InputPathsMap and InputTemplate .\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": \"<instance> is in state <status>\"\n\n}\n\nTo have the InputTemplate include quote marks within a JSON string, escape each quote marks with a slash, as in the following example:\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": \"<instance> is in state \\\"<status>\\\"\"\n\n}\n\nThe InputTemplate can also be valid JSON with varibles in quotes or out, as in the following example:\n\n\"InputTransformer\":\n\n{\n\n\"InputPathsMap\": {\"instance\": \"$.detail.instance\",\"status\": \"$.detail.status\"},\n\n\"InputTemplate\": '{\"myInstance\": <instance>,\"myStatus\": \"<instance> is in state \\\"<status>\\\"\"}'\n\n}\n\nKinesisParameters -> (structure)\n\nThe custom parameter you can use to control the shard assignment, when the target is a Kinesis data stream. If you do not include this parameter, the default is to use the eventId as the partition key.\n\nPartitionKeyPath -> (string)\n\nThe JSON path to be extracted from the event and used as the partition key. For more information, see Amazon Kinesis Streams Key Concepts in the Amazon Kinesis Streams Developer Guide .\n\nRunCommandParameters -> (structure)\n\nParameters used when you are using the rule to invoke Amazon EC2 Run Command.\n\nRunCommandTargets -> (list)\n\nCurrently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag.\n\n(structure)\n\nInformation about the EC2 instances that are to be sent the command, specified as key-value pairs. Each RunCommandTarget block can include only one key, but this key may specify multiple values.\n\nKey -> (string)\n\nCan be either tag: tag-key or InstanceIds .\n\nValues -> (list)\n\nIf Key is tag: tag-key , Values is a list of tag values. If Key is InstanceIds , Values is a list of Amazon EC2 instance IDs.\n\n(string)\n\nEcsParameters -> (structure)\n\nContains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see Task Definitions in the Amazon EC2 Container Service Developer Guide .\n\nTaskDefinitionArn -> (string)\n\nThe ARN of the task definition to use if the event target is an Amazon ECS task.\n\nTaskCount -> (integer)\n\nThe number of tasks to create based on TaskDefinition . The default is 1.\n\nLaunchType -> (string)\n\nSpecifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where Fargate witt Amazon ECS is supported. For more information, see Fargate on Amazon ECS in the Amazon Elastic Container Service Developer Guide .\n\nNetworkConfiguration -> (structure)\n\nUse this structure if the Amazon ECS task uses the awsvpc network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if LaunchType is FARGATE because the awsvpc mode is required for Fargate tasks.\n\nIf you specify NetworkConfiguration when the target ECS task does not use the awsvpc network mode, the task fails.\n\nawsvpcConfiguration -> (structure)\n\nUse this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode.\n\nSubnets -> (list)\n\nSpecifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.\n\n(string)\n\nSecurityGroups -> (list)\n\nSpecifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.\n\n(string)\n\nAssignPublicIp -> (string)\n\nSpecifies whether the task’s elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE .\n\nPlatformVersion -> (string)\n\nSpecifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0 .\n\nThis structure is used only if LaunchType is FARGATE . For more information about valid platform versions, see Fargate Platform Versions in the Amazon Elastic Container Service Developer Guide .\n\nGroup -> (string)\n\nSpecifies an ECS task group for the task. The maximum length is 255 characters.\n\nCapacityProviderStrategy -> (list)\n\nThe capacity provider strategy to use for the task.\n\nIf a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used.\n\n(structure)\n\nThe details of a capacity provider strategy. To learn more, see CapacityProviderStrategyItem in the Amazon ECS API Reference.\n\ncapacityProvider -> (string)\n\nThe short name of the capacity provider.\n\nweight -> (integer)\n\nThe weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.\n\nbase -> (integer)\n\nThe base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used.\n\nEnableECSManagedTags -> (boolean)\n\nSpecifies whether to enable Amazon ECS managed tags for the task. For more information, see Tagging Your Amazon ECS Resources in the Amazon Elastic Container Service Developer Guide.\n\nEnableExecuteCommand -> (boolean)\n\nWhether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.\n\nPlacementConstraints -> (list)\n\nAn array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).\n\n(structure)\n\nAn object representing a constraint on task placement. To learn more, see Task Placement Constraints in the Amazon Elastic Container Service Developer Guide.\n\ntype -> (string)\n\nThe type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates.\n\nexpression -> (string)\n\nA cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance . To learn more, see Cluster Query Language in the Amazon Elastic Container Service Developer Guide.\n\nPlacementStrategy -> (list)\n\nThe placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.\n\n(structure)\n\nThe task placement strategy for a task or service. To learn more, see Task Placement Strategies in the Amazon Elastic Container Service Service Developer Guide.\n\ntype -> (string)\n\nThe type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task).\n\nfield -> (string)\n\nThe field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used.\n\nPropagateTags -> (string)\n\nSpecifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.\n\nReferenceId -> (string)\n\nThe reference ID to use for the task.\n\nTags -> (list)\n\nThe metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see RunTask in the Amazon ECS API Reference.\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key.\n\nBatchParameters -> (structure)\n\nIf the event target is an Batch job, this contains the job definition, job name, and other parameters. For more information, see Jobs in the Batch User Guide .\n\nJobDefinition -> (string)\n\nThe ARN or name of the job definition to use if the event target is an Batch job. This job definition must already exist.\n\nJobName -> (string)\n\nThe name to use for this execution of the job, if the target is an Batch job.\n\nArrayProperties -> (structure)\n\nThe array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an Batch job.\n\nSize -> (integer)\n\nThe size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.\n\nRetryStrategy -> (structure)\n\nThe retry strategy to use for failed jobs, if the target is an Batch job. The retry strategy is the number of times to retry the failed job execution. Valid values are 1–10. When you specify a retry strategy here, it overrides the retry strategy defined in the job definition.\n\nAttempts -> (integer)\n\nThe number of times to attempt to retry, if the job fails. Valid values are 1–10.\n\nSqsParameters -> (structure)\n\nContains the message group ID to use when the target is a FIFO queue.\n\nIf you specify an SQS FIFO queue as a target, the queue must have content-based deduplication enabled.\n\nMessageGroupId -> (string)\n\nThe FIFO message group ID to use as the target.\n\nHttpParameters -> (structure)\n\nContains the HTTP parameters to use when the target is a API Gateway REST endpoint or EventBridge ApiDestination.\n\nIf you specify an API Gateway REST API or EventBridge ApiDestination as a target, you can use this parameter to specify headers, path parameters, and query string keys/values as part of your target invoking request. If you’re using ApiDestinations, the corresponding Connection can also have these values configured. In case of any conflicting keys, values from the Connection take precedence.\n\nPathParameterValues -> (list)\n\nThe path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards (“*”).\n\n(string)\n\nHeaderParameters -> (map)\n\nThe headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.\n\nkey -> (string)\n\nvalue -> (string)\n\nQueryStringParameters -> (map)\n\nThe query string keys/values that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.\n\nkey -> (string)\n\nvalue -> (string)\n\nRedshiftDataParameters -> (structure)\n\nContains the Amazon Redshift Data API parameters to use when the target is a Amazon Redshift cluster.\n\nIf you specify a Amazon Redshift Cluster as a Target, you can use this to specify parameters to invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge events.\n\nSecretManagerArn -> (string)\n\nThe name or ARN of the secret that enables access to the database. Required when authenticating using Amazon Web Services Secrets Manager.\n\nDatabase -> (string)\n\nThe name of the database. Required when authenticating using temporary credentials.\n\nDbUser -> (string)\n\nThe database user name. Required when authenticating using temporary credentials.\n\nSql -> (string)\n\nThe SQL statement text to run.\n\nStatementName -> (string)\n\nThe name of the SQL statement. You can name the SQL statement when you create it to identify the query.\n\nWithEvent -> (boolean)\n\nIndicates whether to send an event back to EventBridge after the SQL statement runs.\n\nSageMakerPipelineParameters -> (structure)\n\nContains the SageMaker Model Building Pipeline parameters to start execution of a SageMaker Model Building Pipeline.\n\nIf you specify a SageMaker Model Building Pipeline as a target, you can use this to specify parameters to start a pipeline execution based on EventBridge events.\n\nPipelineParameterList -> (list)\n\nList of Parameter names and values for SageMaker Model Building Pipeline execution.\n\n(structure)\n\nName/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.\n\nName -> (string)\n\nName of parameter to start execution of a SageMaker Model Building Pipeline.\n\nValue -> (string)\n\nValue of parameter to start execution of a SageMaker Model Building Pipeline.\n\nDeadLetterConfig -> (structure)\n\nThe DeadLetterConfig that defines the target queue to send dead-letter queue events to.\n\nArn -> (string)\n\nThe ARN of the SQS queue specified as the target for the dead-letter queue.\n\nRetryPolicy -> (structure)\n\nThe RetryPolicy object that contains the retry policy configuration to use for the dead-letter queue.\n\nMaximumRetryAttempts -> (integer)\n\nThe maximum number of retry attempts to make before the request fails. Retry attempts continue until either the maximum number of attempts is made or until the duration of the MaximumEventAgeInSeconds is met.\n\nMaximumEventAgeInSeconds -> (integer)\n\nThe maximum amount of time, in seconds, to continue to make retry attempts.\n\nJSON Syntax:\n\n[\n  {\n    \"Id\": \"string\",\n    \"Arn\": \"string\",\n    \"RoleArn\": \"string\",\n    \"Input\": \"string\",\n    \"InputPath\": \"string\",\n    \"InputTransformer\": {\n      \"InputPathsMap\": {\"string\": \"string\"\n        ...},\n      \"InputTemplate\": \"string\"\n    },\n    \"KinesisParameters\": {\n      \"PartitionKeyPath\": \"string\"\n    },\n    \"RunCommandParameters\": {\n      \"RunCommandTargets\": [\n        {\n          \"Key\": \"string\",\n          \"Values\": [\"string\", ...]\n        }\n        ...\n      ]\n    },\n    \"EcsParameters\": {\n      \"TaskDefinitionArn\": \"string\",\n      \"TaskCount\": integer,\n      \"LaunchType\": \"EC2\"|\"FARGATE\"|\"EXTERNAL\",\n      \"NetworkConfiguration\": {\n        \"awsvpcConfiguration\": {\n          \"Subnets\": [\"string\", ...],\n          \"SecurityGroups\": [\"string\", ...],\n          \"AssignPublicIp\": \"ENABLED\"|\"DISABLED\"\n        }\n      },\n      \"PlatformVersion\": \"string\",\n      \"Group\": \"string\",\n      \"CapacityProviderStrategy\": [\n        {\n          \"capacityProvider\": \"string\",\n          \"weight\": integer,\n          \"base\": integer\n        }\n        ...\n      ],\n      \"EnableECSManagedTags\": true|false,\n      \"EnableExecuteCommand\": true|false,\n      \"PlacementConstraints\": [\n        {\n          \"type\": \"distinctInstance\"|\"memberOf\",\n          \"expression\": \"string\"\n        }\n        ...\n      ],\n      \"PlacementStrategy\": [\n        {\n          \"type\": \"random\"|\"spread\"|\"binpack\",\n          \"field\": \"string\"\n        }\n        ...\n      ],\n      \"PropagateTags\": \"TASK_DEFINITION\",\n      \"ReferenceId\": \"string\",\n      \"Tags\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ]\n    },\n    \"BatchParameters\": {\n      \"JobDefinition\": \"string\",\n      \"JobName\": \"string\",\n      \"ArrayProperties\": {\n        \"Size\": integer\n      },\n      \"RetryStrategy\": {\n        \"Attempts\": integer\n      }\n    },\n    \"SqsParameters\": {\n      \"MessageGroupId\": \"string\"\n    },\n    \"HttpParameters\": {\n      \"PathParameterValues\": [\"string\", ...],\n      \"HeaderParameters\": {\"string\": \"string\"\n        ...},\n      \"QueryStringParameters\": {\"string\": \"string\"\n        ...}\n    },\n    \"RedshiftDataParameters\": {\n      \"SecretManagerArn\": \"string\",\n      \"Database\": \"string\",\n      \"DbUser\": \"string\",\n      \"Sql\": \"string\",\n      \"StatementName\": \"string\",\n      \"WithEvent\": true|false\n    },\n    \"SageMakerPipelineParameters\": {\n      \"PipelineParameterList\": [\n        {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        }\n        ...\n      ]\n    },\n    \"DeadLetterConfig\": {\n      \"Arn\": \"string\"\n    },\n    \"RetryPolicy\": {\n      \"MaximumRetryAttempts\": integer,\n      \"MaximumEventAgeInSeconds\": integer\n    }\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedEntryCount -> (integer)\n\nThe number of failed entries.\n\nFailedEntries -> (list)\n\nThe failed target entries.\n\n(structure)\n\nRepresents a target that failed to be added to a rule.\n\nTargetId -> (string)\n\nThe ID of the target.\n\nErrorCode -> (string)\n\nThe error code that indicates why the target addition failed. If the value is ConcurrentModificationException , too many requests were made at the same time.\n\nErrorMessage -> (string)\n\nThe error message that explains why the target addition failed.",
      "command_examples": "Examples\n\nTo add targets for CloudWatch Events rules\n\nThis example adds a Lambda function as the target of a rule:\n\naws events put-targets --rule DailyLambdaFunction --targets \"Id\"=\"1\",\"Arn\"=\"arn:aws:lambda:us-east-1:123456789012:function:MyFunctionName\"\n\n\nThis example sets an Amazon Kinesis stream as the target, so that events caught by this rule are relayed to the stream:\n\naws events put-targets --rule EC2InstanceStateChanges --targets \"Id\"=\"1\",\"Arn\"=\"arn:aws:kinesis:us-east-1:123456789012:stream/MyStream\",\"RoleArn\"=\"arn:aws:iam::123456789012:role/MyRoleForThisRule\"\n\n\nThis example sets two Amazon Kinesis streams as targets for one rule:\n\naws events put-targets --rule DailyLambdaFunction --targets \"Id\"=\"Target1\",\"Arn\"=\"arn:aws:kinesis:us-east-1:379642911888:stream/MyStream1\",\"RoleArn\"=\"arn:aws:iam::379642911888:role/ MyRoleToAccessLambda\"  \"Id\"=\"Target2\",\" Arn\"=\"arn:aws:kinesis:us-east-1:379642911888:stream/MyStream2\",\"RoleArn\"=\"arn:aws:iam::379642911888:role/MyRoleToAccessLambda\"\n"
    },
    {
      "command_name": "remove-permission",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/remove-permission.html",
      "command_description": "Description\n\nRevokes the permission of another Amazon Web Services account to be able to put events to the specified event bus. Specify the account to revoke by the StatementId value that you associated with the account when you granted it permission with PutPermission . You can find the StatementId by using DescribeEventBus .\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-permission\n[--statement-id <value>]\n[--remove-all-permissions | --no-remove-all-permissions]\n[--event-bus-name <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "[--statement-id <value>]",
        "[--remove-all-permissions | --no-remove-all-permissions]",
        "[--event-bus-name <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--statement-id (string)\n\nThe statement ID corresponding to the account that is no longer allowed to put events to the default event bus.\n\n--remove-all-permissions | --no-remove-all-permissions (boolean)\n\nSpecifies whether to remove all permissions.\n\n--event-bus-name (string)\n\nThe name of the event bus to revoke permissions for. If you omit this, the default event bus is used.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "remove-targets",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/remove-targets.html",
      "command_description": "Description\n\nRemoves the specified targets from the specified rule. When the rule is triggered, those targets are no longer be invoked.\n\nWhen you remove a target, when the associated rule triggers, removed targets might continue to be invoked. Allow a short period of time for changes to take effect.\n\nThis action can partially fail if too many requests are made at the same time. If that happens, FailedEntryCount is non-zero in the response and each entry in FailedEntries provides the ID of the failed target and the error code.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  remove-targets\n--rule <value>\n[--event-bus-name <value>]\n--ids <value>\n[--force | --no-force]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--rule <value>",
        "[--event-bus-name <value>]",
        "--ids <value>",
        "[--force | --no-force]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--rule (string)\n\nThe name of the rule.\n\n--event-bus-name (string)\n\nThe name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.\n\n--ids (list)\n\nThe IDs of the targets to remove from the rule.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--force | --no-force (boolean)\n\nIf this is a managed rule, created by an Amazon Web Services service on your behalf, you must specify Force as True to remove targets. This parameter is ignored for rules that are not managed rules. You can check whether a rule is a managed rule by using DescribeRule or ListRules and checking the ManagedBy field of the response.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nFailedEntryCount -> (integer)\n\nThe number of failed entries.\n\nFailedEntries -> (list)\n\nThe failed target entries.\n\n(structure)\n\nRepresents a target that failed to be removed from a rule.\n\nTargetId -> (string)\n\nThe ID of the target.\n\nErrorCode -> (string)\n\nThe error code that indicates why the target removal failed. If the value is ConcurrentModificationException , too many requests were made at the same time.\n\nErrorMessage -> (string)\n\nThe error message that explains why the target removal failed.",
      "command_examples": "Examples\n\nTo remove a target for an event\n\nThis example removes the Amazon Kinesis stream named MyStream1 from being a target of the rule DailyLambdaFunction. When DailyLambdaFunction was created, this stream was set as a target with an ID of Target1:\n\naws events remove-targets --rule \"DailyLambdaFunction\" --ids \"Target1\"\n"
    },
    {
      "command_name": "start-replay",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/start-replay.html",
      "command_description": "Description\n\nStarts the specified replay. Events are not necessarily replayed in the exact same order that they were added to the archive. A replay processes events to replay based on the time in the event, and replays them using 1 minute intervals. If you specify an EventStartTime and an EventEndTime that covers a 20 minute time range, the events are replayed from the first minute of that 20 minute range first. Then the events from the second minute are replayed. You can use DescribeReplay to determine the progress of a replay. The value returned for EventLastReplayedTime indicates the time within the specified time range associated with the last event replayed.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  start-replay\n--replay-name <value>\n[--description <value>]\n--event-source-arn <value>\n--event-start-time <value>\n--event-end-time <value>\n--destination <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--replay-name <value>",
        "[--description <value>]",
        "--event-source-arn <value>",
        "--event-start-time <value>",
        "--event-end-time <value>",
        "--destination <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--replay-name (string)\n\nThe name of the replay to start.\n\n--description (string)\n\nA description for the replay to start.\n\n--event-source-arn (string)\n\nThe ARN of the archive to replay events from.\n\n--event-start-time (timestamp)\n\nA time stamp for the time to start replaying events. Only events that occurred between the EventStartTime and EventEndTime are replayed.\n\n--event-end-time (timestamp)\n\nA time stamp for the time to stop replaying events. Only events that occurred between the EventStartTime and EventEndTime are replayed.\n\n--destination (structure)\n\nA ReplayDestination object that includes details about the destination for the replay.\n\nArn -> (string)\n\nThe ARN of the event bus to replay event to. You can replay events only to the event bus specified to create the archive.\n\nFilterArns -> (list)\n\nA list of ARNs for rules to replay events to.\n\n(string)\n\nShorthand Syntax:\n\nArn=string,FilterArns=string,string\n\n\nJSON Syntax:\n\n{\n  \"Arn\": \"string\",\n  \"FilterArns\": [\"string\", ...]\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nReplayArn -> (string)\n\nThe ARN of the replay.\n\nState -> (string)\n\nThe state of the replay.\n\nStateReason -> (string)\n\nThe reason that the replay is in the state.\n\nReplayStartTime -> (timestamp)\n\nThe time at which the replay started."
    },
    {
      "command_name": "tag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/tag-resource.html",
      "command_description": "Description\n\nAssigns one or more tags (key-value pairs) to the specified EventBridge resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. In EventBridge, rules and event buses can be tagged.\n\nTags don’t have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.\n\nYou can use the TagResource action with a resource that already has tags. If you specify a new tag key, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.\n\nYou can associate as many as 50 tags with a resource.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  tag-resource\n--resource-arn <value>\n--tags <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tags <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the EventBridge resource that you’re adding tags to.\n\n--tags (list)\n\nThe list of key-value pairs to associate with the resource.\n\n(structure)\n\nA key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.\n\nKey -> (string)\n\nA string you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.\n\nValue -> (string)\n\nThe value for the specified tag key.\n\nShorthand Syntax:\n\nKey=string,Value=string ...\n\n\nJSON Syntax:\n\n[\n  {\n    \"Key\": \"string\",\n    \"Value\": \"string\"\n  }\n  ...\n]\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "test-event-pattern",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/test-event-pattern.html",
      "command_description": "Description\n\nTests whether the specified event pattern matches the provided event.\n\nMost services in Amazon Web Services treat : or / as the same character in Amazon Resource Names (ARNs). However, EventBridge uses an exact match in event patterns and rules. Be sure to use the correct ARN characters when creating event patterns so that they match the ARN syntax in the event you want to match.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  test-event-pattern\n--event-pattern <value>\n--event <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--event-pattern <value>",
        "--event <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--event-pattern (string)\n\nThe event pattern. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide .\n\n--event (string)\n\nThe event, in JSON format, to test against the event pattern. The JSON must follow the format specified in Amazon Web Services Events , and the following fields are mandatory:\n\nid\n\naccount\n\nsource\n\ntime\n\nregion\n\nresources\n\ndetail-type\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nResult -> (boolean)\n\nIndicates whether the event matches the event pattern.",
      "command_examples": "Examples\n\nTo check whether an event pattern matches a specified event\n\nThis example tests whether the pattern “source:com.mycompany.myapp” matches the specified event. In this example, the output would be “true”:\n\naws events test-event-pattern --event-pattern \"{\\\"source\\\":[\\\"com.mycompany.myapp\\\"]}\" --event \"{\\\"id\\\":\\\"1\\\",\\\"source\\\":\\\"com.mycompany.myapp\\\",\\\"detail-type\\\":\\\"myDetailType\\\",\\\"account\\\":\\\"123456789012\\\",\\\"region\\\":\\\"us-east-1\\\",\\\"time\\\":\\\"2017-04-11T20:11:04Z\\\"}\"\n"
    },
    {
      "command_name": "untag-resource",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/untag-resource.html",
      "command_description": "Description\n\nRemoves one or more tags from the specified EventBridge resource. In Amazon EventBridge (CloudWatch Events), rules and event buses can be tagged.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  untag-resource\n--resource-arn <value>\n--tag-keys <value>\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--resource-arn <value>",
        "--tag-keys <value>",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--resource-arn (string)\n\nThe ARN of the EventBridge resource from which you are removing tags.\n\n--tag-keys (list)\n\nThe list of tag keys to remove from the resource.\n\n(string)\n\nSyntax:\n\n\"string\" \"string\" ...\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nNone"
    },
    {
      "command_name": "update-api-destination",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/update-api-destination.html",
      "command_description": "Description\n\nUpdates an API destination.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-api-destination\n--name <value>\n[--description <value>]\n[--connection-arn <value>]\n[--invocation-endpoint <value>]\n[--http-method <value>]\n[--invocation-rate-limit-per-second <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--connection-arn <value>]",
        "[--invocation-endpoint <value>]",
        "[--http-method <value>]",
        "[--invocation-rate-limit-per-second <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the API destination to update.\n\n--description (string)\n\nThe name of the API destination to update.\n\n--connection-arn (string)\n\nThe ARN of the connection to use for the API destination.\n\n--invocation-endpoint (string)\n\nThe URL to the endpoint to use for the API destination.\n\n--http-method (string)\n\nThe method to use for the API destination.\n\nPossible values:\n\nPOST\n\nGET\n\nHEAD\n\nOPTIONS\n\nPUT\n\nPATCH\n\nDELETE\n\n--invocation-rate-limit-per-second (integer)\n\nThe maximum number of invocations per second to send to the API destination.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nApiDestinationArn -> (string)\n\nThe ARN of the API destination that was updated.\n\nApiDestinationState -> (string)\n\nThe state of the API destination that was updated.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the API destination was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the API destination was last modified."
    },
    {
      "command_name": "update-archive",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/update-archive.html",
      "command_description": "Description\n\nUpdates the specified archive.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-archive\n--archive-name <value>\n[--description <value>]\n[--event-pattern <value>]\n[--retention-days <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--archive-name <value>",
        "[--description <value>]",
        "[--event-pattern <value>]",
        "[--retention-days <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--archive-name (string)\n\nThe name of the archive to update.\n\n--description (string)\n\nThe description for the archive.\n\n--event-pattern (string)\n\nThe event pattern to use to filter events sent to the archive.\n\n--retention-days (integer)\n\nThe number of days to retain events in the archive.\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nArchiveArn -> (string)\n\nThe ARN of the archive.\n\nState -> (string)\n\nThe state of the archive.\n\nStateReason -> (string)\n\nThe reason that the archive is in the current state.\n\nCreationTime -> (timestamp)\n\nThe time at which the archive was updated."
    },
    {
      "command_name": "update-connection",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/update-connection.html",
      "command_description": "Description\n\nUpdates settings for a connection.\n\nSee also: AWS API Documentation\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\n  update-connection\n--name <value>\n[--description <value>]\n[--authorization-type <value>]\n[--auth-parameters <value>]\n[--cli-input-json | --cli-input-yaml]\n[--generate-cli-skeleton <value>]\n",
      "command_options": [
        "--name <value>",
        "[--description <value>]",
        "[--authorization-type <value>]",
        "[--auth-parameters <value>]",
        "[--cli-input-json | --cli-input-yaml]",
        "[--generate-cli-skeleton <value>]"
      ],
      "command_options_description": "Options\n\n--name (string)\n\nThe name of the connection to update.\n\n--description (string)\n\nA description for the connection.\n\n--authorization-type (string)\n\nThe type of authorization to use for the connection.\n\nPossible values:\n\nBASIC\n\nOAUTH_CLIENT_CREDENTIALS\n\nAPI_KEY\n\n--auth-parameters (structure)\n\nThe authorization parameters to use for the connection.\n\nBasicAuthParameters -> (structure)\n\nA UpdateConnectionBasicAuthRequestParameters object that contains the authorization parameters for Basic authorization.\n\nUsername -> (string)\n\nThe user name to use for Basic authorization.\n\nPassword -> (string)\n\nThe password associated with the user name to use for Basic authorization.\n\nOAuthParameters -> (structure)\n\nA UpdateConnectionOAuthRequestParameters object that contains the authorization parameters for OAuth authorization.\n\nClientParameters -> (structure)\n\nA UpdateConnectionOAuthClientRequestParameters object that contains the client parameters to use for the connection when OAuth is specified as the authorization type.\n\nClientID -> (string)\n\nThe client ID to use for OAuth authorization.\n\nClientSecret -> (string)\n\nThe client secret assciated with the client ID to use for OAuth authorization.\n\nAuthorizationEndpoint -> (string)\n\nThe URL to the authorization endpoint when OAuth is specified as the authorization type.\n\nHttpMethod -> (string)\n\nThe method used to connect to the HTTP endpoint.\n\nOAuthHttpParameters -> (structure)\n\nThe additional HTTP parameters used for the OAuth authorization request.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nApiKeyAuthParameters -> (structure)\n\nA UpdateConnectionApiKeyAuthRequestParameters object that contains the authorization parameters for API key authorization.\n\nApiKeyName -> (string)\n\nThe name of the API key to use for authorization.\n\nApiKeyValue -> (string)\n\nThe value associated with teh API key to use for authorization.\n\nInvocationHttpParameters -> (structure)\n\nA ConnectionHttpParameters object that contains the additional parameters to use for the connection.\n\nHeaderParameters -> (list)\n\nContains additional header parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is a secret.\n\nQueryStringParameters -> (list)\n\nContains additional query string parameters for the connection.\n\n(structure)\n\nAdditional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for a query string parameter.\n\nValue -> (string)\n\nThe value associated with the key for the query string parameter.\n\nIsValueSecret -> (boolean)\n\nSpecifies whether the value is secret.\n\nBodyParameters -> (list)\n\nContains additional body string parameters for the connection.\n\n(structure)\n\nAdditional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.\n\nKey -> (string)\n\nThe key for the parameter.\n\nValue -> (string)\n\nThe value associated with the key.\n\nIsValueSecret -> (boolean)\n\nSpecified whether the value is secret.\n\nJSON Syntax:\n\n{\n  \"BasicAuthParameters\": {\n    \"Username\": \"string\",\n    \"Password\": \"string\"\n  },\n  \"OAuthParameters\": {\n    \"ClientParameters\": {\n      \"ClientID\": \"string\",\n      \"ClientSecret\": \"string\"\n    },\n    \"AuthorizationEndpoint\": \"string\",\n    \"HttpMethod\": \"GET\"|\"POST\"|\"PUT\",\n    \"OAuthHttpParameters\": {\n      \"HeaderParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ],\n      \"QueryStringParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ],\n      \"BodyParameters\": [\n        {\n          \"Key\": \"string\",\n          \"Value\": \"string\",\n          \"IsValueSecret\": true|false\n        }\n        ...\n      ]\n    }\n  },\n  \"ApiKeyAuthParameters\": {\n    \"ApiKeyName\": \"string\",\n    \"ApiKeyValue\": \"string\"\n  },\n  \"InvocationHttpParameters\": {\n    \"HeaderParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ],\n    \"QueryStringParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ],\n    \"BodyParameters\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\",\n        \"IsValueSecret\": true|false\n      }\n      ...\n    ]\n  }\n}\n\n\n--cli-input-json | --cli-input-yaml (string) Reads arguments from the JSON string provided. The JSON string follows the format provided by --generate-cli-skeleton. If other arguments are provided on the command line, those values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally. This may not be specified along with --cli-input-yaml.\n\n--generate-cli-skeleton (string) Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value input, prints a sample input JSON that can be used as an argument for --cli-input-json. Similarly, if provided yaml-input it will print a sample input YAML that can be used with --cli-input-yaml. If provided with the value output, it validates the command inputs and returns a sample output JSON for that command.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_output": "Output\n\nConnectionArn -> (string)\n\nThe ARN of the connection that was updated.\n\nConnectionState -> (string)\n\nThe state of the connection that was updated.\n\nCreationTime -> (timestamp)\n\nA time stamp for the time that the connection was created.\n\nLastModifiedTime -> (timestamp)\n\nA time stamp for the time that the connection was last modified.\n\nLastAuthorizedTime -> (timestamp)\n\nA time stamp for the time that the connection was last authorized."
    },
    {
      "command_name": "wizard",
      "command_url": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/events/wizard/index.html",
      "command_description": "Description\n\nInteractive command for creating and configuring AWS resources.\n\nSee ‘aws help’ for descriptions of global parameters.",
      "command_synopsis": "Synopsis\nwizard\n",
      "command_options": [],
      "command_options_description": "Options\n\nNone\n\nSee ‘aws help’ for descriptions of global parameters."
    }
  ],
  "service_description": "Description\n\nAmazon EventBridge helps you to respond to state changes in your Amazon Web Services resources. When your resources change state, they automatically send events to an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:\n\nAutomatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.\n\nDirect specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.\n\nPeriodically invoke a built-in target to create a snapshot of an Amazon EBS volume.\n\nFor more information about the features of Amazon EventBridge, see the Amazon EventBridge User Guide ."
}